{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/love/iali53.jpg","path":"love/iali53.jpg","modified":1,"renderable":0},{"_id":"source/love/README.txt","path":"love/README.txt","modified":1,"renderable":0},{"_id":"source/uploads/avatar.jpg","path":"uploads/avatar.jpg","modified":1,"renderable":0},{"_id":"source/lib/needsharebutton/LICENSE","path":"lib/needsharebutton/LICENSE","modified":1,"renderable":0},{"_id":"source/love/img/319280.jpg","path":"love/img/319280.jpg","modified":1,"renderable":0},{"_id":"source/love/img/319280_bg.xcf","path":"love/img/319280_bg.xcf","modified":1,"renderable":0},{"_id":"source/love/img/iali14.jpg","path":"love/img/iali14.jpg","modified":1,"renderable":0},{"_id":"source/love/img/iali18.jpg","path":"love/img/iali18.jpg","modified":1,"renderable":0},{"_id":"source/love/img/iali21.jpg","path":"love/img/iali21.jpg","modified":1,"renderable":0},{"_id":"source/love/img/iali22.jpg","path":"love/img/iali22.jpg","modified":1,"renderable":0},{"_id":"source/love/img/iali22_bg.jpg","path":"love/img/iali22_bg.jpg","modified":1,"renderable":0},{"_id":"source/love/img/iali25.jpg","path":"love/img/iali25.jpg","modified":1,"renderable":0},{"_id":"source/love/img/iali29.jpg","path":"love/img/iali29.jpg","modified":1,"renderable":0},{"_id":"source/love/img/iali2_bg.jpg","path":"love/img/iali2_bg.jpg","modified":1,"renderable":0},{"_id":"source/love/img/iali30_1.jpg","path":"love/img/iali30_1.jpg","modified":1,"renderable":0},{"_id":"source/love/img/iali30_2.jpg","path":"love/img/iali30_2.jpg","modified":1,"renderable":0},{"_id":"source/love/img/iali32.jpg","path":"love/img/iali32.jpg","modified":1,"renderable":0},{"_id":"source/love/img/iali37.jpg","path":"love/img/iali37.jpg","modified":1,"renderable":0},{"_id":"source/love/img/iali40.jpg","path":"love/img/iali40.jpg","modified":1,"renderable":0},{"_id":"source/love/img/iali40_bg.jpg","path":"love/img/iali40_bg.jpg","modified":1,"renderable":0},{"_id":"source/love/img/iali44.jpg","path":"love/img/iali44.jpg","modified":1,"renderable":0},{"_id":"source/love/img/iali45_bg.jpg","path":"love/img/iali45_bg.jpg","modified":1,"renderable":0},{"_id":"source/love/img/iali46.jpg","path":"love/img/iali46.jpg","modified":1,"renderable":0},{"_id":"source/love/img/iali49.jpg","path":"love/img/iali49.jpg","modified":1,"renderable":0},{"_id":"source/love/img/iali5.jpg","path":"love/img/iali5.jpg","modified":1,"renderable":0},{"_id":"source/love/img/iali50_1.jpg","path":"love/img/iali50_1.jpg","modified":1,"renderable":0},{"_id":"source/love/img/iali50_2.jpg","path":"love/img/iali50_2.jpg","modified":1,"renderable":0},{"_id":"source/love/img/iali51.jpg","path":"love/img/iali51.jpg","modified":1,"renderable":0},{"_id":"source/love/img/iali52.jpg","path":"love/img/iali52.jpg","modified":1,"renderable":0},{"_id":"source/love/img/iali53.jpg","path":"love/img/iali53.jpg","modified":1,"renderable":0},{"_id":"source/love/img/iali59_bg.jpg","path":"love/img/iali59_bg.jpg","modified":1,"renderable":0},{"_id":"source/love/img/iali60.jpg","path":"love/img/iali60.jpg","modified":1,"renderable":0},{"_id":"source/love/img/iali64.jpg","path":"love/img/iali64.jpg","modified":1,"renderable":0},{"_id":"source/love/img/iali65.jpg","path":"love/img/iali65.jpg","modified":1,"renderable":0},{"_id":"source/love/img/iali66.jpg","path":"love/img/iali66.jpg","modified":1,"renderable":0},{"_id":"source/love/img/iali67.jpg","path":"love/img/iali67.jpg","modified":1,"renderable":0},{"_id":"source/love/img/iali68.jpg","path":"love/img/iali68.jpg","modified":1,"renderable":0},{"_id":"source/love/img/iali69.jpg","path":"love/img/iali69.jpg","modified":1,"renderable":0},{"_id":"source/love/img/iali71.jpg","path":"love/img/iali71.jpg","modified":1,"renderable":0},{"_id":"source/love/img/iali75.jpg","path":"love/img/iali75.jpg","modified":1,"renderable":0},{"_id":"source/love/img/iali75_bg.jpg","path":"love/img/iali75_bg.jpg","modified":1,"renderable":0},{"_id":"source/love/img/iali77.jpg","path":"love/img/iali77.jpg","modified":1,"renderable":0},{"_id":"source/love/img/iali76_bg.png","path":"love/img/iali76_bg.png","modified":1,"renderable":0},{"_id":"source/love/img/iali9.jpg","path":"love/img/iali9.jpg","modified":1,"renderable":0},{"_id":"source/love/img/music.png","path":"love/img/music.png","modified":1,"renderable":0},{"_id":"source/love/img/mute.png","path":"love/img/mute.png","modified":1,"renderable":0},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":1,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":1,"renderable":1},{"_id":"themes/next/source/images/logo.svg","path":"images/logo.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":1,"renderable":1},{"_id":"source/love/img/14915.jpg","path":"love/img/14915.jpg","modified":1,"renderable":0},{"_id":"source/love/img/iali10.gif","path":"love/img/iali10.gif","modified":1,"renderable":0},{"_id":"source/love/img/iali0.jpg","path":"love/img/iali0.jpg","modified":1,"renderable":0},{"_id":"source/love/img/iali11.jpg","path":"love/img/iali11.jpg","modified":1,"renderable":0},{"_id":"source/love/img/iali12.jpg","path":"love/img/iali12.jpg","modified":1,"renderable":0},{"_id":"source/love/img/iali16.jpg","path":"love/img/iali16.jpg","modified":1,"renderable":0},{"_id":"source/love/img/iali19.jpg","path":"love/img/iali19.jpg","modified":1,"renderable":0},{"_id":"source/love/img/iali2.jpg","path":"love/img/iali2.jpg","modified":1,"renderable":0},{"_id":"source/love/img/iali20.jpg","path":"love/img/iali20.jpg","modified":1,"renderable":0},{"_id":"source/love/img/iali3.jpg","path":"love/img/iali3.jpg","modified":1,"renderable":0},{"_id":"source/love/img/iali31.jpg","path":"love/img/iali31.jpg","modified":1,"renderable":0},{"_id":"source/love/img/iali35.jpg","path":"love/img/iali35.jpg","modified":1,"renderable":0},{"_id":"source/love/img/iali4.jpg","path":"love/img/iali4.jpg","modified":1,"renderable":0},{"_id":"source/love/img/iali42.jpg","path":"love/img/iali42.jpg","modified":1,"renderable":0},{"_id":"source/love/img/iali45.jpg","path":"love/img/iali45.jpg","modified":1,"renderable":0},{"_id":"source/love/img/iali57.gif","path":"love/img/iali57.gif","modified":1,"renderable":0},{"_id":"source/love/img/iali57.jpg","path":"love/img/iali57.jpg","modified":1,"renderable":0},{"_id":"source/love/img/iali58.jpg","path":"love/img/iali58.jpg","modified":1,"renderable":0},{"_id":"source/love/img/iali6.jpg","path":"love/img/iali6.jpg","modified":1,"renderable":0},{"_id":"source/love/img/iali62.jpg","path":"love/img/iali62.jpg","modified":1,"renderable":0},{"_id":"source/love/img/iali63.jpg","path":"love/img/iali63.jpg","modified":1,"renderable":0},{"_id":"source/love/img/iali76.gif","path":"love/img/iali76.gif","modified":1,"renderable":0},{"_id":"source/love/img/iali8.gif","path":"love/img/iali8.gif","modified":1,"renderable":0},{"_id":"source/love/img/iali8_bg.png","path":"love/img/iali8_bg.png","modified":1,"renderable":0},{"_id":"source/love/img/iali24.jpg","path":"love/img/iali24.jpg","modified":1,"renderable":0},{"_id":"source/love/img/iali59.png","path":"love/img/iali59.png","modified":1,"renderable":0},{"_id":"themes/next/source/images/background.jpg","path":"images/background.jpg","modified":1,"renderable":1},{"_id":"themes/next/source/js/custom/love.min.js","path":"js/custom/love.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/custom/all.min.js","path":"js/custom/all.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/exturl.js","path":"js/src/exturl.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/js.cookie.js","path":"js/src/js.cookie.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/scroll-cookie.js","path":"js/src/scroll-cookie.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","path":"lib/algolia-instant-search/instantsearch.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","path":"lib/canvas-nest/canvas-nest.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","path":"lib/canvas-ribbon/canvas-ribbon.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","path":"lib/jquery_lazyload/CONTRIBUTING.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/font-embedded.css","path":"lib/needsharebutton/font-embedded.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","path":"lib/needsharebutton/needsharebutton.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","path":"lib/pace/pace-theme-barber-shop.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","path":"lib/needsharebutton/needsharebutton.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","path":"lib/pace/pace-theme-big-counter.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","path":"lib/pace/pace-theme-bounce.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","path":"lib/pace/pace-theme-center-atom.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","path":"lib/pace/pace-theme-center-circle.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","path":"lib/pace/pace-theme-center-radar.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","path":"lib/pace/pace-theme-center-simple.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","path":"lib/pace/pace-theme-corner-indicator.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","path":"lib/pace/pace-theme-fill-left.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","path":"lib/pace/pace-theme-flash.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","path":"lib/pace/pace-theme-loading-bar.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","path":"lib/pace/pace-theme-minimal.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","path":"lib/pace/pace-theme-mac-osx.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/pace/pace.min.js","path":"lib/pace/pace.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","path":"lib/three/canvas_lines.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","path":"lib/three/canvas_sphere.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/three-waves.min.js","path":"lib/three/three-waves.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/bower.json","path":"lib/velocity/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/custom/jquery.min.js","path":"js/custom/jquery.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":1,"renderable":1},{"_id":"themes/next/source/images/background2.jpg","path":"images/background2.jpg","modified":1,"renderable":1},{"_id":"themes/next/source/images/background3.jpg","path":"images/background3.jpg","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.css","path":"lib/Han/dist/han.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","path":"lib/fancybox/source/blank.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","path":"lib/fancybox/source/fancybox_loading.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","path":"lib/fancybox/source/fancybox_loading@2x.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","path":"lib/fancybox/source/fancybox_overlay.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","path":"lib/fancybox/source/fancybox_sprite.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","path":"lib/fancybox/source/fancybox_sprite@2x.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.css","path":"lib/Han/dist/han.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.js","path":"lib/Han/dist/han.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/han.min.js","path":"lib/Han/dist/han.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":1,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","path":"lib/Han/dist/font/han-space.otf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","path":"lib/Han/dist/font/han-space.woff","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","path":"lib/Han/dist/font/han.otf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","path":"lib/Han/dist/font/han.woff","modified":1,"renderable":1},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","path":"lib/Han/dist/font/han.woff2","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","path":"lib/fancybox/source/helpers/fancybox_buttons.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","path":"lib/fancybox/source/helpers/jquery.fancybox-media.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","path":"lib/algolia-instant-search/instantsearch.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/images/background.jpeg","path":"images/background.jpeg","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":1,"renderable":1},{"_id":"themes/next/source/lib/three/three.min.js","path":"lib/three/three.min.js","modified":1,"renderable":1},{"_id":"source/love/fonts/RuiHeiXiTi.otf","path":"love/fonts/RuiHeiXiTi.otf","modified":1,"renderable":0},{"_id":"source/love/lovebgm.mp3","path":"love/lovebgm.mp3","modified":1,"renderable":0},{"_id":"themes/next/source/images/background1 .jpg","path":"images/background1 .jpg","modified":1,"renderable":1}],"Cache":[{"_id":"themes/next/.bowerrc","hash":"334da94ca6f024d60d012cc26ea655681e724ad8","modified":1546931311700},{"_id":"themes/next/.editorconfig","hash":"211d2c92bfdddb3e81ea946f4ca7a539f150f4da","modified":1546931311700},{"_id":"themes/next/.gitattributes","hash":"8454b9313cb1a97b63fb87e2d29daee497ce6249","modified":1546931311700},{"_id":"themes/next/.gitignore","hash":"ee0b13c268cc8695d3883a5da84930af02d4ed08","modified":1546931311702},{"_id":"themes/next/.hound.yml","hash":"289dcf5bfe92dbd680d54d6e0668f41c9c9c0c78","modified":1546931311703},{"_id":"themes/next/.jshintrc","hash":"b7d23f2ce8d99fa073f22f9960605f318acd7710","modified":1546931311703},{"_id":"themes/next/.javascript_ignore","hash":"cd250ad74ca22bd2c054476456a73d9687f05f87","modified":1546931311703},{"_id":"themes/next/.travis.yml","hash":"6674fbdfe0d0c03b8a04527ffb8ab66a94253acd","modified":1546931311704},{"_id":"themes/next/.stylintrc","hash":"3b7f9785e9ad0dab764e1c535b40df02f4ff5fd6","modified":1546931311704},{"_id":"themes/next/LICENSE","hash":"ec44503d7e617144909e54533754f0147845f0c5","modified":1546931311704},{"_id":"themes/next/README.cn.md","hash":"23e92a2599725db2f8dbd524fbef2087c6d11c7b","modified":1546931311705},{"_id":"themes/next/_config.yml","hash":"924f14de11a3da3bcb3fa68a4e20a129fb90a69b","modified":1568082847293},{"_id":"themes/next/README.md","hash":"50abff86ffe4113051a409c1ed9261195d2aead0","modified":1546931311705},{"_id":"themes/next/gulpfile.coffee","hash":"412defab3d93d404b7c26aaa0279e2e586e97454","modified":1546931311707},{"_id":"themes/next/bower.json","hash":"486ebd72068848c97def75f36b71cbec9bb359c5","modified":1546931311706},{"_id":"themes/next/package.json","hash":"3963ad558a24c78a3fd4ef23cf5f73f421854627","modified":1546931311738},{"_id":"source/_posts/Deep-Residual-Learning-for-Image-Recognition.md","hash":"413a5898dadc43cf2db91a0f60b140c285c243d7","modified":1551928351558},{"_id":"source/_posts/Hierarchical-Object-Detection-with-Deep-Reinforcement-Learning.md","hash":"9c3e8ee4d096065360ae01e0c07a899795a4e16b","modified":1555064224241},{"_id":"source/_posts/Java内存区域.md","hash":"72d61a9dfaf5a6a8119494badba93d420b184db8","modified":1547785150584},{"_id":"source/_posts/Java内存模型（一）.md","hash":"d9ce27ee477070e7d7002f3117ea05166e71c988","modified":1550477626911},{"_id":"source/_posts/Java内存模型（二）.md","hash":"c575d442a576f14bb2b64197f85a68e04a6ca75e","modified":1550565329973},{"_id":"source/_posts/Java并发编程基础.md","hash":"9d8e38108723d8f9d9c9ea814b028b2d5cc10151","modified":1551450411548},{"_id":"source/_posts/Java面向对象编程知识点.md","hash":"5c049dd4c027a449602eb3ca56eb60624ed15454","modified":1554714602004},{"_id":"source/_posts/Kafka-分布式流平台.md","hash":"f313d78a25b2611c35e35737f18739f238f4e17f","modified":1551855436384},{"_id":"source/_posts/MyIsam存储引擎.md","hash":"cad3b423dcd331d07d2c669e6d455ac6487af44b","modified":1554864406092},{"_id":"source/_posts/StackGAN-Text-to-Photo-realistic-Image-Synthesis-with-Stacked-Generative-Adversarial-Networks.md","hash":"97c1504e09415b9cc97f2cf1135f4a95d5b9e267","modified":1550650362687},{"_id":"source/_posts/Stacked-Cross-Attention-for-Image-Text-Matching.md","hash":"1d5c0514812cf4c928a8fcf9ee548d90e53e0e62","modified":1555321039549},{"_id":"source/_posts/Ubuntu配置shadowsocks科学上网.md","hash":"e3f91df00bb72e6eb3ff89f0515a9a84c1ed8e6c","modified":1551182894048},{"_id":"source/_posts/Yotta系统错误记录及性能优化.md","hash":"6a152e6e89a4770b7aac73c242441938ab954757","modified":1547786421240},{"_id":"source/_posts/ZooKeeper-分布式应用程序协调服务.md","hash":"827efad9c6eaae73f0a5a4436bfbe270dfaf0ce5","modified":1551860776895},{"_id":"source/_posts/cuda安装.md","hash":"a4a43fef8d9ccbb6d4ce77cca27088be272df676","modified":1547786396815},{"_id":"source/_posts/代理模式.md","hash":"cae901b2c7c810187b0553f16fd9cee1f06ccc8d","modified":1554720916262},{"_id":"source/_posts/句子分块.md","hash":"58dc515960d8f6fc94baa3692b99de33664c7f20","modified":1557047504218},{"_id":"source/_posts/图像文本匹配相关工作.md","hash":"e5d16f3a212bff1d30f17ff941e15820c01404d9","modified":1547786424712},{"_id":"source/_posts/图片服务器搭建.md","hash":"ef58254fc9061443b917a1b0439e2f3bcb99fcec","modified":1547786431345},{"_id":"source/_posts/垃圾收集.md","hash":"287e5ee1191881679fceb689ecc71982681156f7","modified":1547786435523},{"_id":"source/_posts/垃圾收集器.md","hash":"dab1aa345f436137d8a71084b8607837eac8fa5d","modified":1551351287229},{"_id":"source/_posts/垃圾收集（二）.md","hash":"874912840a11c8bd8c59cb942c10e1bb81ca3886","modified":1547786440615},{"_id":"source/_posts/并发机制的底层实现原理.md","hash":"d29942c0786054d67f63ece3a9b602a04cc9d640","modified":1548075772104},{"_id":"source/_posts/字节跳动实习生面试.md","hash":"43daba37b1f3ca6836c0c2ed6e76e57707f6c39f","modified":1553952823966},{"_id":"source/_posts/并发编程的挑战.md","hash":"d745fdc7c77d38f6f6438ecfa579f3db5736a0cd","modified":1548037524579},{"_id":"source/_posts/感知机.md","hash":"2aea12f5bcace30d8f907ade57a8029593b9121b","modified":1568793942326},{"_id":"source/_posts/数据库范式.md","hash":"234d5ee698b7914e0dc07047ee73abbf8bd7f3eb","modified":1554862770952},{"_id":"source/_posts/智慧教育师范应用表格接口规范.md","hash":"9ee9bfd6d7d145f9c7cc8a920857d858afb83107","modified":1554862764270},{"_id":"source/_posts/条件生成对抗网络的一系列问题.md","hash":"870e3039ea39deb17c4a796a87f16e3aab658b35","modified":1551849506081},{"_id":"source/_posts/研究生数学建模：恐怖袭击事件分级.md","hash":"2e597cd6e29a5b23a1bce403e7049d4245acf1fa","modified":1547786455000},{"_id":"source/_posts/统计学习方法概论.md","hash":"e8e24613f6867b5e234d114abb9b9c9f36ea6626","modified":1568083058839},{"_id":"source/_posts/统计学习三要素.md","hash":"dcca2065e8fe6755aef7bd14b48d6326f0e32e3f","modified":1568093000318},{"_id":"source/_posts/阿里巴巴实习生面试.md","hash":"5d78101593046e25bd9e3245b5025f7f0704d84c","modified":1555513807275},{"_id":"source/_posts/面向切面编程.md","hash":"db423b056c69afd99b0657a69b521883adb54d21","modified":1552140614755},{"_id":"source/archives/index.md","hash":"7d05b6ce41241f36545f626e2c5ab15bfb62d8f0","modified":1546939733220},{"_id":"source/about/index.md","hash":"65ef9d834f24d2d7406d7a73ff77c1cfc195dcea","modified":1557912340044},{"_id":"source/categories/index.md","hash":"f6239d5a27bd89657cabb40e6a1d9f8785e8c80b","modified":1546939463812},{"_id":"source/love/all.min.css","hash":"e132340ecef03fe70e97dd844f171f7fca8e5bbc","modified":1557912965047},{"_id":"source/love/iali53.jpg","hash":"a63228d962e41ab1f76a28b1173de29875e18116","modified":1557912965097},{"_id":"source/love/README.txt","hash":"3575875d2e0bea639d0ef59bdc890da9fc3d23f6","modified":1557912965297},{"_id":"source/love/index.htm","hash":"dc883a75a23c8c39df33dc0d746302ba2ced553c","modified":1557926358326},{"_id":"source/uploads/avatar.jpg","hash":"3a8b10d909343504c95e2c9a39f2adbe86803fd9","modified":1546917481111},{"_id":"source/schedule/index.md","hash":"000bdcbafe0312a23f12f12897ce53190e65c4c1","modified":1546943500828},{"_id":"source/tags/index.md","hash":"d348a92b3f4a8dd46146b97b616a2264a1d97770","modified":1546939473683},{"_id":"themes/next/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1546931311677},{"_id":"themes/next/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1546930966385},{"_id":"themes/next/.git/config","hash":"8e94cc015a498d35202e9fd57e44b3c51e1e5634","modified":1546931311684},{"_id":"themes/next/.git/index","hash":"e295900d51ca9a79f03053151d4bfd44aa67c44d","modified":1547297978662},{"_id":"themes/next/.git/packed-refs","hash":"69237944e31c16fe545d1f47b0b1e5b1d99660da","modified":1546931311671},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"5adfad3ef1b870063e621bc0838268eb2c7c697a","modified":1546931311701},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"a0a82dbfabdef9a9d7c17a08ceebfb4052d98d81","modified":1546931311701},{"_id":"themes/next/.github/PULL_REQUEST_TEMPLATE.md","hash":"1228506a940114288d61812bfe60c045a0abeac1","modified":1546931311702},{"_id":"themes/next/.github/browserstack_logo.png","hash":"a6c43887f64a7f48a2814e3714eaa1215e542037","modified":1546931311702},{"_id":"themes/next/languages/de.yml","hash":"fd02d9c2035798d5dc7c1a96b4c3e24b05b31a47","modified":1546931311707},{"_id":"themes/next/languages/default.yml","hash":"b3bcd8934327448a43d9bfada5dd11b1b8c1402e","modified":1546931311707},{"_id":"themes/next/languages/en.yml","hash":"2f4b4776ca1a08cc266a19afb0d1350a3926f42c","modified":1546931311708},{"_id":"themes/next/languages/fr-FR.yml","hash":"efeeb55d5c4add54ad59a612fc0630ee1300388c","modified":1546931311708},{"_id":"themes/next/languages/id.yml","hash":"dccae33e2a5b3c9f11c0e05ec4a7201af1b25745","modified":1546931311708},{"_id":"themes/next/languages/it.yml","hash":"a215d016146b1bd92cef046042081cbe0c7f976f","modified":1546931311708},{"_id":"themes/next/languages/ja.yml","hash":"37f954e47a3bc669620ca559e3edb3b0072a4be5","modified":1546931311709},{"_id":"themes/next/languages/ko.yml","hash":"dc8f3e8c64eb7c4bb2385025b3006b8efec8b31d","modified":1546931311709},{"_id":"themes/next/languages/nl-NL.yml","hash":"213e7a002b82fb265f69dabafbbc382cfd460030","modified":1546931311710},{"_id":"themes/next/languages/pt.yml","hash":"2efcd240c66ab1a122f061505ca0fb1e8819877b","modified":1546931311710},{"_id":"themes/next/languages/pt-BR.yml","hash":"568d494a1f37726a5375b11452a45c71c3e2852d","modified":1546931311710},{"_id":"themes/next/languages/ru.yml","hash":"e33ee44e80f82e329900fc41eb0bb6823397a4d6","modified":1546931311710},{"_id":"themes/next/languages/vi.yml","hash":"a9b89ebd3e5933033d1386c7c56b66c44aca299a","modified":1546931311711},{"_id":"themes/next/languages/zh-Hans.yml","hash":"66b9b42f143c3cb2f782a94abd4c4cbd5fd7f55f","modified":1546931311711},{"_id":"themes/next/languages/zh-hk.yml","hash":"fe0d45807d015082049f05b54714988c244888da","modified":1546931311711},{"_id":"themes/next/languages/zh-tw.yml","hash":"432463b481e105073accda16c3e590e54c8e7b74","modified":1546931311712},{"_id":"themes/next/layout/_layout.swig","hash":"a64c331e3dbc5c38b8603c0dcaf510a0402b5576","modified":1547002166473},{"_id":"themes/next/layout/archive.swig","hash":"9a2c14874a75c7085d2bada5e39201d3fc4fd2b4","modified":1546931311736},{"_id":"themes/next/layout/category.swig","hash":"3cbb3f72429647411f9e85f2544bdf0e3ad2e6b2","modified":1546931311737},{"_id":"themes/next/layout/index.swig","hash":"555a357ecf17128db4e29346c92bb6298e66547a","modified":1546931311737},{"_id":"themes/next/layout/page.swig","hash":"e8fcaa641d46930237675d2ad4b56964d9e262e9","modified":1546931311737},{"_id":"themes/next/layout/post.swig","hash":"7a6ce102ca82c3a80f776e555dddae1a9981e1ed","modified":1546931311738},{"_id":"themes/next/layout/schedule.swig","hash":"87ad6055df01fa2e63e51887d34a2d8f0fbd2f5a","modified":1546931311738},{"_id":"themes/next/layout/tag.swig","hash":"34e1c016cbdf94a31f9c5d494854ff46b2a182e9","modified":1546931311738},{"_id":"themes/next/scripts/merge-configs.js","hash":"38d86aab4fc12fb741ae52099be475196b9db972","modified":1546931311739},{"_id":"themes/next/scripts/merge.js","hash":"39b84b937b2a9608b94e5872349a47200e1800ff","modified":1546931311740},{"_id":"themes/next/test/.jshintrc","hash":"c9fca43ae0d99718e45a6f5ce736a18ba5fc8fb6","modified":1546931311874},{"_id":"themes/next/test/helpers.js","hash":"f25e7f3265eb5a6e1ccbb5e5012fa9bebf134105","modified":1546931311874},{"_id":"themes/next/test/intern.js","hash":"db90b1063356727d72be0d77054fdc32fa882a66","modified":1546931311875},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1546931311804},{"_id":"source/_posts/Hierarchical-Object-Detection-with-Deep-Reinforcement-Learning/error2.png","hash":"b69a5ee5e007d2f5125c42c658174849d259584c","modified":1546762495739},{"_id":"source/_posts/Hierarchical-Object-Detection-with-Deep-Reinforcement-Learning/error1.png","hash":"c5d0e6502253f7ab42596f152d0308c3444b1def","modified":1546760242928},{"_id":"source/_posts/Hierarchical-Object-Detection-with-Deep-Reinforcement-Learning/vgg16.png","hash":"2100660af641648c8946db7d6e69e015c06b4f57","modified":1529984176844},{"_id":"source/_posts/Java内存区域/运行时内存.png","hash":"baf9402ec89bba23a940cb4e08590843782b316d","modified":1547107080905},{"_id":"source/_posts/Java内存模型（一）/jmm1.png","hash":"de5f3510cf3a2a5973f7d68f7dc2df35939c19a0","modified":1550474683360},{"_id":"source/_posts/Kafka-分布式流平台/kafka2.png","hash":"aa8af0c247050e7010dc89f15039b4e57f657317","modified":1547641158824},{"_id":"source/_posts/Kafka-分布式流平台/kafka1.png","hash":"db05a0e4670fa46ecbc4b7debb0c540f8fd3cefc","modified":1547639165101},{"_id":"source/_posts/Kafka-分布式流平台/kafka3.png","hash":"2611ebf944893031406f3a0610f786e61629f601","modified":1547642946764},{"_id":"source/_posts/Ubuntu配置shadowsocks科学上网/科学上网1.png","hash":"e4cb9500bc0918240ebc06c340f78fc801e1f883","modified":1551156001977},{"_id":"source/_posts/Ubuntu配置shadowsocks科学上网/科学上网2.png","hash":"9672dd2e5d7cc7d5df93e4618126eb59a19aee8e","modified":1551156311275},{"_id":"source/_posts/Ubuntu配置shadowsocks科学上网/科学上网3.png","hash":"72d8772379d15d94123f6574d3834a34b45ede6c","modified":1551157313736},{"_id":"source/_posts/Ubuntu配置shadowsocks科学上网/科学上网4.png","hash":"2cea4a50347da1ccc79b8c77fb4f215303dd3e61","modified":1551159435667},{"_id":"source/_posts/Ubuntu配置shadowsocks科学上网/科学上网5.png","hash":"e3507505d10e5939979c5dda015872e3f631b8f4","modified":1551159961613},{"_id":"source/_posts/Ubuntu配置shadowsocks科学上网/科学上网6.png","hash":"fbf26594c3c4e34c1fdb2693902551724c37d87b","modified":1551160336146},{"_id":"source/_posts/Ubuntu配置shadowsocks科学上网/科学上网7.png","hash":"77f9e9ef0c14046e5c7118272288eeab0241dedf","modified":1551170156437},{"_id":"source/_posts/cuda安装/cuda0.png","hash":"189f4dc48bfa8f7ecb2eb7ad5b9f21e826fc2b52","modified":1546591044081},{"_id":"source/_posts/cuda安装/cuda1.png","hash":"1edb9dcbb613f34df76a694573089a8c2076a72d","modified":1546591508621},{"_id":"source/_posts/cuda安装/cuda3.png","hash":"30c042bd4489d67ce2f07de14bad4a96fd494d48","modified":1546593451711},{"_id":"source/_posts/图片服务器搭建/1.png","hash":"e15e8265d220afb6c695e1a57687cd809072f6f3","modified":1547457971108},{"_id":"source/_posts/图片服务器搭建/2.png","hash":"53fd24ae9110b87845643b746f0999112a5d5a0c","modified":1547458252476},{"_id":"source/_posts/图片服务器搭建/3.png","hash":"27496851ffb960924ebbb3730e372341eba4bd47","modified":1547462283453},{"_id":"source/_posts/图片服务器搭建/4.png","hash":"b8566bb0467ddb3e451645e919f0b8410a767842","modified":1547465058939},{"_id":"source/_posts/垃圾收集器/垃圾收集器3.jpg","hash":"3146f9649331e1436771e9a6102d3e9881b89888","modified":1551323037510},{"_id":"source/_posts/垃圾收集器/垃圾收集器2.jpg","hash":"491c2d69e0b6e5a5109e515b24def04a105acf9b","modified":1551323018874},{"_id":"source/_posts/垃圾收集器/垃圾收集器4.jpg","hash":"491c2d69e0b6e5a5109e515b24def04a105acf9b","modified":1551323050734},{"_id":"source/_posts/垃圾收集器/垃圾收集器5.png","hash":"712edc47de215f66bf4e0dd2217980a0b882fca9","modified":1551351205838},{"_id":"source/_posts/垃圾收集（二）/gc1.png","hash":"a1a59c2c8d8b1dd15ef7f7c4280ea51d47c1c882","modified":1547434432450},{"_id":"source/_posts/垃圾收集（二）/gc3.png","hash":"6656d70706fb62af23ada8d39590521837195577","modified":1547436522447},{"_id":"source/_posts/垃圾收集（二）/gc2.png","hash":"8a5410a72449adafa7124296a36f71d722461e4f","modified":1547435327910},{"_id":"source/lib/needsharebutton/LICENSE","hash":"336611e76f0638d3d8aeca6b1b97138d2a07523f","modified":1547003528094},{"_id":"source/lib/needsharebutton/needsharebutton.css","hash":"f98253ddd8b345a6826b05139911be12c70bcc0c","modified":1547003528095},{"_id":"source/lib/needsharebutton/README.md","hash":"b9c3545046609fc6310458cf6c5d004ee2c69c4e","modified":1547003528094},{"_id":"source/lib/needsharebutton/needsharebutton.js","hash":"ef80f26e3ae6fc59ecdbc1294c50636de9280018","modified":1547003528112},{"_id":"source/love/img/319280.jpg","hash":"f72bf5e125d5ca2a2df038cf4750ddcc94d2f1ea","modified":1557912964066},{"_id":"source/love/img/319280_bg.xcf","hash":"a9194894587aaeef5203552972dc9ada53d987d2","modified":1557912964081},{"_id":"source/love/img/iali14.jpg","hash":"d79c8dd4a8031f8088a217fe382f3009077370e7","modified":1557912964150},{"_id":"source/love/img/iali18.jpg","hash":"a7025cd23cd3d7d2c478a5d7dd0f423c66fef064","modified":1557912964177},{"_id":"source/love/img/iali21.jpg","hash":"847acd84618413ca82e4458a8b67409d205fb982","modified":1557912964229},{"_id":"source/love/img/iali22.jpg","hash":"5b2072b8a6892f5ed77e79403d5cd7ddaa4a2350","modified":1557912964244},{"_id":"source/love/img/iali22_bg.jpg","hash":"0e84a31a3e6e594539491e20e28712c508720fc1","modified":1557912964255},{"_id":"source/love/img/iali25.jpg","hash":"d58eb17cb865eba47c23e605cfca2bee3096b53b","modified":1557912964282},{"_id":"source/love/img/iali29.jpg","hash":"0b894bdd216166ada8e52effd2e8d1a58195b6af","modified":1557912964297},{"_id":"source/love/img/iali2_bg.jpg","hash":"1d675783a95a3acbea2e289492c7d728839ee12f","modified":1557912964310},{"_id":"source/love/img/iali30_1.jpg","hash":"1991f3d22129e2d409215ca3d6534fe9b536f081","modified":1557912964338},{"_id":"source/love/img/iali30_2.jpg","hash":"1b74938d72f509d56b57837351708e49af7a68db","modified":1557912964354},{"_id":"source/love/img/iali32.jpg","hash":"07ea3165c1ce80fe843993f1ec0edb620c40b8f5","modified":1557912964382},{"_id":"source/love/img/iali37.jpg","hash":"34c28dc3ea44311b77fb85a73e8302dd104c2b4c","modified":1557922614323},{"_id":"source/love/img/iali40.jpg","hash":"e449dc02a1224cdbcf360664afcc2017668517eb","modified":1557912964437},{"_id":"source/love/img/iali40_bg.jpg","hash":"bdfa61de0c2fbbe2c24f7ae05c5b7ecdde17b435","modified":1557912964452},{"_id":"source/love/img/iali44.jpg","hash":"969e0462aff9ef2b4821637622eb21343f36a8bb","modified":1557912964482},{"_id":"source/love/img/iali45_bg.jpg","hash":"6ddbdd59efade1ba91faec55d807214ac2f9c4fc","modified":1557912964511},{"_id":"source/love/img/iali46.jpg","hash":"021b7f7d3aabaae782b11a8e6bc381a4f1dc28ae","modified":1557912964525},{"_id":"source/love/img/iali49.jpg","hash":"374c283bd3854c5447769445f92ddee87ea51829","modified":1557912964537},{"_id":"source/love/img/iali5.jpg","hash":"689ca2597e2a21e16adeb15dad3b71c548a6f767","modified":1557912964551},{"_id":"source/love/img/iali50_1.jpg","hash":"1fc91eb52004ec5f44d1253fec4101f113b79191","modified":1557912964565},{"_id":"source/love/img/iali50_2.jpg","hash":"90bb0c22d386226d4548139ad550e98f7d44c137","modified":1557912964581},{"_id":"source/love/img/iali51.jpg","hash":"4237ec611653ef3a533a42db7866511f861eeac2","modified":1557912964594},{"_id":"source/love/img/iali52.jpg","hash":"2297b38c81238d663df85f199a3cbf49e556e266","modified":1557912964610},{"_id":"source/love/img/iali53.jpg","hash":"a63228d962e41ab1f76a28b1173de29875e18116","modified":1557912964622},{"_id":"source/love/img/iali59_bg.jpg","hash":"1f5857b1101054d3508fdb0fdd932b7f69a107a1","modified":1557912964699},{"_id":"source/love/img/iali60.jpg","hash":"7d317c133f8fa6b43a5db6ae05f602171f936200","modified":1557912964731},{"_id":"source/love/img/iali64.jpg","hash":"8889d12f77e314695015c8dc1600f3dba6611627","modified":1557912964777},{"_id":"source/love/img/iali65.jpg","hash":"5a10f195c4446e301c8fc6d3ef16cfed2b467d9a","modified":1557912964789},{"_id":"source/love/img/iali66.jpg","hash":"6811c054c81eae54fb91a5fa37fe690dd2d81a01","modified":1557912964804},{"_id":"source/love/img/iali67.jpg","hash":"6cc221ac1d9c122ac37d5a6870cffd399dbc832a","modified":1557912964819},{"_id":"source/love/img/iali68.jpg","hash":"4f9b372a9a78c022161b2e2e7971d72ae1512f76","modified":1557912964834},{"_id":"source/love/img/iali69.jpg","hash":"4343b2f39f06d9205d9c747eda8b84bf3c1feef4","modified":1557912964849},{"_id":"source/love/img/iali71.jpg","hash":"23d7497679a04752731290a6581910e91ddd4ce3","modified":1557912964864},{"_id":"source/love/img/iali75.jpg","hash":"bb6c364defc94b771e65722ff5c50290477e0586","modified":1557912964879},{"_id":"source/love/img/iali75_bg.jpg","hash":"aca5f35fa98bd280af9e0557f16088637e0597a0","modified":1557912964896},{"_id":"source/love/img/iali77.jpg","hash":"a0524b4e2d05cf4da9c54f01b6f00c1db2c956ba","modified":1557912964950},{"_id":"source/love/img/iali76_bg.png","hash":"ddab1225e5be8511b991e4dea6aab4d3a1dbe920","modified":1557912964933},{"_id":"source/love/img/iali9.jpg","hash":"8bb90a242e627239d7e3dd9c61d5fe533ca3aaf6","modified":1557912964998},{"_id":"source/love/img/music.png","hash":"c38b5670cae1fa5b49773bf92f501fcf82127aee","modified":1557912965013},{"_id":"source/love/img/mute.png","hash":"4a9a7e737efca122e80144a578b43713467b729c","modified":1557912965028},{"_id":"themes/next/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1546930966385},{"_id":"themes/next/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1546930966386},{"_id":"themes/next/.git/hooks/fsmonitor-watchman.sample","hash":"f7c0aa40cb0d620ff0bca3efe3521ec79e5d7156","modified":1546930966386},{"_id":"themes/next/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1546930966387},{"_id":"themes/next/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1546930966387},{"_id":"themes/next/.git/hooks/pre-commit.sample","hash":"33729ad4ce51acda35094e581e4088f3167a0af8","modified":1546930966388},{"_id":"themes/next/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1546930966388},{"_id":"themes/next/.git/hooks/pre-rebase.sample","hash":"288efdc0027db4cfd8b7c47c4aeddba09b6ded12","modified":1546930966389},{"_id":"themes/next/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1546930966389},{"_id":"themes/next/.git/hooks/prepare-commit-msg.sample","hash":"2584806ba147152ae005cb675aa4f01d5d068456","modified":1546930966390},{"_id":"themes/next/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1546930966390},{"_id":"themes/next/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1546930966390},{"_id":"themes/next/.git/logs/HEAD","hash":"3541bd67f1a2616029ecf76a7045a3391a3b5658","modified":1546931311679},{"_id":"themes/next/layout/_custom/header.swig","hash":"ba8ab5a0280b953aa97435ff8946cbcbb2755a27","modified":1546931311712},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"ba8ab5a0280b953aa97435ff8946cbcbb2755a27","modified":1546931311712},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"8c56dd26157cbc580ae41d97ac34b90ab48ced3f","modified":1546931311713},{"_id":"themes/next/layout/_macro/passage-end-tag.swig","hash":"396feef13c2f0a2241d70b28a304e6583d3d32f8","modified":1546932925203},{"_id":"themes/next/layout/_macro/post-copyright.swig","hash":"f83befdc740beb8dc88805efd7fbb0fef9ed19be","modified":1546931311713},{"_id":"themes/next/layout/_macro/post.swig","hash":"4ecdc5d425f13fb3b1746bc36bf3cfffc53b8e51","modified":1546935317718},{"_id":"themes/next/layout/_macro/reward.swig","hash":"357d86ec9586705bfbb2c40a8c7d247a407db21a","modified":1546931311714},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"9c7343fd470e0943ebd75f227a083a980816290b","modified":1546931311714},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"e2e4eae391476da994045ed4c7faf5e05aca2cd7","modified":1546931311715},{"_id":"themes/next/layout/_partials/comments.swig","hash":"4adc65a602d1276615da3b887dcbf2ac68e7382b","modified":1546931311716},{"_id":"themes/next/layout/_partials/footer.swig","hash":"e460534b160605849f31f70d100e02be6f86f2c0","modified":1548076678079},{"_id":"themes/next/layout/_partials/head.swig","hash":"f14a39dad1ddd98e6d3ceb25dda092ba80d391b5","modified":1546931311716},{"_id":"themes/next/layout/_partials/header.swig","hash":"c54b32263bc8d75918688fb21f795103b3f57f03","modified":1546931311717},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"77c61e0baea3544df361b7338c3cd13dc84dde22","modified":1546931311717},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"1634fb887842698e01ff6e632597fe03c75d2d01","modified":1546931311718},{"_id":"themes/next/layout/_partials/search.swig","hash":"b4ebe4a52a3b51efe549dd1cdee846103664f5eb","modified":1546931311718},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"c0f5a0955f69ca4ed9ee64a2d5f8aa75064935ad","modified":1546931311720},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"931808ad9b8d8390c0dcf9bdeb0954eeb9185d68","modified":1546931311721},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"9be624634703be496a5d2535228bc568a8373af9","modified":1546931311722},{"_id":"themes/next/layout/_third-party/duoshuo-hot-articles.swig","hash":"ba75672183d94f1de7c8bd0eeee497a58c70e889","modified":1546931311731},{"_id":"themes/next/layout/_third-party/exturl.swig","hash":"8301c9600bb3e47f7fb98b0e0332ef3c51bb1688","modified":1546931311731},{"_id":"themes/next/layout/_third-party/mathjax.swig","hash":"a0bd3388587fd943baae0d84ca779a707fbcad89","modified":1546931311732},{"_id":"themes/next/layout/_third-party/needsharebutton.swig","hash":"fa882641da3bd83d9a58a8a97f9d4c62a9ee7b5c","modified":1546931311732},{"_id":"themes/next/layout/_third-party/rating.swig","hash":"554ec568e9d2c71e4a624a8de3cb5929050811d6","modified":1546931311733},{"_id":"themes/next/layout/_third-party/schedule.swig","hash":"db15d7e1552aa2d2386a6b8a33b3b3a40bf9e43d","modified":1546931311733},{"_id":"themes/next/layout/_third-party/scroll-cookie.swig","hash":"9a188938d46931d5f3882a140aa1c48b3a893f0c","modified":1546931311733},{"_id":"themes/next/scripts/tags/button.js","hash":"eddbb612c15ac27faf11c59c019ce188f33dec2c","modified":1546931311740},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"99b66949f18398689b904907af23c013be1b978f","modified":1546931311740},{"_id":"themes/next/scripts/tags/exturl.js","hash":"5022c0ba9f1d13192677cf1fd66005c57c3d0f53","modified":1546931311740},{"_id":"themes/next/scripts/tags/full-image.js","hash":"c9f833158c66bd72f627a0559cf96550e867aa72","modified":1546931311741},{"_id":"themes/next/scripts/tags/label.js","hash":"6f00952d70aadece844ce7fd27adc52816cc7374","modified":1546931311741},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"ac681b0d0d8d39ba3817336c0270c6787c2b6b70","modified":1546931311741},{"_id":"themes/next/scripts/tags/lazy-image.js","hash":"bcba2ff25cd7850ce6da322d8bd85a8dd00b5ceb","modified":1546931311743},{"_id":"themes/next/scripts/tags/note.js","hash":"f7eae135f35cdab23728e9d0d88b76e00715faa0","modified":1546931311743},{"_id":"themes/next/scripts/tags/tabs.js","hash":"aa7fc94a5ec27737458d9fe1a75c0db7593352fd","modified":1546931311743},{"_id":"themes/next/source/css/main.styl","hash":"a91dbb7ef799f0a171b5e726c801139efe545176","modified":1546931311804},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"45eeea0b5fba833e21e38ea10ed5ab385ceb4f01","modified":1546931311805},{"_id":"themes/next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1546931311805},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1546931311805},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"bc3588c9b2d7c68830524783120ff6cf957cf668","modified":1546931311806},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"6f076713fb9bf934aa2c1046bdf2cf2e37bc1eab","modified":1546931311807},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"6f55543d1fb9cbc436c101d24f802dec7b41efc3","modified":1546931311806},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"42cd73da328077ccc92f859bb8f3cf621b3484f8","modified":1546931311807},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"70c1535f43e54e5ff35ca81419e77e4c0c301398","modified":1546931311807},{"_id":"themes/next/source/images/cc-by.svg","hash":"e92a33c32d1dac8ed94849b2b4e6456e887efe70","modified":1546931311808},{"_id":"themes/next/source/images/cc-zero.svg","hash":"9bfb52b2f63527a7049247bf00d44e6dc1170e7d","modified":1546931311808},{"_id":"themes/next/source/images/favicon-16x16-next.png","hash":"f758551578586d4c335c2ceb1928f878125cdd3a","modified":1546936032563},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1546931311810},{"_id":"themes/next/source/images/favicon-32x32-next.png","hash":"e2078acbe8265d178e435816fdbfebd152ad775d","modified":1546936002260},{"_id":"themes/next/source/images/logo.svg","hash":"169f56fd82941591dad3abd734a50ec7259be950","modified":1546931311810},{"_id":"themes/next/source/images/quote-l.svg","hash":"cd108d6f44351cadf8e6742565217f88818a0458","modified":1546931311811},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1546931311810},{"_id":"themes/next/source/images/quote-r.svg","hash":"2a2a250b32a87c69dcc1b1976c74b747bedbfb41","modified":1546931311812},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1546931311812},{"_id":"source/_posts/Hierarchical-Object-Detection-with-Deep-Reinforcement-Learning/Hierarchical-Object-Detection-Models.png","hash":"8492971175dfe4f2c652e6ca938e959c51214f42","modified":1529891136806},{"_id":"source/_posts/垃圾收集器/垃圾收集器1.jpg","hash":"50794d533e17cc03d9d6bb048e25c8a471d65ab8","modified":1551321227865},{"_id":"source/_posts/图片服务器搭建/5.png","hash":"e71316a8358c36798a81731360c8a01df7bee582","modified":1547465457063},{"_id":"source/love/img/14915.jpg","hash":"00d3d2a34b2df1c21396f702187386dd494dd278","modified":1557912964051},{"_id":"source/love/img/iali10.gif","hash":"5823109c7c954f3b3916f4b818b264a7151326ed","modified":1557912964112},{"_id":"source/love/img/iali0.jpg","hash":"0f1909fe6fbe8677ad396c788595fd44fa89ad20","modified":1557912964097},{"_id":"source/love/img/iali11.jpg","hash":"a841952c6768d5b32155f19b990a6870b2e5ee66","modified":1557912964125},{"_id":"source/love/img/iali12.jpg","hash":"ce03499b74e6e5120da5a72bcaf0dbb23b0a5f00","modified":1557912964138},{"_id":"source/love/img/iali16.jpg","hash":"39637a54fe8c6266e4ffa1a871641b2612aee1e9","modified":1557912964164},{"_id":"source/love/img/iali19.jpg","hash":"b5d14596c74f4f9b1b10328b0f09f45b584c7807","modified":1557912964188},{"_id":"source/love/img/iali2.jpg","hash":"520f70c845d9d173101a81bbd06f7e2a9e303ce1","modified":1557912964202},{"_id":"source/love/img/iali20.jpg","hash":"dfb879a90bc421b2ab180c41c5b0a3388e1adff7","modified":1557912964216},{"_id":"source/love/img/iali3.jpg","hash":"bf88742b21f7195ce0386615b1d450c61f3b73e5","modified":1557912964325},{"_id":"source/love/img/iali31.jpg","hash":"b22cd62d9d96ea02bc998d9caff181dcc86ee3b6","modified":1557912964368},{"_id":"source/love/img/iali35.jpg","hash":"3374c0c905ac048f3ce91ccba1ec03df99f4a720","modified":1557912964396},{"_id":"source/love/img/iali4.jpg","hash":"c3aec01dbe39155c192807f063f9cb97aad57864","modified":1557912964426},{"_id":"source/love/img/iali42.jpg","hash":"79aa4ffc9135d26ddffce0631ed68d97d1dc2c98","modified":1557912964468},{"_id":"source/love/img/iali45.jpg","hash":"f1fdb224da6d1262390c7b82aa54b0d0ae1706a1","modified":1557912964498},{"_id":"source/love/img/iali57.gif","hash":"ad48eff3de287151c24f9e6da198c9a56a65c6ea","modified":1557912964638},{"_id":"source/love/img/iali57.jpg","hash":"2ffbec4ee1a9f5a3df88790535f1290037bed199","modified":1557912964654},{"_id":"source/love/img/iali58.jpg","hash":"23288745739d16a42b447f36f8faba944031fba1","modified":1557912964670},{"_id":"source/love/img/iali6.jpg","hash":"7f9ff9477d2adf52600da01ba7439bc6b8e6935a","modified":1557912964715},{"_id":"source/love/img/iali62.jpg","hash":"95678f17dbda18aacc78966c7921c4f23aa4b847","modified":1557912964746},{"_id":"source/love/img/iali63.jpg","hash":"da3de1fe8c2c49dec062b3a7ab7b99d096f6d865","modified":1557912964762},{"_id":"source/love/img/iali76.gif","hash":"e64c5994f781810a2ecb4878bab7c2991d2fe6b0","modified":1557912964915},{"_id":"source/love/img/iali8.gif","hash":"1021b934aa457e8e14fa015d4e45aa5e13c2c72a","modified":1557912964967},{"_id":"source/love/img/iali8_bg.png","hash":"ead96b2f80f73704e3d569348f60de100732c40c","modified":1557912964983},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1546931311721},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1546931311721},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1546931311792},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1546931311793},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1546931311793},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1546931311802},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1546931311803},{"_id":"source/_posts/StackGAN-Text-to-Photo-realistic-Image-Synthesis-with-Stacked-Generative-Adversarial-Networks/StackGAN.png","hash":"6b1f7819e176fa20168ff30df3e8f15c3344acc7","modified":1550575958059},{"_id":"source/lib/needsharebutton/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1547003528057},{"_id":"source/lib/needsharebutton/.git/config","hash":"c7e2f14ced37eecc754f659676d4e821c67cdc27","modified":1547003528067},{"_id":"source/lib/needsharebutton/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1547003522173},{"_id":"source/lib/needsharebutton/.git/index","hash":"3f6778866cafc86b16282b5e2a6ad03761059403","modified":1547297978508},{"_id":"source/lib/needsharebutton/.git/packed-refs","hash":"018b03f9d6b9a0c7174e34007d73f0e086898663","modified":1547003528050},{"_id":"source/lib/needsharebutton/.github/stale.yml","hash":"dbd5e6bf89b76ad1f2b081578b239c7ae32755af","modified":1547003528093},{"_id":"source/love/img/iali24.jpg","hash":"6356a9b1cdc641902cd9dc12221da8c7f44355e7","modified":1557912964269},{"_id":"source/love/img/iali59.png","hash":"0029ef32f6d167712ab05f6fa578e0098d1cb5b2","modified":1557912964685},{"_id":"themes/next/.git/refs/heads/master","hash":"7999da428ebb87e5a2b27315d8d5123c1ccdfaa5","modified":1546931311678},{"_id":"themes/next/layout/_partials/head/custom-head.swig","hash":"a223919d2e1bf17ca4d6abb2c86f2efca9883dc1","modified":1546931311716},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"f5e487b0d213ca0bd94aa30bc23b240d65081627","modified":1546931311717},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"b2f0d247b213e4cf8de47af6a304d98070cc7256","modified":1546931311718},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"a8c7f9ca7c605d039a1f3bf4e4d3183700a3dd62","modified":1546931311719},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"b25002a83cbd2ca0c4a5df87ad5bff26477c0457","modified":1546931311719},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"9e3d133ac5bcc6cb51702c83b2611a49811abad1","modified":1546931311719},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"d9e2d9282f9be6e04eae105964abb81e512bffed","modified":1546931311719},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"d4fbffd7fa8f2090eb32a871872665d90a885fac","modified":1546931311720},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"0a9cdd6958395fcdffc80ab60f0c6301b63664a5","modified":1546931311720},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"9b84ab576982b2c3bb0291da49143bc77fba3cc6","modified":1546931311721},{"_id":"themes/next/layout/_scripts/schemes/gemini.swig","hash":"a9a3995b9615adfb8d6b127c78c6771627bee19a","modified":1546931311721},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a9a3995b9615adfb8d6b127c78c6771627bee19a","modified":1546931311722},{"_id":"themes/next/layout/_third-party/analytics/analytics-with-widget.swig","hash":"ff947f3561b229bc528cb1837d4ca19612219411","modified":1546931311722},{"_id":"themes/next/layout/_third-party/analytics/application-insights.swig","hash":"71397a5823e8ec8aad3b68aace13150623b3e19d","modified":1546931311723},{"_id":"themes/next/layout/_third-party/analytics/baidu-analytics.swig","hash":"753d262911c27baf663fcaf199267133528656af","modified":1546931311723},{"_id":"themes/next/layout/_third-party/analytics/busuanzi-counter.swig","hash":"16cb23818909f57dac1a5ada66869971c33d7bd8","modified":1548076867999},{"_id":"themes/next/layout/_third-party/analytics/cnzz-analytics.swig","hash":"a10b7f19d7b5725527514622899df413a34a89db","modified":1546931311723},{"_id":"themes/next/layout/_third-party/analytics/facebook-sdk.swig","hash":"7d94845f96197d9d84a405fa5d4ede75fb81b225","modified":1546931311725},{"_id":"themes/next/layout/_third-party/analytics/firestore.swig","hash":"ccc443b22bd4f8c7ac4145664686c756395b90e0","modified":1546931311725},{"_id":"themes/next/layout/_third-party/analytics/google-analytics.swig","hash":"b1e13df83fb2b1d5d513b30b7aa6158b0837daab","modified":1546931311725},{"_id":"themes/next/layout/_third-party/analytics/index.swig","hash":"45f3f629c2aacc381095750e1c8649041a71a84b","modified":1546931311726},{"_id":"themes/next/layout/_third-party/analytics/lean-analytics.swig","hash":"e6d10ee4fb70b3ae1cd37e9e36e000306734aa2e","modified":1546931311726},{"_id":"themes/next/layout/_third-party/analytics/tencent-analytics.swig","hash":"8a399df90dadba5ad4e781445b58f4765aeb701e","modified":1546931311726},{"_id":"themes/next/layout/_third-party/analytics/tencent-mta.swig","hash":"5a8027328f060f965b3014060bebec1d7cf149c1","modified":1546931311726},{"_id":"themes/next/layout/_third-party/analytics/vkontakte-api.swig","hash":"f9a1647a8f1866deeb94052d1f87a5df99cb1e70","modified":1546931311727},{"_id":"themes/next/layout/_third-party/comments/disqus.swig","hash":"b83a51bbe0f1e2ded9819070840b0ea145f003a6","modified":1546931311727},{"_id":"themes/next/layout/_third-party/comments/changyan.swig","hash":"4c501ea0b9c494181eb3c607c5526a5754e7fbd8","modified":1546931311727},{"_id":"themes/next/layout/_third-party/comments/gitment.swig","hash":"4dcc3213c033994d342d02b800b6229295433d30","modified":1546931311728},{"_id":"themes/next/layout/_third-party/comments/duoshuo.swig","hash":"1600f340e0225361580c44890568dc07dbcf2c89","modified":1546931311728},{"_id":"themes/next/layout/_third-party/comments/hypercomments.swig","hash":"af7f3e43cbdc4f88c13f101f0f341af96ace3383","modified":1546931311728},{"_id":"themes/next/layout/_third-party/comments/index.swig","hash":"493bd5999a1061b981922be92d8277a0f9152447","modified":1546931311728},{"_id":"themes/next/layout/_third-party/comments/livere.swig","hash":"9246162d4bc7e949ce1d12d135cbbaf5dc3024ec","modified":1546931311730},{"_id":"themes/next/layout/_third-party/comments/valine.swig","hash":"4050553d44ba1396174161c9a6bb0f89fa779eca","modified":1546931311730},{"_id":"themes/next/layout/_third-party/comments/youyan.swig","hash":"7e65ff8fe586cd655b0e9d1ad2912663ff9bd36c","modified":1546931311731},{"_id":"themes/next/layout/_third-party/search/index.swig","hash":"34599633658f3b0ffb487728b7766e1c7b551f5a","modified":1546931311735},{"_id":"themes/next/layout/_third-party/search/localsearch.swig","hash":"93479642fd076a1257fecc25fcf5d20ccdefe509","modified":1546931311735},{"_id":"themes/next/layout/_third-party/search/tinysou.swig","hash":"fe95dd3d166634c466e19aa756e65ad6e8254d3e","modified":1546931311735},{"_id":"themes/next/layout/_third-party/seo/baidu-push.swig","hash":"d8c98938719284fa06492c114d99a1904652a555","modified":1546931311736},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"29c13c61bb4da0a672ba22125b53b8ab0064ee83","modified":1547562017383},{"_id":"themes/next/source/css/_mixins/Gemini.styl","hash":"07f7da320689f828f6e36a6123807964a45157a0","modified":1546931311792},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"7896c3ee107e1a8b9108b6019f1c070600a1e8cc","modified":1546931311793},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"0e55cbd93852dc3f8ccb44df74d35d9918f847e0","modified":1546931311793},{"_id":"themes/next/source/css/_variables/Gemini.styl","hash":"58e7dd5947817d9fc30770712fc39b2f52230d1e","modified":1546931311802},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"a25408534f8fe6e321db4bbf9dd03335d648fe17","modified":1546931311802},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"4069f918ccc312da86db6c51205fc6c6eaabb116","modified":1546931311803},{"_id":"themes/next/source/css/_variables/base.styl","hash":"b1f6ea881a4938a54603d68282b0f8efb4d7915d","modified":1546931311803},{"_id":"themes/next/source/images/background.jpg","hash":"894d905afea6a0b558e35bb4db51e1920ae48e76","modified":1547559446514},{"_id":"themes/next/source/js/custom/love.min.js","hash":"af70e42be36de5353251c31f97c6281af578f820","modified":1557912965209},{"_id":"themes/next/source/js/custom/all.min.js","hash":"2d70a907ee3595602d7d22539bf6b558479ecac6","modified":1557912965081},{"_id":"themes/next/source/js/src/affix.js","hash":"1b509c3b5b290a6f4607f0f06461a0c33acb69b1","modified":1546931311813},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"cb431b54ba9c692165a1f5a12e4c564a560f8058","modified":1546931311813},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"0289031200c3d4c2bdd801ee10fff13bb2c353e4","modified":1546931311813},{"_id":"themes/next/source/js/src/exturl.js","hash":"a2a0f0de07e46211f74942a468f42ee270aa555c","modified":1546931311814},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"b35a7dc47b634197b93487cea8671a40a9fdffce","modified":1546931311814},{"_id":"themes/next/source/js/src/js.cookie.js","hash":"1512c751d219577d338ac0780fb2bbd9075d5298","modified":1546931311814},{"_id":"themes/next/source/js/src/motion.js","hash":"885176ed51d468f662fbf0fc09611f45c7e5a3b1","modified":1546931311815},{"_id":"themes/next/source/js/src/post-details.js","hash":"93a18271b4123dd8f94f09d1439b47c3c19a8712","modified":1546931311815},{"_id":"themes/next/source/js/src/scroll-cookie.js","hash":"02cf91514e41200bc9df5d8bdbeb58575ec06074","modified":1546931311816},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"b7657be25fc52ec67c75ab5481bdcb483573338b","modified":1546931311816},{"_id":"themes/next/source/js/src/utils.js","hash":"b3e9eca64aba59403334f3fa821f100d98d40337","modified":1546931311817},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1546931311822},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1546931311825},{"_id":"themes/next/source/lib/canvas-ribbon/canvas-ribbon.js","hash":"b02737510e9b89aeed6b54f89f602a9c24b06ff2","modified":1546931311825},{"_id":"themes/next/source/lib/fancybox/.gitattributes","hash":"672d3b5767e0eacd83bb41b188c913f2cf754793","modified":1546931311826},{"_id":"themes/next/source/lib/fancybox/.bower.json","hash":"9be892a4e14e0da18ff9cb962c9ef71f163b1b22","modified":1546931311826},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"b4aefc910578d76b267e86dfffdd5121c8db9aec","modified":1546931311837},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"03ddbf76c1dd1afb93eed0b670d2eee747472ef1","modified":1546931311837},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"c31ff06a740955e44edd4403902e653ccabfd4db","modified":1546931311837},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"ee33b2798b1e714b904d663436c6b3521011d1fa","modified":1546931311838},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"71e7183634dc1b9449f590f15ebd7201add22ca7","modified":1546931311838},{"_id":"themes/next/source/lib/fastclick/LICENSE","hash":"6f474ea75c42442da7bbcf2e9143ce98258efd8d","modified":1546931311834},{"_id":"themes/next/source/lib/fastclick/.bower.json","hash":"bf3eef9d647cd7c9b62feda3bc708c6cdd7c0877","modified":1546931311834},{"_id":"themes/next/source/lib/fastclick/README.md","hash":"68a9b9d53126405b0fa5f3324f1fb96dbcc547aa","modified":1546931311835},{"_id":"themes/next/source/lib/fastclick/bower.json","hash":"a9b3ee1e4db71a0e4ea6d5bed292d176dd68b261","modified":1546931311835},{"_id":"themes/next/source/lib/jquery/.bower.json","hash":"865d6c1328ab209a4376b9d2b7a7824369565f28","modified":1546931311852},{"_id":"themes/next/source/lib/jquery_lazyload/.bower.json","hash":"90fa628f156d8045357ff11eaf32e61abacf10e8","modified":1546931311853},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4ded6fee668544778e97e38c2b211fc56c848e77","modified":1546931311854},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","hash":"e0acf1db27b0cc16128a59c46db1db406b5c4c58","modified":1546931311854},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","hash":"b930297cb98b8e1dbd5abe9bc1ed9d5935d18ce8","modified":1546931311854},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"f4a570908f6c89c6edfb1c74959e733eaadea4f2","modified":1546931311855},{"_id":"themes/next/source/lib/needsharebutton/font-embedded.css","hash":"14264a210bf94232d58d7599ea2ba93bfa4fb458","modified":1546931311856},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"bf773ad48a0b9aa77681a89d7569eefc0f7b7b18","modified":1546931311855},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.css","hash":"e33aa8fa48b6639d8d8b937d13261597dd473b3a","modified":1546931311856},{"_id":"themes/next/source/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1546931311857},{"_id":"themes/next/source/lib/needsharebutton/needsharebutton.js","hash":"2ce5f3bf15c523b9bfc97720d8884bb22602a454","modified":1546931311857},{"_id":"themes/next/source/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1546931311857},{"_id":"themes/next/source/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1546931311858},{"_id":"themes/next/source/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1546931311858},{"_id":"themes/next/source/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1546931311859},{"_id":"themes/next/source/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1546931311859},{"_id":"themes/next/source/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1546931311859},{"_id":"themes/next/source/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1546931311860},{"_id":"themes/next/source/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1546931311860},{"_id":"themes/next/source/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1546931311860},{"_id":"themes/next/source/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1546931311861},{"_id":"themes/next/source/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1546931311861},{"_id":"themes/next/source/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1546931311861},{"_id":"themes/next/source/lib/pace/pace.min.js","hash":"8aaa675f577d5501f5f22d5ccb07c2b76310b690","modified":1546931311862},{"_id":"themes/next/source/lib/three/canvas_lines.min.js","hash":"2d9a9f38c493fdf7c0b833bb9184b6a1645c11b2","modified":1546931311862},{"_id":"themes/next/source/lib/three/canvas_sphere.min.js","hash":"46a50b91c98b639c9a2b9265c5a1e66a5c656881","modified":1546931311863},{"_id":"themes/next/source/lib/three/three-waves.min.js","hash":"8148492dd49aa876d32bb7d5b728d3f5bf6f5074","modified":1546931311863},{"_id":"themes/next/source/lib/velocity/.bower.json","hash":"63da5e80ebb61bb66a2794d5936315ca44231f0c","modified":1546931311868},{"_id":"themes/next/source/lib/velocity/bower.json","hash":"92d92860418c4216aa59eb4cb4a556290a7ad9c3","modified":1546931311869},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"bf172816a9c57f9040e3d19c24e181a142daf92b","modified":1546931311871},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"dbbfb50f6502f6b81dcc9fee7b31f1e812da3464","modified":1546931311873},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"dde584994ac13dc601836e86f4cf490e418d9723","modified":1546931311873},{"_id":"source/_posts/Stacked-Cross-Attention-for-Image-Text-Matching/Stacked-Cross-Attention1.png","hash":"bba598706c764dff66f3921f451d9fc7f90a928f","modified":1555320075741},{"_id":"source/_posts/Stacked-Cross-Attention-for-Image-Text-Matching/Stacked-Cross-Attention2.png","hash":"7b02b31477b732e4011a21557e86c3ef39ae0339","modified":1555320188700},{"_id":"themes/next/source/js/custom/jquery.min.js","hash":"8b6babff47b8a9793f37036fd1b1a3ad41d38423","modified":1557912965165},{"_id":"themes/next/source/lib/jquery/index.js","hash":"17a740d68a1c330876c198b6a4d9319f379f3af2","modified":1546931311853},{"_id":"source/lib/needsharebutton/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1547003522174},{"_id":"source/lib/needsharebutton/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1547003522174},{"_id":"source/lib/needsharebutton/.git/hooks/fsmonitor-watchman.sample","hash":"f7c0aa40cb0d620ff0bca3efe3521ec79e5d7156","modified":1547003522175},{"_id":"source/lib/needsharebutton/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1547003522176},{"_id":"source/lib/needsharebutton/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1547003522175},{"_id":"source/lib/needsharebutton/.git/hooks/pre-commit.sample","hash":"33729ad4ce51acda35094e581e4088f3167a0af8","modified":1547003522177},{"_id":"source/lib/needsharebutton/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1547003522177},{"_id":"source/lib/needsharebutton/.git/hooks/pre-rebase.sample","hash":"288efdc0027db4cfd8b7c47c4aeddba09b6ded12","modified":1547003522178},{"_id":"source/lib/needsharebutton/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1547003522179},{"_id":"source/lib/needsharebutton/.git/hooks/prepare-commit-msg.sample","hash":"2584806ba147152ae005cb675aa4f01d5d068456","modified":1547003522179},{"_id":"source/lib/needsharebutton/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1547003522180},{"_id":"source/lib/needsharebutton/.git/logs/HEAD","hash":"11ceb10b5a78e8043b879de26f5d08e245be12ce","modified":1547003528060},{"_id":"source/lib/needsharebutton/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1547003522181},{"_id":"themes/next/.git/logs/refs/heads/master","hash":"3541bd67f1a2616029ecf76a7045a3391a3b5658","modified":1546931311679},{"_id":"themes/next/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1546931311676},{"_id":"themes/next/layout/_third-party/search/algolia-search/assets.swig","hash":"218cc936ba3518a3591b2c9eda46bc701edf7710","modified":1546931311734},{"_id":"themes/next/layout/_third-party/search/algolia-search/dom.swig","hash":"2530de0f3125a912756f6c0e9090cd012134a4c5","modified":1546931311734},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"8f86f694c0749a18ab3ad6f6df75466ca137a4bc","modified":1546931311763},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"237d185ac62ec9877e300947fa0109c44fb8db19","modified":1546931311763},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"8b32928686c327151e13d3ab100157f9a03cd59f","modified":1546931311764},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"ff4489cd582f518bba6909a301ac1292a38b4e96","modified":1546931311764},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"7ad4081466b397e2a6204141bb7768b7c01bd93c","modified":1546931311764},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"4f2801fc4cf3f31bf2069f41db8c6ce0e3da9e39","modified":1546931311770},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"6eb4bcc3056bd279d000607e8b4dad50d368ca69","modified":1546931311780},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"12662536c7a07fff548abe94171f34b768dd610f","modified":1546931311789},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"24ee4b356ff55fc6e58f26a929fa07750002cf29","modified":1546931311789},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"1da5c800d025345f212a3bf1be035060f4e5e6ed","modified":1546931311790},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"3f40e8a9fe8e7bd5cfc4cf4cbbbcb9539462e973","modified":1546931311790},{"_id":"themes/next/source/css/_common/scaffolding/mobile.styl","hash":"91ca75492cd51f2553f4d294ed2f48239fcd55eb","modified":1546931311790},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"a17e2b871a335f290afb392a08f94fd35f59c715","modified":1546931311791},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"ea9069645696f86c5df64208490876fe150c8cae","modified":1546931311791},{"_id":"themes/next/source/css/_schemes/Gemini/index.styl","hash":"60fa84aa7731760f05f52dd7d8f79b5f74ac478d","modified":1546931311794},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"25d5e45a355ee2093f3b8b8eeac125ebf3905026","modified":1546931311795},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"d0bfd1bef988c76f7d7dd72d88af6f0908a8b0db","modified":1546931311795},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"26666c1f472bf5f3fb9bc62081cca22b4de15ccb","modified":1546931311796},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"b1025c421406d2c24cc92a02ae28c1915b01e240","modified":1546931311795},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"5923946b3e6a662e20f83b83abe985eba188930d","modified":1547992320254},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"09c965022c13b84ed8a661fee8ac2a6d550495ae","modified":1546931311796},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9b913b73d31d21f057f97115ffab93cfa578b884","modified":1546931311796},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"31127dcbf4c7b4ada53ffbf1638b5fe325b7cbc0","modified":1546931311798},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"748dbfbf9c08e719ddc775958003c64b00d39dab","modified":1546931311798},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"e695e58f714129ca292c2e54cd62c251aca7f7fe","modified":1546931311798},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"5dbc0d0c897e46760e5dbee416530d485c747bba","modified":1546931311799},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"09c965022c13b84ed8a661fee8ac2a6d550495ae","modified":1546931311799},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"bce344d3a665b4c55230d2a91eac2ad16d6f32fd","modified":1546931311800},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"416988dca389e6e2fdfa51fa7f4ee07eb53f82fb","modified":1546931311800},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"4642e30010af8b2b037f5b43146b10a934941958","modified":1546931311801},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"1f6e2ce674735269599acc6d77b3ea18d31967fc","modified":1546931311801},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"ad2dcedf393ed1f3f5afd2508d24969c916d02fc","modified":1546931311801},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"86197902dfd3bededba10ba62b8f9f22e0420bde","modified":1546931311802},{"_id":"themes/next/source/images/background2.jpg","hash":"61fb5568b742773e5c18f546b7f1a9353a6dd11c","modified":1547560288427},{"_id":"themes/next/source/images/background3.jpg","hash":"1efe1e64111fb7ce0a1ec43beee9d4001c9aacc0","modified":1547559647101},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"f1d0b5d7af32c423eaa8bb93ab6a0b45655645dc","modified":1546931311816},{"_id":"themes/next/source/lib/Han/dist/han.min.css","hash":"6d586bfcfb7ae48f1b12f76eec82d3ad31947501","modified":1546931311821},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1546931311827},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1546931311827},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1546931311827},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1546931311828},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1546931311828},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","hash":"82f33ad0842aa9c154d029e0dada2497d4eb1d57","modified":1546931311832},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1546931311829},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","hash":"d71602cbca33b9ecdb7ab291b7f86a49530f3601","modified":1546931311833},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"ae6318aeb62ad4ce7a7e9a4cdacd93ffb004f0fb","modified":1546931311833},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"1573904b82807abbb32c97a3632c6c6808eaac50","modified":1546931311839},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"88af80502c44cd52ca81ffe7dc7276b7eccb06cf","modified":1546931311839},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1546931311836},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","hash":"1d6aeda0480d0e4cb6198edf7719d601d4ae2ccc","modified":1546931311836},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"a817b6c158cbc5bab3582713de9fe18a18a80552","modified":1546931311868},{"_id":"themes/next/source/lib/Han/dist/han.css","hash":"6c26cdb36687d4f0a11dabf5290a909c3506be5c","modified":1546931311820},{"_id":"themes/next/source/lib/Han/dist/han.js","hash":"4ac683b2bc8531c84d98f51b86957be0e6f830f3","modified":1546931311820},{"_id":"themes/next/source/lib/Han/dist/han.min.js","hash":"16b03db23a52623348f37c04544f2792032c1fb6","modified":1546931311821},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"3655f1fdf1e584c4d8e8d39026093ca306a5a341","modified":1546931311839},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1546931311851},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"41ea797c68dbcff2f6fb3aba1d1043a22e7cc0f6","modified":1546931311867},{"_id":"source/lib/needsharebutton/.git/objects/0c/97d452adf1f9aa29468c10dc5aca581c40d35d","hash":"8247b73544627904f1c49b2d48e8a5ca24c49d94","modified":1547003527323},{"_id":"source/lib/needsharebutton/.git/objects/0c/dada082d621dbfdd00f7020c33dc751129167f","hash":"b490c11cdefde6b331a7d4ddb055e34ad08459d8","modified":1547003527755},{"_id":"source/lib/needsharebutton/.git/objects/10/7997cd9f09e787407d6a579bb0ead61ba0c44e","hash":"a7bb772e0f541b9f0c5e4682f88881faef7d2b87","modified":1547003526616},{"_id":"source/lib/needsharebutton/.git/objects/1f/9bfac8ac3b22f100c85bb82877c7af973f011a","hash":"74f0088767a48b5b8874bb5e8953604058233105","modified":1547003526899},{"_id":"source/lib/needsharebutton/.git/objects/2f/9eba51ec174b1e0c719d12cafa7c3c07140471","hash":"fc994d9d8b3b21ec7c941eea7e3862970e297e9b","modified":1547003527797},{"_id":"source/lib/needsharebutton/.git/objects/34/73a532c76c2ec7eaafc9bba9bc37851cb5a349","hash":"991d675a7982030fef4e8103ecdf717e2e153143","modified":1547003527222},{"_id":"source/lib/needsharebutton/.git/objects/37/e84bbc9c853d9abc39b18361a67d09402a9fec","hash":"330ba4772d5feaf23bd85aa38be94a1b254cac8a","modified":1547003526390},{"_id":"source/lib/needsharebutton/.git/objects/35/b5765a89abcc57439ad0e7b60dc67225e76570","hash":"b020fa3885506f64651a4a63d42b32c7874a072a","modified":1547003527171},{"_id":"source/lib/needsharebutton/.git/objects/3c/673c6e10073f4cf715526c3ab99edf7461b267","hash":"9362453f89eefcc6988cd3a39548c90402f616a8","modified":1547003527714},{"_id":"source/lib/needsharebutton/.git/objects/40/a8a2ab6075fb13a489aa2585f55518e03440cc","hash":"40a879b454bae72ba30ab918e7cbb3dee04c45c4","modified":1547003526799},{"_id":"source/lib/needsharebutton/.git/objects/41/f2acffe002ce9fa94904bdbb105c62697c08bf","hash":"6aca807e726bf9bbffdab1b97cae1132dd3570c8","modified":1547003526429},{"_id":"source/lib/needsharebutton/.git/objects/46/66508d485306f48ac866f4a0eded896b01adb0","hash":"a37ee79e50b83b3a5a7f736cfc6b8eafc210ebca","modified":1547003527457},{"_id":"source/lib/needsharebutton/.git/objects/49/c5d2b0c8ded3a5465f659504d5654759b45ce9","hash":"133f2916c8dd706d9ea44203f671d42abed6d183","modified":1547003527054},{"_id":"source/lib/needsharebutton/.git/objects/49/e08108a89c7bf4f1e03fdf9d23fa1841ddc40a","hash":"3a32bfdf83debfa739a05a12c77c9c8c9fad6baf","modified":1547003527630},{"_id":"source/lib/needsharebutton/.git/objects/51/e4a626dc726971ce48b9d29531ec4fa11ab93c","hash":"8bc98d2bd4f224fbba56e0339ba9e1abfbd0e676","modified":1547003526573},{"_id":"source/lib/needsharebutton/.git/objects/63/ce5669cda10d9c600a65df1c509155a9dce354","hash":"e7eefb05c18a77c99c1044dc53cc0b33bc4bc723","modified":1547003526635},{"_id":"source/lib/needsharebutton/.git/objects/69/a20d65d83035fdb01734a8eabe3340f740a4cb","hash":"9e95b02d8e43ec92e06bee3f60dffb74e8e7b9fa","modified":1547003526831},{"_id":"source/lib/needsharebutton/.git/objects/72/38adfc9f0b65e7dd8e7eb39b53fd8dbd05728d","hash":"67f5fb35cbbb4625e049368c8ef7fef03e21315d","modified":1547003527498},{"_id":"source/lib/needsharebutton/.git/objects/77/ad104add4d67baba615eccfcc7876bdf60256f","hash":"787497f0b2a074be846ae940ba58475a830690d4","modified":1547003527543},{"_id":"source/lib/needsharebutton/.git/objects/77/b1d62571d3374de0902fdf14c3fd925263c295","hash":"f0d087a62296e14072d250d0db5bfeb01e3e0f4c","modified":1547003526705},{"_id":"source/lib/needsharebutton/.git/objects/80/8d63b637e30043e74f5150047c232028ffa3bf","hash":"c7cd9201316a2cf66b63cd0f520dc827912d8be8","modified":1547003526871},{"_id":"source/lib/needsharebutton/.git/objects/8a/e95435136e887fc30227f9fdab68ff72689315","hash":"f1225345f08eb5abbf849a40efdec16839268c9b","modified":1547003527910},{"_id":"source/lib/needsharebutton/.git/objects/91/85a82ce05e0c4c6287e3ce6c31d79049a6c5de","hash":"d40af8a4f325b8b2d6eeb1f51497d2313aade46d","modified":1547003527197},{"_id":"source/lib/needsharebutton/.git/objects/96/b1227c70e63f95b099993321043a2e05abdbea","hash":"d1f0885e3a68fdfc87e68e5ba6b60de116c3c7a5","modified":1547003527367},{"_id":"source/lib/needsharebutton/.git/objects/99/ac01b3cae78a765c45566d5540596f71f0f9ed","hash":"394e54788569a0aef47f5c1867b7a617d314b677","modified":1547003526504},{"_id":"source/lib/needsharebutton/.git/objects/9a/563a770314159840897f1852b05f183911ae71","hash":"0949c3c36849e955c84cc66f544fbeeca266ae19","modified":1547003527436},{"_id":"source/lib/needsharebutton/.git/objects/9c/850e429959950cfd82a30843ad130dfd24331a","hash":"001c3423e8a4bf2ccd3e0ad3080d5cace613d42c","modified":1547003527096},{"_id":"source/lib/needsharebutton/.git/objects/9f/e80d3fee719ad9953c0e8e8dec472bb727d17d","hash":"09516f8a3f62a9e286f3ac1985969d0913d53271","modified":1547003527004},{"_id":"source/lib/needsharebutton/.git/objects/a1/5c0ab3f7ca37d06a7a3dc28f6375ac8fcaffe1","hash":"3aa24fa2254a71f9b408a01ad7154cc1cbf7cde6","modified":1547003526663},{"_id":"source/lib/needsharebutton/.git/objects/a7/df932fbaa27cde88a4e1b6b222e445d24d88a9","hash":"65ed1fff3d6ea0eed90011b6c9c892381c0b4837","modified":1547003527841},{"_id":"source/lib/needsharebutton/.git/objects/aa/f4e31e1d4ea073ad9f6926e146fea3c6d8b423","hash":"7c412d2a2243907dff0a1940f13a539675d76428","modified":1547003527408},{"_id":"source/lib/needsharebutton/.git/objects/b2/8efd888e853a00d7c8ba8fc827ddb0edb6668b","hash":"8c17e115b7c8a860650191fc1b74e7861ab0f7b9","modified":1547003527127},{"_id":"source/lib/needsharebutton/.git/objects/b4/8a9ad41dbacf220607a3854e23f2136ced96fb","hash":"81ee83b48edb7df4f08573cdd14200be5f62128a","modified":1547003526479},{"_id":"source/lib/needsharebutton/.git/objects/bf/839b1a2dfd79af314506907196f817d1d540b0","hash":"196a52782c02c03b787cca10ca172a6be6ddb8e0","modified":1547003527589},{"_id":"source/lib/needsharebutton/.git/objects/e3/096992403adfd6ad955585273915bdeae3dc32","hash":"356ee4003511e7f9c9c4badd52af674adceec2d9","modified":1547003527673},{"_id":"source/lib/needsharebutton/.git/objects/e7/169e14c00f267f49acb69c1ba41dc9a3229d36","hash":"2b79081ef52aec5ca3896894e25e330aed84ac6f","modified":1547003526955},{"_id":"source/lib/needsharebutton/.git/objects/ec/efb0da782cd6bdfbd7aec14e8e186c2010beb3","hash":"002214074d8349ca4765414ee39cbeb0a3a443d6","modified":1547003527879},{"_id":"source/lib/needsharebutton/.git/objects/eb/83c3470835cc056d65fbaec5ba59fc01a341c6","hash":"a48447a56db4dce3b2ce99fcfd4cbb5d5902877f","modified":1547003527281},{"_id":"source/lib/needsharebutton/.git/objects/ec/fd49187c43c81ad64c250eac1d63893c073e38","hash":"0e6f432ab1ec9a413655267ad3f62205e2e71f99","modified":1547003527256},{"_id":"source/lib/needsharebutton/.git/objects/f5/a400ecc881307dc0faa24170ae0a9bcbba861c","hash":"4b82935622bd12041cf7665503ae8e060705e7fd","modified":1547003526455},{"_id":"source/lib/needsharebutton/.git/objects/f5/fc2c417f7156d25437bbe069fa10645b4c3a63","hash":"377e0fce80cab14d6966371260926ee78da12b09","modified":1547003526766},{"_id":"source/lib/needsharebutton/.git/refs/heads/master","hash":"414a643b841a756253dc0c2472b2f7a6e9b14778","modified":1547003528060},{"_id":"themes/next/.git/logs/refs/remotes/origin/HEAD","hash":"3541bd67f1a2616029ecf76a7045a3391a3b5658","modified":1546931311676},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"9f73c4696f0907aa451a855444f88fc0698fa472","modified":1546931311765},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"53cde051e0337f4bf42fb8d6d7a79fa3fa6d4ef2","modified":1546931311766},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"1a0d059799a298fe17c49a44298d32cebde93785","modified":1546931311766},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d63e0cacc53dd375fcc113465a4328c59ff5f2c1","modified":1546931311766},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"0656e753f182c9f47fef7304c847b7587a85ef0d","modified":1546931311766},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"1727702eac5d326b5c81a667944a245016668231","modified":1546931311767},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"167986d0f649516671ddf7193eebba7b421cd115","modified":1546931311767},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"50450d9fdc8a2b2be8cfca51e3e1a01ffd636c0b","modified":1546931311768},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"7fe4d4d656e86276c17cb4e48a560cb6a4def703","modified":1546931311768},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"b6f3a06a94a6ee5470c956663164d58eda818a64","modified":1546931311769},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"7fb593f90d74a99c21840679933b9ef6fdc16a61","modified":1546931311769},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"f9760ecf186954cee3ba4a149be334e9ba296b89","modified":1546931311769},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"4e3838d7ac81d9ad133960f0f7ed58a44a015285","modified":1546931311770},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"8cf318644acc8b4978537c263290363e21c7f5af","modified":1546931311770},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"62fbbd32cf5a99ae550c45c763a2c4813a138d01","modified":1546931311771},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"875cbe88d5c7f6248990e2beb97c9828920e7e24","modified":1546931311771},{"_id":"themes/next/source/css/_common/components/post/post-copyright.styl","hash":"caf263d1928496688c0e1419801eafd7e6919ce5","modified":1546931311771},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"a6c6eb8adba0a090ad1f4b9124e866887f20d10d","modified":1546931311772},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"a200c0a1c5a895ac9dc41e0641a5dfcd766be99b","modified":1546931311771},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"cd9e214e502697f2f2db84eb721bac57a49b0fce","modified":1546931311772},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"d0d7a5c90d62b685520d2b47fea8ba6019ff5402","modified":1546931311773},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"ca88ea6999a61fb905eb6e72eba5f92d4ee31e6e","modified":1546931311773},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"27deb3d3a243d30022055dac7dad851024099a8b","modified":1546931311773},{"_id":"themes/next/source/css/_common/components/post/post-rtl.styl","hash":"b2495ae5e04dcca610aacadc47881d9e716cd440","modified":1546931311774},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"5a982d8ef3b3623ea5f59e63728990f5623c1b57","modified":1546931311774},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"ccb34c52be8adba5996c6b94f9e723bd07d34c16","modified":1546931311774},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"01567edaea6978628aa5521a122a85434c418bfd","modified":1546931311775},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"330ef8b93aa7fc7c577808142c86844848d70e98","modified":1546932638518},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"39f04c4c7237a4e10acd3002331992b79945d241","modified":1546931311776},{"_id":"themes/next/source/css/_common/components/post/post-widgets.styl","hash":"7968343e41f8b94b318c36289dff1196c3eb1791","modified":1546931311775},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"19e5a509ce3bfe6f747ef2b7b5088e6b8b95953d","modified":1546934127512},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"8dd9a1c6f4f6baa00c2cf01837e7617120cf9660","modified":1546931311777},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-dimmer.styl","hash":"11c22f0fb3f6beb13e5a425ec064a4ff974c13b7","modified":1546931311777},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"61f8cea3c01acd600e90e1bc2a07def405503748","modified":1546931311778},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"1153bb71edf253765145559674390e16dd67c633","modified":1546931311778},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"5ef6343835f484a2c0770bd1eb9cc443609e4c39","modified":1546931311780},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"c8fe49a4bc014c24dead05b782a7082411a4abc5","modified":1546931311779},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"a1521d48bb06d8d703753f52a198baa197af7da2","modified":1546931311779},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"e71652d3216e289c8548b1ea2357822c1476a425","modified":1546931311780},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"bba4f3bdb7517cd85376df3e1209b570c0548c69","modified":1546931311784},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"5dbeed535d63a50265d96b396a5440f9bb31e4ba","modified":1546931311785},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"a6e7d698702c2e383dde3fde2abde27951679084","modified":1546931311785},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"717cc7f82be9cc151e23a7678601ff2fd3a7fa1d","modified":1546931311786},{"_id":"themes/next/source/css/_common/components/third-party/gitment.styl","hash":"874278147115601d2abf15987f5f7a84ada1ac6b","modified":1546931311786},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"15975ba7456b96916b1dbac448a1a0d2c38b8f3d","modified":1546931311787},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"16087276945fa038f199692e3eabb1c52b8ea633","modified":1546931311787},{"_id":"themes/next/source/css/_common/components/third-party/han.styl","hash":"10599e16414a8b7a76c4e79e6617b5fe3d4d1adf","modified":1546931311787},{"_id":"themes/next/source/css/_common/components/third-party/needsharebutton.styl","hash":"28825ae15fa20ae3942cdaa7bcc1f3523ce59acc","modified":1546931311788},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"9c8196394a89dfa40b87bf0019e80144365a9c93","modified":1546931311788},{"_id":"themes/next/source/css/_common/components/tags/exturl.styl","hash":"a3bdd71237afc112b2aa255f278cab6baeb25351","modified":1546931311781},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"2fe76476432b31993338cb45cdb3b29a518b6379","modified":1546931311781},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"2ad1a2a9bbf6742d1b0762c4c623b68113d1e0fe","modified":1546931311782},{"_id":"themes/next/source/css/_common/components/tags/label.styl","hash":"2ab1322fe52ab5aafd49e68f5bd890e8380ee927","modified":1546931311782},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"f825da191816eef69ea8efb498a7f756d5ebb498","modified":1546931311781},{"_id":"themes/next/source/css/_common/components/tags/note-modern.styl","hash":"b7076e58d647265ee0ad2b461fe8ce72c9373bc5","modified":1546931311783},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"9a409b798decdefdaf7a23f0b11004a8c27e82f3","modified":1546931311783},{"_id":"themes/next/source/css/_common/components/tags/tabs.styl","hash":"154a87a32d2fead480d5e909c37f6c476671c5e6","modified":1546931311784},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"b80604868e4f5cf20fccafd7ee415c20c804f700","modified":1546931311784},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"a07aa12cc36ac5c819670c2a3c17d07ed7a08986","modified":1546931311797},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"1f09be9bb38411f0629b58c3b23873589a6dbcaa","modified":1546931311797},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"1f09be9bb38411f0629b58c3b23873589a6dbcaa","modified":1546931311800},{"_id":"themes/next/source/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1546931311818},{"_id":"themes/next/source/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1546931311818},{"_id":"themes/next/source/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1546931311818},{"_id":"themes/next/source/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1546931311819},{"_id":"themes/next/source/lib/Han/dist/font/han.woff2","hash":"623af3ed5423371ac136a4fe0e8cc7bb7396037a","modified":1546931311819},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"6394c48092085788a8c0ef72670b0652006231a1","modified":1546931311830},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1546931311829},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"b88b589f5f1aa1b3d87cc7eef34c281ff749b1ae","modified":1546931311831},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"51139a4c79573d372a347ef01a493222a1eaf10a","modified":1546931311830},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"ee948b4489aedeb548a77c9e45d8c7c5732fd62d","modified":1546931311830},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"d22b1629cb23a6181bebb70d0cf653ffe4b835c8","modified":1546931311832},{"_id":"source/lib/needsharebutton/.git/objects/da/3a5548a43813122821bf626fdd51a15f89afe3","hash":"1d8c39585806e5c7b051eb58d566a399b0e77006","modified":1547003526530},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1546931311842},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1546931311850},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"4237c6e9d59da349639de20e559e87c2c0218cfd","modified":1546931311870},{"_id":"source/_posts/Hierarchical-Object-Detection-with-Deep-Reinforcement-Learning/aeroplane20180626.png","hash":"65bdffbbd8178516e449ea7de12440908343ca36","modified":1530001472574},{"_id":"source/lib/needsharebutton/.git/logs/refs/heads/master","hash":"11ceb10b5a78e8043b879de26f5d08e245be12ce","modified":1547003528061},{"_id":"source/lib/needsharebutton/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1547003528056},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1546931311844},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1546931311849},{"_id":"themes/next/.git/objects/pack/pack-e78a63f3a09865e7250207b0905ffdead8aa9427.idx","hash":"65b50d2dffe1c5cf0a1417c27529d6a6ba27c485","modified":1546931311540},{"_id":"source/lib/needsharebutton/.git/logs/refs/remotes/origin/HEAD","hash":"11ceb10b5a78e8043b879de26f5d08e245be12ce","modified":1547003528055},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","hash":"90a1b22129efc172e2dfcceeeb76bff58bc3192f","modified":1546931311824},{"_id":"source/_posts/StackGAN-Text-to-Photo-realistic-Image-Synthesis-with-Stacked-Generative-Adversarial-Networks/StackGAN0.png","hash":"9b61a9becf29e30fb5e15860e8bd661a610e4028","modified":1550584342592},{"_id":"themes/next/source/images/background.jpeg","hash":"5e59c421081266a06a6b5699a6fc45e47f2a09d1","modified":1546955862053},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"b5483b11f8ba213e733b5b8af9927a04fec996f6","modified":1546931311847},{"_id":"themes/next/source/lib/three/three.min.js","hash":"26273b1cb4914850a89529b48091dc584f2c57b8","modified":1546931311866},{"_id":"source/love/fonts/RuiHeiXiTi.otf","hash":"4548bf710f8724ada5c5fc6c6b9acc627093885b","modified":1557912964035},{"_id":"source/love/lovebgm.mp3","hash":"ab036a633adc1eb219de9afdd0a392f6d02aeaf3","modified":1557912965282},{"_id":"themes/next/.git/objects/pack/pack-e78a63f3a09865e7250207b0905ffdead8aa9427.pack","hash":"06e88ac0b8a52ad03a9c234eec5462741115eaa8","modified":1546931311583},{"_id":"themes/next/source/images/background1 .jpg","hash":"729eba54bf08b471e4f898bbf6f9768aaeb76f54","modified":1546956727069},{"_id":"public/lib/needsharebutton/needsharebutton.css","hash":"f151bb5ba4a2cd334061bac27a1a155969b62cdb","modified":1568794082887},{"_id":"public/lib/needsharebutton/needsharebutton.js","hash":"75dee2bb4796ca66693831d769d9a105eed8c290","modified":1568794082888},{"_id":"public/love/all.min.css","hash":"9768c88b8c12622929c61ad76a8339451ad939c8","modified":1568794082939},{"_id":"public/love/index.html","hash":"68a7128fb18f25da9d17c9766a7a0249f205a9a1","modified":1568794082940},{"_id":"public/atom.xml","hash":"6c8e05084b6009c18d3ede547752d9e3e784cd15","modified":1568794082940},{"_id":"public/search.xml","hash":"1e33fe3d6ff11805b06e0878829862a8d362ec70","modified":1568794082940},{"_id":"public/archives/index.html","hash":"969416fe6a4cc567102e0531304c97fc3c177fb0","modified":1568794082953},{"_id":"public/about/index.html","hash":"b4ed5f561c2f5fd386ff9990414919b7843b0dc0","modified":1568794082953},{"_id":"public/categories/index.html","hash":"082c7caa414efa930e904cee98f5566f6fc77335","modified":1568794082953},{"_id":"public/tags/index.html","hash":"cc4554c004af7d14ee3e2b32fbd257fb8f78ada6","modified":1568794082953},{"_id":"public/schedule/index.html","hash":"9b2c10e81fb00ec0f5b263d85770020937ab9448","modified":1568794082953},{"_id":"public/lib/needsharebutton/README.html","hash":"54ef58d43a1d5a2a1468e036d73d056561fd3154","modified":1568794082953},{"_id":"public/2019/09/17/感知机/index.html","hash":"935c39c6d0bd6e7d0f8dc984c4b725fe45d620ed","modified":1568794082953},{"_id":"public/2019/09/10/统计学习三要素/index.html","hash":"1acdb75468c6bf66b9e7a7d366055e617cb71fdc","modified":1568794082953},{"_id":"public/2019/09/09/统计学习方法概论/index.html","hash":"880862f526afb0c7bcc7ee858d185ed54f75eb80","modified":1568794082953},{"_id":"public/2019/04/19/句子分块/index.html","hash":"5292154d42318b31e8785b7df0debfa08f537dd5","modified":1568794082953},{"_id":"public/2019/04/17/阿里巴巴实习生面试/index.html","hash":"a45707ea8f0d73881bdfb9372ecd0e694f039a7a","modified":1568794082954},{"_id":"public/2019/04/15/Stacked-Cross-Attention-for-Image-Text-Matching/index.html","hash":"d5138117567bcaab4bc010ed0e1c0feb59c3192a","modified":1568794082954},{"_id":"public/2019/04/10/MyIsam存储引擎/index.html","hash":"3d63afb7ddaeb8259aa7194e7131b2bd975f5941","modified":1568794082954},{"_id":"public/2019/03/30/字节跳动实习生面试/index.html","hash":"11b4bddfdb88069d50b630dd233041cb717d9ce5","modified":1568794082954},{"_id":"public/2019/04/08/代理模式/index.html","hash":"163bd88c2c5a534a62161c7e8c4502c5b74d8da2","modified":1568794082954},{"_id":"public/2019/03/06/Deep-Residual-Learning-for-Image-Recognition/index.html","hash":"220d4255d1cef28be2c3733c04d2da3cccc502fa","modified":1568794082954},{"_id":"public/2019/03/06/ZooKeeper-分布式应用程序协调服务/index.html","hash":"27338f54f69cbb8a455e6f09c52c403aa32dd083","modified":1568794082954},{"_id":"public/2019/03/05/条件生成对抗网络的一系列问题/index.html","hash":"d245caa2d59e42c88b538f89d902e862494bb568","modified":1568794082954},{"_id":"public/2019/03/04/数据库范式/index.html","hash":"f474fc96985cfb7c7adaeba2ed71dc6e68e3c4d4","modified":1568794082954},{"_id":"public/2019/02/28/垃圾收集器/index.html","hash":"85a973707e134f3e8ae751294afc82d8c8507d1c","modified":1568794082954},{"_id":"public/2019/02/27/Java并发编程基础/index.html","hash":"c3d86d7e58952effb1d35aab9700d94ede2b4b83","modified":1568794082954},{"_id":"public/2019/02/20/Java面向对象编程知识点/index.html","hash":"29628de50ade13a46a13eb3701a8c578d0d40439","modified":1568794082954},{"_id":"public/2019/02/26/Ubuntu配置shadowsocks科学上网/index.html","hash":"d6668fcc50d8514d12a2afc36c350735d182eb8b","modified":1568794082954},{"_id":"public/2019/02/19/StackGAN-Text-to-Photo-realistic-Image-Synthesis-with-Stacked-Generative-Adversarial-Networks/index.html","hash":"b747f6f6e960149a85784f5ba56783316cddcf00","modified":1568794082954},{"_id":"public/2019/02/21/面向切面编程/index.html","hash":"171f6b264b6cf8332726265421d23911cf8faa1c","modified":1568794082954},{"_id":"public/2019/02/19/Java内存模型（二）/index.html","hash":"483e1408b9f23488985631294fcff085b8758ff8","modified":1568794082955},{"_id":"public/2019/02/18/Java内存模型（一）/index.html","hash":"c98495e2c0f18f9153da33a75a9190720d089168","modified":1568794082955},{"_id":"public/2019/01/21/并发机制的底层实现原理/index.html","hash":"5dff8fcb2271317e91a912607ba93d8e875c9ca1","modified":1568794082955},{"_id":"public/2019/01/20/并发编程的挑战/index.html","hash":"68701184ea29f4ce45d79602b60ec03c7551ab9c","modified":1568794082955},{"_id":"public/2019/01/16/Kafka-分布式流平台/index.html","hash":"155d4c7b1226544bb45f71944a63ce1cc66cd2cb","modified":1568794082955},{"_id":"public/2019/01/12/垃圾收集/index.html","hash":"1af2b0a5db4126204bf5d3e4fe768b93c566f2e8","modified":1568794082955},{"_id":"public/2019/01/14/图片服务器搭建/index.html","hash":"0faa5cc152c435454a3d886736cea4ac0b5fdd0b","modified":1568794082955},{"_id":"public/2019/01/10/Java内存区域/index.html","hash":"4432b0c10105dc200dc0468d4751d789e071fdac","modified":1568794082955},{"_id":"public/2019/01/14/垃圾收集（二）/index.html","hash":"5bbf5ddabe102ad2946147862ed52fa680233557","modified":1568794082955},{"_id":"public/2019/01/08/cuda安装/index.html","hash":"057d67d4ecc1f12048a95b97a0141aa7b7f4bdfc","modified":1568794082955},{"_id":"public/2019/01/08/Hierarchical-Object-Detection-with-Deep-Reinforcement-Learning/index.html","hash":"9e499b7328d3066d5f6d0a1323fc93131835372d","modified":1568794082955},{"_id":"public/2019/01/07/Yotta系统错误记录及性能优化/index.html","hash":"8adc6a227db5cea7be9639dda344fd0054c6b908","modified":1568794082955},{"_id":"public/2018/11/07/图像文本匹配相关工作/index.html","hash":"ad923715c65119ee0551bab9421c049c949eec23","modified":1568794082955},{"_id":"public/2018/09/15/研究生数学建模：恐怖袭击事件分级/index.html","hash":"246d8089f40bfd1d6b2349ae82eb80cdeb51f973","modified":1568794082955},{"_id":"public/2018/07/10/智慧教育师范应用表格接口规范/index.html","hash":"ecfd16d6ed5de54b41270eaef8ab5f0d3d266965","modified":1568794082955},{"_id":"public/archives/page/2/index.html","hash":"bb0690fe4f41fe676302d2ae12a4d01eecb232dc","modified":1568794082956},{"_id":"public/archives/page/3/index.html","hash":"22d914e6853aceb4eb80692ba847536247a92098","modified":1568794082956},{"_id":"public/archives/page/4/index.html","hash":"d77cdfc2aedbc617f50e82bd4ba981c86aa4098f","modified":1568794082956},{"_id":"public/archives/2018/index.html","hash":"888be47d42381c34f26cb4a9b6505b5408bda0be","modified":1568794082956},{"_id":"public/archives/2018/07/index.html","hash":"a59547081c127b07ee01c6850cedfbc0a2fa89e5","modified":1568794082956},{"_id":"public/archives/2018/09/index.html","hash":"54dabd0f09d2d2addb13a3fb5dd9909c9c894097","modified":1568794082956},{"_id":"public/archives/2018/11/index.html","hash":"823c7228cb6ee71a847f2533cef37d82be2fe286","modified":1568794082956},{"_id":"public/archives/2019/index.html","hash":"7229b1a581048918fade972647fdc69bf41b6317","modified":1568794082956},{"_id":"public/archives/2019/page/2/index.html","hash":"9f760995bb7ff433eb2898411ee6c7e7f3e64a5a","modified":1568794082956},{"_id":"public/archives/2019/page/3/index.html","hash":"3010b956967bdfe37eae331e394093f384c5c151","modified":1568794082956},{"_id":"public/archives/2019/page/4/index.html","hash":"1c38f6e18acb2e07024978535877e7cd5efcf3aa","modified":1568794082956},{"_id":"public/archives/2019/01/index.html","hash":"0ee366bc7632fb90b4da84c9a840bcc9c2f0e054","modified":1568794082956},{"_id":"public/archives/2019/02/index.html","hash":"600539f5e27a27a19086093926fd1b7e3fc7ff0b","modified":1568794082956},{"_id":"public/archives/2019/03/index.html","hash":"ea7ab54cdc48fa5cb28831bf19c1a7e0733d4a65","modified":1568794082956},{"_id":"public/archives/2019/04/index.html","hash":"7cb1d7f71f07099d8d4e9f9f3485f2df0b92c9fc","modified":1568794082956},{"_id":"public/archives/2019/09/index.html","hash":"30c780f38ff20f3a74a645e7b830388fe7bb7f42","modified":1568794082956},{"_id":"public/categories/科研/index.html","hash":"cd722a2cc09dbb159c8efdbad8e6ca8e8e137c12","modified":1568794082956},{"_id":"public/categories/深入理解Java虚拟机/index.html","hash":"fa37df08942612d1f53af2306d9c3fe3b0ce7334","modified":1568794082957},{"_id":"public/categories/Java并发编程/index.html","hash":"f2aa2255ae8c2c7b247ee3557fa43b8f53f542d2","modified":1568794082957},{"_id":"public/categories/kafka/index.html","hash":"539a087bba57195d30e9e20302b169dcc98294b3","modified":1568794082957},{"_id":"public/categories/工作/index.html","hash":"cc5d57e61688909ebfadfd6663fa68bdf726dd61","modified":1568794082957},{"_id":"public/categories/数据库/index.html","hash":"ad791310d56cdfc1d86c1d7344702dc0a8f80d5f","modified":1568794082957},{"_id":"public/categories/工程/index.html","hash":"671e659b2df3e308b841e4e97463f2c8016e1f93","modified":1568794082957},{"_id":"public/categories/ZooKeeper/index.html","hash":"85b5f1bcd31ff540342cac28b8a7b80b4ef5598b","modified":1568794082957},{"_id":"public/categories/统计学习/index.html","hash":"9cb02aeeef48f6f053662bced0cab2ba262fbc48","modified":1568794082957},{"_id":"public/categories/设计模式/index.html","hash":"40cf6275b167bc1f75779f04a1a7b723441bd348","modified":1568794082958},{"_id":"public/categories/竞赛/index.html","hash":"61b056d806a0acb80551e61c8d965a1297685182","modified":1568794082958},{"_id":"public/categories/Spring-Boot/index.html","hash":"cf6199b5614ecae2df4d49122a46b5cdf0862b03","modified":1568794082958},{"_id":"public/index.html","hash":"7a63b8c50493c0b74352d8d7769976667ed07809","modified":1568794082958},{"_id":"public/page/2/index.html","hash":"14d231a83fa290e1dc7ae21693e0d2dd552aac29","modified":1568794082959},{"_id":"public/page/3/index.html","hash":"5101baf7adc038dd029587b2b821827a42c48d70","modified":1568794082959},{"_id":"public/page/4/index.html","hash":"af3c9b1984babb1a96ee1bb37f5bb2661214ae86","modified":1568794082959},{"_id":"public/tags/图像识别/index.html","hash":"b35fbcce21194edc5565909df19e9f5dd35c48db","modified":1568794082959},{"_id":"public/tags/残差网络/index.html","hash":"196688dc64198111a65c3c6dcc35973bf41afd3c","modified":1568794082959},{"_id":"public/tags/神经网络/index.html","hash":"41e0c58ea109e9950c0ae562c9653a480d03c07c","modified":1568794082959},{"_id":"public/tags/论文阅读/index.html","hash":"8fdf29debe49b64befe9eea8e6f1d4e197961740","modified":1568794082959},{"_id":"public/tags/Java堆/index.html","hash":"ae98498688c4a871e88f77f456af6ce04257396f","modified":1568794082959},{"_id":"public/tags/方法区/index.html","hash":"5eeb4731062e2f7442069f36984829e5e61d9873","modified":1568794082960},{"_id":"public/tags/Java虚拟机栈/index.html","hash":"5a64fbca92e4294cc44156359ce7ffa6bfc5aab8","modified":1568794082961},{"_id":"public/tags/对象检测/index.html","hash":"66e22f420cd1470fb01cadd1329149394da0dc5c","modified":1568794082961},{"_id":"public/tags/Java内存模型/index.html","hash":"822c0b6af2779b70aa86388aca285558fd337441","modified":1568794082961},{"_id":"public/tags/共享内存/index.html","hash":"6b84f597886ee11b21817419776355dfaac00fdc","modified":1568794082961},{"_id":"public/tags/happens-before/index.html","hash":"08821d05c8b1cb94e1ea5aa8a129674b839956fe","modified":1568794082961},{"_id":"public/tags/指令重排序/index.html","hash":"1878de0a8cbe0d89d9ffbee26e4f9b4e91868dcb","modified":1568794082961},{"_id":"public/tags/重排序/index.html","hash":"b07361ec28dd2be13bd2800979ccd898d6a0dec9","modified":1568794082961},{"_id":"public/tags/数据依赖性/index.html","hash":"e6b04049eca1300af27b1bbd3ecde4ea873be322","modified":1568794082961},{"_id":"public/tags/顺序一致性/index.html","hash":"7747013ab13f343ed3178d738831ffc575208fbc","modified":1568794082962},{"_id":"public/tags/Java/index.html","hash":"ff5f1ae916e1b08f4c683f4af4245aa20a785acb","modified":1568794082962},{"_id":"public/tags/多线程/index.html","hash":"586e48869f0a8b3948dae20f996a259efce457a4","modified":1568794082962},{"_id":"public/tags/线程/index.html","hash":"662021e99c7a771adb2a9fbf4012f8f8499305b5","modified":1568794082963},{"_id":"public/tags/synchronized/index.html","hash":"f65f5c720ddc88d36a4f1ad0664a5769fb524522","modified":1568794082963},{"_id":"public/tags/volatile/index.html","hash":"e19ede67fb45e48f94c0f8a24fcafea61b87d351","modified":1568794082963},{"_id":"public/tags/kafka/index.html","hash":"0806b564a182854c60824bfcb556238beaa55867","modified":1568794082963},{"_id":"public/tags/开源软件/index.html","hash":"c749dc3a1e1e38895e89e7000edb0eb90c912fc2","modified":1568794082964},{"_id":"public/tags/面向对象/index.html","hash":"c6e63f9391b9507123b1e6e1f7536b16b761bc35","modified":1568794082964},{"_id":"public/tags/MyIsam/index.html","hash":"586141bde0aaec6821912454284249cb684ca58a","modified":1568794082964},{"_id":"public/tags/数据库/index.html","hash":"2b09353da7ff400d895e935459b632fff0c7216b","modified":1568794082964},{"_id":"public/tags/问题/index.html","hash":"bf7b5ed0c5b8a757df108e4b95f23fbf632d69d6","modified":1568794082965},{"_id":"public/tags/text2image/index.html","hash":"e16363c0701dbfc5d2e5f43e7e922988f3e6a7b0","modified":1568794082965},{"_id":"public/tags/图像合成/index.html","hash":"89389df84bc6411fd57ff1a1e7575af3b8a6dcbe","modified":1568794082965},{"_id":"public/tags/生成对抗网络/index.html","hash":"e0a142fd8ddc5892481c15653fc2b865fe9d599f","modified":1568794082965},{"_id":"public/tags/图文匹配/index.html","hash":"2842f0cdd0cf56800ad0c36c3ea702245bfbffd0","modified":1568794082965},{"_id":"public/tags/Ubuntu/index.html","hash":"926b16ab57e51d3e7e3e7a49d8a5bba20d9e81c4","modified":1568794082965},{"_id":"public/tags/shadowsocks/index.html","hash":"9fa4ca3d63df0ab9c6f60e654dd9221f65dbc5ec","modified":1568794082965},{"_id":"public/tags/科学上网/index.html","hash":"c2e0989903cb4fd2161993dd5a9343393dd70ab2","modified":1568794082965},{"_id":"public/tags/代理/index.html","hash":"4a74905bb3d3621d482cf1ad5f18c36eac2a2c6f","modified":1568794082965},{"_id":"public/tags/proxy/index.html","hash":"7649ea7d6bc930fd1f1dcc2492f2448faa8b73d1","modified":1568794082965},{"_id":"public/tags/ZooKeeper/index.html","hash":"0cbbb9240f6c2db1af8bc2cea84d2ea65e48bc0f","modified":1568794082965},{"_id":"public/tags/yotta系统/index.html","hash":"1ba465a0a238d62e5c3b12bddc0e68beaa67c792","modified":1568794082966},{"_id":"public/tags/环境配置/index.html","hash":"c4acf4dceb1f3a024556cb4ef05195449e90e096","modified":1568794082966},{"_id":"public/tags/软件安装/index.html","hash":"d594fb6421b93235a49437b65d3d56dc695d0196","modified":1568794082966},{"_id":"public/tags/动态代理/index.html","hash":"48d55527b393526a41692757683bc370fec383df","modified":1568794082966},{"_id":"public/tags/静态代理/index.html","hash":"a205c4888a731b192074fbac7153cb7e15deade4","modified":1568794082966},{"_id":"public/tags/nginx/index.html","hash":"776caef43e22ad8b991c336fa51bdc6f36823c51","modified":1568794082966},{"_id":"public/tags/自然语言处理/index.html","hash":"78b546e491b9cd44b5009e0a9f058782d676ce5c","modified":1568794082966},{"_id":"public/tags/chunk/index.html","hash":"e9ebaa0e419093fdd1dce74b6cefe5742348d915","modified":1568794082966},{"_id":"public/tags/NLTK/index.html","hash":"521dc510fdda294bda699d4c253ae2fbb73ef246","modified":1568794082966},{"_id":"public/tags/典型相关分析/index.html","hash":"ee2ebb5559ed50c44d0bc542a59bf4168ceab227","modified":1568794082966},{"_id":"public/tags/排序损失/index.html","hash":"d869bca51721f05fc79c01c181cfa742adb862f9","modified":1568794082966},{"_id":"public/tags/数据集/index.html","hash":"e6ab2e23c32a39fe0a76357f1d35fa26e077a4ea","modified":1568794082966},{"_id":"public/tags/内存分配策略/index.html","hash":"79b7f37e2cd42653444ffd883fea8431d5f1d409","modified":1568794082966},{"_id":"public/tags/引用计数法/index.html","hash":"c5a264e77d09866a11f82122cb90d55ea65d0aa7","modified":1568794082966},{"_id":"public/tags/可达性算法/index.html","hash":"9cd2da4251d9bb573eaba49e3de6ee9093971659","modified":1568794082966},{"_id":"public/tags/实习/index.html","hash":"3d5d9b8440fe2e87371a7160e50ee8657d772091","modified":1568794082966},{"_id":"public/tags/字节跳动/index.html","hash":"7607e6436ffe93a74adc12459228f7e7117421d5","modified":1568794082966},{"_id":"public/tags/面试/index.html","hash":"53ed806abe41bd17ff3c41355c446a2181dbfc77","modified":1568794082967},{"_id":"public/tags/原子操作/index.html","hash":"46b72fa54ff840b00c51b15512b189a0d7e5434a","modified":1568794082967},{"_id":"public/tags/上下文切换/index.html","hash":"5ecbd49b4fe718422e6d969c161d4f5a22a6ef67","modified":1568794082967},{"_id":"public/tags/死锁/index.html","hash":"da652dd0da887fb579fa2414247bd1fc25569e61","modified":1568794082967},{"_id":"public/tags/MySQL/index.html","hash":"9a5fc005669aa33f9010bca804faf47538e77f8d","modified":1568794082967},{"_id":"public/tags/范式/index.html","hash":"06b6f62669f3404fd785e5d1e00943b4abdbb6f4","modified":1568794082967},{"_id":"public/tags/智慧教育系统/index.html","hash":"e97ba5e2b612c17ff5a5a665f7616c3363458bf8","modified":1568794082967},{"_id":"public/tags/编程/index.html","hash":"00c844710bce9274fa808804e48b52d0e09bc665","modified":1568794082967},{"_id":"public/tags/阿里巴巴/index.html","hash":"f831e0ac407f75a54571c8cbaa721eb73ee8052d","modified":1568794082967},{"_id":"public/tags/蚂蚁金服/index.html","hash":"c15dab55c2513e5d1cda01081f61d534193b1420","modified":1568794082967},{"_id":"public/tags/Spring/index.html","hash":"490487dc0760e1c12f369ab38ed64866c884d39e","modified":1568794082967},{"_id":"public/tags/Spring-Boot/index.html","hash":"f3558f334d9f65c905c76da3776a67fbc158d0fb","modified":1568794082967},{"_id":"public/tags/AOP/index.html","hash":"fd97f70a3df3acc95f3c463aa7c5f0fdbbe9223a","modified":1568794082967},{"_id":"public/tags/面向切面编程/index.html","hash":"cb7a25c47b60defeea2184141da5c168af9e3926","modified":1568794082967},{"_id":"public/tags/垃圾收集器/index.html","hash":"ed3640397ab82a06caa41b5975d3dbe999331f7e","modified":1568794082967},{"_id":"public/tags/垃圾收集算法/index.html","hash":"72bdf5c90171474dc1def6cf90fabf342bee0790","modified":1568794082967},{"_id":"public/tags/安全点/index.html","hash":"de9d591438de26270dcdb16fc30d3ad7feb61c83","modified":1568794082967},{"_id":"public/tags/安全区域/index.html","hash":"dc09a34de70ea71d2a768e15bdc210c4b89669c3","modified":1568794082967},{"_id":"public/lib/needsharebutton/LICENSE","hash":"336611e76f0638d3d8aeca6b1b97138d2a07523f","modified":1568794083004},{"_id":"public/love/iali53.jpg","hash":"a63228d962e41ab1f76a28b1173de29875e18116","modified":1568794083004},{"_id":"public/uploads/avatar.jpg","hash":"3a8b10d909343504c95e2c9a39f2adbe86803fd9","modified":1568794083005},{"_id":"public/love/README.txt","hash":"3575875d2e0bea639d0ef59bdc890da9fc3d23f6","modified":1568794083005},{"_id":"public/love/img/319280.jpg","hash":"f72bf5e125d5ca2a2df038cf4750ddcc94d2f1ea","modified":1568794083005},{"_id":"public/love/img/319280_bg.xcf","hash":"a9194894587aaeef5203552972dc9ada53d987d2","modified":1568794083005},{"_id":"public/love/img/iali14.jpg","hash":"d79c8dd4a8031f8088a217fe382f3009077370e7","modified":1568794083005},{"_id":"public/love/img/iali18.jpg","hash":"a7025cd23cd3d7d2c478a5d7dd0f423c66fef064","modified":1568794083005},{"_id":"public/love/img/iali21.jpg","hash":"847acd84618413ca82e4458a8b67409d205fb982","modified":1568794083005},{"_id":"public/love/img/iali22.jpg","hash":"5b2072b8a6892f5ed77e79403d5cd7ddaa4a2350","modified":1568794083005},{"_id":"public/love/img/iali22_bg.jpg","hash":"0e84a31a3e6e594539491e20e28712c508720fc1","modified":1568794083005},{"_id":"public/love/img/iali25.jpg","hash":"d58eb17cb865eba47c23e605cfca2bee3096b53b","modified":1568794083005},{"_id":"public/love/img/iali29.jpg","hash":"0b894bdd216166ada8e52effd2e8d1a58195b6af","modified":1568794083005},{"_id":"public/love/img/iali2_bg.jpg","hash":"1d675783a95a3acbea2e289492c7d728839ee12f","modified":1568794083005},{"_id":"public/love/img/iali30_1.jpg","hash":"1991f3d22129e2d409215ca3d6534fe9b536f081","modified":1568794083005},{"_id":"public/love/img/iali30_2.jpg","hash":"1b74938d72f509d56b57837351708e49af7a68db","modified":1568794083005},{"_id":"public/love/img/iali32.jpg","hash":"07ea3165c1ce80fe843993f1ec0edb620c40b8f5","modified":1568794083005},{"_id":"public/love/img/iali37.jpg","hash":"34c28dc3ea44311b77fb85a73e8302dd104c2b4c","modified":1568794083005},{"_id":"public/love/img/iali40_bg.jpg","hash":"bdfa61de0c2fbbe2c24f7ae05c5b7ecdde17b435","modified":1568794083005},{"_id":"public/love/img/iali40.jpg","hash":"e449dc02a1224cdbcf360664afcc2017668517eb","modified":1568794083005},{"_id":"public/love/img/iali44.jpg","hash":"969e0462aff9ef2b4821637622eb21343f36a8bb","modified":1568794083005},{"_id":"public/love/img/iali45_bg.jpg","hash":"6ddbdd59efade1ba91faec55d807214ac2f9c4fc","modified":1568794083005},{"_id":"public/love/img/iali46.jpg","hash":"021b7f7d3aabaae782b11a8e6bc381a4f1dc28ae","modified":1568794083005},{"_id":"public/love/img/iali49.jpg","hash":"374c283bd3854c5447769445f92ddee87ea51829","modified":1568794083005},{"_id":"public/love/img/iali5.jpg","hash":"689ca2597e2a21e16adeb15dad3b71c548a6f767","modified":1568794083005},{"_id":"public/love/img/iali50_1.jpg","hash":"1fc91eb52004ec5f44d1253fec4101f113b79191","modified":1568794083005},{"_id":"public/love/img/iali50_2.jpg","hash":"90bb0c22d386226d4548139ad550e98f7d44c137","modified":1568794083006},{"_id":"public/love/img/iali51.jpg","hash":"4237ec611653ef3a533a42db7866511f861eeac2","modified":1568794083006},{"_id":"public/love/img/iali52.jpg","hash":"2297b38c81238d663df85f199a3cbf49e556e266","modified":1568794083006},{"_id":"public/love/img/iali53.jpg","hash":"a63228d962e41ab1f76a28b1173de29875e18116","modified":1568794083006},{"_id":"public/love/img/iali59_bg.jpg","hash":"1f5857b1101054d3508fdb0fdd932b7f69a107a1","modified":1568794083006},{"_id":"public/love/img/iali60.jpg","hash":"7d317c133f8fa6b43a5db6ae05f602171f936200","modified":1568794083006},{"_id":"public/love/img/iali64.jpg","hash":"8889d12f77e314695015c8dc1600f3dba6611627","modified":1568794083006},{"_id":"public/love/img/iali65.jpg","hash":"5a10f195c4446e301c8fc6d3ef16cfed2b467d9a","modified":1568794083006},{"_id":"public/love/img/iali66.jpg","hash":"6811c054c81eae54fb91a5fa37fe690dd2d81a01","modified":1568794083006},{"_id":"public/love/img/iali67.jpg","hash":"6cc221ac1d9c122ac37d5a6870cffd399dbc832a","modified":1568794083006},{"_id":"public/love/img/iali68.jpg","hash":"4f9b372a9a78c022161b2e2e7971d72ae1512f76","modified":1568794083007},{"_id":"public/love/img/iali69.jpg","hash":"4343b2f39f06d9205d9c747eda8b84bf3c1feef4","modified":1568794083007},{"_id":"public/love/img/iali71.jpg","hash":"23d7497679a04752731290a6581910e91ddd4ce3","modified":1568794083007},{"_id":"public/love/img/iali75.jpg","hash":"bb6c364defc94b771e65722ff5c50290477e0586","modified":1568794083008},{"_id":"public/love/img/iali75_bg.jpg","hash":"aca5f35fa98bd280af9e0557f16088637e0597a0","modified":1568794083008},{"_id":"public/love/img/iali77.jpg","hash":"a0524b4e2d05cf4da9c54f01b6f00c1db2c956ba","modified":1568794083008},{"_id":"public/love/img/iali9.jpg","hash":"8bb90a242e627239d7e3dd9c61d5fe533ca3aaf6","modified":1568794083008},{"_id":"public/love/img/music.png","hash":"c38b5670cae1fa5b49773bf92f501fcf82127aee","modified":1568794083008},{"_id":"public/love/img/mute.png","hash":"4a9a7e737efca122e80144a578b43713467b729c","modified":1568794083008},{"_id":"public/love/img/iali76_bg.png","hash":"ddab1225e5be8511b991e4dea6aab4d3a1dbe920","modified":1568794083008},{"_id":"public/images/algolia_logo.svg","hash":"45eeea0b5fba833e21e38ea10ed5ab385ceb4f01","modified":1568794083008},{"_id":"public/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1568794083008},{"_id":"public/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1568794083008},{"_id":"public/images/cc-by-nc-nd.svg","hash":"bc3588c9b2d7c68830524783120ff6cf957cf668","modified":1568794083008},{"_id":"public/images/cc-by-nc.svg","hash":"6f076713fb9bf934aa2c1046bdf2cf2e37bc1eab","modified":1568794083009},{"_id":"public/images/cc-by-nc-sa.svg","hash":"6f55543d1fb9cbc436c101d24f802dec7b41efc3","modified":1568794083010},{"_id":"public/images/cc-by-nd.svg","hash":"42cd73da328077ccc92f859bb8f3cf621b3484f8","modified":1568794083010},{"_id":"public/images/cc-by-sa.svg","hash":"70c1535f43e54e5ff35ca81419e77e4c0c301398","modified":1568794083010},{"_id":"public/images/cc-by.svg","hash":"e92a33c32d1dac8ed94849b2b4e6456e887efe70","modified":1568794083010},{"_id":"public/images/cc-zero.svg","hash":"9bfb52b2f63527a7049247bf00d44e6dc1170e7d","modified":1568794083010},{"_id":"public/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1568794083010},{"_id":"public/images/favicon-16x16-next.png","hash":"f758551578586d4c335c2ceb1928f878125cdd3a","modified":1568794083010},{"_id":"public/images/logo.svg","hash":"169f56fd82941591dad3abd734a50ec7259be950","modified":1568794083010},{"_id":"public/images/quote-l.svg","hash":"cd108d6f44351cadf8e6742565217f88818a0458","modified":1568794083010},{"_id":"public/images/favicon-32x32-next.png","hash":"e2078acbe8265d178e435816fdbfebd152ad775d","modified":1568794083010},{"_id":"public/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1568794083010},{"_id":"public/images/quote-r.svg","hash":"2a2a250b32a87c69dcc1b1976c74b747bedbfb41","modified":1568794083010},{"_id":"public/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1568794083010},{"_id":"public/love/img/14915.jpg","hash":"00d3d2a34b2df1c21396f702187386dd494dd278","modified":1568794083010},{"_id":"public/love/img/iali10.gif","hash":"5823109c7c954f3b3916f4b818b264a7151326ed","modified":1568794083010},{"_id":"public/lib/font-awesome/HELP-US-OUT.txt","hash":"ee33b2798b1e714b904d663436c6b3521011d1fa","modified":1568794083011},{"_id":"public/lib/fastclick/LICENSE","hash":"6f474ea75c42442da7bbcf2e9143ce98258efd8d","modified":1568794083011},{"_id":"public/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1568794083011},{"_id":"public/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1568794083011},{"_id":"public/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1568794083011},{"_id":"public/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1568794083011},{"_id":"public/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1568794083011},{"_id":"public/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1568794083011},{"_id":"public/lib/font-awesome/css/font-awesome.css.map","hash":"1573904b82807abbb32c97a3632c6c6808eaac50","modified":1568794083011},{"_id":"public/lib/Han/dist/font/han-space.otf","hash":"07436f011b44051f61b8329c99de4bec64e86f4b","modified":1568794083011},{"_id":"public/lib/Han/dist/font/han-space.woff","hash":"7a635062b10bf5662ae1d218ba0980171005d060","modified":1568794083011},{"_id":"public/lib/Han/dist/font/han.otf","hash":"f1f6bb8f461f5672e000380195d3d2358a28494c","modified":1568794083011},{"_id":"public/lib/Han/dist/font/han.woff","hash":"f38ff9b2eecaa17b50b66aa2dae87e9e7436d195","modified":1568794083011},{"_id":"public/lib/Han/dist/font/han.woff2","hash":"623af3ed5423371ac136a4fe0e8cc7bb7396037a","modified":1568794083011},{"_id":"public/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1568794083011},{"_id":"public/2019/01/10/Java内存区域/运行时内存.png","hash":"baf9402ec89bba23a940cb4e08590843782b316d","modified":1568794083011},{"_id":"public/2019/02/18/Java内存模型（一）/jmm1.png","hash":"de5f3510cf3a2a5973f7d68f7dc2df35939c19a0","modified":1568794083011},{"_id":"public/2019/01/16/Kafka-分布式流平台/kafka1.png","hash":"db05a0e4670fa46ecbc4b7debb0c540f8fd3cefc","modified":1568794083011},{"_id":"public/2019/01/16/Kafka-分布式流平台/kafka2.png","hash":"aa8af0c247050e7010dc89f15039b4e57f657317","modified":1568794083011},{"_id":"public/2019/01/08/cuda安装/cuda0.png","hash":"189f4dc48bfa8f7ecb2eb7ad5b9f21e826fc2b52","modified":1568794083011},{"_id":"public/2019/01/16/Kafka-分布式流平台/kafka3.png","hash":"2611ebf944893031406f3a0610f786e61629f601","modified":1568794083011},{"_id":"public/2019/01/08/cuda安装/cuda1.png","hash":"1edb9dcbb613f34df76a694573089a8c2076a72d","modified":1568794083011},{"_id":"public/2019/01/08/cuda安装/cuda3.png","hash":"30c042bd4489d67ce2f07de14bad4a96fd494d48","modified":1568794083012},{"_id":"public/2019/01/08/Hierarchical-Object-Detection-with-Deep-Reinforcement-Learning/error2.png","hash":"b69a5ee5e007d2f5125c42c658174849d259584c","modified":1568794083012},{"_id":"public/2019/01/08/Hierarchical-Object-Detection-with-Deep-Reinforcement-Learning/vgg16.png","hash":"2100660af641648c8946db7d6e69e015c06b4f57","modified":1568794083012},{"_id":"public/2019/01/08/Hierarchical-Object-Detection-with-Deep-Reinforcement-Learning/error1.png","hash":"c5d0e6502253f7ab42596f152d0308c3444b1def","modified":1568794083012},{"_id":"public/2019/01/14/图片服务器搭建/1.png","hash":"e15e8265d220afb6c695e1a57687cd809072f6f3","modified":1568794083012},{"_id":"public/2019/01/14/图片服务器搭建/2.png","hash":"53fd24ae9110b87845643b746f0999112a5d5a0c","modified":1568794083012},{"_id":"public/2019/01/14/图片服务器搭建/3.png","hash":"27496851ffb960924ebbb3730e372341eba4bd47","modified":1568794083012},{"_id":"public/2019/01/14/图片服务器搭建/4.png","hash":"b8566bb0467ddb3e451645e919f0b8410a767842","modified":1568794083012},{"_id":"public/2019/02/26/Ubuntu配置shadowsocks科学上网/科学上网1.png","hash":"e4cb9500bc0918240ebc06c340f78fc801e1f883","modified":1568794083012},{"_id":"public/2019/02/26/Ubuntu配置shadowsocks科学上网/科学上网2.png","hash":"9672dd2e5d7cc7d5df93e4618126eb59a19aee8e","modified":1568794083013},{"_id":"public/2019/02/26/Ubuntu配置shadowsocks科学上网/科学上网3.png","hash":"72d8772379d15d94123f6574d3834a34b45ede6c","modified":1568794083013},{"_id":"public/2019/02/26/Ubuntu配置shadowsocks科学上网/科学上网4.png","hash":"2cea4a50347da1ccc79b8c77fb4f215303dd3e61","modified":1568794083013},{"_id":"public/2019/02/26/Ubuntu配置shadowsocks科学上网/科学上网5.png","hash":"e3507505d10e5939979c5dda015872e3f631b8f4","modified":1568794083013},{"_id":"public/2019/02/26/Ubuntu配置shadowsocks科学上网/科学上网6.png","hash":"fbf26594c3c4e34c1fdb2693902551724c37d87b","modified":1568794083013},{"_id":"public/2019/02/26/Ubuntu配置shadowsocks科学上网/科学上网7.png","hash":"77f9e9ef0c14046e5c7118272288eeab0241dedf","modified":1568794083013},{"_id":"public/2019/01/14/垃圾收集（二）/gc1.png","hash":"a1a59c2c8d8b1dd15ef7f7c4280ea51d47c1c882","modified":1568794083013},{"_id":"public/2019/01/14/垃圾收集（二）/gc2.png","hash":"8a5410a72449adafa7124296a36f71d722461e4f","modified":1568794083013},{"_id":"public/2019/01/14/垃圾收集（二）/gc3.png","hash":"6656d70706fb62af23ada8d39590521837195577","modified":1568794083013},{"_id":"public/2019/02/28/垃圾收集器/垃圾收集器2.jpg","hash":"491c2d69e0b6e5a5109e515b24def04a105acf9b","modified":1568794083013},{"_id":"public/2019/02/28/垃圾收集器/垃圾收集器3.jpg","hash":"3146f9649331e1436771e9a6102d3e9881b89888","modified":1568794083013},{"_id":"public/2019/02/28/垃圾收集器/垃圾收集器4.jpg","hash":"491c2d69e0b6e5a5109e515b24def04a105acf9b","modified":1568794083013},{"_id":"public/2019/02/28/垃圾收集器/垃圾收集器5.png","hash":"712edc47de215f66bf4e0dd2217980a0b882fca9","modified":1568794083013},{"_id":"public/love/img/iali0.jpg","hash":"0f1909fe6fbe8677ad396c788595fd44fa89ad20","modified":1568794083599},{"_id":"public/love/img/iali11.jpg","hash":"a841952c6768d5b32155f19b990a6870b2e5ee66","modified":1568794083602},{"_id":"public/love/img/iali12.jpg","hash":"ce03499b74e6e5120da5a72bcaf0dbb23b0a5f00","modified":1568794083603},{"_id":"public/love/img/iali16.jpg","hash":"39637a54fe8c6266e4ffa1a871641b2612aee1e9","modified":1568794083603},{"_id":"public/love/img/iali19.jpg","hash":"b5d14596c74f4f9b1b10328b0f09f45b584c7807","modified":1568794083603},{"_id":"public/love/img/iali2.jpg","hash":"520f70c845d9d173101a81bbd06f7e2a9e303ce1","modified":1568794083603},{"_id":"public/love/img/iali20.jpg","hash":"dfb879a90bc421b2ab180c41c5b0a3388e1adff7","modified":1568794083603},{"_id":"public/love/img/iali3.jpg","hash":"bf88742b21f7195ce0386615b1d450c61f3b73e5","modified":1568794083603},{"_id":"public/love/img/iali31.jpg","hash":"b22cd62d9d96ea02bc998d9caff181dcc86ee3b6","modified":1568794083603},{"_id":"public/love/img/iali35.jpg","hash":"3374c0c905ac048f3ce91ccba1ec03df99f4a720","modified":1568794083604},{"_id":"public/love/img/iali4.jpg","hash":"c3aec01dbe39155c192807f063f9cb97aad57864","modified":1568794083604},{"_id":"public/love/img/iali42.jpg","hash":"79aa4ffc9135d26ddffce0631ed68d97d1dc2c98","modified":1568794083604},{"_id":"public/love/img/iali45.jpg","hash":"f1fdb224da6d1262390c7b82aa54b0d0ae1706a1","modified":1568794083604},{"_id":"public/love/img/iali57.gif","hash":"ad48eff3de287151c24f9e6da198c9a56a65c6ea","modified":1568794083604},{"_id":"public/love/img/iali57.jpg","hash":"2ffbec4ee1a9f5a3df88790535f1290037bed199","modified":1568794083604},{"_id":"public/love/img/iali58.jpg","hash":"23288745739d16a42b447f36f8faba944031fba1","modified":1568794083604},{"_id":"public/love/img/iali6.jpg","hash":"7f9ff9477d2adf52600da01ba7439bc6b8e6935a","modified":1568794083604},{"_id":"public/love/img/iali62.jpg","hash":"95678f17dbda18aacc78966c7921c4f23aa4b847","modified":1568794083604},{"_id":"public/love/img/iali63.jpg","hash":"da3de1fe8c2c49dec062b3a7ab7b99d096f6d865","modified":1568794083604},{"_id":"public/love/img/iali76.gif","hash":"e64c5994f781810a2ecb4878bab7c2991d2fe6b0","modified":1568794083604},{"_id":"public/love/img/iali8.gif","hash":"1021b934aa457e8e14fa015d4e45aa5e13c2c72a","modified":1568794083604},{"_id":"public/love/img/iali8_bg.png","hash":"ead96b2f80f73704e3d569348f60de100732c40c","modified":1568794083604},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1568794083604},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1568794083605},{"_id":"public/2019/02/19/StackGAN-Text-to-Photo-realistic-Image-Synthesis-with-Stacked-Generative-Adversarial-Networks/StackGAN.png","hash":"6b1f7819e176fa20168ff30df3e8f15c3344acc7","modified":1568794083605},{"_id":"public/2019/01/08/Hierarchical-Object-Detection-with-Deep-Reinforcement-Learning/Hierarchical-Object-Detection-Models.png","hash":"8492971175dfe4f2c652e6ca938e959c51214f42","modified":1568794083605},{"_id":"public/2019/01/14/图片服务器搭建/5.png","hash":"e71316a8358c36798a81731360c8a01df7bee582","modified":1568794083605},{"_id":"public/2019/02/28/垃圾收集器/垃圾收集器1.jpg","hash":"50794d533e17cc03d9d6bb048e25c8a471d65ab8","modified":1568794083605},{"_id":"public/js/custom/love.min.js","hash":"af70e42be36de5353251c31f97c6281af578f820","modified":1568794083632},{"_id":"public/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1568794083632},{"_id":"public/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1568794083632},{"_id":"public/js/src/bootstrap.js","hash":"034bc8113e0966fe2096ba5b56061bbf10ef0512","modified":1568794083632},{"_id":"public/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1568794083632},{"_id":"public/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1568794083633},{"_id":"public/js/src/js.cookie.js","hash":"9b37973a90fd50e71ea91682265715e45ae82c75","modified":1568794083633},{"_id":"public/js/src/post-details.js","hash":"a13f45f7aa8291cf7244ec5ba93907d119c5dbdd","modified":1568794083633},{"_id":"public/js/src/scroll-cookie.js","hash":"09dc828cbf5f31158ff6250d2bf7c3cde6365c67","modified":1568794083633},{"_id":"public/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1568794083633},{"_id":"public/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1568794083633},{"_id":"public/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1568794083633},{"_id":"public/lib/canvas-ribbon/canvas-ribbon.js","hash":"ff5915eb2596e890a2fc6697c864f861a1995ec0","modified":1568794083633},{"_id":"public/lib/font-awesome/bower.json","hash":"64394a2a9aa00f8e321d8daa5e51a420f0e96dad","modified":1568794083633},{"_id":"public/lib/fastclick/bower.json","hash":"4dcecf83afddba148464d5339c93f6d0aa9f42e9","modified":1568794083633},{"_id":"public/lib/jquery_lazyload/bower.json","hash":"ae3c3b61e6e7f9e1d7e3585ad854380ecc04cf53","modified":1568794083633},{"_id":"public/lib/pace/pace-theme-big-counter.min.css","hash":"5b561dc328af4c4d512e20a76fe964d113a32ba8","modified":1568794083633},{"_id":"public/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1568794083633},{"_id":"public/lib/pace/pace-theme-bounce.min.css","hash":"f6bdb9a785b7979dd8ec5c60e278af955ef1e585","modified":1568794083633},{"_id":"public/lib/pace/pace-theme-barber-shop.min.css","hash":"ee0d51446cb4ffe1bb96bd7bc8c8e046dddfcf46","modified":1568794083633},{"_id":"public/lib/pace/pace-theme-center-atom.min.css","hash":"dcf79c24fe5350fb73d8038573a104e73639e9d3","modified":1568794083633},{"_id":"public/lib/pace/pace-theme-center-circle.min.css","hash":"a4066769c78affbfbc5e30a600e2c7862cd532e0","modified":1568794083633},{"_id":"public/lib/pace/pace-theme-center-simple.min.css","hash":"67f44c947548bd4d77e7590d3f59e236cbf9e98a","modified":1568794083633},{"_id":"public/lib/pace/pace-theme-center-radar.min.css","hash":"ab7cba998bf4c03b13df342bf43647fa4f419783","modified":1568794083633},{"_id":"public/lib/pace/pace-theme-corner-indicator.min.css","hash":"b3c64c973f31884e3d8145989476707333406b9a","modified":1568794083633},{"_id":"public/lib/pace/pace-theme-flash.min.css","hash":"13ace22c40312d7bbd8d9c1e50eff897a7a497d8","modified":1568794083633},{"_id":"public/lib/pace/pace-theme-fill-left.min.css","hash":"0bec1e235a4a2cccda3f993b205424e1441a44ae","modified":1568794083633},{"_id":"public/lib/pace/pace-theme-mac-osx.min.css","hash":"9f2e7b51b084da407863826b25265b31150b3821","modified":1568794083633},{"_id":"public/lib/pace/pace-theme-minimal.min.css","hash":"9cd783cceb8a191f3c8b5d81f7a430ecc3e489d3","modified":1568794083633},{"_id":"public/lib/velocity/bower.json","hash":"0ef14e7ccdfba5db6eb3f8fc6aa3b47282c36409","modified":1568794083633},{"_id":"public/js/src/schemes/pisces.js","hash":"8050a5b2683d1d77238c5762b6bd89c543daed6e","modified":1568794083633},{"_id":"public/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1568794083633},{"_id":"public/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1568794083633},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1568794083633},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1568794083634},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1568794083634},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1568794083634},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1568794083634},{"_id":"public/lib/fastclick/README.html","hash":"da3c74d484c73cc7df565e8abbfa4d6a5a18d4da","modified":1568794083634},{"_id":"public/lib/jquery_lazyload/CONTRIBUTING.html","hash":"a6358170d346af13b1452ac157b60505bec7015c","modified":1568794083634},{"_id":"public/lib/jquery_lazyload/README.html","hash":"bde24335f6bc09d8801c0dcd7274f71b466552bd","modified":1568794083634},{"_id":"public/css/main.css","hash":"fcbb00d0919da2ea674c3f0ae2a46c2a8e1a922a","modified":1568794083634},{"_id":"public/love/img/iali59.png","hash":"0029ef32f6d167712ab05f6fa578e0098d1cb5b2","modified":1568794083634},{"_id":"public/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1568794083634},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1568794083634},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1568794083634},{"_id":"public/js/src/motion.js","hash":"754b294394f102c8fd9423a1789ddb1201677898","modified":1568794083648},{"_id":"public/js/src/utils.js","hash":"9b1325801d27213083d1487a12b1a62b539ab6f8","modified":1568794083649},{"_id":"public/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1568794083649},{"_id":"public/lib/pace/pace-theme-loading-bar.min.css","hash":"7ee28875dfc1230d76c537f6605766e8d4011e9f","modified":1568794083650},{"_id":"public/lib/pace/pace.min.js","hash":"9944dfb7814b911090e96446cea4d36e2b487234","modified":1568794083650},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1568794083650},{"_id":"public/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1568794083650},{"_id":"public/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1568794083650},{"_id":"public/love/img/iali24.jpg","hash":"6356a9b1cdc641902cd9dc12221da8c7f44355e7","modified":1568794083651},{"_id":"public/images/background.jpg","hash":"894d905afea6a0b558e35bb4db51e1920ae48e76","modified":1568794083651},{"_id":"public/2019/04/15/Stacked-Cross-Attention-for-Image-Text-Matching/Stacked-Cross-Attention2.png","hash":"7b02b31477b732e4011a21557e86c3ef39ae0339","modified":1568794083651},{"_id":"public/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1568794083678},{"_id":"public/images/background2.jpg","hash":"61fb5568b742773e5c18f546b7f1a9353a6dd11c","modified":1568794083678},{"_id":"public/images/background3.jpg","hash":"1efe1e64111fb7ce0a1ec43beee9d4001c9aacc0","modified":1568794083679},{"_id":"public/2019/04/15/Stacked-Cross-Attention-for-Image-Text-Matching/Stacked-Cross-Attention1.png","hash":"bba598706c764dff66f3921f451d9fc7f90a928f","modified":1568794083679},{"_id":"public/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1568794083712},{"_id":"public/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1568794083713},{"_id":"public/lib/three/canvas_lines.min.js","hash":"dce4a3b65f8bf958f973690caa7ec4952f353b0c","modified":1568794083729},{"_id":"public/lib/three/three-waves.min.js","hash":"d968cba6b3a50b3626a02d67b544f349d83b147c","modified":1568794083729},{"_id":"public/lib/three/canvas_sphere.min.js","hash":"d8ea241a53c135a650f7335d2b6982b899fd58a9","modified":1568794083730},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1568794083731},{"_id":"public/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1568794083731},{"_id":"public/js/custom/all.min.js","hash":"ada99998219694ae25a40bddc5bc6edd0a108d78","modified":1568794083731},{"_id":"public/lib/Han/dist/han.min.js","hash":"f559c68a25065a14f47da954a7617d87263e409d","modified":1568794083731},{"_id":"public/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1568794083731},{"_id":"public/lib/needsharebutton/font-embedded.css","hash":"c39d37278c1e178838732af21bd26cd0baeddfe0","modified":1568794083745},{"_id":"public/lib/Han/dist/han.min.css","hash":"a0c9e32549a8b8cf327ab9227b037f323cdb60ee","modified":1568794083745},{"_id":"public/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1568794083761},{"_id":"public/lib/Han/dist/han.css","hash":"bd40da3fba8735df5850956814e312bd7b3193d7","modified":1568794083761},{"_id":"public/2019/01/08/Hierarchical-Object-Detection-with-Deep-Reinforcement-Learning/aeroplane20180626.png","hash":"65bdffbbd8178516e449ea7de12440908343ca36","modified":1568794083763},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"b5483b11f8ba213e733b5b8af9927a04fec996f6","modified":1568794083766},{"_id":"public/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1568794083769},{"_id":"public/lib/Han/dist/han.js","hash":"e345397e0585c9fed1449e614ec13e0224acf2ab","modified":1568794083769},{"_id":"public/js/custom/jquery.min.js","hash":"06e872300088b9ba8a08427d28ed0efcdf9c6ff5","modified":1568794083770},{"_id":"public/2019/02/19/StackGAN-Text-to-Photo-realistic-Image-Synthesis-with-Stacked-Generative-Adversarial-Networks/StackGAN0.png","hash":"9b61a9becf29e30fb5e15860e8bd661a610e4028","modified":1568794083772},{"_id":"public/images/background.jpeg","hash":"5e59c421081266a06a6b5699a6fc45e47f2a09d1","modified":1568794083778},{"_id":"public/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1568794083786},{"_id":"public/love/fonts/RuiHeiXiTi.otf","hash":"4548bf710f8724ada5c5fc6c6b9acc627093885b","modified":1568794083788},{"_id":"public/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1568794083799},{"_id":"public/lib/three/three.min.js","hash":"73f4cdc17e51a72b9bf5b9291f65386d615c483b","modified":1568794083804},{"_id":"public/love/lovebgm.mp3","hash":"ab036a633adc1eb219de9afdd0a392f6d02aeaf3","modified":1568794083811},{"_id":"public/images/background1 .jpg","hash":"729eba54bf08b471e4f898bbf6f9768aaeb76f54","modified":1568794083848}],"Category":[{"name":"科研","_id":"ck0ozhiwe0004gkuwq6m48764"},{"name":"深入理解Java虚拟机","_id":"ck0ozhiwj000agkuwoq70anyc"},{"name":"Java并发编程","_id":"ck0ozhiws000jgkuw6cyofr7a"},{"name":"kafka","_id":"ck0ozhix20013gkuw58cn2crf"},{"name":"工作","_id":"ck0ozhix6001agkuwzlymfh3n"},{"name":"数据库","_id":"ck0ozhix9001igkuwggqecirl"},{"name":"工程","_id":"ck0ozhixb001qgkuwc386conl"},{"name":"ZooKeeper","_id":"ck0ozhixe001wgkuwx4gjkzol"},{"name":"设计模式","_id":"ck0ozhixk002agkuw20gp0lg5"},{"name":"统计学习","_id":"ck0ozhixs002pgkuwplctsblu"},{"name":"竞赛","_id":"ck0ozhixu002ygkuwm8srk88w"},{"name":"Spring Boot","_id":"ck0ozhixw0037gkuwg4sq8w8j"}],"Data":[],"Page":[{"title":"archives","date":"2019-01-08T09:28:53.000Z","_content":"","source":"archives/index.md","raw":"---\ntitle: archives\ndate: 2019-01-08 17:28:53\n---\n","updated":"2019-01-08T09:28:53.220Z","path":"archives/index.html","comments":1,"layout":"page","_id":"ck0ozhiwb0001gkuwgdy8r333","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"about","date":"2019-01-08T09:28:53.000Z","_content":"","source":"about/index.md","raw":"---\ntitle: about\ndate: 2019-01-08 17:28:53\n---\n","updated":"2019-05-15T09:25:40.044Z","path":"about/index.html","comments":1,"layout":"page","_id":"ck0ozhiwd0003gkuwn2ffgdkx","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"文章分类","date":"2019-01-08T04:23:29.000Z","type":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: 文章分类\ndate: 2019-01-08 12:23:29\ntype: \"categories\"\n---\n","updated":"2019-01-08T09:24:23.812Z","path":"categories/index.html","comments":1,"layout":"page","_id":"ck0ozhiwg0007gkuweo59qnau","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"标签","date":"2019-01-08T08:38:29.000Z","type":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: 标签\ndate: 2019-01-08 16:38:29\ntype: \"tags\"\n---\n","updated":"2019-01-08T09:24:33.683Z","path":"tags/index.html","comments":1,"layout":"page","_id":"ck0ozhj2w0076gkuweiht27e1","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"schedule","date":"2019-01-08T10:31:40.000Z","_content":"","source":"schedule/index.md","raw":"---\ntitle: schedule\ndate: 2019-01-08 18:31:40\n---\n","updated":"2019-01-08T10:31:40.828Z","path":"schedule/index.html","comments":1,"layout":"page","_id":"ck0ozhj2y0078gkuwx36zygl5","content":"","site":{"data":{}},"excerpt":"","more":""},{"_content":"html,body,div,span,applet,object,iframe,h1,h2,h3,h4,h5,h6,p,blockquote,pre,a,abbr,acronym,address,big,cite,code,del,dfn,em,img,ins,kbd,q,s,samp,small,strike,strong,sub,sup,tt,var,b,u,i,center,dl,dt,dd,ol,ul,li,fieldset,form,label,legend,table,caption,tbody,tfoot,thead,tr,th,td,article,aside,canvas,details,embed,figure,figcaption,footer,header,hgroup,menu,nav,output,ruby,section,summary,time,mark,audio,video {\n\tmargin:0;\n\tpadding:0;\n\tborder:0;\n\tfont-size:100%;\n\tfont:inherit;\n\tvertical-align:baseline\n}\narticle,aside,details,figcaption,figure,footer,header,hgroup,menu,nav,section {\n\tdisplay:block\n}\nbody {\n\tline-height:1\n}\nstrong,b {\n\tfont-weight:bold\n}\nol,ul {\n\tlist-style:none\n}\nblockquote,q {\n\tquotes:none\n}\nblockquote:before,blockquote:after,q:before,q:after {\n\tcontent:'';\n\tcontent:none\n}\ntable {\n\tborder-collapse:collapse;\n\tborder-spacing:0\n}\nhtml,body {\n\twidth:100%;\n\theight:100%;\n\t-webkit-text-size-adjust:none\n}\nbody {\n\twhite-space:nowrap\n}\n.nojavascript {\n\tposition:fixed;\n\ttop:0;\n\twidth:100%;\n\ttext-align:center;\n\tfont-size:3em;\n}\n.flowtime {\n\tfont-size:0;\n\twidth:100%;\n\theight:100%;\n\t-o-transform-origin:0 0;\n\t-ms-transform-origin:0 0;\n\t-moz-transform-origin:0 0;\n\t-webkit-transform-origin:0 0;\n\ttransform-origin:0 0;\n\t-o-transform:translateZ(0);\n\t-ms-transform:translateZ(0);\n\t-moz-transform:translateZ(0);\n\t-webkit-transform:translateZ(0);\n\ttransform:translateZ(0);\n\t-o-backface-visibility:hidden;\n\t-ms-backface-visibility:hidden;\n\t-moz-backface-visibility:hidden;\n\t-webkit-backface-visibility:hidden;\n\tbackface-visibility:hidden;\n\t-o-transition:-o-transform .5s cubic-bezier(.77,.10,.22,1);\n\t-moz-transition:-moz-transform .5s cubic-bezier(.77,.10,.22,1);\n\t-webkit-transition:-webkit-transform .5s cubic-bezier(.77,.10,.22,1);\n\ttransition:transform .5s cubic-bezier(.77,.10,.22,1)\n}\n.flowtime.no-transition {\n\t-o-transition:-o-transform 0s;\n\t-moz-transition:-moz-transform 0s;\n\t-webkit-transition:-webkit-transform 0s;\n\ttransition:transform 0s\n}\n.ft-section {\n\twidth:100%;\n\theight:100%;\n\tposition:relative;\n\t-o-transform:translateZ(0);\n\t-ms-transform:translateZ(0);\n\t-moz-transform:translateZ(0);\n\t-webkit-transform:translateZ(0);\n\ttransform:translateZ(0)\n}\n.ft-section,.ft-section-thumb {\n\tfont-size:16px;\n\tfont-size:1rem;\n\twhite-space:normal;\n\tdisplay:inline-block;\n\tvertical-align:top\n}\n.ft-page {\n\t-moz-box-sizing:border-box;\n\t-webkit-box-sizing:border-box;\n\tbox-sizing:border-box;\n\twidth:100%;\n\theight:100%;\n\tposition:relative;\n\tz-index:auto;\n\t-o-transform:translateZ(0);\n\t-ms-transform:translateZ(0);\n\t-moz-transform:translateZ(0);\n\t-webkit-transform:translateZ(0);\n\ttransform:translateZ(0)\n}\n.ft-page.actual {\n\tz-index:100\n}\n.ft-overview .ft-page {\n\tcursor:pointer;\n\t-o-transition:all .5s cubic-bezier(.77,.10,.22,1);\n\t-moz-transition:all .5s cubic-bezier(.77,.10,.22,1);\n\t-webkit-transition:all .5s cubic-bezier(.77,.10,.22,1);\n\ttransition:all .5s cubic-bezier(.77,.10,.22,1);\n\t-o-transform:scale(0.95);\n\t-ms-transform:scale(0.95);\n\t-moz-transform:scale(0.95);\n\t-webkit-transform:scale(0.95);\n\ttransform:scale(0.95);\n\t-o-transform-origin:50% 50%;\n\t-ms-transform-origin:50% 50%;\n\t-moz-transform-origin:50% 50%;\n\t-webkit-transform-origin:50% 50%;\n\ttransform-origin:50% 50%\n}\n.ft-overview .ft-page * {\n\tpointer-events:none\n}\n.ft-absolute-nav {\n\toverflow:hidden\n}\n.ft-absolute-nav .flowtime {\n\tposition:absolute\n}\n.ft-fragment {\n\topacity:0;\n\t-o-transition:all .3s cubic-bezier(.77,.10,.22,1);\n\t-moz-transition:all .3s cubic-bezier(.77,.10,.22,1);\n\t-webkit-transition:all .3s cubic-bezier(.77,.10,.22,1);\n\ttransition:all .3s cubic-bezier(.77,.10,.22,1);\n\t-o-transform:translateZ(0);\n\t-ms-transform:translateZ(0);\n\t-moz-transform:translateZ(0);\n\t-webkit-transform:translateZ(0);\n\ttransform:translateZ(0)\n}\n.ft-fragment.revealed.step {\n\topacity:.3\n}\n.ft-fragment.revealed.shy {\n\topacity:0\n}\n.ft-fragment.revealed,.ft-fragment.revealed-temp,.ft-fragment.revealed.actual {\n\topacity:1\n}\n.ft-default-progress {\n\tposition:fixed;\n\tbottom:16px;\n\tbottom:1rem;\n\tright:16px;\n\tright:1rem;\n\tz-index:1000;\n\topacity:.3;\n\t-o-transition:all .5s cubic-bezier(.77,.10,.22,1);\n\t-moz-transition:all .5s cubic-bezier(.77,.10,.22,1);\n\t-webkit-transition:all .5s cubic-bezier(.77,.10,.22,1);\n\ttransition:all .5s cubic-bezier(.77,.10,.22,1)\n}\n.ft-default-progress:hover {\n\topacity:1\n}\n.ft-overview .ft-default-progress {\n\topacity:0;\n\tpointer-events:none\n}\n.ft-page-thumb {\n\t-moz-box-sizing:border-box;\n\t-webkit-box-sizing:border-box;\n\tbox-sizing:border-box;\n\twidth:18px;\n\theight:12px;\n\tmargin-right:1px;\n\tmargin-bottom:1px;\n\tbackground-color:rgba(0,0,0,0.7);\n\tcursor:pointer;\n\t-o-transition:all .3s cubic-bezier(.77,.10,.22,1);\n\t-moz-transition:all .3s cubic-bezier(.77,.10,.22,1);\n\t-webkit-transition:all .3s cubic-bezier(.77,.10,.22,1);\n\ttransition:all .3s cubic-bezier(.77,.10,.22,1)\n}\n.ft-page-thumb:hover {\n\tbackground-color:rgba(255,255,255,0.7)\n}\n.ft-page-thumb.actual {\n\tbackground-color:rgba(255,255,255,0.5);\n\tborder:1px solid #fff\n}\nimg {\n\t-o-transform:translate3d(0,0,0);\n\t-ms-transform:translate3d(0,0,0);\n\t-moz-transform:translate3d(0,0,0);\n\t-webkit-transform:translate3d(0,0,0);\n\ttransform:translate3d(0,0,0);\n\t-o-backface-visibility:hidden;\n\t-ms-backface-visibility:hidden;\n\t-moz-backface-visibility:hidden;\n\t-webkit-backface-visibility:hidden;\n\tbackface-visibility:hidden\n}\n.parallax {\n\tposition:relative;\n\t-o-transition:all .5s cubic-bezier(.50,.10,.50,1);\n\t-moz-transition:all .5s cubic-bezier(.50,.10,.50,1);\n\t-webkit-transition:all .5s cubic-bezier(.50,.10,.50,1);\n\ttransition:all .5s cubic-bezier(.50,.10,.50,1)\n}\n.ft-overview .parallax {\n\t-o-transform:translate3d(0,0,0)!important;\n\t-ms-transform:translate3d(0,0,0)!important;\n\t-moz-transform:translate3d(0,0,0)!important;\n\t-webkit-transform:translate3d(0,0,0)!important;\n\ttransform:translate3d(0,0,0)!important\n}\n@font-face {\n\tfont-family:'RuiHeiXiTi';\n\tsrc:url('fonts/RuiHeiXiTi.otf') format('truetype');\n\tfont-weight:bold;\n\tfont-style:normal\n}\nhtml {\n\tfont-size:100%;\n\tline-height:1.5rem;\n\tbackground-color:#aaa;\n\tcolor:#6e2d52;\n\ttext-shadow:1px 1px 0 rgba(255,255,255,0.4)\n}\nbody,button {\n\tfont-family:\"RuiHeiXiTi\",sans-serif\n}\n.navigation,.credits,.switches {\n\tdisplay:none\n}\n.ft-page {\n\tpadding:1em;\n\tbackground-color:#fed1ea;\n\ttext-align:center\n}\n.flowtime h1,.flowtime h2,.flowtime h3,.flowtime h4,.flowtime h5,.flowtime h6,.flowtime p,.flowtime ul,.flowtime ol,.flowtime dl,.flowtime li,.flowtime dt,.flowtime dd {\n\tdisplay:block;\n\t-o-transition:all .3s cubic-bezier(.77,.10,.22,1);\n\t-moz-transition:all .3s cubic-bezier(.77,.10,.22,1);\n\t-webkit-transition:all .3s cubic-bezier(.77,.10,.22,1);\n\ttransition:all .3s cubic-bezier(.77,.10,.22,1)\n}\n.flowtime h1,.flowtime h2,.flowtime h3,.flowtime h4,.flowtime h5,.flowtime h6 {\n\tfont-weight:bold;\n\tcolor:#613b3b;\n\tpadding-top:1em\n}\n.flowtime h1 {\n\tfont-size:4rem;\n\tline-height:4.3rem\n}\n.flowtime h2 {\n\tfont-size:3rem;\n\tline-height:3.3rem\n}\n.flowtime h3 {\n\tfont-size:2.5rem;\n\tline-height:3rem\n}\n.flowtime h4,.flowtime h5,.flowtime h6 {\n\tfont-size:1.75rem;\n\tline-height:2rem\n}\n.flowtime p {\n\tfont-size:1.75rem;\n\tline-height:2rem;\n\tmargin:2rem 0\n}\n.flowtime ul,.flowtime ol,.flowtime dl {\n\tfont-size:1.75rem;\n\tline-height:2rem;\n\tmargin:2rem 0\n}\n.flowtime ul,.flowtime ol,.flowtime dl {\n\tmargin:0 2rem\n}\n.flowtime li,.flowtime dd {\n\tline-height:1.75rem;\n\tmargin-bottom:1rem;\n\tposition:relative\n}\n.flowtime dt {\n\tposition:relative\n}\n.flowtime ul li:before,.flowtime dl dt:before {\n\tcontent:\"\\2022\";\n\ttext-align:right;\n\tcolor:#fd0;\n\tmargin-right:.5rem;\n\tdisplay:inline-block;\n\tposition:absolute;\n\tleft:-1rem\n}\n.flowtime ol {\n\tcounter-reset:list\n}\n.flowtime ol li:before {\n\tcontent:counter(list) \".\";\n\tcounter-increment:list;\n\tfont-size:.75em;\n\tcolor:#fd0;\n\tmargin-right:.5rem;\n\tdisplay:inline-block;\n\tposition:relative;\n\ttop:-0.075em\n}\n.flowtime dl dd {\n\tfont-size:.8em;\n\tmargin-left:1rem\n}\n.flowtime small {\n\tfont-size:.6em;\n\tvertical-align:middle\n}\n.flowtime pre,.flowtime code {\n\tfont-family:monospace;\n\tmargin:1rem 0\n}\n.flowtime strong {\n\tfont-weight:bold;\n\tcolor:#fd0;\n\ttext-shadow:1px 2px 0 #000,1px -1px 0 rgba(0,0,0,0.3),-1px -1px 0 rgba(0,0,0,0.3),-1px 1px 0 rgba(0,0,0,0.3)\n}\n.flowtime q {\n\tquotes:\"“\" \"”\"\n}\n.flowtime q:before {\n\tcontent:open-quote\n}\n.flowtime q:after {\n\tcontent:close-quote\n}\n.flowtime blockquote {\n\tfont-size:1.5rem;\n\tmargin:1.5rem 2rem;\n\tpadding:1rem;\n\tbackground-color:rgba(0,0,0,0.3);\n\tborder-left:.5rem solid rgba(255,255,255,0.5);\n\tborder-radius:.5rem\n}\n.flowtime q,.flowtime cite,.flowtime blockquote {\n\tfont-style:italic\n}\n.flowtime .small {\n\tfont-size:.6em\n}\n.flowtime .attention {\n\tcolor:red;\n\ttext-shadow:1px 2px 0 #000,1px -1px 0 rgba(0,0,0,0.3),-1px -1px 0 rgba(0,0,0,0.3),-1px 1px 0 rgba(0,0,0,0.3)\n}\n.flowtime sup {\n\tfont-size:.7em;\n\tposition:relative;\n\ttop:-0.5em\n}\n.flowtime a,.flowtime a:link,.flowtime a:visited,.flowtime a:active,.flowtime a:focus {\n\tcolor:#666;\n\ttext-decoration:none\n}\n.flowtime a:hover {\n\tcolor:#666;\n\ttext-decoration:underline\n}\n.flowtime a:hover img,.flowtime a:active img,.flowtime a:focus img {\n\t-webkit-box-shadow:1px 2px 10px 5px rgba(0,0,0,0.5);\n\tbox-shadow:1px 2px 10px 5px rgba(0,0,0,0.5)\n}\n.flowtime .stack {\n\twidth:100%;\n\theight:100%;\n\tmargin:1rem 0;\n\tposition:relative\n}\n.flowtime .stacked {\n\twidth:100%;\n\tposition:absolute;\n\ttop:0;\n\tleft:0\n}\n.flowtime img {\n\tmax-width:100%;\n\tmax-height:100%;\n\tdisplay:block;\n\tmargin:0 auto\n}\n.flowtime .stack-center {\n\ttext-align:center;\n\twhite-space:nowrap;\n\tposition:absolute;\n\ttop:2rem;\n\tright:2rem;\n\tbottom:2rem;\n\tleft:2rem\n}\n.flowtime .stack-center:before {\n\tcontent:\"\";\n\theight:100%;\n\tdisplay:inline-block;\n\tvertical-align:middle\n}\n.flowtime .stack-center .stacked-center {\n\twhite-space:normal;\n\tmax-width:100%;\n\tmax-height:100%;\n\tdisplay:inline-block;\n\tvertical-align:middle\n}\n@media screen and (min-height:41em) and (min-width:80em) {\n\thtml {\n\tfont-size:120%\n}\n}@media screen and (min-height:50em) and (min-width:90em) {\n\thtml {\n\tfont-size:140%\n}\n}@media screen and (max-device-height:578px) {\n\thtml {\n\tfont-size:50%\n}\n}.parallax-demo {\n\toverflow:hidden\n}\n.parallax-demo .kingmix {\n\tposition:absolute;\n\tleft:20%;\n\tbottom:-10%;\n\tz-index:50\n}\n.parallax-demo .sax {\n\tposition:absolute;\n\tleft:6%;\n\tbottom:-18%;\n\tz-index:40\n}\n.parallax-demo .tone {\n\tposition:absolute;\n\tleft:49%;\n\tbottom:-32%;\n\tz-index:30\n}\n.ft-overview .section-1 {\n\tmargin-top:0\n}\n.ft-overview .section-2 {\n\tmargin-top:-40%\n}\n.ft-overview .section-3 {\n\tmargin-top:-40%\n}\n.ft-overview .section-4 {\n\tmargin-top:0\n}\n.ft-overview .section-5 {\n\tmargin-top:60%\n}\n.ft-overview .section-6 {\n\tmargin-top:0\n}\n.ft-overview .section-7 {\n\tmargin-top:-40%\n}\n.ft-overview .section-8 {\n\tmargin-top:-40%\n}\n.ft-overview .section-9 {\n\tmargin-top:0\n}\n.ft-page-thumb {\n\tbackground-color:#a54479\n}\n.ft-page-thumb.actual {\n\tbackground-color:#44a54a;\n\tborder:0\n}\n.ft-default-progress {\n\tbottom:3rem;\n\tright:2rem\n}\n.thumb-section-0 {\n\tposition:relative;\n\ttop:13px\n}\n.thumb-section-3 {\n\tposition:relative;\n\ttop:13px\n}\n.thumb-section-4 {\n\tposition:relative;\n\ttop:26px\n}\n.thumb-section-5 {\n\tposition:relative;\n\ttop:13px\n}\n.thumb-section-8 {\n\tposition:relative;\n\ttop:13px\n}\n.thumb-section-8 {\n\tposition:relative;\n\ttop:13px\n}\n.left-img {\n\tpadding:0;\n\ttext-align:left\n}\n.left-img img {\n\tposition:absolute;\n\tleft:0;\n\ttop:0;\n\theight:100%;\n\tz-index:1\n}\n.left-img p,.left-img h3,.left-img .text {\n\tposition:absolute;\n\ttop:1em;\n\tright:1em;\n\tz-index:2;\n\ttext-align:right\n}\n.full-img {\n\tpadding:0\n}\n.full-img img {\n\twidth:100%;\n\theight:100%\n}\n.full-img h3,.full-img .text,.full-img .center-text {\n\tposition:absolute;\n\twidth:100%;\n\ttext-align:center;\n\tz-index:2\n}\n.right-img {\n\tpadding:0;\n\ttext-align:left\n}\n.right-img img,.right-img .text {\n\tposition:absolute\n}\n.right-img img {\n\tmargin:0;\n\theight:100%;\n\tright:0;\n\ttop:0;\n\tz-index:1\n}\n.right-img .text {\n\tleft:0;\n\ttop:0;\n\tz-index:2;\n\tpadding:2em\n}\n.center-img {\n\twidth:100%;\n\theight:100%;\n\tbackground-position:center center;\n\tbackground-repeat:no-repeat\n}\n.top-text {\n\tpadding:0\n}\n.bottom-text h3 {\n\theight:10%;\n\tpadding-bottom:10%\n}\n.bottom-text img {\n\theight:80%\n}\n.page-1 {\n\tbackground:#fff url(img/iali53.jpg) bottom right no-repeat;\n\ttext-align:left\n}\n.page-1 p {\n\tfont-size:1em\n}\n.page-1 img {\n\tmargin:1em auto 0 1em\n}\n.page-1 .text1 {\n\tfont-size:3em;\n\tcolor:#FA4A4A;\n\tline-height:2em;\n\tmargin:0.5em 0 0 0.5em\n}\n.page-1 .text2 {\n\tfont-size:1.2em;\n\tmargin:1.5em 0 0 1.5em\n}\n.flowtime .page-1 a {\n\tcolor:#6e2626\n}\n.page-1 input {\n\tfont-size:0.6em;\n\tpadding:6px 8px;\n\twidth:8rem;\n\ttext-align:center;\n\tborder:1px solid #ccc;\n\tvertical-align:6px;\n}\n.page-2 {\n\tbackground-color:#fefff1;\n\tpadding:0;\n\ttext-align:center\n}\n.page-2 p {\n\theight:10%;\n\tpadding-top:5%;\n\tmargin:0\n}\n.page-2 img {\n\theight:80%\n}\n.page-3 {\n\tbackground-color:#c1b287\n}\n.page-6 {\n\tbackground-color:#ecfafb;\n\tpadding:0\n}\n.page-6 img {\n\tposition:absolute;\n\tbottom:0;\n\tleft:0;\n\tmax-width:70%\n}\n.page-6 h3 {\n\tposition:absolute;\n\tright:10%;\n\ttop:45%;\n\tcolor:#bc195b\n}\n.page-7 {\n\tbackground-color:#e6fbec\n}\n.page-7 img {\n\tmax-height:100%;\n\tmargin:0 auto\n}\n.page-7 h3 {\n\tposition:absolute;\n\ttop:1em;\n\tleft:50%;\n\tpadding:0;\n\tmargin-top:0;\n\tmargin-left:-240px;\n\tz-index:1\n}\n.page-8 {\n\tbackground:#66cbff\n}\n.page-8 h3 {\n\tcolor:#eef;\n\tposition:absolute;\n\ttop:1em;\n\tleft:50%;\n\tmargin-left:-40%;\n\tpadding:0;\n\tmargin-top:0;\n\twidth:10em;\n\ttext-align:left\n}\n.page-8 h3 span {\n\tdisplay:inline-block;\n\twidth:1em;\n\tvertical-align:top\n}\n.page-9 {\n\tbackground-color:#c9f4fb\n}\n.page-9 img {\n\tmargin-top:3em\n}\n.page-10 {\n\tbackground:url(img/iali22_bg.jpg)\n}\n.page-12 {\n\tbackground-color:#aff1ff;\n\tpadding:0\n}\n.page-12 img {\n\tposition:absolute;\n\tbottom:1em;\n\tleft:1em;\n\tz-index:2;\n\theight:40%\n}\n.page-12 h3 {\n\tmargin-left:1em;\n\tmargin-right:1em\n}\n.page-13 {\n\tbackground-color:#feeff4;\n\tpadding:0\n}\n.page-13 img {\n\theight:80%\n}\n.page-13 he {\n\theight:20%\n}\n.page-14 {\n\tbackground-color:#fbf7d1\n}\n.page-15 {\n\tbackground:#dcf2fa url(img/iali45_bg.jpg)\n}\n.page-16 {\n\tbackground-color:#7db6df\n}\n.page-17 {\n\tbackground-color:#e5f0f2\n}\n.page-19 {\n\tbackground-image:url(img/iali75_bg.jpg)\n}\n.page-19 h3 {\n\tmargin-bottom:2em\n}\n.page-18 .text {\n\tmargin-left:1em;\n\tmargin-right:1em\n}\n.page-20 {\n\tbackground-color:#fcd0ca;\n\tpadding:0\n}\n.page-20 img {\n\tposition:absolute;\n\tbottom:0;\n\tleft:4em\n}\n.page-21 {\n\tbackground:#fbf2a3 url(img/iali59_bg.jpg)\n}\n.page-22 {\n\tbackground-color:#f5d484\n}\n.page-23 {\n\tbackground-color:#fff\n}\n.page-25 {\n\tbackground-color:#fcc1b1\n}\n.page-26 {\n\tbackground-color:#fdeacf\n}\n.page-27 {\n\tbackground-color:#ffc8c5;\n\tpadding:0\n}\n.page-27 h3 {\n\tposition:absolute;\n\tz-index:2;\n\twidth:100%;\n\ttext-align:center\n}\n.page-28 {\n\tbackground:#b7e7f3 url(img/iali40_bg.jpg) bottom repeat-x;\n\tpadding:0\n}\n.page-28 img {\n\tposition:absolute;\n\tbottom:0;\n\tleft:3em\n}\n.page-28 h3 {\n\tposition:absolute;\n\tright:1em;\n\tbottom:360px;\n\ttext-align:right;\n\tcolor:#127184\n}\n.page-29 {\n\tbackground:#0d85d1;\n\tpadding:0\n}\n.page-29 h3 {\n\tposition:absolute;\n\tz-index:2;\n\twidth:100%;\n\ttext-align:center;\n\tcolor:#eef\n}\n.page-30 {\n\tbackground:#fff url(img/iali76_bg.png) center bottom repeat-x;\n\tpadding:0;\n\tpadding:0\n}\n.page-30 img {\n\tposition:absolute;\n\tbottom:0;\n\tleft:0\n}\n.page-31 {\n\tbackground-color:#fbf5e9\n}\n.page-32 {\n\tbackground-color:#faf2e5\n}\n.page-33 {\n\tbackground-color:#fef0d5;\n\tpadding:0\n}\n.page-33 h3 {\n\tfont-size:1.8em;\n\tcolor:#a58545\n}\n.page-34 {\n\tbackground:#94c2e3 url(img/iali57.jpg) left bottom no-repeat\n}\n.page-34 h3 {\n\tcolor:#fff\n}\n.page-35 {\n\tbackground:#fff url(img/iali8_bg.png) left bottom repeat-x;\n\tpadding:0\n}\n.page-35 img {\n\tposition:absolute;\n\tbottom:0;\n\tleft:0;\n\tz-index:1\n}\n.page-35 h3 {\n\tposition:absolute;\n\tright:10%;\n\ttop:5%;\n\tcolor:green;\n\tz-index:2;\n\tfont-size:2em\n}\n.page-36 h3 {\n\ttext-align:right;\n\tright:1.5em;\n\tcolor:#eee\n}\n.page-37 {\n\tbackground-color:#fff\n}\n.page-38 {\n\tbackground-color:#fff8f2\n}\n.page-39 {\n\tbackground:#e8ccc1 url(img/iali2_bg.jpg) repeat\n}\n.page-40 {\n\tbackground-color:#cde7f4\n}\n.page-40 img {\n\tposition:absolute;\n\tbottom:1em;\n\tleft:1em;\n\tz-index:1\n}\n.page-40 h3 {\n\tposition:absolute;\n\ttop:1em;\n\tright:1em;\n\tz-index:2\n}\n.page-41 {\n\tbackground-color:#5aaadc;\n\tpadding:0\n}\n.page-41 .img2,.page-41 .img1 {\n\tposition:absolute\n}\n.page-41 .img1 {\n\tleft:1em;\n\tbottom:1em\n}\n.page-41 .img2 {\n\tright:1em;\n\ttop:1em\n}\n.page-41 h3 {\n\tpadding:0;\n\tposition:absolute;\n\ttop:35%;\n\twidth:100%;\n\ttext-align:center\n}\n.page-42 {\n\tbackground-color:#c1c567\n}\n.page-42 img {\n\tposition:absolute;\n\tbottom:2em;\n\tleft:1em\n}\n.page-42 h3 {\n\tfont-size:2em\n}\n.page-43 {\n\tbackground-color:#6b79ad\n}\n.page-43 img {\n\tmax-height:80%\n}\n.page-43 h2 {\n\tcolor:#fff\n}\n.page-44 {\n\tbackground-color:#f3e7ab\n}\n.page-45 {\n\tbackground-color:#b1dceb\n}\n.page-46 {\n\tbackground:#66cbff\n}\n.page-46 h3 {\n\tposition:absolute;\n\ttop:1em;\n\tleft:50%;\n\tmargin-left:-40%;\n\tpadding:0;\n\tmargin-top:0;\n\twidth:10em;\n\ttext-align:left\n}\n.page-46 h3 span {\n\tdisplay:inline-block;\n\twidth:1em;\n\tvertical-align:top\n}\n.page-47 {\n\tbackground-color:#fdcbca\n}\n.page-47 h3 {\n\tposition:absolute;\n\ttop:1em;\n\tleft:50%;\n\tmargin-left:-40%;\n\tpadding:0;\n\tmargin-top:0;\n\twidth:10em;\n\ttext-align:left\n}\n.page-47 h3 span {\n\tdisplay:inline-block;\n\twidth:1em;\n\tvertical-align:top\n}\n.page-48 {\n\tbackground-color:#e3e2e7\n}\n.page-49 {\n\tbackground-color:#fce6b6;\n\ttext-align:left\n}\n.page-49 img {\n\tmargin:0\n}\n.page-50 {\n\tbackground-color:#aae1f6;\n\tpadding:0\n}\n.page-50 .img1 {\n\tposition:absolute;\n\tright:0;\n\ttop:0\n}\n.page-50 .img2 {\n\tposition:absolute;\n\tleft:1em;\n\tbottom:1em\n}\n.page-50 p {\n\tposition:absolute;\n\ttop:1em;\n\tleft:1em;\n\twidth:50%;\n\tmargin:0;\n\tz-index:3;\n\tfont-size:1.5em\n}\n.page-51 {\n\tbackground-image:url(img/iali52.jpg);\n\tbackground-size:cover;\n\tbackground-color:#fff;\n\ttext-align:left\n}\n.page-52 {\n\tbackground-color:#fff2fb;\n\tpadding:0\n}\n.page-52 h3 {\n\tmargin:0;\n\tpadding-top:.8em;\n\tfont-size:1.6em;\n\tcolor:#4e0f3d\n}\n.page-53 {\n\tbackground-color:#febebe\n}\n.page-54 {\n\tbackground:#d3d2d0 url(img/319280_bg.jpg) repeat\n}\n.page-54 .center-img {\n\tbackground-image:url(img/319280.jpg);\n\ttext-indent:-99999px\n}\n.page-54 h3 {\n\tline-height:1rem;\n\tpadding-top:0.5em\n}\n.page-55 {\n\tbackground-color:#fff\n}\n.write-tip {\n\tposition:fixed;\n\tdisplay:block;\n\tcolor:#333;\n\tfont-size:16px;\n\tbottom:0.2em;\n\tleft:33%;\n\tpadding:3px;\n\tz-index:999;\n\tbackground-color:#fff;\n\tborder:1px solid #D3D3D3;\n\tborder-radius:4px\n}\n.write-tip img {\n\tvertical-align:-2px;\n\tmargin-left:5px;\n\tcursor:pointer\n}\n.write-tip button {\n\tcolor:#fff;\n\tfont-size:15px;\n\tdisplay:inline-block;\n\tbackground-color:#428bca;\n\tpadding:6px 12px;\n\tmargin-left:5px;\n\tvertical-align:1px;\n\tborder:1px solid #357ebd;\n\tborder-radius:4px;\n\toutline:none;\n\tcursor:pointer\n}\n.write-tip button:hover {\n\tbackground-color:#3276b1;\n\tborder-color:#285e8e\n}\n.write-tip button:active {\n\tbox-shadow:inset 0 3px 5px rgba(0,0,0,0.125)\n}\n.write-ok {\n\tposition:fixed;\n\ttop:0;\n\tleft:0;\n\twidth:100%;\n\theight:100%;\n\tz-index:999;\n\tbackground-color:#FCC7E2;\n\tbackground-attachment:fixed;\n\tdisplay:none\n}\n.write-ok .write-box {\n\tposition:relative;\n\tmargin:15% auto;\n\tpadding:20px;\n\ttext-align:center;\n\twidth:50%;\n\theight:45%;\n\tbackground:#fff;\n\tbox-shadow:0px 0px 10px 0px #F7B5DC;\n\tborder-radius:8px;\n}\n.write-box h2 {\n\tfont-size:2em;\n\tline-height:2.5em;\n\tcolor:#5EAF6F;\n\ttext-shadow:1px 1px 3px #D3D3D3;\n}\n.write-box p {\n\tline-height:2em;\n\twhite-space:pre-wrap;\n\tword-wrap:break-word\n}\n.write-box p u,.write-box p a {\n\tcolor:#007ed9;\n}\n.write-box p u:hover,.write-box p a:hover {\n\tcolor:#EB56AF;\n}\n.write-box p span {\n\tdisplay:inline-block;\n\tmin-width:1em;\n\tline-height:1.3em;\n\tpadding:0 2px;\n\tmargin:0 2px;\n\toutline:1px solid #ccc\n}\n.write-box p i {\n\tposition:relative;\n\ttop:-1px;\n\tfont-size:0.8em;\n\tcolor:#806D6D;\n\tpadding:3px 4px;\n\tbackground:#F7F7F7;\n\tborder:1px solid #E7E7E7;\n\tborder-radius:6px;\n\tdisplay:none;\n}\n.write-box p small {\n\tline-height:3em;\n\tfont-size:90%;\n\tcolor:#999;\n}\n.write-box #back {\n\tcolor:#888;\n\tmargin-right:5px\n}\n.write-box button {\n\tcolor:#fff;\n\tfont-size:1.2em;\n\tdisplay:inline-block;\n\tbackground-color:#428bca;\n\tpadding:13px 14px;\n\tmargin-top:1em;\n\tborder:1px solid #357ebd;\n\tborder-radius:4px;\n\toutline:none;\n\tcursor:pointer\n}\n.write-box button:hover {\n\tbackground-color:#3276b1;\n\tborder-color:#285e8e\n}\n.write-tip button:active {\n\tbox-shadow:inset 0 3px 5px rgba(0,0,0,0.125)\n}\n.write-share {\n\tbackground:#f1f1f1;\n\ttext-align:center;\n\tdisplay:inline-block;\n\tpadding:13px 14px;\n\tmargin-top:1em;\n\tborder:1px solid #DADADA;\n\tborder-radius:4px;\n\tdisplay:none;\n}\n.disabled {\n\tpointer-events:none;\n\tcursor:not-allowed;\n\topacity:.65;\n\tfilter:alpha(opacity=65);\n\tbox-shadow:none;\n}\n.mPower{position: fixed;bottom: 9rem;right: 6.2rem;z-index: 999;}#on, #off{width: 16px;height: 16px;display: inline-block;margin-bottom: -3px;filter: alpha(opacity=0.8);opacity: 0.8;cursor: pointer;}#on:hover, #off:hover{filter: alpha(opacity=4);opacity: 1}#on{background: url(img/music.png) left center no-repeat;}#off{background: url(img/mute.png) left center no-repeat;display: none;}","source":"love/all.min.css","raw":"html,body,div,span,applet,object,iframe,h1,h2,h3,h4,h5,h6,p,blockquote,pre,a,abbr,acronym,address,big,cite,code,del,dfn,em,img,ins,kbd,q,s,samp,small,strike,strong,sub,sup,tt,var,b,u,i,center,dl,dt,dd,ol,ul,li,fieldset,form,label,legend,table,caption,tbody,tfoot,thead,tr,th,td,article,aside,canvas,details,embed,figure,figcaption,footer,header,hgroup,menu,nav,output,ruby,section,summary,time,mark,audio,video {\n\tmargin:0;\n\tpadding:0;\n\tborder:0;\n\tfont-size:100%;\n\tfont:inherit;\n\tvertical-align:baseline\n}\narticle,aside,details,figcaption,figure,footer,header,hgroup,menu,nav,section {\n\tdisplay:block\n}\nbody {\n\tline-height:1\n}\nstrong,b {\n\tfont-weight:bold\n}\nol,ul {\n\tlist-style:none\n}\nblockquote,q {\n\tquotes:none\n}\nblockquote:before,blockquote:after,q:before,q:after {\n\tcontent:'';\n\tcontent:none\n}\ntable {\n\tborder-collapse:collapse;\n\tborder-spacing:0\n}\nhtml,body {\n\twidth:100%;\n\theight:100%;\n\t-webkit-text-size-adjust:none\n}\nbody {\n\twhite-space:nowrap\n}\n.nojavascript {\n\tposition:fixed;\n\ttop:0;\n\twidth:100%;\n\ttext-align:center;\n\tfont-size:3em;\n}\n.flowtime {\n\tfont-size:0;\n\twidth:100%;\n\theight:100%;\n\t-o-transform-origin:0 0;\n\t-ms-transform-origin:0 0;\n\t-moz-transform-origin:0 0;\n\t-webkit-transform-origin:0 0;\n\ttransform-origin:0 0;\n\t-o-transform:translateZ(0);\n\t-ms-transform:translateZ(0);\n\t-moz-transform:translateZ(0);\n\t-webkit-transform:translateZ(0);\n\ttransform:translateZ(0);\n\t-o-backface-visibility:hidden;\n\t-ms-backface-visibility:hidden;\n\t-moz-backface-visibility:hidden;\n\t-webkit-backface-visibility:hidden;\n\tbackface-visibility:hidden;\n\t-o-transition:-o-transform .5s cubic-bezier(.77,.10,.22,1);\n\t-moz-transition:-moz-transform .5s cubic-bezier(.77,.10,.22,1);\n\t-webkit-transition:-webkit-transform .5s cubic-bezier(.77,.10,.22,1);\n\ttransition:transform .5s cubic-bezier(.77,.10,.22,1)\n}\n.flowtime.no-transition {\n\t-o-transition:-o-transform 0s;\n\t-moz-transition:-moz-transform 0s;\n\t-webkit-transition:-webkit-transform 0s;\n\ttransition:transform 0s\n}\n.ft-section {\n\twidth:100%;\n\theight:100%;\n\tposition:relative;\n\t-o-transform:translateZ(0);\n\t-ms-transform:translateZ(0);\n\t-moz-transform:translateZ(0);\n\t-webkit-transform:translateZ(0);\n\ttransform:translateZ(0)\n}\n.ft-section,.ft-section-thumb {\n\tfont-size:16px;\n\tfont-size:1rem;\n\twhite-space:normal;\n\tdisplay:inline-block;\n\tvertical-align:top\n}\n.ft-page {\n\t-moz-box-sizing:border-box;\n\t-webkit-box-sizing:border-box;\n\tbox-sizing:border-box;\n\twidth:100%;\n\theight:100%;\n\tposition:relative;\n\tz-index:auto;\n\t-o-transform:translateZ(0);\n\t-ms-transform:translateZ(0);\n\t-moz-transform:translateZ(0);\n\t-webkit-transform:translateZ(0);\n\ttransform:translateZ(0)\n}\n.ft-page.actual {\n\tz-index:100\n}\n.ft-overview .ft-page {\n\tcursor:pointer;\n\t-o-transition:all .5s cubic-bezier(.77,.10,.22,1);\n\t-moz-transition:all .5s cubic-bezier(.77,.10,.22,1);\n\t-webkit-transition:all .5s cubic-bezier(.77,.10,.22,1);\n\ttransition:all .5s cubic-bezier(.77,.10,.22,1);\n\t-o-transform:scale(0.95);\n\t-ms-transform:scale(0.95);\n\t-moz-transform:scale(0.95);\n\t-webkit-transform:scale(0.95);\n\ttransform:scale(0.95);\n\t-o-transform-origin:50% 50%;\n\t-ms-transform-origin:50% 50%;\n\t-moz-transform-origin:50% 50%;\n\t-webkit-transform-origin:50% 50%;\n\ttransform-origin:50% 50%\n}\n.ft-overview .ft-page * {\n\tpointer-events:none\n}\n.ft-absolute-nav {\n\toverflow:hidden\n}\n.ft-absolute-nav .flowtime {\n\tposition:absolute\n}\n.ft-fragment {\n\topacity:0;\n\t-o-transition:all .3s cubic-bezier(.77,.10,.22,1);\n\t-moz-transition:all .3s cubic-bezier(.77,.10,.22,1);\n\t-webkit-transition:all .3s cubic-bezier(.77,.10,.22,1);\n\ttransition:all .3s cubic-bezier(.77,.10,.22,1);\n\t-o-transform:translateZ(0);\n\t-ms-transform:translateZ(0);\n\t-moz-transform:translateZ(0);\n\t-webkit-transform:translateZ(0);\n\ttransform:translateZ(0)\n}\n.ft-fragment.revealed.step {\n\topacity:.3\n}\n.ft-fragment.revealed.shy {\n\topacity:0\n}\n.ft-fragment.revealed,.ft-fragment.revealed-temp,.ft-fragment.revealed.actual {\n\topacity:1\n}\n.ft-default-progress {\n\tposition:fixed;\n\tbottom:16px;\n\tbottom:1rem;\n\tright:16px;\n\tright:1rem;\n\tz-index:1000;\n\topacity:.3;\n\t-o-transition:all .5s cubic-bezier(.77,.10,.22,1);\n\t-moz-transition:all .5s cubic-bezier(.77,.10,.22,1);\n\t-webkit-transition:all .5s cubic-bezier(.77,.10,.22,1);\n\ttransition:all .5s cubic-bezier(.77,.10,.22,1)\n}\n.ft-default-progress:hover {\n\topacity:1\n}\n.ft-overview .ft-default-progress {\n\topacity:0;\n\tpointer-events:none\n}\n.ft-page-thumb {\n\t-moz-box-sizing:border-box;\n\t-webkit-box-sizing:border-box;\n\tbox-sizing:border-box;\n\twidth:18px;\n\theight:12px;\n\tmargin-right:1px;\n\tmargin-bottom:1px;\n\tbackground-color:rgba(0,0,0,0.7);\n\tcursor:pointer;\n\t-o-transition:all .3s cubic-bezier(.77,.10,.22,1);\n\t-moz-transition:all .3s cubic-bezier(.77,.10,.22,1);\n\t-webkit-transition:all .3s cubic-bezier(.77,.10,.22,1);\n\ttransition:all .3s cubic-bezier(.77,.10,.22,1)\n}\n.ft-page-thumb:hover {\n\tbackground-color:rgba(255,255,255,0.7)\n}\n.ft-page-thumb.actual {\n\tbackground-color:rgba(255,255,255,0.5);\n\tborder:1px solid #fff\n}\nimg {\n\t-o-transform:translate3d(0,0,0);\n\t-ms-transform:translate3d(0,0,0);\n\t-moz-transform:translate3d(0,0,0);\n\t-webkit-transform:translate3d(0,0,0);\n\ttransform:translate3d(0,0,0);\n\t-o-backface-visibility:hidden;\n\t-ms-backface-visibility:hidden;\n\t-moz-backface-visibility:hidden;\n\t-webkit-backface-visibility:hidden;\n\tbackface-visibility:hidden\n}\n.parallax {\n\tposition:relative;\n\t-o-transition:all .5s cubic-bezier(.50,.10,.50,1);\n\t-moz-transition:all .5s cubic-bezier(.50,.10,.50,1);\n\t-webkit-transition:all .5s cubic-bezier(.50,.10,.50,1);\n\ttransition:all .5s cubic-bezier(.50,.10,.50,1)\n}\n.ft-overview .parallax {\n\t-o-transform:translate3d(0,0,0)!important;\n\t-ms-transform:translate3d(0,0,0)!important;\n\t-moz-transform:translate3d(0,0,0)!important;\n\t-webkit-transform:translate3d(0,0,0)!important;\n\ttransform:translate3d(0,0,0)!important\n}\n@font-face {\n\tfont-family:'RuiHeiXiTi';\n\tsrc:url('fonts/RuiHeiXiTi.otf') format('truetype');\n\tfont-weight:bold;\n\tfont-style:normal\n}\nhtml {\n\tfont-size:100%;\n\tline-height:1.5rem;\n\tbackground-color:#aaa;\n\tcolor:#6e2d52;\n\ttext-shadow:1px 1px 0 rgba(255,255,255,0.4)\n}\nbody,button {\n\tfont-family:\"RuiHeiXiTi\",sans-serif\n}\n.navigation,.credits,.switches {\n\tdisplay:none\n}\n.ft-page {\n\tpadding:1em;\n\tbackground-color:#fed1ea;\n\ttext-align:center\n}\n.flowtime h1,.flowtime h2,.flowtime h3,.flowtime h4,.flowtime h5,.flowtime h6,.flowtime p,.flowtime ul,.flowtime ol,.flowtime dl,.flowtime li,.flowtime dt,.flowtime dd {\n\tdisplay:block;\n\t-o-transition:all .3s cubic-bezier(.77,.10,.22,1);\n\t-moz-transition:all .3s cubic-bezier(.77,.10,.22,1);\n\t-webkit-transition:all .3s cubic-bezier(.77,.10,.22,1);\n\ttransition:all .3s cubic-bezier(.77,.10,.22,1)\n}\n.flowtime h1,.flowtime h2,.flowtime h3,.flowtime h4,.flowtime h5,.flowtime h6 {\n\tfont-weight:bold;\n\tcolor:#613b3b;\n\tpadding-top:1em\n}\n.flowtime h1 {\n\tfont-size:4rem;\n\tline-height:4.3rem\n}\n.flowtime h2 {\n\tfont-size:3rem;\n\tline-height:3.3rem\n}\n.flowtime h3 {\n\tfont-size:2.5rem;\n\tline-height:3rem\n}\n.flowtime h4,.flowtime h5,.flowtime h6 {\n\tfont-size:1.75rem;\n\tline-height:2rem\n}\n.flowtime p {\n\tfont-size:1.75rem;\n\tline-height:2rem;\n\tmargin:2rem 0\n}\n.flowtime ul,.flowtime ol,.flowtime dl {\n\tfont-size:1.75rem;\n\tline-height:2rem;\n\tmargin:2rem 0\n}\n.flowtime ul,.flowtime ol,.flowtime dl {\n\tmargin:0 2rem\n}\n.flowtime li,.flowtime dd {\n\tline-height:1.75rem;\n\tmargin-bottom:1rem;\n\tposition:relative\n}\n.flowtime dt {\n\tposition:relative\n}\n.flowtime ul li:before,.flowtime dl dt:before {\n\tcontent:\"\\2022\";\n\ttext-align:right;\n\tcolor:#fd0;\n\tmargin-right:.5rem;\n\tdisplay:inline-block;\n\tposition:absolute;\n\tleft:-1rem\n}\n.flowtime ol {\n\tcounter-reset:list\n}\n.flowtime ol li:before {\n\tcontent:counter(list) \".\";\n\tcounter-increment:list;\n\tfont-size:.75em;\n\tcolor:#fd0;\n\tmargin-right:.5rem;\n\tdisplay:inline-block;\n\tposition:relative;\n\ttop:-0.075em\n}\n.flowtime dl dd {\n\tfont-size:.8em;\n\tmargin-left:1rem\n}\n.flowtime small {\n\tfont-size:.6em;\n\tvertical-align:middle\n}\n.flowtime pre,.flowtime code {\n\tfont-family:monospace;\n\tmargin:1rem 0\n}\n.flowtime strong {\n\tfont-weight:bold;\n\tcolor:#fd0;\n\ttext-shadow:1px 2px 0 #000,1px -1px 0 rgba(0,0,0,0.3),-1px -1px 0 rgba(0,0,0,0.3),-1px 1px 0 rgba(0,0,0,0.3)\n}\n.flowtime q {\n\tquotes:\"“\" \"”\"\n}\n.flowtime q:before {\n\tcontent:open-quote\n}\n.flowtime q:after {\n\tcontent:close-quote\n}\n.flowtime blockquote {\n\tfont-size:1.5rem;\n\tmargin:1.5rem 2rem;\n\tpadding:1rem;\n\tbackground-color:rgba(0,0,0,0.3);\n\tborder-left:.5rem solid rgba(255,255,255,0.5);\n\tborder-radius:.5rem\n}\n.flowtime q,.flowtime cite,.flowtime blockquote {\n\tfont-style:italic\n}\n.flowtime .small {\n\tfont-size:.6em\n}\n.flowtime .attention {\n\tcolor:red;\n\ttext-shadow:1px 2px 0 #000,1px -1px 0 rgba(0,0,0,0.3),-1px -1px 0 rgba(0,0,0,0.3),-1px 1px 0 rgba(0,0,0,0.3)\n}\n.flowtime sup {\n\tfont-size:.7em;\n\tposition:relative;\n\ttop:-0.5em\n}\n.flowtime a,.flowtime a:link,.flowtime a:visited,.flowtime a:active,.flowtime a:focus {\n\tcolor:#666;\n\ttext-decoration:none\n}\n.flowtime a:hover {\n\tcolor:#666;\n\ttext-decoration:underline\n}\n.flowtime a:hover img,.flowtime a:active img,.flowtime a:focus img {\n\t-webkit-box-shadow:1px 2px 10px 5px rgba(0,0,0,0.5);\n\tbox-shadow:1px 2px 10px 5px rgba(0,0,0,0.5)\n}\n.flowtime .stack {\n\twidth:100%;\n\theight:100%;\n\tmargin:1rem 0;\n\tposition:relative\n}\n.flowtime .stacked {\n\twidth:100%;\n\tposition:absolute;\n\ttop:0;\n\tleft:0\n}\n.flowtime img {\n\tmax-width:100%;\n\tmax-height:100%;\n\tdisplay:block;\n\tmargin:0 auto\n}\n.flowtime .stack-center {\n\ttext-align:center;\n\twhite-space:nowrap;\n\tposition:absolute;\n\ttop:2rem;\n\tright:2rem;\n\tbottom:2rem;\n\tleft:2rem\n}\n.flowtime .stack-center:before {\n\tcontent:\"\";\n\theight:100%;\n\tdisplay:inline-block;\n\tvertical-align:middle\n}\n.flowtime .stack-center .stacked-center {\n\twhite-space:normal;\n\tmax-width:100%;\n\tmax-height:100%;\n\tdisplay:inline-block;\n\tvertical-align:middle\n}\n@media screen and (min-height:41em) and (min-width:80em) {\n\thtml {\n\tfont-size:120%\n}\n}@media screen and (min-height:50em) and (min-width:90em) {\n\thtml {\n\tfont-size:140%\n}\n}@media screen and (max-device-height:578px) {\n\thtml {\n\tfont-size:50%\n}\n}.parallax-demo {\n\toverflow:hidden\n}\n.parallax-demo .kingmix {\n\tposition:absolute;\n\tleft:20%;\n\tbottom:-10%;\n\tz-index:50\n}\n.parallax-demo .sax {\n\tposition:absolute;\n\tleft:6%;\n\tbottom:-18%;\n\tz-index:40\n}\n.parallax-demo .tone {\n\tposition:absolute;\n\tleft:49%;\n\tbottom:-32%;\n\tz-index:30\n}\n.ft-overview .section-1 {\n\tmargin-top:0\n}\n.ft-overview .section-2 {\n\tmargin-top:-40%\n}\n.ft-overview .section-3 {\n\tmargin-top:-40%\n}\n.ft-overview .section-4 {\n\tmargin-top:0\n}\n.ft-overview .section-5 {\n\tmargin-top:60%\n}\n.ft-overview .section-6 {\n\tmargin-top:0\n}\n.ft-overview .section-7 {\n\tmargin-top:-40%\n}\n.ft-overview .section-8 {\n\tmargin-top:-40%\n}\n.ft-overview .section-9 {\n\tmargin-top:0\n}\n.ft-page-thumb {\n\tbackground-color:#a54479\n}\n.ft-page-thumb.actual {\n\tbackground-color:#44a54a;\n\tborder:0\n}\n.ft-default-progress {\n\tbottom:3rem;\n\tright:2rem\n}\n.thumb-section-0 {\n\tposition:relative;\n\ttop:13px\n}\n.thumb-section-3 {\n\tposition:relative;\n\ttop:13px\n}\n.thumb-section-4 {\n\tposition:relative;\n\ttop:26px\n}\n.thumb-section-5 {\n\tposition:relative;\n\ttop:13px\n}\n.thumb-section-8 {\n\tposition:relative;\n\ttop:13px\n}\n.thumb-section-8 {\n\tposition:relative;\n\ttop:13px\n}\n.left-img {\n\tpadding:0;\n\ttext-align:left\n}\n.left-img img {\n\tposition:absolute;\n\tleft:0;\n\ttop:0;\n\theight:100%;\n\tz-index:1\n}\n.left-img p,.left-img h3,.left-img .text {\n\tposition:absolute;\n\ttop:1em;\n\tright:1em;\n\tz-index:2;\n\ttext-align:right\n}\n.full-img {\n\tpadding:0\n}\n.full-img img {\n\twidth:100%;\n\theight:100%\n}\n.full-img h3,.full-img .text,.full-img .center-text {\n\tposition:absolute;\n\twidth:100%;\n\ttext-align:center;\n\tz-index:2\n}\n.right-img {\n\tpadding:0;\n\ttext-align:left\n}\n.right-img img,.right-img .text {\n\tposition:absolute\n}\n.right-img img {\n\tmargin:0;\n\theight:100%;\n\tright:0;\n\ttop:0;\n\tz-index:1\n}\n.right-img .text {\n\tleft:0;\n\ttop:0;\n\tz-index:2;\n\tpadding:2em\n}\n.center-img {\n\twidth:100%;\n\theight:100%;\n\tbackground-position:center center;\n\tbackground-repeat:no-repeat\n}\n.top-text {\n\tpadding:0\n}\n.bottom-text h3 {\n\theight:10%;\n\tpadding-bottom:10%\n}\n.bottom-text img {\n\theight:80%\n}\n.page-1 {\n\tbackground:#fff url(img/iali53.jpg) bottom right no-repeat;\n\ttext-align:left\n}\n.page-1 p {\n\tfont-size:1em\n}\n.page-1 img {\n\tmargin:1em auto 0 1em\n}\n.page-1 .text1 {\n\tfont-size:3em;\n\tcolor:#FA4A4A;\n\tline-height:2em;\n\tmargin:0.5em 0 0 0.5em\n}\n.page-1 .text2 {\n\tfont-size:1.2em;\n\tmargin:1.5em 0 0 1.5em\n}\n.flowtime .page-1 a {\n\tcolor:#6e2626\n}\n.page-1 input {\n\tfont-size:0.6em;\n\tpadding:6px 8px;\n\twidth:8rem;\n\ttext-align:center;\n\tborder:1px solid #ccc;\n\tvertical-align:6px;\n}\n.page-2 {\n\tbackground-color:#fefff1;\n\tpadding:0;\n\ttext-align:center\n}\n.page-2 p {\n\theight:10%;\n\tpadding-top:5%;\n\tmargin:0\n}\n.page-2 img {\n\theight:80%\n}\n.page-3 {\n\tbackground-color:#c1b287\n}\n.page-6 {\n\tbackground-color:#ecfafb;\n\tpadding:0\n}\n.page-6 img {\n\tposition:absolute;\n\tbottom:0;\n\tleft:0;\n\tmax-width:70%\n}\n.page-6 h3 {\n\tposition:absolute;\n\tright:10%;\n\ttop:45%;\n\tcolor:#bc195b\n}\n.page-7 {\n\tbackground-color:#e6fbec\n}\n.page-7 img {\n\tmax-height:100%;\n\tmargin:0 auto\n}\n.page-7 h3 {\n\tposition:absolute;\n\ttop:1em;\n\tleft:50%;\n\tpadding:0;\n\tmargin-top:0;\n\tmargin-left:-240px;\n\tz-index:1\n}\n.page-8 {\n\tbackground:#66cbff\n}\n.page-8 h3 {\n\tcolor:#eef;\n\tposition:absolute;\n\ttop:1em;\n\tleft:50%;\n\tmargin-left:-40%;\n\tpadding:0;\n\tmargin-top:0;\n\twidth:10em;\n\ttext-align:left\n}\n.page-8 h3 span {\n\tdisplay:inline-block;\n\twidth:1em;\n\tvertical-align:top\n}\n.page-9 {\n\tbackground-color:#c9f4fb\n}\n.page-9 img {\n\tmargin-top:3em\n}\n.page-10 {\n\tbackground:url(img/iali22_bg.jpg)\n}\n.page-12 {\n\tbackground-color:#aff1ff;\n\tpadding:0\n}\n.page-12 img {\n\tposition:absolute;\n\tbottom:1em;\n\tleft:1em;\n\tz-index:2;\n\theight:40%\n}\n.page-12 h3 {\n\tmargin-left:1em;\n\tmargin-right:1em\n}\n.page-13 {\n\tbackground-color:#feeff4;\n\tpadding:0\n}\n.page-13 img {\n\theight:80%\n}\n.page-13 he {\n\theight:20%\n}\n.page-14 {\n\tbackground-color:#fbf7d1\n}\n.page-15 {\n\tbackground:#dcf2fa url(img/iali45_bg.jpg)\n}\n.page-16 {\n\tbackground-color:#7db6df\n}\n.page-17 {\n\tbackground-color:#e5f0f2\n}\n.page-19 {\n\tbackground-image:url(img/iali75_bg.jpg)\n}\n.page-19 h3 {\n\tmargin-bottom:2em\n}\n.page-18 .text {\n\tmargin-left:1em;\n\tmargin-right:1em\n}\n.page-20 {\n\tbackground-color:#fcd0ca;\n\tpadding:0\n}\n.page-20 img {\n\tposition:absolute;\n\tbottom:0;\n\tleft:4em\n}\n.page-21 {\n\tbackground:#fbf2a3 url(img/iali59_bg.jpg)\n}\n.page-22 {\n\tbackground-color:#f5d484\n}\n.page-23 {\n\tbackground-color:#fff\n}\n.page-25 {\n\tbackground-color:#fcc1b1\n}\n.page-26 {\n\tbackground-color:#fdeacf\n}\n.page-27 {\n\tbackground-color:#ffc8c5;\n\tpadding:0\n}\n.page-27 h3 {\n\tposition:absolute;\n\tz-index:2;\n\twidth:100%;\n\ttext-align:center\n}\n.page-28 {\n\tbackground:#b7e7f3 url(img/iali40_bg.jpg) bottom repeat-x;\n\tpadding:0\n}\n.page-28 img {\n\tposition:absolute;\n\tbottom:0;\n\tleft:3em\n}\n.page-28 h3 {\n\tposition:absolute;\n\tright:1em;\n\tbottom:360px;\n\ttext-align:right;\n\tcolor:#127184\n}\n.page-29 {\n\tbackground:#0d85d1;\n\tpadding:0\n}\n.page-29 h3 {\n\tposition:absolute;\n\tz-index:2;\n\twidth:100%;\n\ttext-align:center;\n\tcolor:#eef\n}\n.page-30 {\n\tbackground:#fff url(img/iali76_bg.png) center bottom repeat-x;\n\tpadding:0;\n\tpadding:0\n}\n.page-30 img {\n\tposition:absolute;\n\tbottom:0;\n\tleft:0\n}\n.page-31 {\n\tbackground-color:#fbf5e9\n}\n.page-32 {\n\tbackground-color:#faf2e5\n}\n.page-33 {\n\tbackground-color:#fef0d5;\n\tpadding:0\n}\n.page-33 h3 {\n\tfont-size:1.8em;\n\tcolor:#a58545\n}\n.page-34 {\n\tbackground:#94c2e3 url(img/iali57.jpg) left bottom no-repeat\n}\n.page-34 h3 {\n\tcolor:#fff\n}\n.page-35 {\n\tbackground:#fff url(img/iali8_bg.png) left bottom repeat-x;\n\tpadding:0\n}\n.page-35 img {\n\tposition:absolute;\n\tbottom:0;\n\tleft:0;\n\tz-index:1\n}\n.page-35 h3 {\n\tposition:absolute;\n\tright:10%;\n\ttop:5%;\n\tcolor:green;\n\tz-index:2;\n\tfont-size:2em\n}\n.page-36 h3 {\n\ttext-align:right;\n\tright:1.5em;\n\tcolor:#eee\n}\n.page-37 {\n\tbackground-color:#fff\n}\n.page-38 {\n\tbackground-color:#fff8f2\n}\n.page-39 {\n\tbackground:#e8ccc1 url(img/iali2_bg.jpg) repeat\n}\n.page-40 {\n\tbackground-color:#cde7f4\n}\n.page-40 img {\n\tposition:absolute;\n\tbottom:1em;\n\tleft:1em;\n\tz-index:1\n}\n.page-40 h3 {\n\tposition:absolute;\n\ttop:1em;\n\tright:1em;\n\tz-index:2\n}\n.page-41 {\n\tbackground-color:#5aaadc;\n\tpadding:0\n}\n.page-41 .img2,.page-41 .img1 {\n\tposition:absolute\n}\n.page-41 .img1 {\n\tleft:1em;\n\tbottom:1em\n}\n.page-41 .img2 {\n\tright:1em;\n\ttop:1em\n}\n.page-41 h3 {\n\tpadding:0;\n\tposition:absolute;\n\ttop:35%;\n\twidth:100%;\n\ttext-align:center\n}\n.page-42 {\n\tbackground-color:#c1c567\n}\n.page-42 img {\n\tposition:absolute;\n\tbottom:2em;\n\tleft:1em\n}\n.page-42 h3 {\n\tfont-size:2em\n}\n.page-43 {\n\tbackground-color:#6b79ad\n}\n.page-43 img {\n\tmax-height:80%\n}\n.page-43 h2 {\n\tcolor:#fff\n}\n.page-44 {\n\tbackground-color:#f3e7ab\n}\n.page-45 {\n\tbackground-color:#b1dceb\n}\n.page-46 {\n\tbackground:#66cbff\n}\n.page-46 h3 {\n\tposition:absolute;\n\ttop:1em;\n\tleft:50%;\n\tmargin-left:-40%;\n\tpadding:0;\n\tmargin-top:0;\n\twidth:10em;\n\ttext-align:left\n}\n.page-46 h3 span {\n\tdisplay:inline-block;\n\twidth:1em;\n\tvertical-align:top\n}\n.page-47 {\n\tbackground-color:#fdcbca\n}\n.page-47 h3 {\n\tposition:absolute;\n\ttop:1em;\n\tleft:50%;\n\tmargin-left:-40%;\n\tpadding:0;\n\tmargin-top:0;\n\twidth:10em;\n\ttext-align:left\n}\n.page-47 h3 span {\n\tdisplay:inline-block;\n\twidth:1em;\n\tvertical-align:top\n}\n.page-48 {\n\tbackground-color:#e3e2e7\n}\n.page-49 {\n\tbackground-color:#fce6b6;\n\ttext-align:left\n}\n.page-49 img {\n\tmargin:0\n}\n.page-50 {\n\tbackground-color:#aae1f6;\n\tpadding:0\n}\n.page-50 .img1 {\n\tposition:absolute;\n\tright:0;\n\ttop:0\n}\n.page-50 .img2 {\n\tposition:absolute;\n\tleft:1em;\n\tbottom:1em\n}\n.page-50 p {\n\tposition:absolute;\n\ttop:1em;\n\tleft:1em;\n\twidth:50%;\n\tmargin:0;\n\tz-index:3;\n\tfont-size:1.5em\n}\n.page-51 {\n\tbackground-image:url(img/iali52.jpg);\n\tbackground-size:cover;\n\tbackground-color:#fff;\n\ttext-align:left\n}\n.page-52 {\n\tbackground-color:#fff2fb;\n\tpadding:0\n}\n.page-52 h3 {\n\tmargin:0;\n\tpadding-top:.8em;\n\tfont-size:1.6em;\n\tcolor:#4e0f3d\n}\n.page-53 {\n\tbackground-color:#febebe\n}\n.page-54 {\n\tbackground:#d3d2d0 url(img/319280_bg.jpg) repeat\n}\n.page-54 .center-img {\n\tbackground-image:url(img/319280.jpg);\n\ttext-indent:-99999px\n}\n.page-54 h3 {\n\tline-height:1rem;\n\tpadding-top:0.5em\n}\n.page-55 {\n\tbackground-color:#fff\n}\n.write-tip {\n\tposition:fixed;\n\tdisplay:block;\n\tcolor:#333;\n\tfont-size:16px;\n\tbottom:0.2em;\n\tleft:33%;\n\tpadding:3px;\n\tz-index:999;\n\tbackground-color:#fff;\n\tborder:1px solid #D3D3D3;\n\tborder-radius:4px\n}\n.write-tip img {\n\tvertical-align:-2px;\n\tmargin-left:5px;\n\tcursor:pointer\n}\n.write-tip button {\n\tcolor:#fff;\n\tfont-size:15px;\n\tdisplay:inline-block;\n\tbackground-color:#428bca;\n\tpadding:6px 12px;\n\tmargin-left:5px;\n\tvertical-align:1px;\n\tborder:1px solid #357ebd;\n\tborder-radius:4px;\n\toutline:none;\n\tcursor:pointer\n}\n.write-tip button:hover {\n\tbackground-color:#3276b1;\n\tborder-color:#285e8e\n}\n.write-tip button:active {\n\tbox-shadow:inset 0 3px 5px rgba(0,0,0,0.125)\n}\n.write-ok {\n\tposition:fixed;\n\ttop:0;\n\tleft:0;\n\twidth:100%;\n\theight:100%;\n\tz-index:999;\n\tbackground-color:#FCC7E2;\n\tbackground-attachment:fixed;\n\tdisplay:none\n}\n.write-ok .write-box {\n\tposition:relative;\n\tmargin:15% auto;\n\tpadding:20px;\n\ttext-align:center;\n\twidth:50%;\n\theight:45%;\n\tbackground:#fff;\n\tbox-shadow:0px 0px 10px 0px #F7B5DC;\n\tborder-radius:8px;\n}\n.write-box h2 {\n\tfont-size:2em;\n\tline-height:2.5em;\n\tcolor:#5EAF6F;\n\ttext-shadow:1px 1px 3px #D3D3D3;\n}\n.write-box p {\n\tline-height:2em;\n\twhite-space:pre-wrap;\n\tword-wrap:break-word\n}\n.write-box p u,.write-box p a {\n\tcolor:#007ed9;\n}\n.write-box p u:hover,.write-box p a:hover {\n\tcolor:#EB56AF;\n}\n.write-box p span {\n\tdisplay:inline-block;\n\tmin-width:1em;\n\tline-height:1.3em;\n\tpadding:0 2px;\n\tmargin:0 2px;\n\toutline:1px solid #ccc\n}\n.write-box p i {\n\tposition:relative;\n\ttop:-1px;\n\tfont-size:0.8em;\n\tcolor:#806D6D;\n\tpadding:3px 4px;\n\tbackground:#F7F7F7;\n\tborder:1px solid #E7E7E7;\n\tborder-radius:6px;\n\tdisplay:none;\n}\n.write-box p small {\n\tline-height:3em;\n\tfont-size:90%;\n\tcolor:#999;\n}\n.write-box #back {\n\tcolor:#888;\n\tmargin-right:5px\n}\n.write-box button {\n\tcolor:#fff;\n\tfont-size:1.2em;\n\tdisplay:inline-block;\n\tbackground-color:#428bca;\n\tpadding:13px 14px;\n\tmargin-top:1em;\n\tborder:1px solid #357ebd;\n\tborder-radius:4px;\n\toutline:none;\n\tcursor:pointer\n}\n.write-box button:hover {\n\tbackground-color:#3276b1;\n\tborder-color:#285e8e\n}\n.write-tip button:active {\n\tbox-shadow:inset 0 3px 5px rgba(0,0,0,0.125)\n}\n.write-share {\n\tbackground:#f1f1f1;\n\ttext-align:center;\n\tdisplay:inline-block;\n\tpadding:13px 14px;\n\tmargin-top:1em;\n\tborder:1px solid #DADADA;\n\tborder-radius:4px;\n\tdisplay:none;\n}\n.disabled {\n\tpointer-events:none;\n\tcursor:not-allowed;\n\topacity:.65;\n\tfilter:alpha(opacity=65);\n\tbox-shadow:none;\n}\n.mPower{position: fixed;bottom: 9rem;right: 6.2rem;z-index: 999;}#on, #off{width: 16px;height: 16px;display: inline-block;margin-bottom: -3px;filter: alpha(opacity=0.8);opacity: 0.8;cursor: pointer;}#on:hover, #off:hover{filter: alpha(opacity=4);opacity: 1}#on{background: url(img/music.png) left center no-repeat;}#off{background: url(img/mute.png) left center no-repeat;display: none;}","date":"2019-05-15T09:36:05.047Z","updated":"2019-05-15T09:36:05.047Z","path":"love/all.min.css","layout":"false","title":"","comments":1,"_id":"ck0ozhj4h007ngkuw4i4r3kfc","content":"html,body,div,span,applet,object,iframe,h1,h2,h3,h4,h5,h6,p,blockquote,pre,a,abbr,acronym,address,big,cite,code,del,dfn,em,img,ins,kbd,q,s,samp,small,strike,strong,sub,sup,tt,var,b,u,i,center,dl,dt,dd,ol,ul,li,fieldset,form,label,legend,table,caption,tbody,tfoot,thead,tr,th,td,article,aside,canvas,details,embed,figure,figcaption,footer,header,hgroup,menu,nav,output,ruby,section,summary,time,mark,audio,video {\n\tmargin:0;\n\tpadding:0;\n\tborder:0;\n\tfont-size:100%;\n\tfont:inherit;\n\tvertical-align:baseline\n}\narticle,aside,details,figcaption,figure,footer,header,hgroup,menu,nav,section {\n\tdisplay:block\n}\nbody {\n\tline-height:1\n}\nstrong,b {\n\tfont-weight:bold\n}\nol,ul {\n\tlist-style:none\n}\nblockquote,q {\n\tquotes:none\n}\nblockquote:before,blockquote:after,q:before,q:after {\n\tcontent:'';\n\tcontent:none\n}\ntable {\n\tborder-collapse:collapse;\n\tborder-spacing:0\n}\nhtml,body {\n\twidth:100%;\n\theight:100%;\n\t-webkit-text-size-adjust:none\n}\nbody {\n\twhite-space:nowrap\n}\n.nojavascript {\n\tposition:fixed;\n\ttop:0;\n\twidth:100%;\n\ttext-align:center;\n\tfont-size:3em;\n}\n.flowtime {\n\tfont-size:0;\n\twidth:100%;\n\theight:100%;\n\t-o-transform-origin:0 0;\n\t-ms-transform-origin:0 0;\n\t-moz-transform-origin:0 0;\n\t-webkit-transform-origin:0 0;\n\ttransform-origin:0 0;\n\t-o-transform:translateZ(0);\n\t-ms-transform:translateZ(0);\n\t-moz-transform:translateZ(0);\n\t-webkit-transform:translateZ(0);\n\ttransform:translateZ(0);\n\t-o-backface-visibility:hidden;\n\t-ms-backface-visibility:hidden;\n\t-moz-backface-visibility:hidden;\n\t-webkit-backface-visibility:hidden;\n\tbackface-visibility:hidden;\n\t-o-transition:-o-transform .5s cubic-bezier(.77,.10,.22,1);\n\t-moz-transition:-moz-transform .5s cubic-bezier(.77,.10,.22,1);\n\t-webkit-transition:-webkit-transform .5s cubic-bezier(.77,.10,.22,1);\n\ttransition:transform .5s cubic-bezier(.77,.10,.22,1)\n}\n.flowtime.no-transition {\n\t-o-transition:-o-transform 0s;\n\t-moz-transition:-moz-transform 0s;\n\t-webkit-transition:-webkit-transform 0s;\n\ttransition:transform 0s\n}\n.ft-section {\n\twidth:100%;\n\theight:100%;\n\tposition:relative;\n\t-o-transform:translateZ(0);\n\t-ms-transform:translateZ(0);\n\t-moz-transform:translateZ(0);\n\t-webkit-transform:translateZ(0);\n\ttransform:translateZ(0)\n}\n.ft-section,.ft-section-thumb {\n\tfont-size:16px;\n\tfont-size:1rem;\n\twhite-space:normal;\n\tdisplay:inline-block;\n\tvertical-align:top\n}\n.ft-page {\n\t-moz-box-sizing:border-box;\n\t-webkit-box-sizing:border-box;\n\tbox-sizing:border-box;\n\twidth:100%;\n\theight:100%;\n\tposition:relative;\n\tz-index:auto;\n\t-o-transform:translateZ(0);\n\t-ms-transform:translateZ(0);\n\t-moz-transform:translateZ(0);\n\t-webkit-transform:translateZ(0);\n\ttransform:translateZ(0)\n}\n.ft-page.actual {\n\tz-index:100\n}\n.ft-overview .ft-page {\n\tcursor:pointer;\n\t-o-transition:all .5s cubic-bezier(.77,.10,.22,1);\n\t-moz-transition:all .5s cubic-bezier(.77,.10,.22,1);\n\t-webkit-transition:all .5s cubic-bezier(.77,.10,.22,1);\n\ttransition:all .5s cubic-bezier(.77,.10,.22,1);\n\t-o-transform:scale(0.95);\n\t-ms-transform:scale(0.95);\n\t-moz-transform:scale(0.95);\n\t-webkit-transform:scale(0.95);\n\ttransform:scale(0.95);\n\t-o-transform-origin:50% 50%;\n\t-ms-transform-origin:50% 50%;\n\t-moz-transform-origin:50% 50%;\n\t-webkit-transform-origin:50% 50%;\n\ttransform-origin:50% 50%\n}\n.ft-overview .ft-page * {\n\tpointer-events:none\n}\n.ft-absolute-nav {\n\toverflow:hidden\n}\n.ft-absolute-nav .flowtime {\n\tposition:absolute\n}\n.ft-fragment {\n\topacity:0;\n\t-o-transition:all .3s cubic-bezier(.77,.10,.22,1);\n\t-moz-transition:all .3s cubic-bezier(.77,.10,.22,1);\n\t-webkit-transition:all .3s cubic-bezier(.77,.10,.22,1);\n\ttransition:all .3s cubic-bezier(.77,.10,.22,1);\n\t-o-transform:translateZ(0);\n\t-ms-transform:translateZ(0);\n\t-moz-transform:translateZ(0);\n\t-webkit-transform:translateZ(0);\n\ttransform:translateZ(0)\n}\n.ft-fragment.revealed.step {\n\topacity:.3\n}\n.ft-fragment.revealed.shy {\n\topacity:0\n}\n.ft-fragment.revealed,.ft-fragment.revealed-temp,.ft-fragment.revealed.actual {\n\topacity:1\n}\n.ft-default-progress {\n\tposition:fixed;\n\tbottom:16px;\n\tbottom:1rem;\n\tright:16px;\n\tright:1rem;\n\tz-index:1000;\n\topacity:.3;\n\t-o-transition:all .5s cubic-bezier(.77,.10,.22,1);\n\t-moz-transition:all .5s cubic-bezier(.77,.10,.22,1);\n\t-webkit-transition:all .5s cubic-bezier(.77,.10,.22,1);\n\ttransition:all .5s cubic-bezier(.77,.10,.22,1)\n}\n.ft-default-progress:hover {\n\topacity:1\n}\n.ft-overview .ft-default-progress {\n\topacity:0;\n\tpointer-events:none\n}\n.ft-page-thumb {\n\t-moz-box-sizing:border-box;\n\t-webkit-box-sizing:border-box;\n\tbox-sizing:border-box;\n\twidth:18px;\n\theight:12px;\n\tmargin-right:1px;\n\tmargin-bottom:1px;\n\tbackground-color:rgba(0,0,0,0.7);\n\tcursor:pointer;\n\t-o-transition:all .3s cubic-bezier(.77,.10,.22,1);\n\t-moz-transition:all .3s cubic-bezier(.77,.10,.22,1);\n\t-webkit-transition:all .3s cubic-bezier(.77,.10,.22,1);\n\ttransition:all .3s cubic-bezier(.77,.10,.22,1)\n}\n.ft-page-thumb:hover {\n\tbackground-color:rgba(255,255,255,0.7)\n}\n.ft-page-thumb.actual {\n\tbackground-color:rgba(255,255,255,0.5);\n\tborder:1px solid #fff\n}\nimg {\n\t-o-transform:translate3d(0,0,0);\n\t-ms-transform:translate3d(0,0,0);\n\t-moz-transform:translate3d(0,0,0);\n\t-webkit-transform:translate3d(0,0,0);\n\ttransform:translate3d(0,0,0);\n\t-o-backface-visibility:hidden;\n\t-ms-backface-visibility:hidden;\n\t-moz-backface-visibility:hidden;\n\t-webkit-backface-visibility:hidden;\n\tbackface-visibility:hidden\n}\n.parallax {\n\tposition:relative;\n\t-o-transition:all .5s cubic-bezier(.50,.10,.50,1);\n\t-moz-transition:all .5s cubic-bezier(.50,.10,.50,1);\n\t-webkit-transition:all .5s cubic-bezier(.50,.10,.50,1);\n\ttransition:all .5s cubic-bezier(.50,.10,.50,1)\n}\n.ft-overview .parallax {\n\t-o-transform:translate3d(0,0,0)!important;\n\t-ms-transform:translate3d(0,0,0)!important;\n\t-moz-transform:translate3d(0,0,0)!important;\n\t-webkit-transform:translate3d(0,0,0)!important;\n\ttransform:translate3d(0,0,0)!important\n}\n@font-face {\n\tfont-family:'RuiHeiXiTi';\n\tsrc:url('fonts/RuiHeiXiTi.otf') format('truetype');\n\tfont-weight:bold;\n\tfont-style:normal\n}\nhtml {\n\tfont-size:100%;\n\tline-height:1.5rem;\n\tbackground-color:#aaa;\n\tcolor:#6e2d52;\n\ttext-shadow:1px 1px 0 rgba(255,255,255,0.4)\n}\nbody,button {\n\tfont-family:\"RuiHeiXiTi\",sans-serif\n}\n.navigation,.credits,.switches {\n\tdisplay:none\n}\n.ft-page {\n\tpadding:1em;\n\tbackground-color:#fed1ea;\n\ttext-align:center\n}\n.flowtime h1,.flowtime h2,.flowtime h3,.flowtime h4,.flowtime h5,.flowtime h6,.flowtime p,.flowtime ul,.flowtime ol,.flowtime dl,.flowtime li,.flowtime dt,.flowtime dd {\n\tdisplay:block;\n\t-o-transition:all .3s cubic-bezier(.77,.10,.22,1);\n\t-moz-transition:all .3s cubic-bezier(.77,.10,.22,1);\n\t-webkit-transition:all .3s cubic-bezier(.77,.10,.22,1);\n\ttransition:all .3s cubic-bezier(.77,.10,.22,1)\n}\n.flowtime h1,.flowtime h2,.flowtime h3,.flowtime h4,.flowtime h5,.flowtime h6 {\n\tfont-weight:bold;\n\tcolor:#613b3b;\n\tpadding-top:1em\n}\n.flowtime h1 {\n\tfont-size:4rem;\n\tline-height:4.3rem\n}\n.flowtime h2 {\n\tfont-size:3rem;\n\tline-height:3.3rem\n}\n.flowtime h3 {\n\tfont-size:2.5rem;\n\tline-height:3rem\n}\n.flowtime h4,.flowtime h5,.flowtime h6 {\n\tfont-size:1.75rem;\n\tline-height:2rem\n}\n.flowtime p {\n\tfont-size:1.75rem;\n\tline-height:2rem;\n\tmargin:2rem 0\n}\n.flowtime ul,.flowtime ol,.flowtime dl {\n\tfont-size:1.75rem;\n\tline-height:2rem;\n\tmargin:2rem 0\n}\n.flowtime ul,.flowtime ol,.flowtime dl {\n\tmargin:0 2rem\n}\n.flowtime li,.flowtime dd {\n\tline-height:1.75rem;\n\tmargin-bottom:1rem;\n\tposition:relative\n}\n.flowtime dt {\n\tposition:relative\n}\n.flowtime ul li:before,.flowtime dl dt:before {\n\tcontent:\"\\2022\";\n\ttext-align:right;\n\tcolor:#fd0;\n\tmargin-right:.5rem;\n\tdisplay:inline-block;\n\tposition:absolute;\n\tleft:-1rem\n}\n.flowtime ol {\n\tcounter-reset:list\n}\n.flowtime ol li:before {\n\tcontent:counter(list) \".\";\n\tcounter-increment:list;\n\tfont-size:.75em;\n\tcolor:#fd0;\n\tmargin-right:.5rem;\n\tdisplay:inline-block;\n\tposition:relative;\n\ttop:-0.075em\n}\n.flowtime dl dd {\n\tfont-size:.8em;\n\tmargin-left:1rem\n}\n.flowtime small {\n\tfont-size:.6em;\n\tvertical-align:middle\n}\n.flowtime pre,.flowtime code {\n\tfont-family:monospace;\n\tmargin:1rem 0\n}\n.flowtime strong {\n\tfont-weight:bold;\n\tcolor:#fd0;\n\ttext-shadow:1px 2px 0 #000,1px -1px 0 rgba(0,0,0,0.3),-1px -1px 0 rgba(0,0,0,0.3),-1px 1px 0 rgba(0,0,0,0.3)\n}\n.flowtime q {\n\tquotes:\"“\" \"”\"\n}\n.flowtime q:before {\n\tcontent:open-quote\n}\n.flowtime q:after {\n\tcontent:close-quote\n}\n.flowtime blockquote {\n\tfont-size:1.5rem;\n\tmargin:1.5rem 2rem;\n\tpadding:1rem;\n\tbackground-color:rgba(0,0,0,0.3);\n\tborder-left:.5rem solid rgba(255,255,255,0.5);\n\tborder-radius:.5rem\n}\n.flowtime q,.flowtime cite,.flowtime blockquote {\n\tfont-style:italic\n}\n.flowtime .small {\n\tfont-size:.6em\n}\n.flowtime .attention {\n\tcolor:red;\n\ttext-shadow:1px 2px 0 #000,1px -1px 0 rgba(0,0,0,0.3),-1px -1px 0 rgba(0,0,0,0.3),-1px 1px 0 rgba(0,0,0,0.3)\n}\n.flowtime sup {\n\tfont-size:.7em;\n\tposition:relative;\n\ttop:-0.5em\n}\n.flowtime a,.flowtime a:link,.flowtime a:visited,.flowtime a:active,.flowtime a:focus {\n\tcolor:#666;\n\ttext-decoration:none\n}\n.flowtime a:hover {\n\tcolor:#666;\n\ttext-decoration:underline\n}\n.flowtime a:hover img,.flowtime a:active img,.flowtime a:focus img {\n\t-webkit-box-shadow:1px 2px 10px 5px rgba(0,0,0,0.5);\n\tbox-shadow:1px 2px 10px 5px rgba(0,0,0,0.5)\n}\n.flowtime .stack {\n\twidth:100%;\n\theight:100%;\n\tmargin:1rem 0;\n\tposition:relative\n}\n.flowtime .stacked {\n\twidth:100%;\n\tposition:absolute;\n\ttop:0;\n\tleft:0\n}\n.flowtime img {\n\tmax-width:100%;\n\tmax-height:100%;\n\tdisplay:block;\n\tmargin:0 auto\n}\n.flowtime .stack-center {\n\ttext-align:center;\n\twhite-space:nowrap;\n\tposition:absolute;\n\ttop:2rem;\n\tright:2rem;\n\tbottom:2rem;\n\tleft:2rem\n}\n.flowtime .stack-center:before {\n\tcontent:\"\";\n\theight:100%;\n\tdisplay:inline-block;\n\tvertical-align:middle\n}\n.flowtime .stack-center .stacked-center {\n\twhite-space:normal;\n\tmax-width:100%;\n\tmax-height:100%;\n\tdisplay:inline-block;\n\tvertical-align:middle\n}\n@media screen and (min-height:41em) and (min-width:80em) {\n\thtml {\n\tfont-size:120%\n}\n}@media screen and (min-height:50em) and (min-width:90em) {\n\thtml {\n\tfont-size:140%\n}\n}@media screen and (max-device-height:578px) {\n\thtml {\n\tfont-size:50%\n}\n}.parallax-demo {\n\toverflow:hidden\n}\n.parallax-demo .kingmix {\n\tposition:absolute;\n\tleft:20%;\n\tbottom:-10%;\n\tz-index:50\n}\n.parallax-demo .sax {\n\tposition:absolute;\n\tleft:6%;\n\tbottom:-18%;\n\tz-index:40\n}\n.parallax-demo .tone {\n\tposition:absolute;\n\tleft:49%;\n\tbottom:-32%;\n\tz-index:30\n}\n.ft-overview .section-1 {\n\tmargin-top:0\n}\n.ft-overview .section-2 {\n\tmargin-top:-40%\n}\n.ft-overview .section-3 {\n\tmargin-top:-40%\n}\n.ft-overview .section-4 {\n\tmargin-top:0\n}\n.ft-overview .section-5 {\n\tmargin-top:60%\n}\n.ft-overview .section-6 {\n\tmargin-top:0\n}\n.ft-overview .section-7 {\n\tmargin-top:-40%\n}\n.ft-overview .section-8 {\n\tmargin-top:-40%\n}\n.ft-overview .section-9 {\n\tmargin-top:0\n}\n.ft-page-thumb {\n\tbackground-color:#a54479\n}\n.ft-page-thumb.actual {\n\tbackground-color:#44a54a;\n\tborder:0\n}\n.ft-default-progress {\n\tbottom:3rem;\n\tright:2rem\n}\n.thumb-section-0 {\n\tposition:relative;\n\ttop:13px\n}\n.thumb-section-3 {\n\tposition:relative;\n\ttop:13px\n}\n.thumb-section-4 {\n\tposition:relative;\n\ttop:26px\n}\n.thumb-section-5 {\n\tposition:relative;\n\ttop:13px\n}\n.thumb-section-8 {\n\tposition:relative;\n\ttop:13px\n}\n.thumb-section-8 {\n\tposition:relative;\n\ttop:13px\n}\n.left-img {\n\tpadding:0;\n\ttext-align:left\n}\n.left-img img {\n\tposition:absolute;\n\tleft:0;\n\ttop:0;\n\theight:100%;\n\tz-index:1\n}\n.left-img p,.left-img h3,.left-img .text {\n\tposition:absolute;\n\ttop:1em;\n\tright:1em;\n\tz-index:2;\n\ttext-align:right\n}\n.full-img {\n\tpadding:0\n}\n.full-img img {\n\twidth:100%;\n\theight:100%\n}\n.full-img h3,.full-img .text,.full-img .center-text {\n\tposition:absolute;\n\twidth:100%;\n\ttext-align:center;\n\tz-index:2\n}\n.right-img {\n\tpadding:0;\n\ttext-align:left\n}\n.right-img img,.right-img .text {\n\tposition:absolute\n}\n.right-img img {\n\tmargin:0;\n\theight:100%;\n\tright:0;\n\ttop:0;\n\tz-index:1\n}\n.right-img .text {\n\tleft:0;\n\ttop:0;\n\tz-index:2;\n\tpadding:2em\n}\n.center-img {\n\twidth:100%;\n\theight:100%;\n\tbackground-position:center center;\n\tbackground-repeat:no-repeat\n}\n.top-text {\n\tpadding:0\n}\n.bottom-text h3 {\n\theight:10%;\n\tpadding-bottom:10%\n}\n.bottom-text img {\n\theight:80%\n}\n.page-1 {\n\tbackground:#fff url(img/iali53.jpg) bottom right no-repeat;\n\ttext-align:left\n}\n.page-1 p {\n\tfont-size:1em\n}\n.page-1 img {\n\tmargin:1em auto 0 1em\n}\n.page-1 .text1 {\n\tfont-size:3em;\n\tcolor:#FA4A4A;\n\tline-height:2em;\n\tmargin:0.5em 0 0 0.5em\n}\n.page-1 .text2 {\n\tfont-size:1.2em;\n\tmargin:1.5em 0 0 1.5em\n}\n.flowtime .page-1 a {\n\tcolor:#6e2626\n}\n.page-1 input {\n\tfont-size:0.6em;\n\tpadding:6px 8px;\n\twidth:8rem;\n\ttext-align:center;\n\tborder:1px solid #ccc;\n\tvertical-align:6px;\n}\n.page-2 {\n\tbackground-color:#fefff1;\n\tpadding:0;\n\ttext-align:center\n}\n.page-2 p {\n\theight:10%;\n\tpadding-top:5%;\n\tmargin:0\n}\n.page-2 img {\n\theight:80%\n}\n.page-3 {\n\tbackground-color:#c1b287\n}\n.page-6 {\n\tbackground-color:#ecfafb;\n\tpadding:0\n}\n.page-6 img {\n\tposition:absolute;\n\tbottom:0;\n\tleft:0;\n\tmax-width:70%\n}\n.page-6 h3 {\n\tposition:absolute;\n\tright:10%;\n\ttop:45%;\n\tcolor:#bc195b\n}\n.page-7 {\n\tbackground-color:#e6fbec\n}\n.page-7 img {\n\tmax-height:100%;\n\tmargin:0 auto\n}\n.page-7 h3 {\n\tposition:absolute;\n\ttop:1em;\n\tleft:50%;\n\tpadding:0;\n\tmargin-top:0;\n\tmargin-left:-240px;\n\tz-index:1\n}\n.page-8 {\n\tbackground:#66cbff\n}\n.page-8 h3 {\n\tcolor:#eef;\n\tposition:absolute;\n\ttop:1em;\n\tleft:50%;\n\tmargin-left:-40%;\n\tpadding:0;\n\tmargin-top:0;\n\twidth:10em;\n\ttext-align:left\n}\n.page-8 h3 span {\n\tdisplay:inline-block;\n\twidth:1em;\n\tvertical-align:top\n}\n.page-9 {\n\tbackground-color:#c9f4fb\n}\n.page-9 img {\n\tmargin-top:3em\n}\n.page-10 {\n\tbackground:url(img/iali22_bg.jpg)\n}\n.page-12 {\n\tbackground-color:#aff1ff;\n\tpadding:0\n}\n.page-12 img {\n\tposition:absolute;\n\tbottom:1em;\n\tleft:1em;\n\tz-index:2;\n\theight:40%\n}\n.page-12 h3 {\n\tmargin-left:1em;\n\tmargin-right:1em\n}\n.page-13 {\n\tbackground-color:#feeff4;\n\tpadding:0\n}\n.page-13 img {\n\theight:80%\n}\n.page-13 he {\n\theight:20%\n}\n.page-14 {\n\tbackground-color:#fbf7d1\n}\n.page-15 {\n\tbackground:#dcf2fa url(img/iali45_bg.jpg)\n}\n.page-16 {\n\tbackground-color:#7db6df\n}\n.page-17 {\n\tbackground-color:#e5f0f2\n}\n.page-19 {\n\tbackground-image:url(img/iali75_bg.jpg)\n}\n.page-19 h3 {\n\tmargin-bottom:2em\n}\n.page-18 .text {\n\tmargin-left:1em;\n\tmargin-right:1em\n}\n.page-20 {\n\tbackground-color:#fcd0ca;\n\tpadding:0\n}\n.page-20 img {\n\tposition:absolute;\n\tbottom:0;\n\tleft:4em\n}\n.page-21 {\n\tbackground:#fbf2a3 url(img/iali59_bg.jpg)\n}\n.page-22 {\n\tbackground-color:#f5d484\n}\n.page-23 {\n\tbackground-color:#fff\n}\n.page-25 {\n\tbackground-color:#fcc1b1\n}\n.page-26 {\n\tbackground-color:#fdeacf\n}\n.page-27 {\n\tbackground-color:#ffc8c5;\n\tpadding:0\n}\n.page-27 h3 {\n\tposition:absolute;\n\tz-index:2;\n\twidth:100%;\n\ttext-align:center\n}\n.page-28 {\n\tbackground:#b7e7f3 url(img/iali40_bg.jpg) bottom repeat-x;\n\tpadding:0\n}\n.page-28 img {\n\tposition:absolute;\n\tbottom:0;\n\tleft:3em\n}\n.page-28 h3 {\n\tposition:absolute;\n\tright:1em;\n\tbottom:360px;\n\ttext-align:right;\n\tcolor:#127184\n}\n.page-29 {\n\tbackground:#0d85d1;\n\tpadding:0\n}\n.page-29 h3 {\n\tposition:absolute;\n\tz-index:2;\n\twidth:100%;\n\ttext-align:center;\n\tcolor:#eef\n}\n.page-30 {\n\tbackground:#fff url(img/iali76_bg.png) center bottom repeat-x;\n\tpadding:0;\n\tpadding:0\n}\n.page-30 img {\n\tposition:absolute;\n\tbottom:0;\n\tleft:0\n}\n.page-31 {\n\tbackground-color:#fbf5e9\n}\n.page-32 {\n\tbackground-color:#faf2e5\n}\n.page-33 {\n\tbackground-color:#fef0d5;\n\tpadding:0\n}\n.page-33 h3 {\n\tfont-size:1.8em;\n\tcolor:#a58545\n}\n.page-34 {\n\tbackground:#94c2e3 url(img/iali57.jpg) left bottom no-repeat\n}\n.page-34 h3 {\n\tcolor:#fff\n}\n.page-35 {\n\tbackground:#fff url(img/iali8_bg.png) left bottom repeat-x;\n\tpadding:0\n}\n.page-35 img {\n\tposition:absolute;\n\tbottom:0;\n\tleft:0;\n\tz-index:1\n}\n.page-35 h3 {\n\tposition:absolute;\n\tright:10%;\n\ttop:5%;\n\tcolor:green;\n\tz-index:2;\n\tfont-size:2em\n}\n.page-36 h3 {\n\ttext-align:right;\n\tright:1.5em;\n\tcolor:#eee\n}\n.page-37 {\n\tbackground-color:#fff\n}\n.page-38 {\n\tbackground-color:#fff8f2\n}\n.page-39 {\n\tbackground:#e8ccc1 url(img/iali2_bg.jpg) repeat\n}\n.page-40 {\n\tbackground-color:#cde7f4\n}\n.page-40 img {\n\tposition:absolute;\n\tbottom:1em;\n\tleft:1em;\n\tz-index:1\n}\n.page-40 h3 {\n\tposition:absolute;\n\ttop:1em;\n\tright:1em;\n\tz-index:2\n}\n.page-41 {\n\tbackground-color:#5aaadc;\n\tpadding:0\n}\n.page-41 .img2,.page-41 .img1 {\n\tposition:absolute\n}\n.page-41 .img1 {\n\tleft:1em;\n\tbottom:1em\n}\n.page-41 .img2 {\n\tright:1em;\n\ttop:1em\n}\n.page-41 h3 {\n\tpadding:0;\n\tposition:absolute;\n\ttop:35%;\n\twidth:100%;\n\ttext-align:center\n}\n.page-42 {\n\tbackground-color:#c1c567\n}\n.page-42 img {\n\tposition:absolute;\n\tbottom:2em;\n\tleft:1em\n}\n.page-42 h3 {\n\tfont-size:2em\n}\n.page-43 {\n\tbackground-color:#6b79ad\n}\n.page-43 img {\n\tmax-height:80%\n}\n.page-43 h2 {\n\tcolor:#fff\n}\n.page-44 {\n\tbackground-color:#f3e7ab\n}\n.page-45 {\n\tbackground-color:#b1dceb\n}\n.page-46 {\n\tbackground:#66cbff\n}\n.page-46 h3 {\n\tposition:absolute;\n\ttop:1em;\n\tleft:50%;\n\tmargin-left:-40%;\n\tpadding:0;\n\tmargin-top:0;\n\twidth:10em;\n\ttext-align:left\n}\n.page-46 h3 span {\n\tdisplay:inline-block;\n\twidth:1em;\n\tvertical-align:top\n}\n.page-47 {\n\tbackground-color:#fdcbca\n}\n.page-47 h3 {\n\tposition:absolute;\n\ttop:1em;\n\tleft:50%;\n\tmargin-left:-40%;\n\tpadding:0;\n\tmargin-top:0;\n\twidth:10em;\n\ttext-align:left\n}\n.page-47 h3 span {\n\tdisplay:inline-block;\n\twidth:1em;\n\tvertical-align:top\n}\n.page-48 {\n\tbackground-color:#e3e2e7\n}\n.page-49 {\n\tbackground-color:#fce6b6;\n\ttext-align:left\n}\n.page-49 img {\n\tmargin:0\n}\n.page-50 {\n\tbackground-color:#aae1f6;\n\tpadding:0\n}\n.page-50 .img1 {\n\tposition:absolute;\n\tright:0;\n\ttop:0\n}\n.page-50 .img2 {\n\tposition:absolute;\n\tleft:1em;\n\tbottom:1em\n}\n.page-50 p {\n\tposition:absolute;\n\ttop:1em;\n\tleft:1em;\n\twidth:50%;\n\tmargin:0;\n\tz-index:3;\n\tfont-size:1.5em\n}\n.page-51 {\n\tbackground-image:url(img/iali52.jpg);\n\tbackground-size:cover;\n\tbackground-color:#fff;\n\ttext-align:left\n}\n.page-52 {\n\tbackground-color:#fff2fb;\n\tpadding:0\n}\n.page-52 h3 {\n\tmargin:0;\n\tpadding-top:.8em;\n\tfont-size:1.6em;\n\tcolor:#4e0f3d\n}\n.page-53 {\n\tbackground-color:#febebe\n}\n.page-54 {\n\tbackground:#d3d2d0 url(img/319280_bg.jpg) repeat\n}\n.page-54 .center-img {\n\tbackground-image:url(img/319280.jpg);\n\ttext-indent:-99999px\n}\n.page-54 h3 {\n\tline-height:1rem;\n\tpadding-top:0.5em\n}\n.page-55 {\n\tbackground-color:#fff\n}\n.write-tip {\n\tposition:fixed;\n\tdisplay:block;\n\tcolor:#333;\n\tfont-size:16px;\n\tbottom:0.2em;\n\tleft:33%;\n\tpadding:3px;\n\tz-index:999;\n\tbackground-color:#fff;\n\tborder:1px solid #D3D3D3;\n\tborder-radius:4px\n}\n.write-tip img {\n\tvertical-align:-2px;\n\tmargin-left:5px;\n\tcursor:pointer\n}\n.write-tip button {\n\tcolor:#fff;\n\tfont-size:15px;\n\tdisplay:inline-block;\n\tbackground-color:#428bca;\n\tpadding:6px 12px;\n\tmargin-left:5px;\n\tvertical-align:1px;\n\tborder:1px solid #357ebd;\n\tborder-radius:4px;\n\toutline:none;\n\tcursor:pointer\n}\n.write-tip button:hover {\n\tbackground-color:#3276b1;\n\tborder-color:#285e8e\n}\n.write-tip button:active {\n\tbox-shadow:inset 0 3px 5px rgba(0,0,0,0.125)\n}\n.write-ok {\n\tposition:fixed;\n\ttop:0;\n\tleft:0;\n\twidth:100%;\n\theight:100%;\n\tz-index:999;\n\tbackground-color:#FCC7E2;\n\tbackground-attachment:fixed;\n\tdisplay:none\n}\n.write-ok .write-box {\n\tposition:relative;\n\tmargin:15% auto;\n\tpadding:20px;\n\ttext-align:center;\n\twidth:50%;\n\theight:45%;\n\tbackground:#fff;\n\tbox-shadow:0px 0px 10px 0px #F7B5DC;\n\tborder-radius:8px;\n}\n.write-box h2 {\n\tfont-size:2em;\n\tline-height:2.5em;\n\tcolor:#5EAF6F;\n\ttext-shadow:1px 1px 3px #D3D3D3;\n}\n.write-box p {\n\tline-height:2em;\n\twhite-space:pre-wrap;\n\tword-wrap:break-word\n}\n.write-box p u,.write-box p a {\n\tcolor:#007ed9;\n}\n.write-box p u:hover,.write-box p a:hover {\n\tcolor:#EB56AF;\n}\n.write-box p span {\n\tdisplay:inline-block;\n\tmin-width:1em;\n\tline-height:1.3em;\n\tpadding:0 2px;\n\tmargin:0 2px;\n\toutline:1px solid #ccc\n}\n.write-box p i {\n\tposition:relative;\n\ttop:-1px;\n\tfont-size:0.8em;\n\tcolor:#806D6D;\n\tpadding:3px 4px;\n\tbackground:#F7F7F7;\n\tborder:1px solid #E7E7E7;\n\tborder-radius:6px;\n\tdisplay:none;\n}\n.write-box p small {\n\tline-height:3em;\n\tfont-size:90%;\n\tcolor:#999;\n}\n.write-box #back {\n\tcolor:#888;\n\tmargin-right:5px\n}\n.write-box button {\n\tcolor:#fff;\n\tfont-size:1.2em;\n\tdisplay:inline-block;\n\tbackground-color:#428bca;\n\tpadding:13px 14px;\n\tmargin-top:1em;\n\tborder:1px solid #357ebd;\n\tborder-radius:4px;\n\toutline:none;\n\tcursor:pointer\n}\n.write-box button:hover {\n\tbackground-color:#3276b1;\n\tborder-color:#285e8e\n}\n.write-tip button:active {\n\tbox-shadow:inset 0 3px 5px rgba(0,0,0,0.125)\n}\n.write-share {\n\tbackground:#f1f1f1;\n\ttext-align:center;\n\tdisplay:inline-block;\n\tpadding:13px 14px;\n\tmargin-top:1em;\n\tborder:1px solid #DADADA;\n\tborder-radius:4px;\n\tdisplay:none;\n}\n.disabled {\n\tpointer-events:none;\n\tcursor:not-allowed;\n\topacity:.65;\n\tfilter:alpha(opacity=65);\n\tbox-shadow:none;\n}\n.mPower{position: fixed;bottom: 9rem;right: 6.2rem;z-index: 999;}#on, #off{width: 16px;height: 16px;display: inline-block;margin-bottom: -3px;filter: alpha(opacity=0.8);opacity: 0.8;cursor: pointer;}#on:hover, #off:hover{filter: alpha(opacity=4);opacity: 1}#on{background: url(img/music.png) left center no-repeat;}#off{background: url(img/mute.png) left center no-repeat;display: none;}","site":{"data":{}},"excerpt":"","more":"html,body,div,span,applet,object,iframe,h1,h2,h3,h4,h5,h6,p,blockquote,pre,a,abbr,acronym,address,big,cite,code,del,dfn,em,img,ins,kbd,q,s,samp,small,strike,strong,sub,sup,tt,var,b,u,i,center,dl,dt,dd,ol,ul,li,fieldset,form,label,legend,table,caption,tbody,tfoot,thead,tr,th,td,article,aside,canvas,details,embed,figure,figcaption,footer,header,hgroup,menu,nav,output,ruby,section,summary,time,mark,audio,video {\n\tmargin:0;\n\tpadding:0;\n\tborder:0;\n\tfont-size:100%;\n\tfont:inherit;\n\tvertical-align:baseline\n}\narticle,aside,details,figcaption,figure,footer,header,hgroup,menu,nav,section {\n\tdisplay:block\n}\nbody {\n\tline-height:1\n}\nstrong,b {\n\tfont-weight:bold\n}\nol,ul {\n\tlist-style:none\n}\nblockquote,q {\n\tquotes:none\n}\nblockquote:before,blockquote:after,q:before,q:after {\n\tcontent:'';\n\tcontent:none\n}\ntable {\n\tborder-collapse:collapse;\n\tborder-spacing:0\n}\nhtml,body {\n\twidth:100%;\n\theight:100%;\n\t-webkit-text-size-adjust:none\n}\nbody {\n\twhite-space:nowrap\n}\n.nojavascript {\n\tposition:fixed;\n\ttop:0;\n\twidth:100%;\n\ttext-align:center;\n\tfont-size:3em;\n}\n.flowtime {\n\tfont-size:0;\n\twidth:100%;\n\theight:100%;\n\t-o-transform-origin:0 0;\n\t-ms-transform-origin:0 0;\n\t-moz-transform-origin:0 0;\n\t-webkit-transform-origin:0 0;\n\ttransform-origin:0 0;\n\t-o-transform:translateZ(0);\n\t-ms-transform:translateZ(0);\n\t-moz-transform:translateZ(0);\n\t-webkit-transform:translateZ(0);\n\ttransform:translateZ(0);\n\t-o-backface-visibility:hidden;\n\t-ms-backface-visibility:hidden;\n\t-moz-backface-visibility:hidden;\n\t-webkit-backface-visibility:hidden;\n\tbackface-visibility:hidden;\n\t-o-transition:-o-transform .5s cubic-bezier(.77,.10,.22,1);\n\t-moz-transition:-moz-transform .5s cubic-bezier(.77,.10,.22,1);\n\t-webkit-transition:-webkit-transform .5s cubic-bezier(.77,.10,.22,1);\n\ttransition:transform .5s cubic-bezier(.77,.10,.22,1)\n}\n.flowtime.no-transition {\n\t-o-transition:-o-transform 0s;\n\t-moz-transition:-moz-transform 0s;\n\t-webkit-transition:-webkit-transform 0s;\n\ttransition:transform 0s\n}\n.ft-section {\n\twidth:100%;\n\theight:100%;\n\tposition:relative;\n\t-o-transform:translateZ(0);\n\t-ms-transform:translateZ(0);\n\t-moz-transform:translateZ(0);\n\t-webkit-transform:translateZ(0);\n\ttransform:translateZ(0)\n}\n.ft-section,.ft-section-thumb {\n\tfont-size:16px;\n\tfont-size:1rem;\n\twhite-space:normal;\n\tdisplay:inline-block;\n\tvertical-align:top\n}\n.ft-page {\n\t-moz-box-sizing:border-box;\n\t-webkit-box-sizing:border-box;\n\tbox-sizing:border-box;\n\twidth:100%;\n\theight:100%;\n\tposition:relative;\n\tz-index:auto;\n\t-o-transform:translateZ(0);\n\t-ms-transform:translateZ(0);\n\t-moz-transform:translateZ(0);\n\t-webkit-transform:translateZ(0);\n\ttransform:translateZ(0)\n}\n.ft-page.actual {\n\tz-index:100\n}\n.ft-overview .ft-page {\n\tcursor:pointer;\n\t-o-transition:all .5s cubic-bezier(.77,.10,.22,1);\n\t-moz-transition:all .5s cubic-bezier(.77,.10,.22,1);\n\t-webkit-transition:all .5s cubic-bezier(.77,.10,.22,1);\n\ttransition:all .5s cubic-bezier(.77,.10,.22,1);\n\t-o-transform:scale(0.95);\n\t-ms-transform:scale(0.95);\n\t-moz-transform:scale(0.95);\n\t-webkit-transform:scale(0.95);\n\ttransform:scale(0.95);\n\t-o-transform-origin:50% 50%;\n\t-ms-transform-origin:50% 50%;\n\t-moz-transform-origin:50% 50%;\n\t-webkit-transform-origin:50% 50%;\n\ttransform-origin:50% 50%\n}\n.ft-overview .ft-page * {\n\tpointer-events:none\n}\n.ft-absolute-nav {\n\toverflow:hidden\n}\n.ft-absolute-nav .flowtime {\n\tposition:absolute\n}\n.ft-fragment {\n\topacity:0;\n\t-o-transition:all .3s cubic-bezier(.77,.10,.22,1);\n\t-moz-transition:all .3s cubic-bezier(.77,.10,.22,1);\n\t-webkit-transition:all .3s cubic-bezier(.77,.10,.22,1);\n\ttransition:all .3s cubic-bezier(.77,.10,.22,1);\n\t-o-transform:translateZ(0);\n\t-ms-transform:translateZ(0);\n\t-moz-transform:translateZ(0);\n\t-webkit-transform:translateZ(0);\n\ttransform:translateZ(0)\n}\n.ft-fragment.revealed.step {\n\topacity:.3\n}\n.ft-fragment.revealed.shy {\n\topacity:0\n}\n.ft-fragment.revealed,.ft-fragment.revealed-temp,.ft-fragment.revealed.actual {\n\topacity:1\n}\n.ft-default-progress {\n\tposition:fixed;\n\tbottom:16px;\n\tbottom:1rem;\n\tright:16px;\n\tright:1rem;\n\tz-index:1000;\n\topacity:.3;\n\t-o-transition:all .5s cubic-bezier(.77,.10,.22,1);\n\t-moz-transition:all .5s cubic-bezier(.77,.10,.22,1);\n\t-webkit-transition:all .5s cubic-bezier(.77,.10,.22,1);\n\ttransition:all .5s cubic-bezier(.77,.10,.22,1)\n}\n.ft-default-progress:hover {\n\topacity:1\n}\n.ft-overview .ft-default-progress {\n\topacity:0;\n\tpointer-events:none\n}\n.ft-page-thumb {\n\t-moz-box-sizing:border-box;\n\t-webkit-box-sizing:border-box;\n\tbox-sizing:border-box;\n\twidth:18px;\n\theight:12px;\n\tmargin-right:1px;\n\tmargin-bottom:1px;\n\tbackground-color:rgba(0,0,0,0.7);\n\tcursor:pointer;\n\t-o-transition:all .3s cubic-bezier(.77,.10,.22,1);\n\t-moz-transition:all .3s cubic-bezier(.77,.10,.22,1);\n\t-webkit-transition:all .3s cubic-bezier(.77,.10,.22,1);\n\ttransition:all .3s cubic-bezier(.77,.10,.22,1)\n}\n.ft-page-thumb:hover {\n\tbackground-color:rgba(255,255,255,0.7)\n}\n.ft-page-thumb.actual {\n\tbackground-color:rgba(255,255,255,0.5);\n\tborder:1px solid #fff\n}\nimg {\n\t-o-transform:translate3d(0,0,0);\n\t-ms-transform:translate3d(0,0,0);\n\t-moz-transform:translate3d(0,0,0);\n\t-webkit-transform:translate3d(0,0,0);\n\ttransform:translate3d(0,0,0);\n\t-o-backface-visibility:hidden;\n\t-ms-backface-visibility:hidden;\n\t-moz-backface-visibility:hidden;\n\t-webkit-backface-visibility:hidden;\n\tbackface-visibility:hidden\n}\n.parallax {\n\tposition:relative;\n\t-o-transition:all .5s cubic-bezier(.50,.10,.50,1);\n\t-moz-transition:all .5s cubic-bezier(.50,.10,.50,1);\n\t-webkit-transition:all .5s cubic-bezier(.50,.10,.50,1);\n\ttransition:all .5s cubic-bezier(.50,.10,.50,1)\n}\n.ft-overview .parallax {\n\t-o-transform:translate3d(0,0,0)!important;\n\t-ms-transform:translate3d(0,0,0)!important;\n\t-moz-transform:translate3d(0,0,0)!important;\n\t-webkit-transform:translate3d(0,0,0)!important;\n\ttransform:translate3d(0,0,0)!important\n}\n@font-face {\n\tfont-family:'RuiHeiXiTi';\n\tsrc:url('fonts/RuiHeiXiTi.otf') format('truetype');\n\tfont-weight:bold;\n\tfont-style:normal\n}\nhtml {\n\tfont-size:100%;\n\tline-height:1.5rem;\n\tbackground-color:#aaa;\n\tcolor:#6e2d52;\n\ttext-shadow:1px 1px 0 rgba(255,255,255,0.4)\n}\nbody,button {\n\tfont-family:\"RuiHeiXiTi\",sans-serif\n}\n.navigation,.credits,.switches {\n\tdisplay:none\n}\n.ft-page {\n\tpadding:1em;\n\tbackground-color:#fed1ea;\n\ttext-align:center\n}\n.flowtime h1,.flowtime h2,.flowtime h3,.flowtime h4,.flowtime h5,.flowtime h6,.flowtime p,.flowtime ul,.flowtime ol,.flowtime dl,.flowtime li,.flowtime dt,.flowtime dd {\n\tdisplay:block;\n\t-o-transition:all .3s cubic-bezier(.77,.10,.22,1);\n\t-moz-transition:all .3s cubic-bezier(.77,.10,.22,1);\n\t-webkit-transition:all .3s cubic-bezier(.77,.10,.22,1);\n\ttransition:all .3s cubic-bezier(.77,.10,.22,1)\n}\n.flowtime h1,.flowtime h2,.flowtime h3,.flowtime h4,.flowtime h5,.flowtime h6 {\n\tfont-weight:bold;\n\tcolor:#613b3b;\n\tpadding-top:1em\n}\n.flowtime h1 {\n\tfont-size:4rem;\n\tline-height:4.3rem\n}\n.flowtime h2 {\n\tfont-size:3rem;\n\tline-height:3.3rem\n}\n.flowtime h3 {\n\tfont-size:2.5rem;\n\tline-height:3rem\n}\n.flowtime h4,.flowtime h5,.flowtime h6 {\n\tfont-size:1.75rem;\n\tline-height:2rem\n}\n.flowtime p {\n\tfont-size:1.75rem;\n\tline-height:2rem;\n\tmargin:2rem 0\n}\n.flowtime ul,.flowtime ol,.flowtime dl {\n\tfont-size:1.75rem;\n\tline-height:2rem;\n\tmargin:2rem 0\n}\n.flowtime ul,.flowtime ol,.flowtime dl {\n\tmargin:0 2rem\n}\n.flowtime li,.flowtime dd {\n\tline-height:1.75rem;\n\tmargin-bottom:1rem;\n\tposition:relative\n}\n.flowtime dt {\n\tposition:relative\n}\n.flowtime ul li:before,.flowtime dl dt:before {\n\tcontent:\"\\2022\";\n\ttext-align:right;\n\tcolor:#fd0;\n\tmargin-right:.5rem;\n\tdisplay:inline-block;\n\tposition:absolute;\n\tleft:-1rem\n}\n.flowtime ol {\n\tcounter-reset:list\n}\n.flowtime ol li:before {\n\tcontent:counter(list) \".\";\n\tcounter-increment:list;\n\tfont-size:.75em;\n\tcolor:#fd0;\n\tmargin-right:.5rem;\n\tdisplay:inline-block;\n\tposition:relative;\n\ttop:-0.075em\n}\n.flowtime dl dd {\n\tfont-size:.8em;\n\tmargin-left:1rem\n}\n.flowtime small {\n\tfont-size:.6em;\n\tvertical-align:middle\n}\n.flowtime pre,.flowtime code {\n\tfont-family:monospace;\n\tmargin:1rem 0\n}\n.flowtime strong {\n\tfont-weight:bold;\n\tcolor:#fd0;\n\ttext-shadow:1px 2px 0 #000,1px -1px 0 rgba(0,0,0,0.3),-1px -1px 0 rgba(0,0,0,0.3),-1px 1px 0 rgba(0,0,0,0.3)\n}\n.flowtime q {\n\tquotes:\"“\" \"”\"\n}\n.flowtime q:before {\n\tcontent:open-quote\n}\n.flowtime q:after {\n\tcontent:close-quote\n}\n.flowtime blockquote {\n\tfont-size:1.5rem;\n\tmargin:1.5rem 2rem;\n\tpadding:1rem;\n\tbackground-color:rgba(0,0,0,0.3);\n\tborder-left:.5rem solid rgba(255,255,255,0.5);\n\tborder-radius:.5rem\n}\n.flowtime q,.flowtime cite,.flowtime blockquote {\n\tfont-style:italic\n}\n.flowtime .small {\n\tfont-size:.6em\n}\n.flowtime .attention {\n\tcolor:red;\n\ttext-shadow:1px 2px 0 #000,1px -1px 0 rgba(0,0,0,0.3),-1px -1px 0 rgba(0,0,0,0.3),-1px 1px 0 rgba(0,0,0,0.3)\n}\n.flowtime sup {\n\tfont-size:.7em;\n\tposition:relative;\n\ttop:-0.5em\n}\n.flowtime a,.flowtime a:link,.flowtime a:visited,.flowtime a:active,.flowtime a:focus {\n\tcolor:#666;\n\ttext-decoration:none\n}\n.flowtime a:hover {\n\tcolor:#666;\n\ttext-decoration:underline\n}\n.flowtime a:hover img,.flowtime a:active img,.flowtime a:focus img {\n\t-webkit-box-shadow:1px 2px 10px 5px rgba(0,0,0,0.5);\n\tbox-shadow:1px 2px 10px 5px rgba(0,0,0,0.5)\n}\n.flowtime .stack {\n\twidth:100%;\n\theight:100%;\n\tmargin:1rem 0;\n\tposition:relative\n}\n.flowtime .stacked {\n\twidth:100%;\n\tposition:absolute;\n\ttop:0;\n\tleft:0\n}\n.flowtime img {\n\tmax-width:100%;\n\tmax-height:100%;\n\tdisplay:block;\n\tmargin:0 auto\n}\n.flowtime .stack-center {\n\ttext-align:center;\n\twhite-space:nowrap;\n\tposition:absolute;\n\ttop:2rem;\n\tright:2rem;\n\tbottom:2rem;\n\tleft:2rem\n}\n.flowtime .stack-center:before {\n\tcontent:\"\";\n\theight:100%;\n\tdisplay:inline-block;\n\tvertical-align:middle\n}\n.flowtime .stack-center .stacked-center {\n\twhite-space:normal;\n\tmax-width:100%;\n\tmax-height:100%;\n\tdisplay:inline-block;\n\tvertical-align:middle\n}\n@media screen and (min-height:41em) and (min-width:80em) {\n\thtml {\n\tfont-size:120%\n}\n}@media screen and (min-height:50em) and (min-width:90em) {\n\thtml {\n\tfont-size:140%\n}\n}@media screen and (max-device-height:578px) {\n\thtml {\n\tfont-size:50%\n}\n}.parallax-demo {\n\toverflow:hidden\n}\n.parallax-demo .kingmix {\n\tposition:absolute;\n\tleft:20%;\n\tbottom:-10%;\n\tz-index:50\n}\n.parallax-demo .sax {\n\tposition:absolute;\n\tleft:6%;\n\tbottom:-18%;\n\tz-index:40\n}\n.parallax-demo .tone {\n\tposition:absolute;\n\tleft:49%;\n\tbottom:-32%;\n\tz-index:30\n}\n.ft-overview .section-1 {\n\tmargin-top:0\n}\n.ft-overview .section-2 {\n\tmargin-top:-40%\n}\n.ft-overview .section-3 {\n\tmargin-top:-40%\n}\n.ft-overview .section-4 {\n\tmargin-top:0\n}\n.ft-overview .section-5 {\n\tmargin-top:60%\n}\n.ft-overview .section-6 {\n\tmargin-top:0\n}\n.ft-overview .section-7 {\n\tmargin-top:-40%\n}\n.ft-overview .section-8 {\n\tmargin-top:-40%\n}\n.ft-overview .section-9 {\n\tmargin-top:0\n}\n.ft-page-thumb {\n\tbackground-color:#a54479\n}\n.ft-page-thumb.actual {\n\tbackground-color:#44a54a;\n\tborder:0\n}\n.ft-default-progress {\n\tbottom:3rem;\n\tright:2rem\n}\n.thumb-section-0 {\n\tposition:relative;\n\ttop:13px\n}\n.thumb-section-3 {\n\tposition:relative;\n\ttop:13px\n}\n.thumb-section-4 {\n\tposition:relative;\n\ttop:26px\n}\n.thumb-section-5 {\n\tposition:relative;\n\ttop:13px\n}\n.thumb-section-8 {\n\tposition:relative;\n\ttop:13px\n}\n.thumb-section-8 {\n\tposition:relative;\n\ttop:13px\n}\n.left-img {\n\tpadding:0;\n\ttext-align:left\n}\n.left-img img {\n\tposition:absolute;\n\tleft:0;\n\ttop:0;\n\theight:100%;\n\tz-index:1\n}\n.left-img p,.left-img h3,.left-img .text {\n\tposition:absolute;\n\ttop:1em;\n\tright:1em;\n\tz-index:2;\n\ttext-align:right\n}\n.full-img {\n\tpadding:0\n}\n.full-img img {\n\twidth:100%;\n\theight:100%\n}\n.full-img h3,.full-img .text,.full-img .center-text {\n\tposition:absolute;\n\twidth:100%;\n\ttext-align:center;\n\tz-index:2\n}\n.right-img {\n\tpadding:0;\n\ttext-align:left\n}\n.right-img img,.right-img .text {\n\tposition:absolute\n}\n.right-img img {\n\tmargin:0;\n\theight:100%;\n\tright:0;\n\ttop:0;\n\tz-index:1\n}\n.right-img .text {\n\tleft:0;\n\ttop:0;\n\tz-index:2;\n\tpadding:2em\n}\n.center-img {\n\twidth:100%;\n\theight:100%;\n\tbackground-position:center center;\n\tbackground-repeat:no-repeat\n}\n.top-text {\n\tpadding:0\n}\n.bottom-text h3 {\n\theight:10%;\n\tpadding-bottom:10%\n}\n.bottom-text img {\n\theight:80%\n}\n.page-1 {\n\tbackground:#fff url(img/iali53.jpg) bottom right no-repeat;\n\ttext-align:left\n}\n.page-1 p {\n\tfont-size:1em\n}\n.page-1 img {\n\tmargin:1em auto 0 1em\n}\n.page-1 .text1 {\n\tfont-size:3em;\n\tcolor:#FA4A4A;\n\tline-height:2em;\n\tmargin:0.5em 0 0 0.5em\n}\n.page-1 .text2 {\n\tfont-size:1.2em;\n\tmargin:1.5em 0 0 1.5em\n}\n.flowtime .page-1 a {\n\tcolor:#6e2626\n}\n.page-1 input {\n\tfont-size:0.6em;\n\tpadding:6px 8px;\n\twidth:8rem;\n\ttext-align:center;\n\tborder:1px solid #ccc;\n\tvertical-align:6px;\n}\n.page-2 {\n\tbackground-color:#fefff1;\n\tpadding:0;\n\ttext-align:center\n}\n.page-2 p {\n\theight:10%;\n\tpadding-top:5%;\n\tmargin:0\n}\n.page-2 img {\n\theight:80%\n}\n.page-3 {\n\tbackground-color:#c1b287\n}\n.page-6 {\n\tbackground-color:#ecfafb;\n\tpadding:0\n}\n.page-6 img {\n\tposition:absolute;\n\tbottom:0;\n\tleft:0;\n\tmax-width:70%\n}\n.page-6 h3 {\n\tposition:absolute;\n\tright:10%;\n\ttop:45%;\n\tcolor:#bc195b\n}\n.page-7 {\n\tbackground-color:#e6fbec\n}\n.page-7 img {\n\tmax-height:100%;\n\tmargin:0 auto\n}\n.page-7 h3 {\n\tposition:absolute;\n\ttop:1em;\n\tleft:50%;\n\tpadding:0;\n\tmargin-top:0;\n\tmargin-left:-240px;\n\tz-index:1\n}\n.page-8 {\n\tbackground:#66cbff\n}\n.page-8 h3 {\n\tcolor:#eef;\n\tposition:absolute;\n\ttop:1em;\n\tleft:50%;\n\tmargin-left:-40%;\n\tpadding:0;\n\tmargin-top:0;\n\twidth:10em;\n\ttext-align:left\n}\n.page-8 h3 span {\n\tdisplay:inline-block;\n\twidth:1em;\n\tvertical-align:top\n}\n.page-9 {\n\tbackground-color:#c9f4fb\n}\n.page-9 img {\n\tmargin-top:3em\n}\n.page-10 {\n\tbackground:url(img/iali22_bg.jpg)\n}\n.page-12 {\n\tbackground-color:#aff1ff;\n\tpadding:0\n}\n.page-12 img {\n\tposition:absolute;\n\tbottom:1em;\n\tleft:1em;\n\tz-index:2;\n\theight:40%\n}\n.page-12 h3 {\n\tmargin-left:1em;\n\tmargin-right:1em\n}\n.page-13 {\n\tbackground-color:#feeff4;\n\tpadding:0\n}\n.page-13 img {\n\theight:80%\n}\n.page-13 he {\n\theight:20%\n}\n.page-14 {\n\tbackground-color:#fbf7d1\n}\n.page-15 {\n\tbackground:#dcf2fa url(img/iali45_bg.jpg)\n}\n.page-16 {\n\tbackground-color:#7db6df\n}\n.page-17 {\n\tbackground-color:#e5f0f2\n}\n.page-19 {\n\tbackground-image:url(img/iali75_bg.jpg)\n}\n.page-19 h3 {\n\tmargin-bottom:2em\n}\n.page-18 .text {\n\tmargin-left:1em;\n\tmargin-right:1em\n}\n.page-20 {\n\tbackground-color:#fcd0ca;\n\tpadding:0\n}\n.page-20 img {\n\tposition:absolute;\n\tbottom:0;\n\tleft:4em\n}\n.page-21 {\n\tbackground:#fbf2a3 url(img/iali59_bg.jpg)\n}\n.page-22 {\n\tbackground-color:#f5d484\n}\n.page-23 {\n\tbackground-color:#fff\n}\n.page-25 {\n\tbackground-color:#fcc1b1\n}\n.page-26 {\n\tbackground-color:#fdeacf\n}\n.page-27 {\n\tbackground-color:#ffc8c5;\n\tpadding:0\n}\n.page-27 h3 {\n\tposition:absolute;\n\tz-index:2;\n\twidth:100%;\n\ttext-align:center\n}\n.page-28 {\n\tbackground:#b7e7f3 url(img/iali40_bg.jpg) bottom repeat-x;\n\tpadding:0\n}\n.page-28 img {\n\tposition:absolute;\n\tbottom:0;\n\tleft:3em\n}\n.page-28 h3 {\n\tposition:absolute;\n\tright:1em;\n\tbottom:360px;\n\ttext-align:right;\n\tcolor:#127184\n}\n.page-29 {\n\tbackground:#0d85d1;\n\tpadding:0\n}\n.page-29 h3 {\n\tposition:absolute;\n\tz-index:2;\n\twidth:100%;\n\ttext-align:center;\n\tcolor:#eef\n}\n.page-30 {\n\tbackground:#fff url(img/iali76_bg.png) center bottom repeat-x;\n\tpadding:0;\n\tpadding:0\n}\n.page-30 img {\n\tposition:absolute;\n\tbottom:0;\n\tleft:0\n}\n.page-31 {\n\tbackground-color:#fbf5e9\n}\n.page-32 {\n\tbackground-color:#faf2e5\n}\n.page-33 {\n\tbackground-color:#fef0d5;\n\tpadding:0\n}\n.page-33 h3 {\n\tfont-size:1.8em;\n\tcolor:#a58545\n}\n.page-34 {\n\tbackground:#94c2e3 url(img/iali57.jpg) left bottom no-repeat\n}\n.page-34 h3 {\n\tcolor:#fff\n}\n.page-35 {\n\tbackground:#fff url(img/iali8_bg.png) left bottom repeat-x;\n\tpadding:0\n}\n.page-35 img {\n\tposition:absolute;\n\tbottom:0;\n\tleft:0;\n\tz-index:1\n}\n.page-35 h3 {\n\tposition:absolute;\n\tright:10%;\n\ttop:5%;\n\tcolor:green;\n\tz-index:2;\n\tfont-size:2em\n}\n.page-36 h3 {\n\ttext-align:right;\n\tright:1.5em;\n\tcolor:#eee\n}\n.page-37 {\n\tbackground-color:#fff\n}\n.page-38 {\n\tbackground-color:#fff8f2\n}\n.page-39 {\n\tbackground:#e8ccc1 url(img/iali2_bg.jpg) repeat\n}\n.page-40 {\n\tbackground-color:#cde7f4\n}\n.page-40 img {\n\tposition:absolute;\n\tbottom:1em;\n\tleft:1em;\n\tz-index:1\n}\n.page-40 h3 {\n\tposition:absolute;\n\ttop:1em;\n\tright:1em;\n\tz-index:2\n}\n.page-41 {\n\tbackground-color:#5aaadc;\n\tpadding:0\n}\n.page-41 .img2,.page-41 .img1 {\n\tposition:absolute\n}\n.page-41 .img1 {\n\tleft:1em;\n\tbottom:1em\n}\n.page-41 .img2 {\n\tright:1em;\n\ttop:1em\n}\n.page-41 h3 {\n\tpadding:0;\n\tposition:absolute;\n\ttop:35%;\n\twidth:100%;\n\ttext-align:center\n}\n.page-42 {\n\tbackground-color:#c1c567\n}\n.page-42 img {\n\tposition:absolute;\n\tbottom:2em;\n\tleft:1em\n}\n.page-42 h3 {\n\tfont-size:2em\n}\n.page-43 {\n\tbackground-color:#6b79ad\n}\n.page-43 img {\n\tmax-height:80%\n}\n.page-43 h2 {\n\tcolor:#fff\n}\n.page-44 {\n\tbackground-color:#f3e7ab\n}\n.page-45 {\n\tbackground-color:#b1dceb\n}\n.page-46 {\n\tbackground:#66cbff\n}\n.page-46 h3 {\n\tposition:absolute;\n\ttop:1em;\n\tleft:50%;\n\tmargin-left:-40%;\n\tpadding:0;\n\tmargin-top:0;\n\twidth:10em;\n\ttext-align:left\n}\n.page-46 h3 span {\n\tdisplay:inline-block;\n\twidth:1em;\n\tvertical-align:top\n}\n.page-47 {\n\tbackground-color:#fdcbca\n}\n.page-47 h3 {\n\tposition:absolute;\n\ttop:1em;\n\tleft:50%;\n\tmargin-left:-40%;\n\tpadding:0;\n\tmargin-top:0;\n\twidth:10em;\n\ttext-align:left\n}\n.page-47 h3 span {\n\tdisplay:inline-block;\n\twidth:1em;\n\tvertical-align:top\n}\n.page-48 {\n\tbackground-color:#e3e2e7\n}\n.page-49 {\n\tbackground-color:#fce6b6;\n\ttext-align:left\n}\n.page-49 img {\n\tmargin:0\n}\n.page-50 {\n\tbackground-color:#aae1f6;\n\tpadding:0\n}\n.page-50 .img1 {\n\tposition:absolute;\n\tright:0;\n\ttop:0\n}\n.page-50 .img2 {\n\tposition:absolute;\n\tleft:1em;\n\tbottom:1em\n}\n.page-50 p {\n\tposition:absolute;\n\ttop:1em;\n\tleft:1em;\n\twidth:50%;\n\tmargin:0;\n\tz-index:3;\n\tfont-size:1.5em\n}\n.page-51 {\n\tbackground-image:url(img/iali52.jpg);\n\tbackground-size:cover;\n\tbackground-color:#fff;\n\ttext-align:left\n}\n.page-52 {\n\tbackground-color:#fff2fb;\n\tpadding:0\n}\n.page-52 h3 {\n\tmargin:0;\n\tpadding-top:.8em;\n\tfont-size:1.6em;\n\tcolor:#4e0f3d\n}\n.page-53 {\n\tbackground-color:#febebe\n}\n.page-54 {\n\tbackground:#d3d2d0 url(img/319280_bg.jpg) repeat\n}\n.page-54 .center-img {\n\tbackground-image:url(img/319280.jpg);\n\ttext-indent:-99999px\n}\n.page-54 h3 {\n\tline-height:1rem;\n\tpadding-top:0.5em\n}\n.page-55 {\n\tbackground-color:#fff\n}\n.write-tip {\n\tposition:fixed;\n\tdisplay:block;\n\tcolor:#333;\n\tfont-size:16px;\n\tbottom:0.2em;\n\tleft:33%;\n\tpadding:3px;\n\tz-index:999;\n\tbackground-color:#fff;\n\tborder:1px solid #D3D3D3;\n\tborder-radius:4px\n}\n.write-tip img {\n\tvertical-align:-2px;\n\tmargin-left:5px;\n\tcursor:pointer\n}\n.write-tip button {\n\tcolor:#fff;\n\tfont-size:15px;\n\tdisplay:inline-block;\n\tbackground-color:#428bca;\n\tpadding:6px 12px;\n\tmargin-left:5px;\n\tvertical-align:1px;\n\tborder:1px solid #357ebd;\n\tborder-radius:4px;\n\toutline:none;\n\tcursor:pointer\n}\n.write-tip button:hover {\n\tbackground-color:#3276b1;\n\tborder-color:#285e8e\n}\n.write-tip button:active {\n\tbox-shadow:inset 0 3px 5px rgba(0,0,0,0.125)\n}\n.write-ok {\n\tposition:fixed;\n\ttop:0;\n\tleft:0;\n\twidth:100%;\n\theight:100%;\n\tz-index:999;\n\tbackground-color:#FCC7E2;\n\tbackground-attachment:fixed;\n\tdisplay:none\n}\n.write-ok .write-box {\n\tposition:relative;\n\tmargin:15% auto;\n\tpadding:20px;\n\ttext-align:center;\n\twidth:50%;\n\theight:45%;\n\tbackground:#fff;\n\tbox-shadow:0px 0px 10px 0px #F7B5DC;\n\tborder-radius:8px;\n}\n.write-box h2 {\n\tfont-size:2em;\n\tline-height:2.5em;\n\tcolor:#5EAF6F;\n\ttext-shadow:1px 1px 3px #D3D3D3;\n}\n.write-box p {\n\tline-height:2em;\n\twhite-space:pre-wrap;\n\tword-wrap:break-word\n}\n.write-box p u,.write-box p a {\n\tcolor:#007ed9;\n}\n.write-box p u:hover,.write-box p a:hover {\n\tcolor:#EB56AF;\n}\n.write-box p span {\n\tdisplay:inline-block;\n\tmin-width:1em;\n\tline-height:1.3em;\n\tpadding:0 2px;\n\tmargin:0 2px;\n\toutline:1px solid #ccc\n}\n.write-box p i {\n\tposition:relative;\n\ttop:-1px;\n\tfont-size:0.8em;\n\tcolor:#806D6D;\n\tpadding:3px 4px;\n\tbackground:#F7F7F7;\n\tborder:1px solid #E7E7E7;\n\tborder-radius:6px;\n\tdisplay:none;\n}\n.write-box p small {\n\tline-height:3em;\n\tfont-size:90%;\n\tcolor:#999;\n}\n.write-box #back {\n\tcolor:#888;\n\tmargin-right:5px\n}\n.write-box button {\n\tcolor:#fff;\n\tfont-size:1.2em;\n\tdisplay:inline-block;\n\tbackground-color:#428bca;\n\tpadding:13px 14px;\n\tmargin-top:1em;\n\tborder:1px solid #357ebd;\n\tborder-radius:4px;\n\toutline:none;\n\tcursor:pointer\n}\n.write-box button:hover {\n\tbackground-color:#3276b1;\n\tborder-color:#285e8e\n}\n.write-tip button:active {\n\tbox-shadow:inset 0 3px 5px rgba(0,0,0,0.125)\n}\n.write-share {\n\tbackground:#f1f1f1;\n\ttext-align:center;\n\tdisplay:inline-block;\n\tpadding:13px 14px;\n\tmargin-top:1em;\n\tborder:1px solid #DADADA;\n\tborder-radius:4px;\n\tdisplay:none;\n}\n.disabled {\n\tpointer-events:none;\n\tcursor:not-allowed;\n\topacity:.65;\n\tfilter:alpha(opacity=65);\n\tbox-shadow:none;\n}\n.mPower{position: fixed;bottom: 9rem;right: 6.2rem;z-index: 999;}#on, #off{width: 16px;height: 16px;display: inline-block;margin-bottom: -3px;filter: alpha(opacity=0.8);opacity: 0.8;cursor: pointer;}#on:hover, #off:hover{filter: alpha(opacity=4);opacity: 1}#on{background: url(img/music.png) left center no-repeat;}#off{background: url(img/mute.png) left center no-repeat;display: none;}"},{"layout":"false","_content":"<html><!DOCTYPE HTML>\n<!--[if IE 6]>\n<html id=\"ie6\" class=\"ie ie6 lt-ie9\">\n<![endif]-->\n<!--[if IE 7]>\n<html id=\"ie7\" class=\"ie ie7 lt-ie9\">\n<![endif]-->\n<!--[if IE 8]>\n<html id=\"ie8\" class=\"ie ie8 lt-ie9\">\n<![endif]-->\n<!--[if gte IE 9]>\n<html class=\"ie ie9\">\n<![endif]-->\n<!--[if !(IE)]><!-->\n<html>\n<!--<![endif]-->\n<head>\n\t<meta http-equiv='Pragma' content='no-cache' />\n\t<meta charset=\"UTF-8\">\n\t<meta name=\"viewport\" content=\"width=device-width, minimum-scale=1.0, maximum-scale=1.0, user-scalable=no\">\n\t<meta name=\"author\" content=\"DSX,工科男表白,浪漫表白,表白网站\">\n\t<meta name=\"description\" content=\"宽宽芹芹爱的网站\">\n\t<title>宽宽 LOVE 芹芹</title>\n\t<link rel=\"stylesheet\" href=\"all.min.css\" >\n\t<style>\n\t\th2 {\n\t\t\tfont-size: 100%;\n\t\t\tfont-weight: 400;\n\t\t}\n\t\t\n\t\t.content {\n\t\t\tposition: absolute;\n\t\t\twidth: 100%;\n\t\t\ttop: 10%;\n\t\t\ttransform: translate(0, -50%);\n\t\t\ttext-align: right;\n\t\t}\n\t\t\n\t\t.timer {\n\t\t\tfont-size: 80%;\n\t\t\tline-height: 1.5;\n\t\t\tmargin: 1em 0;\n\t\t}\n\t\t\n\t\t.timer b {\n\t\t\tcolor: rgb(253, 99, 125);\n\t\t}\n\t</style>\n</head>\n<body>\n\t<div class=\"flowtime\">\n\t\t<div class=\"ft-section section-1\" data-id=\"section-1\">\n\t\t\t<div id=\"/section-1/page-1\" class=\"ft-page page-1\" data-id=\"page-1\">\n\t\t\t\t<p class=\"text1\"><span id=\"text-75\" contenteditable=\"true\">宽宽</span> ❤ <span id=\"text-76\" contenteditable=\"true\">芹芹</span> <span id=\"text-77\" contenteditable=\"true\">一生一世</span></p>\n\t\t\t\t<p class=\"text2\">按键盘 \"↓\" <span id=\"text-78\" contenteditable=\"true\">开始倾听程序员的浪漫表白</span></p>\n\t\t\t</div>\n\t\t\t<div id=\"/section-1/page-2\" class=\"ft-page page-2\" data-id=\"page-2\">\n\t\t\t\t<p class=\"top-text\" id=\"text-1\" contenteditable=\"true\">过去的我们一直是一个人生活，享受着孤独，也憧憬着爱情。</p>\n\t\t\t\t<img src=\"img/iali63.jpg\" tppabs=\"img/iali63.jpg\"  alt=\"过去的XX一直是一个人生活，享受着孤独，也憧憬着爱情。\" />\n\t\t\t</div>\n\t\t\t<div id=\"/section-1/page-3\" class=\"ft-page page-3 left-img\" data-id=\"page-3\">\n\t\t\t\t<h2 class=\"text\" id=\"text-2\" contenteditable=\"true\">一个人的长廊</h2>\n\t\t\t\t<img src=\"img/iali35.jpg\" tppabs=\"img/iali35.jpg\"  alt=\"一个人的长廊\"/>\n\t\t\t</div>\n\t\t\t<div id=\"/section-1/page-4\" class=\"ft-page page-4 full-img\" data-id=\"page-4\">\n\t\t\t\t<h2 class=\"center-text\" id=\"text-3\" contenteditable=\"true\">一个人的山岗</h2>\n\t\t\t\t<img src=\"img/iali6.jpg\" tppabs=\"img/iali6.jpg\"  alt=\"一个人的山岗\" />\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"ft-section section-2\" data-id=\"section-2\">\n\t\t\t<div id=\"/section-2/page-1\" class=\"ft-page page-5 full-img\" data-id=\"page-1\">\n\t\t\t\t<h2 class=\"center-text\" id=\"text-4\" contenteditable=\"true\">一个人的地铁</h2>\n\t\t\t\t<img src=\"img/iali19.jpg\" tppabs=\"img/iali19.jpg\"  alt=\"一个人的地铁\" />\n\t\t\t</div>\n\t\t\t<div id=\"/section-2/page-2\" class=\"ft-page page-6\" data-id=\"page-2\">\n\t\t\t\t<h2 class=\"center-text\" id=\"text-5\" contenteditable=\"true\">一个人的游乐场</h2>\n\t\t\t\t<img src=\"img/iali29.jpg\" tppabs=\"img/iali29.jpg\" alt=\"一个人的游乐场\"/>\n\t\t\t</div>\n\t\t\t<div id=\"/section-2/page-3\" class=\"ft-page page-7\" data-id=\"page-3\">\n\t\t\t\t<h3 id=\"text-6\" contenteditable=\"true\">但我们依然乐观，微笑着，等待着</h3>\n\t\t\t\t<img src=\"img/iali60.jpg\" tppabs=\"img/iali60.jpg\"  alt=\"但他依然乐观，微笑着，等待着\"/>\n\t\t\t</div>\n\t\t\t<div id=\"/section-2/page-4\" class=\"ft-page page-8 full-img\" data-id=\"page-4\">\n\t\t\t\t<h3 id=\"text-7\" contenteditable=\"true\">生活难免有风风雨雨</h3>\n\t\t\t\t<img src=\"img/iali51.jpg\" tppabs=\"img/iali51.jpg\" alt=\"生活难免有风风雨雨\" />\n\t\t\t</div>\n\t\t\t<div id=\"/section-2/page-5\" class=\"ft-page page-9\" data-id=\"page-5\">\n\t\t\t\t<h3 id=\"text-8\" contenteditable=\"true\">我们也总是能够轻松的应对</h3>\n\t\t\t\t<img src=\"img/iali5.jpg\" tppabs=\"img/iali5.jpg\" />\n\t\t\t</div>\n\t\t\t<div id=\"/section-2/page-6\" class=\"ft-page page-10\" data-id=\"page-6\">\n\t\t\t\t<h3 id=\"text-9\" contenteditable=\"true\">并且面带阳光、自信的笑容</h3>\n\t\t\t\t<img src=\"img/iali22.jpg\" tppabs=\"img/iali22.jpg\" />\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"ft-section section-3\" data-id=\"section-3\">\n\t\t\t<div id=\"/section-3/page-1\" class=\"ft-page page-11 full-img\" data-id=\"page-1\">\n\t\t\t\t<h3 id=\"text-10\" contenteditable=\"true\">生活也不会总是一帆风顺</h3>\n\t\t\t\t<img src=\"img/iali24.jpg\" tppabs=\"img/iali24.jpg\"  />\n\t\t\t</div>\n\t\t\t<div id=\"/section-3/page-2\" class=\"ft-page page-12\" data-id=\"page-2\">\n\t\t\t\t<h3><span id=\"text-11\" contenteditable=\"true\">但我们都该勇敢的面对</span><br /><span id=\"text-12\" contenteditable=\"true\">随时准备接受生活的挑战</span></h3>\n\t\t\t\t<img src=\"img/iali25.jpg\" tppabs=\"img/iali25.jpg\" />\n\t\t\t</div>\n\t\t\t<div id=\"/section-3/page-3\" class=\"ft-page page-13\" data-id=\"page-3\">\n\t\t\t\t<img src=\"img/iali64.jpg\" tppabs=\"img/iali64.jpg\" alt='可是小明的爱情又在哪里呢？' />\n\t\t\t\t<h3 id=\"text-13\" contenteditable=\"true\">可是我们的爱情又在哪里呢？</h3>\n\t\t\t</div>\n\t\t\t<div id=\"/section-3/page-4\" class=\"ft-page page-14 left-img\" data-id=\"page-4\">\n\t\t\t\t<h3 id=\"text-14\" contenteditable=\"true\">望着镜子憧憬着。。。。</h3>\n\t\t\t\t<img src=\"img/iali46.jpg\" tppabs=\"img/iali46.jpg\" />\n\t\t\t</div>\n\t\t\t<div id=\"/section-3/page-5\" class=\"ft-page page-15 left-img\" data-id=\"page-5\">\n\t\t\t\t<h3><span id=\"text-15\" contenteditable=\"true\">没有人能够告诉我们爱情的归属</span><br /><span id=\"text-16\" contenteditable=\"true\">即使是大树精灵也不知道答案</span></h3>\n\t\t\t\t<img src=\"img/iali45.jpg\" tppabs=\"img/iali45.jpg\" />\n\t\t\t</div>\n\t\t\t<div id=\"/section-3/page-6\" class=\"ft-page page-16 left-img\" data-id=\"page-6\">\n\t\t\t\t<h3><span id=\"text-17\" contenteditable=\"true\">只有我们自己向前迈进，自己去寻找</span><br /><span id=\"text-18\" contenteditable=\"true\">走在茫茫的雪地上</span></h3>\n\t\t\t\t<img src=\"img/iali66.jpg\" tppabs=\"img/iali66.jpg\" />\n\t\t\t</div>\n\t\t\t<div id=\"/section-3/page-7\" class=\"ft-page page-17 top-text\" data-id=\"page-7\">\n\t\t\t\t<h3 id=\"text-19\" contenteditable=\"true\">直到有一天我与你相遇了</h3>\n\t\t\t\t<img src=\"img/iali16.jpg\" tppabs=\"img/iali16.jpg\" />\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"ft-section section-4\" data-id=\"section-4\">\n\t\t\t<div id=\"/section-4/page-1\" class=\"ft-page page-18 full-img\" data-id=\"page-1\">\n\t\t\t\t<p class=\"text\" id=\"text-20\" contenteditable=\"true\">杨宽喜欢王显芹，非常非常的喜欢，因为芹芹的出现，宽宽脸上有了更加灿烂的笑容</p>\n\t\t\t\t<img src=\"img/iali11.jpg\" tppabs=\"img/iali11.jpg\"  />\n\t\t\t</div>\n\t\t\t<div id=\"/section-4/page-2\" class=\"ft-page page-19\" data-id=\"page-2\">\n\t\t\t\t<h3 id=\"text-21\" contenteditable=\"true\">宽宽憧憬着与芹芹在一起会有的幸福生活</h3>\n\t\t\t\t<img src=\"img/iali75.jpg\" tppabs=\"img/iali75.jpg\" />\n\t\t\t</div>\n\t\t\t<div id=\"/section-4/page-3\" class=\"ft-page page-20\" data-id=\"page-3\">\n\t\t\t\t<img src=\"img/iali59.png\" tppabs=\"img/iali59.png\" />\n\t\t\t\t<h3 id=\"text-22\" contenteditable=\"true\">会想。。。</h3>\n\t\t\t\t<img src=\"img/iali9.jpg\" tppabs=\"img/iali9.jpg\" />\n\t\t\t</div>\n\t\t\t<div id=\"/section-4/page-4\" class=\"ft-page page-21\" data-id=\"page-4\">\n\t\t\t\t<h3 id=\"text-23\" contenteditable=\"true\">我们一定能够开心的在一起</h3>\n\t\t\t\t<img src=\"img/iali59.png\" tppabs=\"img/iali59.png\" />\n\t\t\t</div>\n\t\t\t<div id=\"/section-4/page-5\" class=\"ft-page page-22 left-img\" data-id=\"page-5\">\n\t\t\t\t<h3 id=\"text-24\" contenteditable=\"true\">即时相隔千里，我们也彼此挂念，步步靠近</h3>\n\t\t\t\t<img src=\"img/iali4.jpg\" tppabs=\"img/iali4.jpg\" />\n\t\t\t</div>\n\t\t\t<div id=\"/section-4/page-6\" class=\"ft-page page-23 left-img\" data-id=\"page-6\">\n\t\t\t\t<h3 id=\"text-25\" contenteditable=\"true\">然后两个人一起出去玩</h3>\n\t\t\t\t<img src=\"img/iali44.jpg\" tppabs=\"img/iali44.jpg\" />\n\t\t\t</div>\n\t\t\t<div id=\"/section-4/page-7\" class=\"ft-page page-24 full-img\" data-id=\"page-7\">\t\n\t\t\t\t<h3 id=\"text-26\" contenteditable=\"true\">晚上一起回家</h3>\n\t\t\t\t<img src=\"img/iali32.jpg\" tppabs=\"img/iali32.jpg\" />\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"ft-section section-5\" data-id=\"section-5\">\n\t\t\t<div id=\"/section-5/page-1\" class=\"ft-page page-25 left-img\" data-id=\"page-1\">\n\t\t\t\t<h3><span id=\"text-27\" contenteditable=\"true\">一起在生日蛋糕的蜡烛下许愿</span><br /><span id=\"text-28\" contenteditable=\"true\">再一起分享甜蜜</span></h3>\n\t\t\t\t<img src=\"img/iali37.jpg\" tppabs=\"img/iali37.jpg\" />\n\t\t\t</div>\n\t\t\t<div id=\"/section-5/page-2\" class=\"ft-page page-26 top-text\" data-id=\"page-2\">\n\t\t\t\t<h3 id=\"text-29\" contenteditable=\"true\">然后高兴地进入梦乡，在梦中还会和彼此在一起</h3>\n\t\t\t\t<img src=\"img/iali10.gif\" tppabs=\"img/iali10.gif\" />\n\t\t\t</div>\n\t\t\t<div id=\"/section-5/page-3\" class=\"ft-page page-27\" data-id=\"page-3\">\n\t\t\t\t<h3 id=\"text-30\" contenteditable=\"true\">宽宽成为了芹芹的逛街助手</h3>\n\t\t\t\t<img src=\"img/iali67.jpg\" tppabs=\"img/iali67.jpg\"  />\n\t\t\t</div>\n\t\t\t<div id=\"/section-5/page-4\" class=\"ft-page page-28\" data-id=\"page-4\">\n\t\t\t\t<h3 id=\"text-31\" contenteditable=\"true\">然后，他们会一起去很多地方玩</h3>\n\t\t\t\t<img src=\"img/iali40.jpg\" tppabs=\"img/iali40.jpg\" />\n\t\t\t</div>\n\t\t\t<div id=\"/section-5/page-5\" class=\"ft-page page-29\" data-id=\"page-5\">\n\t\t\t\t<h3 id=\"text-32\" contenteditable=\"true\">宽宽和芹芹一块成为一对吃货</h3>\n\t\t\t\t<img src=\"img/iali12.jpg\" tppabs=\"img/iali12.jpg\" />\n\t\t\t</div>\n\t\t\t<div id=\"/section-5/page-6\" class=\"ft-page page-30\" data-id=\"page-6\">\n\t\t\t\t<h3 id=\"text-33\" contenteditable=\"true\">不久之后，他们会搬到了一起</h3>\n\t\t\t\t<img src=\"img/iali76.gif\" tppabs=\"img/iali76.gif\" />\n\t\t\t</div>\n\t\t\t<div id=\"/section-5/page-7\" class=\"ft-page page-31\" data-id=\"page-7\">\n\t\t\t\t<h3 id=\"text-34\" contenteditable=\"true\">再然后，宽宽会主动去学习各种技能</h3>\n\t\t\t\t<img src=\"img/iali77.jpg\" tppabs=\"img/iali77.jpg\" />\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"ft-section section-6\" data-id=\"section-6\">\n\t\t\t<div id=\"/section-6/page-1\" class=\"ft-page page-32\" data-id=\"page-1\">\n\t\t\t\t<h3 id=\"text-35\" contenteditable=\"true\">煮饭</h3>\n\t\t\t\t<img src=\"img/iali62.jpg\" tppabs=\"img/iali62.jpg\"  />\n\t\t\t</div>\n\t\t\t<div id=\"/section-6/page-2\" class=\"ft-page page-33 top-text\" data-id=\"page-2\">\n\t\t\t\t<h3 id=\"text-36\" contenteditable=\"true\">那时候，每天早上，他们吃着自己做的美食</h3>\n\t\t\t\t<img src=\"img/iali3.jpg\" tppabs=\"img/iali3.jpg\" />\n\t\t\t</div>\n\t\t\t<div id=\"/section-6/page-3\" class=\"ft-page page-34 left-img\" data-id=\"page-3\">\n\t\t\t\t<h3 id=\"text-37\" contenteditable=\"true\">然后在同一个站台，高高兴兴的一起上班</h3>\n\t\t\t</div>\n\t\t\t<div id=\"/section-6/page-4\" class=\"ft-page page-35\" data-id=\"page-4\">\n\t\t\t\t<h3><span id=\"text-38\" contenteditable=\"true\">他们会感觉自己好幸福。</span><br /><span id=\"text-39\" contenteditable=\"true\">因为自己有了家</span><br /><span id=\"text-40\" contenteditable=\"true\">那个温暖的港湾</span></h3>\n\t\t\t\t<img src=\"img/iali8.gif\" tppabs=\"img/iali8.gif\" />\n\t\t\t</div>\n\t\t\t<div id=\"/section-6/page-5\" class=\"ft-page page-36 full-img\" data-id=\"page-5\">\n\t\t\t\t<h3 id=\"text-41\" contenteditable=\"true\">他们可能偶尔也会吵架</h3>\n\t\t\t\t<img src=\"img/iali31.jpg\" tppabs=\"img/iali31.jpg\" />\n\t\t\t</div>\n\t\t\t<div id=\"/section-6/page-6\" class=\"ft-page page-37 left-img\" data-id=\"page-6\">\n\t\t\t\t<h3 id=\"text-42\" contenteditable=\"true\">但是都不想这样</h3>\n\t\t\t\t<img src=\"img/iali49.jpg\" tppabs=\"img/iali49.jpg\" />\n\t\t\t</div>\n\t\t\t<div id=\"/section-6/page-7\" class=\"ft-page page-38 bottom-text\" data-id=\"page-7\">\n\t\t\t\t<img src=\"img/iali21.jpg\" tppabs=\"img/iali21.jpg\" />\n\t\t\t\t<h3 id=\"text-43\" contenteditable=\"true\">一定是我有什么做的不对，宽宽会这么想</h3>\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"ft-section section-7\" data-id=\"section-7\">\n\t\t\t<div id=\"/section-7/page-1\" class=\"ft-page page-39 left-img\" data-id=\"page-1\">\n\t\t\t\t<h3 id=\"text-44\" contenteditable=\"true\">如果没有芹芹在身边，窗外就没有风景</h3>\n\t\t\t\t<img src=\"img/iali2.jpg\" tppabs=\"img/iali2.jpg\" />\n\t\t\t</div>\n\t\t\t<div id=\"/section-7/page-2\" class=\"ft-page page-40\" data-id=\"page-2\">\n\t\t\t\t<h3 id=\"text-45\" contenteditable=\"true\">如果没有芹芹在身边</h3>\n\t\t\t\t<img src=\"img/iali14.jpg\" tppabs=\"img/iali14.jpg\"  />\n\t\t\t</div>\n\t\t\t<div id=\"/section-7/page-3\" class=\"ft-page page-41\" data-id=\"page-3\">\n\t\t\t\t<img src=\"img/iali30_1.jpg\" tppabs=\"img/iali30_1.jpg\" class='img1'/>\n\t\t\t\t<img src=\"img/iali30_2.jpg\" tppabs=\"img/iali30_2.jpg\" class='img2'/>\n\t\t\t\t<h3 id=\"text-46\" contenteditable=\"true\"> 宽宽又怎会飞的更高更远</h3>\n\t\t\t</div>\n\t\t\t<div id=\"/section-7/page-4\" class=\"ft-page page-42\" data-id=\"page-4\">\n\t\t\t\t<h3><span id=\"text-47\" contenteditable=\"true\">宽宽努力着，希望能不断进步</span><br /><span id=\"text-48\" contenteditable=\"true\">让芹芹有钱买好吃的、穿好看的、住温馨的房子。</span></h3>\n\t\t\t\t<img src=\"img/iali69.jpg\" tppabs=\"img/iali69.jpg\"  />\n\t\t\t</div>\n\t\t\t<div id=\"/section-7/page-5\" class=\"ft-page page-43\" data-id=\"page-5\">\n\t\t\t\t<img src=\"img/iali42.jpg\" tppabs=\"img/iali42.jpg\" />\n\t\t\t\t<h3 id=\"text-49\" contenteditable=\"true\">我愿意一直陪伴着你</h3>\n\t\t\t</div>\n\t\t\t<div id=\"/section-7/page-6\" class=\"ft-page page-44 left-img\" data-id=\"page-6\">\n\t\t\t\t<h3><span id=\"text-50\" contenteditable=\"true\">爱情就像花草一样</span><br /><span id=\"text-51\" contenteditable=\"true\">需要用包容来浇灌</span></h3>\n\t\t\t\t<img src=\"img/iali0.jpg\" tppabs=\"img/iali0.jpg\" />\n\t\t\t</div>\n\t\t\t<div id=\"/section-7/page-7\" class=\"ft-page page-45 left-img\" data-id=\"page-7\">\n\t\t\t\t<h3><span id=\"text-52\" contenteditable=\"true\">直到一天，</span><br /><span id=\"text-53\" contenteditable=\"true\">宽宽开始准备一份惊喜</span></h3>\n\t\t\t\t<img src=\"img/iali18.jpg\" tppabs=\"img/iali18.jpg\" />\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"ft-section section-8\" data-id=\"section-8\">\n\t\t\t<div id=\"/section-8/page-1\" class=\"ft-page page-46\" data-id=\"page-1\">\n\t\t\t\t<img src=\"img/iali57.gif\" tppabs=\"img/iali57.gif\" />\n\t\t\t\t<h3>\n\t\t\t\t\t<span id=\"text-54\" contenteditable=\"true\">看着惊喜一点点准备好了</span>\n\t\t\t\t\t<span id=\"text-55\" contenteditable=\"true\">宽宽好开心</span>\n\t\t\t\t\t<span id=\"text-56\" contenteditable=\"true\">因为他想象着芹芹看到时</span>\n\t\t\t\t\t<span id=\"text-57\" contenteditable=\"true\">开心的样子</span>\n\t\t\t\t</h3>\n\t\t\t</div>\n\t\t\t<div id=\"/section-8/page-2\" class=\"ft-page page-47 top-text\" data-id=\"page-2\">\n\t\t\t\t<img src=\"img/iali58.jpg\" tppabs=\"img/iali58.jpg\" />\n\t\t\t\t<h3>\n\t\t\t\t\t<span id=\"text-58\" contenteditable=\"true\">想想未来他们</span>\n                    <span id=\"text-59\" contenteditable=\"true\">会有一辈子的时间相守</span>\n\t\t\t\t\t<span id=\"text-59\" contenteditable=\"true\">宽宽好开心</span>\n\t\t\t\t\t<span id=\"text-60\" contenteditable=\"true\">他可以和芹芹一起</span>\n\t\t\t\t\t<span id=\"text-61\" contenteditable=\"true\">去各种好玩儿的地方</span>\n\t\t\t\t</h3>\n\t\t\t\t\n\t\t\t</div>\n\t\t\t<div id=\"/section-8/page-3\" class=\"ft-page page-48 left-img\" data-id=\"page-3\">\n\t\t\t\t<p><span id=\"text-62\" contenteditable=\"true\">宽宽会努力</span><br /><span id=\"text-63\" contenteditable=\"true\">为了他和芹芹的梦之城堡</span></p>\n\t\t\t\t<img src=\"img/iali65.jpg\" tppabs=\"img/iali65.jpg\"  />\n\t\t\t</div>\n\t\t\t<div id=\"/section-8/page-4\" class=\"ft-page page-49 full-img\" data-id=\"page-4\">\n\t\t\t<img src=\"img/iali71.jpg\" tppabs=\"img/iali71.jpg\" />\n\t\t\t\t<p class=\"text\">\n\t\t\t\t\t<span class='text' id=\"text-64\" contenteditable=\"true\">宽宽很幸福，因为他遇到了芹芹。他相信后面的每天都会是快乐的</span><br />\n\t\t\t\t\t<span class='text' id=\"text-65\" contenteditable=\"true\">简简单单，体会与芹芹在一起的每一个刻</span>\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t\t<div id=\"/section-8/page-5\" class=\"ft-page page-50\" data-id=\"page-5\">\n\t\t\t\t<p class='text' id=\"text-66\" contenteditable=\"true\">宽宽和芹芹会一起过幸福的生活</p>\n\t\t\t\t<img src=\"img/iali50_1.jpg\" tppabs=\"img/iali50_1.jpg\" class='img1' />\n\t\t\t\t<img src=\"img/iali50_2.jpg\" tppabs=\"img/iali50_2.jpg\" class='img2' />\n\t\t\t</div>\n\t\t\t<div id=\"/section-8/page-6\" class=\"ft-page page-51\" data-id=\"page-6\">\n\t\t\t\t<p>\n\t\t\t\t\t<span id=\"text-67\" contenteditable=\"true\">永远有多远？</span><br />\n\t\t\t\t\t<span id=\"text-68\" contenteditable=\"true\">比时间多一秒就是永远，我会永远爱你</span><br />\n\t\t\t\t\t<span id=\"text-69\" contenteditable=\"true\">世界有多大？</span><br />\n\t\t\t\t\t<span id=\"text-70\" contenteditable=\"true\">你走到哪里，世界就有多大</span>\n\t\t\t\t\t</p>\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"ft-section section-9\" data-id=\"section-9\">\n\t\t\t<div id=\"/section-9/page-1\" class=\"ft-page page-52 full-img\" data-id=\"page-1\">\n\t\t\t\t<h3 id=\"text-71\" contenteditable=\"true\">希望未来的日子里，你中有我，我中有你，开开心心</h3>\n\t\t\t\t<img src=\"img/iali20.jpg\" tppabs=\"img/iali20.jpg\"  />\n\t\t\t</div>\n\t\t\t<div id=\"/section-9/page-2\" class=\"ft-page page-53\" data-id=\"page-2\">\n\t\t\t\t<img src=\"img/iali68.jpg\" tppabs=\"img/iali68.jpg\" alt='happy birthday' />\n\t\t\t\t<h3 id=\"text-72\" contenteditable=\"true\">我爱你</h3>\n\t\t\t</div>\n\t\t\t<div id=\"/section-9/page-3\" class=\"ft-page page-54 center-img\" data-id=\"page-3\" >\n\t\t\t\t<div class=\"center-img\">I love you</div>\n\t\t\t</div>\n\t\t\t<div id=\"/section-9/page-4\" class=\"ft-page page-55 right-img\" data-id=\"page-4\">\n\t\t\t\t<img src=\"img/14915.jpg\" tppabs=\"img/14915.jpg\" />\n\t\t\t\t<p class=\"text\">\n\t\t\t\t\t<span id=\"text-73\" contenteditable=\"true\">我相信，宽宽和芹芹的故事会一直继续下去，持续到永远。</span><br />\n\t\t\t\t\t<span id=\"text-74\" contenteditable=\"true\">无论精彩、平淡都会是他们喜欢的。</span><br />\n                    <span id=\"text-74\" contenteditable=\"true\">芹宝贝儿，我爱你</span><br />\n\t\t\t\t\t<br />\n\t\t\t\t\t<br />\n\t\t\t\t\t<span> -- 按“Esc\"键有惊喜</span>\n\t\t\t\t</p>\t\t\t\t\n\t\t\t</div>\n\t\t</div>\n\t</div>\n\t<div class=\"nojavascript\">您的浏览器禁用了javascript，无法正常浏览本页面</div>\n\t<div class=\"content\">\n\t\t<h2>小乖乖，我们已经在一起了</h2>\n\t\t<div class=\"timer\">\n\t\t\t<b id=\"d\"></b> Days <b id=\"h\"></b> Hours <b id=\"m\"></b> Minutes <b id=\"s\"></b> Seconds\n\t\t</div>\n\t</div>\n\n\t<audio id=\"bgmMusic\" src=\"lovebgm.mp3\" autoplay=\"autoplay\" loop preload=\"auto\" type=\"audio/mp3\"></audio>\n\n\n\t<script type=\"text/javascript\" src=\"/js/custom/jquery.min.js\"></script>\n\t<script type=\"text/javascript\" src=\"/js/custom/all.min.js\"></script>\n\t<script type=\"text/javascript\" src=\"/js/custom/love.min.js\"></script>\n\n\t<div class=\"mPower\"><span id=\"on\" title=\"点击暂停\" style=\"\"></span><span id=\"off\" title=\"点击播放\"  style=\"\"></span></div>\n\t<script>\n\t\tfunction timer() {\n\t\t\tvar start = new Date(2016, 6, 18); \n\t\t\tvar t = new Date() - start;\n\t\t\tvar h = ~~(t / 1000 / 60 / 60 % 24);\n\t\t\tif (h < 10) {\n\t\t\t\th = \"0\" + h;\n\t\t\t}\n\t\t\tvar m = ~~(t / 1000 / 60 % 60);\n\t\t\tif (m < 10) {\n\t\t\t\tm = \"0\" + m;\n\t\t\t}\n\n\t\t\tvar s = ~~(t / 1000 % 60);\n\t\t\tif (s < 10) {\n\t\t\t\ts = \"0\" + s;\n\t\t\t}\n\t\t\tdocument.getElementById('d').innerHTML = ~~(t / 1000 / 60 / 60 / 24);\n\t\t\tdocument.getElementById('h').innerHTML = h;\n\t\t\tdocument.getElementById('m').innerHTML = m;\n\t\t\tdocument.getElementById('s').innerHTML = s;\n\t\t}\n\t\ttimer();\n\t\tsetInterval(timer, 1000);\n\t</script>\n\t\n</body>\n</html>\n","source":"love/index.htm","raw":"---\nlayout: false\n---\n<html><!DOCTYPE HTML>\n<!--[if IE 6]>\n<html id=\"ie6\" class=\"ie ie6 lt-ie9\">\n<![endif]-->\n<!--[if IE 7]>\n<html id=\"ie7\" class=\"ie ie7 lt-ie9\">\n<![endif]-->\n<!--[if IE 8]>\n<html id=\"ie8\" class=\"ie ie8 lt-ie9\">\n<![endif]-->\n<!--[if gte IE 9]>\n<html class=\"ie ie9\">\n<![endif]-->\n<!--[if !(IE)]><!-->\n<html>\n<!--<![endif]-->\n<head>\n\t<meta http-equiv='Pragma' content='no-cache' />\n\t<meta charset=\"UTF-8\">\n\t<meta name=\"viewport\" content=\"width=device-width, minimum-scale=1.0, maximum-scale=1.0, user-scalable=no\">\n\t<meta name=\"author\" content=\"DSX,工科男表白,浪漫表白,表白网站\">\n\t<meta name=\"description\" content=\"宽宽芹芹爱的网站\">\n\t<title>宽宽 LOVE 芹芹</title>\n\t<link rel=\"stylesheet\" href=\"all.min.css\" >\n\t<style>\n\t\th2 {\n\t\t\tfont-size: 100%;\n\t\t\tfont-weight: 400;\n\t\t}\n\t\t\n\t\t.content {\n\t\t\tposition: absolute;\n\t\t\twidth: 100%;\n\t\t\ttop: 10%;\n\t\t\ttransform: translate(0, -50%);\n\t\t\ttext-align: right;\n\t\t}\n\t\t\n\t\t.timer {\n\t\t\tfont-size: 80%;\n\t\t\tline-height: 1.5;\n\t\t\tmargin: 1em 0;\n\t\t}\n\t\t\n\t\t.timer b {\n\t\t\tcolor: rgb(253, 99, 125);\n\t\t}\n\t</style>\n</head>\n<body>\n\t<div class=\"flowtime\">\n\t\t<div class=\"ft-section section-1\" data-id=\"section-1\">\n\t\t\t<div id=\"/section-1/page-1\" class=\"ft-page page-1\" data-id=\"page-1\">\n\t\t\t\t<p class=\"text1\"><span id=\"text-75\" contenteditable=\"true\">宽宽</span> ❤ <span id=\"text-76\" contenteditable=\"true\">芹芹</span> <span id=\"text-77\" contenteditable=\"true\">一生一世</span></p>\n\t\t\t\t<p class=\"text2\">按键盘 \"↓\" <span id=\"text-78\" contenteditable=\"true\">开始倾听程序员的浪漫表白</span></p>\n\t\t\t</div>\n\t\t\t<div id=\"/section-1/page-2\" class=\"ft-page page-2\" data-id=\"page-2\">\n\t\t\t\t<p class=\"top-text\" id=\"text-1\" contenteditable=\"true\">过去的我们一直是一个人生活，享受着孤独，也憧憬着爱情。</p>\n\t\t\t\t<img src=\"img/iali63.jpg\" tppabs=\"img/iali63.jpg\"  alt=\"过去的XX一直是一个人生活，享受着孤独，也憧憬着爱情。\" />\n\t\t\t</div>\n\t\t\t<div id=\"/section-1/page-3\" class=\"ft-page page-3 left-img\" data-id=\"page-3\">\n\t\t\t\t<h2 class=\"text\" id=\"text-2\" contenteditable=\"true\">一个人的长廊</h2>\n\t\t\t\t<img src=\"img/iali35.jpg\" tppabs=\"img/iali35.jpg\"  alt=\"一个人的长廊\"/>\n\t\t\t</div>\n\t\t\t<div id=\"/section-1/page-4\" class=\"ft-page page-4 full-img\" data-id=\"page-4\">\n\t\t\t\t<h2 class=\"center-text\" id=\"text-3\" contenteditable=\"true\">一个人的山岗</h2>\n\t\t\t\t<img src=\"img/iali6.jpg\" tppabs=\"img/iali6.jpg\"  alt=\"一个人的山岗\" />\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"ft-section section-2\" data-id=\"section-2\">\n\t\t\t<div id=\"/section-2/page-1\" class=\"ft-page page-5 full-img\" data-id=\"page-1\">\n\t\t\t\t<h2 class=\"center-text\" id=\"text-4\" contenteditable=\"true\">一个人的地铁</h2>\n\t\t\t\t<img src=\"img/iali19.jpg\" tppabs=\"img/iali19.jpg\"  alt=\"一个人的地铁\" />\n\t\t\t</div>\n\t\t\t<div id=\"/section-2/page-2\" class=\"ft-page page-6\" data-id=\"page-2\">\n\t\t\t\t<h2 class=\"center-text\" id=\"text-5\" contenteditable=\"true\">一个人的游乐场</h2>\n\t\t\t\t<img src=\"img/iali29.jpg\" tppabs=\"img/iali29.jpg\" alt=\"一个人的游乐场\"/>\n\t\t\t</div>\n\t\t\t<div id=\"/section-2/page-3\" class=\"ft-page page-7\" data-id=\"page-3\">\n\t\t\t\t<h3 id=\"text-6\" contenteditable=\"true\">但我们依然乐观，微笑着，等待着</h3>\n\t\t\t\t<img src=\"img/iali60.jpg\" tppabs=\"img/iali60.jpg\"  alt=\"但他依然乐观，微笑着，等待着\"/>\n\t\t\t</div>\n\t\t\t<div id=\"/section-2/page-4\" class=\"ft-page page-8 full-img\" data-id=\"page-4\">\n\t\t\t\t<h3 id=\"text-7\" contenteditable=\"true\">生活难免有风风雨雨</h3>\n\t\t\t\t<img src=\"img/iali51.jpg\" tppabs=\"img/iali51.jpg\" alt=\"生活难免有风风雨雨\" />\n\t\t\t</div>\n\t\t\t<div id=\"/section-2/page-5\" class=\"ft-page page-9\" data-id=\"page-5\">\n\t\t\t\t<h3 id=\"text-8\" contenteditable=\"true\">我们也总是能够轻松的应对</h3>\n\t\t\t\t<img src=\"img/iali5.jpg\" tppabs=\"img/iali5.jpg\" />\n\t\t\t</div>\n\t\t\t<div id=\"/section-2/page-6\" class=\"ft-page page-10\" data-id=\"page-6\">\n\t\t\t\t<h3 id=\"text-9\" contenteditable=\"true\">并且面带阳光、自信的笑容</h3>\n\t\t\t\t<img src=\"img/iali22.jpg\" tppabs=\"img/iali22.jpg\" />\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"ft-section section-3\" data-id=\"section-3\">\n\t\t\t<div id=\"/section-3/page-1\" class=\"ft-page page-11 full-img\" data-id=\"page-1\">\n\t\t\t\t<h3 id=\"text-10\" contenteditable=\"true\">生活也不会总是一帆风顺</h3>\n\t\t\t\t<img src=\"img/iali24.jpg\" tppabs=\"img/iali24.jpg\"  />\n\t\t\t</div>\n\t\t\t<div id=\"/section-3/page-2\" class=\"ft-page page-12\" data-id=\"page-2\">\n\t\t\t\t<h3><span id=\"text-11\" contenteditable=\"true\">但我们都该勇敢的面对</span><br /><span id=\"text-12\" contenteditable=\"true\">随时准备接受生活的挑战</span></h3>\n\t\t\t\t<img src=\"img/iali25.jpg\" tppabs=\"img/iali25.jpg\" />\n\t\t\t</div>\n\t\t\t<div id=\"/section-3/page-3\" class=\"ft-page page-13\" data-id=\"page-3\">\n\t\t\t\t<img src=\"img/iali64.jpg\" tppabs=\"img/iali64.jpg\" alt='可是小明的爱情又在哪里呢？' />\n\t\t\t\t<h3 id=\"text-13\" contenteditable=\"true\">可是我们的爱情又在哪里呢？</h3>\n\t\t\t</div>\n\t\t\t<div id=\"/section-3/page-4\" class=\"ft-page page-14 left-img\" data-id=\"page-4\">\n\t\t\t\t<h3 id=\"text-14\" contenteditable=\"true\">望着镜子憧憬着。。。。</h3>\n\t\t\t\t<img src=\"img/iali46.jpg\" tppabs=\"img/iali46.jpg\" />\n\t\t\t</div>\n\t\t\t<div id=\"/section-3/page-5\" class=\"ft-page page-15 left-img\" data-id=\"page-5\">\n\t\t\t\t<h3><span id=\"text-15\" contenteditable=\"true\">没有人能够告诉我们爱情的归属</span><br /><span id=\"text-16\" contenteditable=\"true\">即使是大树精灵也不知道答案</span></h3>\n\t\t\t\t<img src=\"img/iali45.jpg\" tppabs=\"img/iali45.jpg\" />\n\t\t\t</div>\n\t\t\t<div id=\"/section-3/page-6\" class=\"ft-page page-16 left-img\" data-id=\"page-6\">\n\t\t\t\t<h3><span id=\"text-17\" contenteditable=\"true\">只有我们自己向前迈进，自己去寻找</span><br /><span id=\"text-18\" contenteditable=\"true\">走在茫茫的雪地上</span></h3>\n\t\t\t\t<img src=\"img/iali66.jpg\" tppabs=\"img/iali66.jpg\" />\n\t\t\t</div>\n\t\t\t<div id=\"/section-3/page-7\" class=\"ft-page page-17 top-text\" data-id=\"page-7\">\n\t\t\t\t<h3 id=\"text-19\" contenteditable=\"true\">直到有一天我与你相遇了</h3>\n\t\t\t\t<img src=\"img/iali16.jpg\" tppabs=\"img/iali16.jpg\" />\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"ft-section section-4\" data-id=\"section-4\">\n\t\t\t<div id=\"/section-4/page-1\" class=\"ft-page page-18 full-img\" data-id=\"page-1\">\n\t\t\t\t<p class=\"text\" id=\"text-20\" contenteditable=\"true\">杨宽喜欢王显芹，非常非常的喜欢，因为芹芹的出现，宽宽脸上有了更加灿烂的笑容</p>\n\t\t\t\t<img src=\"img/iali11.jpg\" tppabs=\"img/iali11.jpg\"  />\n\t\t\t</div>\n\t\t\t<div id=\"/section-4/page-2\" class=\"ft-page page-19\" data-id=\"page-2\">\n\t\t\t\t<h3 id=\"text-21\" contenteditable=\"true\">宽宽憧憬着与芹芹在一起会有的幸福生活</h3>\n\t\t\t\t<img src=\"img/iali75.jpg\" tppabs=\"img/iali75.jpg\" />\n\t\t\t</div>\n\t\t\t<div id=\"/section-4/page-3\" class=\"ft-page page-20\" data-id=\"page-3\">\n\t\t\t\t<img src=\"img/iali59.png\" tppabs=\"img/iali59.png\" />\n\t\t\t\t<h3 id=\"text-22\" contenteditable=\"true\">会想。。。</h3>\n\t\t\t\t<img src=\"img/iali9.jpg\" tppabs=\"img/iali9.jpg\" />\n\t\t\t</div>\n\t\t\t<div id=\"/section-4/page-4\" class=\"ft-page page-21\" data-id=\"page-4\">\n\t\t\t\t<h3 id=\"text-23\" contenteditable=\"true\">我们一定能够开心的在一起</h3>\n\t\t\t\t<img src=\"img/iali59.png\" tppabs=\"img/iali59.png\" />\n\t\t\t</div>\n\t\t\t<div id=\"/section-4/page-5\" class=\"ft-page page-22 left-img\" data-id=\"page-5\">\n\t\t\t\t<h3 id=\"text-24\" contenteditable=\"true\">即时相隔千里，我们也彼此挂念，步步靠近</h3>\n\t\t\t\t<img src=\"img/iali4.jpg\" tppabs=\"img/iali4.jpg\" />\n\t\t\t</div>\n\t\t\t<div id=\"/section-4/page-6\" class=\"ft-page page-23 left-img\" data-id=\"page-6\">\n\t\t\t\t<h3 id=\"text-25\" contenteditable=\"true\">然后两个人一起出去玩</h3>\n\t\t\t\t<img src=\"img/iali44.jpg\" tppabs=\"img/iali44.jpg\" />\n\t\t\t</div>\n\t\t\t<div id=\"/section-4/page-7\" class=\"ft-page page-24 full-img\" data-id=\"page-7\">\t\n\t\t\t\t<h3 id=\"text-26\" contenteditable=\"true\">晚上一起回家</h3>\n\t\t\t\t<img src=\"img/iali32.jpg\" tppabs=\"img/iali32.jpg\" />\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"ft-section section-5\" data-id=\"section-5\">\n\t\t\t<div id=\"/section-5/page-1\" class=\"ft-page page-25 left-img\" data-id=\"page-1\">\n\t\t\t\t<h3><span id=\"text-27\" contenteditable=\"true\">一起在生日蛋糕的蜡烛下许愿</span><br /><span id=\"text-28\" contenteditable=\"true\">再一起分享甜蜜</span></h3>\n\t\t\t\t<img src=\"img/iali37.jpg\" tppabs=\"img/iali37.jpg\" />\n\t\t\t</div>\n\t\t\t<div id=\"/section-5/page-2\" class=\"ft-page page-26 top-text\" data-id=\"page-2\">\n\t\t\t\t<h3 id=\"text-29\" contenteditable=\"true\">然后高兴地进入梦乡，在梦中还会和彼此在一起</h3>\n\t\t\t\t<img src=\"img/iali10.gif\" tppabs=\"img/iali10.gif\" />\n\t\t\t</div>\n\t\t\t<div id=\"/section-5/page-3\" class=\"ft-page page-27\" data-id=\"page-3\">\n\t\t\t\t<h3 id=\"text-30\" contenteditable=\"true\">宽宽成为了芹芹的逛街助手</h3>\n\t\t\t\t<img src=\"img/iali67.jpg\" tppabs=\"img/iali67.jpg\"  />\n\t\t\t</div>\n\t\t\t<div id=\"/section-5/page-4\" class=\"ft-page page-28\" data-id=\"page-4\">\n\t\t\t\t<h3 id=\"text-31\" contenteditable=\"true\">然后，他们会一起去很多地方玩</h3>\n\t\t\t\t<img src=\"img/iali40.jpg\" tppabs=\"img/iali40.jpg\" />\n\t\t\t</div>\n\t\t\t<div id=\"/section-5/page-5\" class=\"ft-page page-29\" data-id=\"page-5\">\n\t\t\t\t<h3 id=\"text-32\" contenteditable=\"true\">宽宽和芹芹一块成为一对吃货</h3>\n\t\t\t\t<img src=\"img/iali12.jpg\" tppabs=\"img/iali12.jpg\" />\n\t\t\t</div>\n\t\t\t<div id=\"/section-5/page-6\" class=\"ft-page page-30\" data-id=\"page-6\">\n\t\t\t\t<h3 id=\"text-33\" contenteditable=\"true\">不久之后，他们会搬到了一起</h3>\n\t\t\t\t<img src=\"img/iali76.gif\" tppabs=\"img/iali76.gif\" />\n\t\t\t</div>\n\t\t\t<div id=\"/section-5/page-7\" class=\"ft-page page-31\" data-id=\"page-7\">\n\t\t\t\t<h3 id=\"text-34\" contenteditable=\"true\">再然后，宽宽会主动去学习各种技能</h3>\n\t\t\t\t<img src=\"img/iali77.jpg\" tppabs=\"img/iali77.jpg\" />\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"ft-section section-6\" data-id=\"section-6\">\n\t\t\t<div id=\"/section-6/page-1\" class=\"ft-page page-32\" data-id=\"page-1\">\n\t\t\t\t<h3 id=\"text-35\" contenteditable=\"true\">煮饭</h3>\n\t\t\t\t<img src=\"img/iali62.jpg\" tppabs=\"img/iali62.jpg\"  />\n\t\t\t</div>\n\t\t\t<div id=\"/section-6/page-2\" class=\"ft-page page-33 top-text\" data-id=\"page-2\">\n\t\t\t\t<h3 id=\"text-36\" contenteditable=\"true\">那时候，每天早上，他们吃着自己做的美食</h3>\n\t\t\t\t<img src=\"img/iali3.jpg\" tppabs=\"img/iali3.jpg\" />\n\t\t\t</div>\n\t\t\t<div id=\"/section-6/page-3\" class=\"ft-page page-34 left-img\" data-id=\"page-3\">\n\t\t\t\t<h3 id=\"text-37\" contenteditable=\"true\">然后在同一个站台，高高兴兴的一起上班</h3>\n\t\t\t</div>\n\t\t\t<div id=\"/section-6/page-4\" class=\"ft-page page-35\" data-id=\"page-4\">\n\t\t\t\t<h3><span id=\"text-38\" contenteditable=\"true\">他们会感觉自己好幸福。</span><br /><span id=\"text-39\" contenteditable=\"true\">因为自己有了家</span><br /><span id=\"text-40\" contenteditable=\"true\">那个温暖的港湾</span></h3>\n\t\t\t\t<img src=\"img/iali8.gif\" tppabs=\"img/iali8.gif\" />\n\t\t\t</div>\n\t\t\t<div id=\"/section-6/page-5\" class=\"ft-page page-36 full-img\" data-id=\"page-5\">\n\t\t\t\t<h3 id=\"text-41\" contenteditable=\"true\">他们可能偶尔也会吵架</h3>\n\t\t\t\t<img src=\"img/iali31.jpg\" tppabs=\"img/iali31.jpg\" />\n\t\t\t</div>\n\t\t\t<div id=\"/section-6/page-6\" class=\"ft-page page-37 left-img\" data-id=\"page-6\">\n\t\t\t\t<h3 id=\"text-42\" contenteditable=\"true\">但是都不想这样</h3>\n\t\t\t\t<img src=\"img/iali49.jpg\" tppabs=\"img/iali49.jpg\" />\n\t\t\t</div>\n\t\t\t<div id=\"/section-6/page-7\" class=\"ft-page page-38 bottom-text\" data-id=\"page-7\">\n\t\t\t\t<img src=\"img/iali21.jpg\" tppabs=\"img/iali21.jpg\" />\n\t\t\t\t<h3 id=\"text-43\" contenteditable=\"true\">一定是我有什么做的不对，宽宽会这么想</h3>\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"ft-section section-7\" data-id=\"section-7\">\n\t\t\t<div id=\"/section-7/page-1\" class=\"ft-page page-39 left-img\" data-id=\"page-1\">\n\t\t\t\t<h3 id=\"text-44\" contenteditable=\"true\">如果没有芹芹在身边，窗外就没有风景</h3>\n\t\t\t\t<img src=\"img/iali2.jpg\" tppabs=\"img/iali2.jpg\" />\n\t\t\t</div>\n\t\t\t<div id=\"/section-7/page-2\" class=\"ft-page page-40\" data-id=\"page-2\">\n\t\t\t\t<h3 id=\"text-45\" contenteditable=\"true\">如果没有芹芹在身边</h3>\n\t\t\t\t<img src=\"img/iali14.jpg\" tppabs=\"img/iali14.jpg\"  />\n\t\t\t</div>\n\t\t\t<div id=\"/section-7/page-3\" class=\"ft-page page-41\" data-id=\"page-3\">\n\t\t\t\t<img src=\"img/iali30_1.jpg\" tppabs=\"img/iali30_1.jpg\" class='img1'/>\n\t\t\t\t<img src=\"img/iali30_2.jpg\" tppabs=\"img/iali30_2.jpg\" class='img2'/>\n\t\t\t\t<h3 id=\"text-46\" contenteditable=\"true\"> 宽宽又怎会飞的更高更远</h3>\n\t\t\t</div>\n\t\t\t<div id=\"/section-7/page-4\" class=\"ft-page page-42\" data-id=\"page-4\">\n\t\t\t\t<h3><span id=\"text-47\" contenteditable=\"true\">宽宽努力着，希望能不断进步</span><br /><span id=\"text-48\" contenteditable=\"true\">让芹芹有钱买好吃的、穿好看的、住温馨的房子。</span></h3>\n\t\t\t\t<img src=\"img/iali69.jpg\" tppabs=\"img/iali69.jpg\"  />\n\t\t\t</div>\n\t\t\t<div id=\"/section-7/page-5\" class=\"ft-page page-43\" data-id=\"page-5\">\n\t\t\t\t<img src=\"img/iali42.jpg\" tppabs=\"img/iali42.jpg\" />\n\t\t\t\t<h3 id=\"text-49\" contenteditable=\"true\">我愿意一直陪伴着你</h3>\n\t\t\t</div>\n\t\t\t<div id=\"/section-7/page-6\" class=\"ft-page page-44 left-img\" data-id=\"page-6\">\n\t\t\t\t<h3><span id=\"text-50\" contenteditable=\"true\">爱情就像花草一样</span><br /><span id=\"text-51\" contenteditable=\"true\">需要用包容来浇灌</span></h3>\n\t\t\t\t<img src=\"img/iali0.jpg\" tppabs=\"img/iali0.jpg\" />\n\t\t\t</div>\n\t\t\t<div id=\"/section-7/page-7\" class=\"ft-page page-45 left-img\" data-id=\"page-7\">\n\t\t\t\t<h3><span id=\"text-52\" contenteditable=\"true\">直到一天，</span><br /><span id=\"text-53\" contenteditable=\"true\">宽宽开始准备一份惊喜</span></h3>\n\t\t\t\t<img src=\"img/iali18.jpg\" tppabs=\"img/iali18.jpg\" />\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"ft-section section-8\" data-id=\"section-8\">\n\t\t\t<div id=\"/section-8/page-1\" class=\"ft-page page-46\" data-id=\"page-1\">\n\t\t\t\t<img src=\"img/iali57.gif\" tppabs=\"img/iali57.gif\" />\n\t\t\t\t<h3>\n\t\t\t\t\t<span id=\"text-54\" contenteditable=\"true\">看着惊喜一点点准备好了</span>\n\t\t\t\t\t<span id=\"text-55\" contenteditable=\"true\">宽宽好开心</span>\n\t\t\t\t\t<span id=\"text-56\" contenteditable=\"true\">因为他想象着芹芹看到时</span>\n\t\t\t\t\t<span id=\"text-57\" contenteditable=\"true\">开心的样子</span>\n\t\t\t\t</h3>\n\t\t\t</div>\n\t\t\t<div id=\"/section-8/page-2\" class=\"ft-page page-47 top-text\" data-id=\"page-2\">\n\t\t\t\t<img src=\"img/iali58.jpg\" tppabs=\"img/iali58.jpg\" />\n\t\t\t\t<h3>\n\t\t\t\t\t<span id=\"text-58\" contenteditable=\"true\">想想未来他们</span>\n                    <span id=\"text-59\" contenteditable=\"true\">会有一辈子的时间相守</span>\n\t\t\t\t\t<span id=\"text-59\" contenteditable=\"true\">宽宽好开心</span>\n\t\t\t\t\t<span id=\"text-60\" contenteditable=\"true\">他可以和芹芹一起</span>\n\t\t\t\t\t<span id=\"text-61\" contenteditable=\"true\">去各种好玩儿的地方</span>\n\t\t\t\t</h3>\n\t\t\t\t\n\t\t\t</div>\n\t\t\t<div id=\"/section-8/page-3\" class=\"ft-page page-48 left-img\" data-id=\"page-3\">\n\t\t\t\t<p><span id=\"text-62\" contenteditable=\"true\">宽宽会努力</span><br /><span id=\"text-63\" contenteditable=\"true\">为了他和芹芹的梦之城堡</span></p>\n\t\t\t\t<img src=\"img/iali65.jpg\" tppabs=\"img/iali65.jpg\"  />\n\t\t\t</div>\n\t\t\t<div id=\"/section-8/page-4\" class=\"ft-page page-49 full-img\" data-id=\"page-4\">\n\t\t\t<img src=\"img/iali71.jpg\" tppabs=\"img/iali71.jpg\" />\n\t\t\t\t<p class=\"text\">\n\t\t\t\t\t<span class='text' id=\"text-64\" contenteditable=\"true\">宽宽很幸福，因为他遇到了芹芹。他相信后面的每天都会是快乐的</span><br />\n\t\t\t\t\t<span class='text' id=\"text-65\" contenteditable=\"true\">简简单单，体会与芹芹在一起的每一个刻</span>\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t\t<div id=\"/section-8/page-5\" class=\"ft-page page-50\" data-id=\"page-5\">\n\t\t\t\t<p class='text' id=\"text-66\" contenteditable=\"true\">宽宽和芹芹会一起过幸福的生活</p>\n\t\t\t\t<img src=\"img/iali50_1.jpg\" tppabs=\"img/iali50_1.jpg\" class='img1' />\n\t\t\t\t<img src=\"img/iali50_2.jpg\" tppabs=\"img/iali50_2.jpg\" class='img2' />\n\t\t\t</div>\n\t\t\t<div id=\"/section-8/page-6\" class=\"ft-page page-51\" data-id=\"page-6\">\n\t\t\t\t<p>\n\t\t\t\t\t<span id=\"text-67\" contenteditable=\"true\">永远有多远？</span><br />\n\t\t\t\t\t<span id=\"text-68\" contenteditable=\"true\">比时间多一秒就是永远，我会永远爱你</span><br />\n\t\t\t\t\t<span id=\"text-69\" contenteditable=\"true\">世界有多大？</span><br />\n\t\t\t\t\t<span id=\"text-70\" contenteditable=\"true\">你走到哪里，世界就有多大</span>\n\t\t\t\t\t</p>\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"ft-section section-9\" data-id=\"section-9\">\n\t\t\t<div id=\"/section-9/page-1\" class=\"ft-page page-52 full-img\" data-id=\"page-1\">\n\t\t\t\t<h3 id=\"text-71\" contenteditable=\"true\">希望未来的日子里，你中有我，我中有你，开开心心</h3>\n\t\t\t\t<img src=\"img/iali20.jpg\" tppabs=\"img/iali20.jpg\"  />\n\t\t\t</div>\n\t\t\t<div id=\"/section-9/page-2\" class=\"ft-page page-53\" data-id=\"page-2\">\n\t\t\t\t<img src=\"img/iali68.jpg\" tppabs=\"img/iali68.jpg\" alt='happy birthday' />\n\t\t\t\t<h3 id=\"text-72\" contenteditable=\"true\">我爱你</h3>\n\t\t\t</div>\n\t\t\t<div id=\"/section-9/page-3\" class=\"ft-page page-54 center-img\" data-id=\"page-3\" >\n\t\t\t\t<div class=\"center-img\">I love you</div>\n\t\t\t</div>\n\t\t\t<div id=\"/section-9/page-4\" class=\"ft-page page-55 right-img\" data-id=\"page-4\">\n\t\t\t\t<img src=\"img/14915.jpg\" tppabs=\"img/14915.jpg\" />\n\t\t\t\t<p class=\"text\">\n\t\t\t\t\t<span id=\"text-73\" contenteditable=\"true\">我相信，宽宽和芹芹的故事会一直继续下去，持续到永远。</span><br />\n\t\t\t\t\t<span id=\"text-74\" contenteditable=\"true\">无论精彩、平淡都会是他们喜欢的。</span><br />\n                    <span id=\"text-74\" contenteditable=\"true\">芹宝贝儿，我爱你</span><br />\n\t\t\t\t\t<br />\n\t\t\t\t\t<br />\n\t\t\t\t\t<span> -- 按“Esc\"键有惊喜</span>\n\t\t\t\t</p>\t\t\t\t\n\t\t\t</div>\n\t\t</div>\n\t</div>\n\t<div class=\"nojavascript\">您的浏览器禁用了javascript，无法正常浏览本页面</div>\n\t<div class=\"content\">\n\t\t<h2>小乖乖，我们已经在一起了</h2>\n\t\t<div class=\"timer\">\n\t\t\t<b id=\"d\"></b> Days <b id=\"h\"></b> Hours <b id=\"m\"></b> Minutes <b id=\"s\"></b> Seconds\n\t\t</div>\n\t</div>\n\n\t<audio id=\"bgmMusic\" src=\"lovebgm.mp3\" autoplay=\"autoplay\" loop preload=\"auto\" type=\"audio/mp3\"></audio>\n\n\n\t<script type=\"text/javascript\" src=\"/js/custom/jquery.min.js\"></script>\n\t<script type=\"text/javascript\" src=\"/js/custom/all.min.js\"></script>\n\t<script type=\"text/javascript\" src=\"/js/custom/love.min.js\"></script>\n\n\t<div class=\"mPower\"><span id=\"on\" title=\"点击暂停\" style=\"\"></span><span id=\"off\" title=\"点击播放\"  style=\"\"></span></div>\n\t<script>\n\t\tfunction timer() {\n\t\t\tvar start = new Date(2016, 6, 18); \n\t\t\tvar t = new Date() - start;\n\t\t\tvar h = ~~(t / 1000 / 60 / 60 % 24);\n\t\t\tif (h < 10) {\n\t\t\t\th = \"0\" + h;\n\t\t\t}\n\t\t\tvar m = ~~(t / 1000 / 60 % 60);\n\t\t\tif (m < 10) {\n\t\t\t\tm = \"0\" + m;\n\t\t\t}\n\n\t\t\tvar s = ~~(t / 1000 % 60);\n\t\t\tif (s < 10) {\n\t\t\t\ts = \"0\" + s;\n\t\t\t}\n\t\t\tdocument.getElementById('d').innerHTML = ~~(t / 1000 / 60 / 60 / 24);\n\t\t\tdocument.getElementById('h').innerHTML = h;\n\t\t\tdocument.getElementById('m').innerHTML = m;\n\t\t\tdocument.getElementById('s').innerHTML = s;\n\t\t}\n\t\ttimer();\n\t\tsetInterval(timer, 1000);\n\t</script>\n\t\n</body>\n</html>\n","date":"2019-05-15T13:19:18.326Z","updated":"2019-05-15T13:19:18.326Z","path":"love/index.html","title":"","comments":1,"_id":"ck0ozhj4i007ogkuw4z3ikycp","content":"<html><!DOCTYPE HTML>\n<!--[if IE 6]>\n<html id=\"ie6\" class=\"ie ie6 lt-ie9\">\n<![endif]-->\n<!--[if IE 7]>\n<html id=\"ie7\" class=\"ie ie7 lt-ie9\">\n<![endif]-->\n<!--[if IE 8]>\n<html id=\"ie8\" class=\"ie ie8 lt-ie9\">\n<![endif]-->\n<!--[if gte IE 9]>\n<html class=\"ie ie9\">\n<![endif]-->\n<!--[if !(IE)]><!-->\n<html>\n<!--<![endif]-->\n<head><meta name=\"generator\" content=\"Hexo 3.8.0\">\n\t<meta http-equiv=\"Pragma\" content=\"no-cache\">\n\t<meta charset=\"UTF-8\">\n\t<meta name=\"viewport\" content=\"width=device-width, minimum-scale=1.0, maximum-scale=1.0, user-scalable=no\">\n\t<meta name=\"author\" content=\"DSX,工科男表白,浪漫表白,表白网站\">\n\t<meta name=\"description\" content=\"宽宽芹芹爱的网站\">\n\t<title>宽宽 LOVE 芹芹</title>\n\t<link rel=\"stylesheet\" href=\"all.min.css\">\n\t<style>\n\t\th2 {\n\t\t\tfont-size: 100%;\n\t\t\tfont-weight: 400;\n\t\t}\n\t\t\n\t\t.content {\n\t\t\tposition: absolute;\n\t\t\twidth: 100%;\n\t\t\ttop: 10%;\n\t\t\ttransform: translate(0, -50%);\n\t\t\ttext-align: right;\n\t\t}\n\t\t\n\t\t.timer {\n\t\t\tfont-size: 80%;\n\t\t\tline-height: 1.5;\n\t\t\tmargin: 1em 0;\n\t\t}\n\t\t\n\t\t.timer b {\n\t\t\tcolor: rgb(253, 99, 125);\n\t\t}\n\t</style>\n</head>\n<body>\n\t<div class=\"flowtime\">\n\t\t<div class=\"ft-section section-1\" data-id=\"section-1\">\n\t\t\t<div id=\"/section-1/page-1\" class=\"ft-page page-1\" data-id=\"page-1\">\n\t\t\t\t<p class=\"text1\"><span id=\"text-75\" contenteditable=\"true\">宽宽</span> ❤ <span id=\"text-76\" contenteditable=\"true\">芹芹</span> <span id=\"text-77\" contenteditable=\"true\">一生一世</span></p>\n\t\t\t\t<p class=\"text2\">按键盘 \"↓\" <span id=\"text-78\" contenteditable=\"true\">开始倾听程序员的浪漫表白</span></p>\n\t\t\t</div>\n\t\t\t<div id=\"/section-1/page-2\" class=\"ft-page page-2\" data-id=\"page-2\">\n\t\t\t\t<p class=\"top-text\" id=\"text-1\" contenteditable=\"true\">过去的我们一直是一个人生活，享受着孤独，也憧憬着爱情。</p>\n\t\t\t\t<img src=\"/love/img/iali63.jpg\" tppabs=\"img/iali63.jpg\" alt=\"过去的XX一直是一个人生活，享受着孤独，也憧憬着爱情。\">\n\t\t\t</div>\n\t\t\t<div id=\"/section-1/page-3\" class=\"ft-page page-3 left-img\" data-id=\"page-3\">\n\t\t\t\t<h2 class=\"text\" id=\"text-2\" contenteditable=\"true\">一个人的长廊</h2>\n\t\t\t\t<img src=\"/love/img/iali35.jpg\" tppabs=\"img/iali35.jpg\" alt=\"一个人的长廊\">\n\t\t\t</div>\n\t\t\t<div id=\"/section-1/page-4\" class=\"ft-page page-4 full-img\" data-id=\"page-4\">\n\t\t\t\t<h2 class=\"center-text\" id=\"text-3\" contenteditable=\"true\">一个人的山岗</h2>\n\t\t\t\t<img src=\"/love/img/iali6.jpg\" tppabs=\"img/iali6.jpg\" alt=\"一个人的山岗\">\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"ft-section section-2\" data-id=\"section-2\">\n\t\t\t<div id=\"/section-2/page-1\" class=\"ft-page page-5 full-img\" data-id=\"page-1\">\n\t\t\t\t<h2 class=\"center-text\" id=\"text-4\" contenteditable=\"true\">一个人的地铁</h2>\n\t\t\t\t<img src=\"/love/img/iali19.jpg\" tppabs=\"img/iali19.jpg\" alt=\"一个人的地铁\">\n\t\t\t</div>\n\t\t\t<div id=\"/section-2/page-2\" class=\"ft-page page-6\" data-id=\"page-2\">\n\t\t\t\t<h2 class=\"center-text\" id=\"text-5\" contenteditable=\"true\">一个人的游乐场</h2>\n\t\t\t\t<img src=\"/love/img/iali29.jpg\" tppabs=\"img/iali29.jpg\" alt=\"一个人的游乐场\">\n\t\t\t</div>\n\t\t\t<div id=\"/section-2/page-3\" class=\"ft-page page-7\" data-id=\"page-3\">\n\t\t\t\t<h3 id=\"text-6\" contenteditable=\"true\">但我们依然乐观，微笑着，等待着</h3>\n\t\t\t\t<img src=\"/love/img/iali60.jpg\" tppabs=\"img/iali60.jpg\" alt=\"但他依然乐观，微笑着，等待着\">\n\t\t\t</div>\n\t\t\t<div id=\"/section-2/page-4\" class=\"ft-page page-8 full-img\" data-id=\"page-4\">\n\t\t\t\t<h3 id=\"text-7\" contenteditable=\"true\">生活难免有风风雨雨</h3>\n\t\t\t\t<img src=\"/love/img/iali51.jpg\" tppabs=\"img/iali51.jpg\" alt=\"生活难免有风风雨雨\">\n\t\t\t</div>\n\t\t\t<div id=\"/section-2/page-5\" class=\"ft-page page-9\" data-id=\"page-5\">\n\t\t\t\t<h3 id=\"text-8\" contenteditable=\"true\">我们也总是能够轻松的应对</h3>\n\t\t\t\t<img src=\"/love/img/iali5.jpg\" tppabs=\"img/iali5.jpg\">\n\t\t\t</div>\n\t\t\t<div id=\"/section-2/page-6\" class=\"ft-page page-10\" data-id=\"page-6\">\n\t\t\t\t<h3 id=\"text-9\" contenteditable=\"true\">并且面带阳光、自信的笑容</h3>\n\t\t\t\t<img src=\"/love/img/iali22.jpg\" tppabs=\"img/iali22.jpg\">\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"ft-section section-3\" data-id=\"section-3\">\n\t\t\t<div id=\"/section-3/page-1\" class=\"ft-page page-11 full-img\" data-id=\"page-1\">\n\t\t\t\t<h3 id=\"text-10\" contenteditable=\"true\">生活也不会总是一帆风顺</h3>\n\t\t\t\t<img src=\"/love/img/iali24.jpg\" tppabs=\"img/iali24.jpg\">\n\t\t\t</div>\n\t\t\t<div id=\"/section-3/page-2\" class=\"ft-page page-12\" data-id=\"page-2\">\n\t\t\t\t<h3><span id=\"text-11\" contenteditable=\"true\">但我们都该勇敢的面对</span><br><span id=\"text-12\" contenteditable=\"true\">随时准备接受生活的挑战</span></h3>\n\t\t\t\t<img src=\"/love/img/iali25.jpg\" tppabs=\"img/iali25.jpg\">\n\t\t\t</div>\n\t\t\t<div id=\"/section-3/page-3\" class=\"ft-page page-13\" data-id=\"page-3\">\n\t\t\t\t<img src=\"/love/img/iali64.jpg\" tppabs=\"img/iali64.jpg\" alt=\"可是小明的爱情又在哪里呢？\">\n\t\t\t\t<h3 id=\"text-13\" contenteditable=\"true\">可是我们的爱情又在哪里呢？</h3>\n\t\t\t</div>\n\t\t\t<div id=\"/section-3/page-4\" class=\"ft-page page-14 left-img\" data-id=\"page-4\">\n\t\t\t\t<h3 id=\"text-14\" contenteditable=\"true\">望着镜子憧憬着。。。。</h3>\n\t\t\t\t<img src=\"/love/img/iali46.jpg\" tppabs=\"img/iali46.jpg\">\n\t\t\t</div>\n\t\t\t<div id=\"/section-3/page-5\" class=\"ft-page page-15 left-img\" data-id=\"page-5\">\n\t\t\t\t<h3><span id=\"text-15\" contenteditable=\"true\">没有人能够告诉我们爱情的归属</span><br><span id=\"text-16\" contenteditable=\"true\">即使是大树精灵也不知道答案</span></h3>\n\t\t\t\t<img src=\"/love/img/iali45.jpg\" tppabs=\"img/iali45.jpg\">\n\t\t\t</div>\n\t\t\t<div id=\"/section-3/page-6\" class=\"ft-page page-16 left-img\" data-id=\"page-6\">\n\t\t\t\t<h3><span id=\"text-17\" contenteditable=\"true\">只有我们自己向前迈进，自己去寻找</span><br><span id=\"text-18\" contenteditable=\"true\">走在茫茫的雪地上</span></h3>\n\t\t\t\t<img src=\"/love/img/iali66.jpg\" tppabs=\"img/iali66.jpg\">\n\t\t\t</div>\n\t\t\t<div id=\"/section-3/page-7\" class=\"ft-page page-17 top-text\" data-id=\"page-7\">\n\t\t\t\t<h3 id=\"text-19\" contenteditable=\"true\">直到有一天我与你相遇了</h3>\n\t\t\t\t<img src=\"/love/img/iali16.jpg\" tppabs=\"img/iali16.jpg\">\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"ft-section section-4\" data-id=\"section-4\">\n\t\t\t<div id=\"/section-4/page-1\" class=\"ft-page page-18 full-img\" data-id=\"page-1\">\n\t\t\t\t<p class=\"text\" id=\"text-20\" contenteditable=\"true\">杨宽喜欢王显芹，非常非常的喜欢，因为芹芹的出现，宽宽脸上有了更加灿烂的笑容</p>\n\t\t\t\t<img src=\"/love/img/iali11.jpg\" tppabs=\"img/iali11.jpg\">\n\t\t\t</div>\n\t\t\t<div id=\"/section-4/page-2\" class=\"ft-page page-19\" data-id=\"page-2\">\n\t\t\t\t<h3 id=\"text-21\" contenteditable=\"true\">宽宽憧憬着与芹芹在一起会有的幸福生活</h3>\n\t\t\t\t<img src=\"/love/img/iali75.jpg\" tppabs=\"img/iali75.jpg\">\n\t\t\t</div>\n\t\t\t<div id=\"/section-4/page-3\" class=\"ft-page page-20\" data-id=\"page-3\">\n\t\t\t\t<img src=\"/love/img/iali59.png\" tppabs=\"img/iali59.png\">\n\t\t\t\t<h3 id=\"text-22\" contenteditable=\"true\">会想。。。</h3>\n\t\t\t\t<img src=\"/love/img/iali9.jpg\" tppabs=\"img/iali9.jpg\">\n\t\t\t</div>\n\t\t\t<div id=\"/section-4/page-4\" class=\"ft-page page-21\" data-id=\"page-4\">\n\t\t\t\t<h3 id=\"text-23\" contenteditable=\"true\">我们一定能够开心的在一起</h3>\n\t\t\t\t<img src=\"/love/img/iali59.png\" tppabs=\"img/iali59.png\">\n\t\t\t</div>\n\t\t\t<div id=\"/section-4/page-5\" class=\"ft-page page-22 left-img\" data-id=\"page-5\">\n\t\t\t\t<h3 id=\"text-24\" contenteditable=\"true\">即时相隔千里，我们也彼此挂念，步步靠近</h3>\n\t\t\t\t<img src=\"/love/img/iali4.jpg\" tppabs=\"img/iali4.jpg\">\n\t\t\t</div>\n\t\t\t<div id=\"/section-4/page-6\" class=\"ft-page page-23 left-img\" data-id=\"page-6\">\n\t\t\t\t<h3 id=\"text-25\" contenteditable=\"true\">然后两个人一起出去玩</h3>\n\t\t\t\t<img src=\"/love/img/iali44.jpg\" tppabs=\"img/iali44.jpg\">\n\t\t\t</div>\n\t\t\t<div id=\"/section-4/page-7\" class=\"ft-page page-24 full-img\" data-id=\"page-7\">\t\n\t\t\t\t<h3 id=\"text-26\" contenteditable=\"true\">晚上一起回家</h3>\n\t\t\t\t<img src=\"/love/img/iali32.jpg\" tppabs=\"img/iali32.jpg\">\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"ft-section section-5\" data-id=\"section-5\">\n\t\t\t<div id=\"/section-5/page-1\" class=\"ft-page page-25 left-img\" data-id=\"page-1\">\n\t\t\t\t<h3><span id=\"text-27\" contenteditable=\"true\">一起在生日蛋糕的蜡烛下许愿</span><br><span id=\"text-28\" contenteditable=\"true\">再一起分享甜蜜</span></h3>\n\t\t\t\t<img src=\"/love/img/iali37.jpg\" tppabs=\"img/iali37.jpg\">\n\t\t\t</div>\n\t\t\t<div id=\"/section-5/page-2\" class=\"ft-page page-26 top-text\" data-id=\"page-2\">\n\t\t\t\t<h3 id=\"text-29\" contenteditable=\"true\">然后高兴地进入梦乡，在梦中还会和彼此在一起</h3>\n\t\t\t\t<img src=\"/love/img/iali10.gif\" tppabs=\"img/iali10.gif\">\n\t\t\t</div>\n\t\t\t<div id=\"/section-5/page-3\" class=\"ft-page page-27\" data-id=\"page-3\">\n\t\t\t\t<h3 id=\"text-30\" contenteditable=\"true\">宽宽成为了芹芹的逛街助手</h3>\n\t\t\t\t<img src=\"/love/img/iali67.jpg\" tppabs=\"img/iali67.jpg\">\n\t\t\t</div>\n\t\t\t<div id=\"/section-5/page-4\" class=\"ft-page page-28\" data-id=\"page-4\">\n\t\t\t\t<h3 id=\"text-31\" contenteditable=\"true\">然后，他们会一起去很多地方玩</h3>\n\t\t\t\t<img src=\"/love/img/iali40.jpg\" tppabs=\"img/iali40.jpg\">\n\t\t\t</div>\n\t\t\t<div id=\"/section-5/page-5\" class=\"ft-page page-29\" data-id=\"page-5\">\n\t\t\t\t<h3 id=\"text-32\" contenteditable=\"true\">宽宽和芹芹一块成为一对吃货</h3>\n\t\t\t\t<img src=\"/love/img/iali12.jpg\" tppabs=\"img/iali12.jpg\">\n\t\t\t</div>\n\t\t\t<div id=\"/section-5/page-6\" class=\"ft-page page-30\" data-id=\"page-6\">\n\t\t\t\t<h3 id=\"text-33\" contenteditable=\"true\">不久之后，他们会搬到了一起</h3>\n\t\t\t\t<img src=\"/love/img/iali76.gif\" tppabs=\"img/iali76.gif\">\n\t\t\t</div>\n\t\t\t<div id=\"/section-5/page-7\" class=\"ft-page page-31\" data-id=\"page-7\">\n\t\t\t\t<h3 id=\"text-34\" contenteditable=\"true\">再然后，宽宽会主动去学习各种技能</h3>\n\t\t\t\t<img src=\"/love/img/iali77.jpg\" tppabs=\"img/iali77.jpg\">\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"ft-section section-6\" data-id=\"section-6\">\n\t\t\t<div id=\"/section-6/page-1\" class=\"ft-page page-32\" data-id=\"page-1\">\n\t\t\t\t<h3 id=\"text-35\" contenteditable=\"true\">煮饭</h3>\n\t\t\t\t<img src=\"/love/img/iali62.jpg\" tppabs=\"img/iali62.jpg\">\n\t\t\t</div>\n\t\t\t<div id=\"/section-6/page-2\" class=\"ft-page page-33 top-text\" data-id=\"page-2\">\n\t\t\t\t<h3 id=\"text-36\" contenteditable=\"true\">那时候，每天早上，他们吃着自己做的美食</h3>\n\t\t\t\t<img src=\"/love/img/iali3.jpg\" tppabs=\"img/iali3.jpg\">\n\t\t\t</div>\n\t\t\t<div id=\"/section-6/page-3\" class=\"ft-page page-34 left-img\" data-id=\"page-3\">\n\t\t\t\t<h3 id=\"text-37\" contenteditable=\"true\">然后在同一个站台，高高兴兴的一起上班</h3>\n\t\t\t</div>\n\t\t\t<div id=\"/section-6/page-4\" class=\"ft-page page-35\" data-id=\"page-4\">\n\t\t\t\t<h3><span id=\"text-38\" contenteditable=\"true\">他们会感觉自己好幸福。</span><br><span id=\"text-39\" contenteditable=\"true\">因为自己有了家</span><br><span id=\"text-40\" contenteditable=\"true\">那个温暖的港湾</span></h3>\n\t\t\t\t<img src=\"/love/img/iali8.gif\" tppabs=\"img/iali8.gif\">\n\t\t\t</div>\n\t\t\t<div id=\"/section-6/page-5\" class=\"ft-page page-36 full-img\" data-id=\"page-5\">\n\t\t\t\t<h3 id=\"text-41\" contenteditable=\"true\">他们可能偶尔也会吵架</h3>\n\t\t\t\t<img src=\"/love/img/iali31.jpg\" tppabs=\"img/iali31.jpg\">\n\t\t\t</div>\n\t\t\t<div id=\"/section-6/page-6\" class=\"ft-page page-37 left-img\" data-id=\"page-6\">\n\t\t\t\t<h3 id=\"text-42\" contenteditable=\"true\">但是都不想这样</h3>\n\t\t\t\t<img src=\"/love/img/iali49.jpg\" tppabs=\"img/iali49.jpg\">\n\t\t\t</div>\n\t\t\t<div id=\"/section-6/page-7\" class=\"ft-page page-38 bottom-text\" data-id=\"page-7\">\n\t\t\t\t<img src=\"/love/img/iali21.jpg\" tppabs=\"img/iali21.jpg\">\n\t\t\t\t<h3 id=\"text-43\" contenteditable=\"true\">一定是我有什么做的不对，宽宽会这么想</h3>\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"ft-section section-7\" data-id=\"section-7\">\n\t\t\t<div id=\"/section-7/page-1\" class=\"ft-page page-39 left-img\" data-id=\"page-1\">\n\t\t\t\t<h3 id=\"text-44\" contenteditable=\"true\">如果没有芹芹在身边，窗外就没有风景</h3>\n\t\t\t\t<img src=\"/love/img/iali2.jpg\" tppabs=\"img/iali2.jpg\">\n\t\t\t</div>\n\t\t\t<div id=\"/section-7/page-2\" class=\"ft-page page-40\" data-id=\"page-2\">\n\t\t\t\t<h3 id=\"text-45\" contenteditable=\"true\">如果没有芹芹在身边</h3>\n\t\t\t\t<img src=\"/love/img/iali14.jpg\" tppabs=\"img/iali14.jpg\">\n\t\t\t</div>\n\t\t\t<div id=\"/section-7/page-3\" class=\"ft-page page-41\" data-id=\"page-3\">\n\t\t\t\t<img src=\"/love/img/iali30_1.jpg\" tppabs=\"img/iali30_1.jpg\" class=\"img1\">\n\t\t\t\t<img src=\"/love/img/iali30_2.jpg\" tppabs=\"img/iali30_2.jpg\" class=\"img2\">\n\t\t\t\t<h3 id=\"text-46\" contenteditable=\"true\"> 宽宽又怎会飞的更高更远</h3>\n\t\t\t</div>\n\t\t\t<div id=\"/section-7/page-4\" class=\"ft-page page-42\" data-id=\"page-4\">\n\t\t\t\t<h3><span id=\"text-47\" contenteditable=\"true\">宽宽努力着，希望能不断进步</span><br><span id=\"text-48\" contenteditable=\"true\">让芹芹有钱买好吃的、穿好看的、住温馨的房子。</span></h3>\n\t\t\t\t<img src=\"/love/img/iali69.jpg\" tppabs=\"img/iali69.jpg\">\n\t\t\t</div>\n\t\t\t<div id=\"/section-7/page-5\" class=\"ft-page page-43\" data-id=\"page-5\">\n\t\t\t\t<img src=\"/love/img/iali42.jpg\" tppabs=\"img/iali42.jpg\">\n\t\t\t\t<h3 id=\"text-49\" contenteditable=\"true\">我愿意一直陪伴着你</h3>\n\t\t\t</div>\n\t\t\t<div id=\"/section-7/page-6\" class=\"ft-page page-44 left-img\" data-id=\"page-6\">\n\t\t\t\t<h3><span id=\"text-50\" contenteditable=\"true\">爱情就像花草一样</span><br><span id=\"text-51\" contenteditable=\"true\">需要用包容来浇灌</span></h3>\n\t\t\t\t<img src=\"/love/img/iali0.jpg\" tppabs=\"img/iali0.jpg\">\n\t\t\t</div>\n\t\t\t<div id=\"/section-7/page-7\" class=\"ft-page page-45 left-img\" data-id=\"page-7\">\n\t\t\t\t<h3><span id=\"text-52\" contenteditable=\"true\">直到一天，</span><br><span id=\"text-53\" contenteditable=\"true\">宽宽开始准备一份惊喜</span></h3>\n\t\t\t\t<img src=\"/love/img/iali18.jpg\" tppabs=\"img/iali18.jpg\">\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"ft-section section-8\" data-id=\"section-8\">\n\t\t\t<div id=\"/section-8/page-1\" class=\"ft-page page-46\" data-id=\"page-1\">\n\t\t\t\t<img src=\"/love/img/iali57.gif\" tppabs=\"img/iali57.gif\">\n\t\t\t\t<h3>\n\t\t\t\t\t<span id=\"text-54\" contenteditable=\"true\">看着惊喜一点点准备好了</span>\n\t\t\t\t\t<span id=\"text-55\" contenteditable=\"true\">宽宽好开心</span>\n\t\t\t\t\t<span id=\"text-56\" contenteditable=\"true\">因为他想象着芹芹看到时</span>\n\t\t\t\t\t<span id=\"text-57\" contenteditable=\"true\">开心的样子</span>\n\t\t\t\t</h3>\n\t\t\t</div>\n\t\t\t<div id=\"/section-8/page-2\" class=\"ft-page page-47 top-text\" data-id=\"page-2\">\n\t\t\t\t<img src=\"/love/img/iali58.jpg\" tppabs=\"img/iali58.jpg\">\n\t\t\t\t<h3>\n\t\t\t\t\t<span id=\"text-58\" contenteditable=\"true\">想想未来他们</span>\n                    <span id=\"text-59\" contenteditable=\"true\">会有一辈子的时间相守</span>\n\t\t\t\t\t<span id=\"text-59\" contenteditable=\"true\">宽宽好开心</span>\n\t\t\t\t\t<span id=\"text-60\" contenteditable=\"true\">他可以和芹芹一起</span>\n\t\t\t\t\t<span id=\"text-61\" contenteditable=\"true\">去各种好玩儿的地方</span>\n\t\t\t\t</h3>\n\t\t\t\t\n\t\t\t</div>\n\t\t\t<div id=\"/section-8/page-3\" class=\"ft-page page-48 left-img\" data-id=\"page-3\">\n\t\t\t\t<p><span id=\"text-62\" contenteditable=\"true\">宽宽会努力</span><br><span id=\"text-63\" contenteditable=\"true\">为了他和芹芹的梦之城堡</span></p>\n\t\t\t\t<img src=\"/love/img/iali65.jpg\" tppabs=\"img/iali65.jpg\">\n\t\t\t</div>\n\t\t\t<div id=\"/section-8/page-4\" class=\"ft-page page-49 full-img\" data-id=\"page-4\">\n\t\t\t<img src=\"/love/img/iali71.jpg\" tppabs=\"img/iali71.jpg\">\n\t\t\t\t<p class=\"text\">\n\t\t\t\t\t<span class=\"text\" id=\"text-64\" contenteditable=\"true\">宽宽很幸福，因为他遇到了芹芹。他相信后面的每天都会是快乐的</span><br>\n\t\t\t\t\t<span class=\"text\" id=\"text-65\" contenteditable=\"true\">简简单单，体会与芹芹在一起的每一个刻</span>\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t\t<div id=\"/section-8/page-5\" class=\"ft-page page-50\" data-id=\"page-5\">\n\t\t\t\t<p class=\"text\" id=\"text-66\" contenteditable=\"true\">宽宽和芹芹会一起过幸福的生活</p>\n\t\t\t\t<img src=\"/love/img/iali50_1.jpg\" tppabs=\"img/iali50_1.jpg\" class=\"img1\">\n\t\t\t\t<img src=\"/love/img/iali50_2.jpg\" tppabs=\"img/iali50_2.jpg\" class=\"img2\">\n\t\t\t</div>\n\t\t\t<div id=\"/section-8/page-6\" class=\"ft-page page-51\" data-id=\"page-6\">\n\t\t\t\t<p>\n\t\t\t\t\t<span id=\"text-67\" contenteditable=\"true\">永远有多远？</span><br>\n\t\t\t\t\t<span id=\"text-68\" contenteditable=\"true\">比时间多一秒就是永远，我会永远爱你</span><br>\n\t\t\t\t\t<span id=\"text-69\" contenteditable=\"true\">世界有多大？</span><br>\n\t\t\t\t\t<span id=\"text-70\" contenteditable=\"true\">你走到哪里，世界就有多大</span>\n\t\t\t\t\t</p>\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"ft-section section-9\" data-id=\"section-9\">\n\t\t\t<div id=\"/section-9/page-1\" class=\"ft-page page-52 full-img\" data-id=\"page-1\">\n\t\t\t\t<h3 id=\"text-71\" contenteditable=\"true\">希望未来的日子里，你中有我，我中有你，开开心心</h3>\n\t\t\t\t<img src=\"/love/img/iali20.jpg\" tppabs=\"img/iali20.jpg\">\n\t\t\t</div>\n\t\t\t<div id=\"/section-9/page-2\" class=\"ft-page page-53\" data-id=\"page-2\">\n\t\t\t\t<img src=\"/love/img/iali68.jpg\" tppabs=\"img/iali68.jpg\" alt=\"happy birthday\">\n\t\t\t\t<h3 id=\"text-72\" contenteditable=\"true\">我爱你</h3>\n\t\t\t</div>\n\t\t\t<div id=\"/section-9/page-3\" class=\"ft-page page-54 center-img\" data-id=\"page-3\">\n\t\t\t\t<div class=\"center-img\">I love you</div>\n\t\t\t</div>\n\t\t\t<div id=\"/section-9/page-4\" class=\"ft-page page-55 right-img\" data-id=\"page-4\">\n\t\t\t\t<img src=\"/love/img/14915.jpg\" tppabs=\"img/14915.jpg\">\n\t\t\t\t<p class=\"text\">\n\t\t\t\t\t<span id=\"text-73\" contenteditable=\"true\">我相信，宽宽和芹芹的故事会一直继续下去，持续到永远。</span><br>\n\t\t\t\t\t<span id=\"text-74\" contenteditable=\"true\">无论精彩、平淡都会是他们喜欢的。</span><br>\n                    <span id=\"text-74\" contenteditable=\"true\">芹宝贝儿，我爱你</span><br>\n\t\t\t\t\t<br>\n\t\t\t\t\t<br>\n\t\t\t\t\t<span> -- 按“Esc\"键有惊喜</span>\n\t\t\t\t</p>\t\t\t\t\n\t\t\t</div>\n\t\t</div>\n\t</div>\n\t<div class=\"nojavascript\">您的浏览器禁用了javascript，无法正常浏览本页面</div>\n\t<div class=\"content\">\n\t\t<h2>小乖乖，我们已经在一起了</h2>\n\t\t<div class=\"timer\">\n\t\t\t<b id=\"d\"></b> Days <b id=\"h\"></b> Hours <b id=\"m\"></b> Minutes <b id=\"s\"></b> Seconds\n\t\t</div>\n\t</div>\n\n\t<audio id=\"bgmMusic\" src=\"lovebgm.mp3\" autoplay=\"autoplay\" loop preload=\"auto\" type=\"audio/mp3\"></audio>\n\n\n\t<script type=\"text/javascript\" src=\"/js/custom/jquery.min.js\"></script>\n\t<script type=\"text/javascript\" src=\"/js/custom/all.min.js\"></script>\n\t<script type=\"text/javascript\" src=\"/js/custom/love.min.js\"></script>\n\n\t<div class=\"mPower\"><span id=\"on\" title=\"点击暂停\" style=\"\"></span><span id=\"off\" title=\"点击播放\" style=\"\"></span></div>\n\t<script>\n\t\tfunction timer() {\n\t\t\tvar start = new Date(2016, 6, 18); \n\t\t\tvar t = new Date() - start;\n\t\t\tvar h = ~~(t / 1000 / 60 / 60 % 24);\n\t\t\tif (h < 10) {\n\t\t\t\th = \"0\" + h;\n\t\t\t}\n\t\t\tvar m = ~~(t / 1000 / 60 % 60);\n\t\t\tif (m < 10) {\n\t\t\t\tm = \"0\" + m;\n\t\t\t}\n\n\t\t\tvar s = ~~(t / 1000 % 60);\n\t\t\tif (s < 10) {\n\t\t\t\ts = \"0\" + s;\n\t\t\t}\n\t\t\tdocument.getElementById('d').innerHTML = ~~(t / 1000 / 60 / 60 / 24);\n\t\t\tdocument.getElementById('h').innerHTML = h;\n\t\t\tdocument.getElementById('m').innerHTML = m;\n\t\t\tdocument.getElementById('s').innerHTML = s;\n\t\t}\n\t\ttimer();\n\t\tsetInterval(timer, 1000);\n\t</script>\n\t\n</body>\n</html>\n</html>","site":{"data":{}},"excerpt":"","more":"<html><!DOCTYPE HTML>\n<!--[if IE 6]>\n<html id=\"ie6\" class=\"ie ie6 lt-ie9\">\n<![endif]-->\n<!--[if IE 7]>\n<html id=\"ie7\" class=\"ie ie7 lt-ie9\">\n<![endif]-->\n<!--[if IE 8]>\n<html id=\"ie8\" class=\"ie ie8 lt-ie9\">\n<![endif]-->\n<!--[if gte IE 9]>\n<html class=\"ie ie9\">\n<![endif]-->\n<!--[if !(IE)]><!-->\n<html>\n<!--<![endif]-->\n<head><meta name=\"generator\" content=\"Hexo 3.8.0\">\n\t<meta http-equiv=\"Pragma\" content=\"no-cache\">\n\t<meta charset=\"UTF-8\">\n\t<meta name=\"viewport\" content=\"width=device-width, minimum-scale=1.0, maximum-scale=1.0, user-scalable=no\">\n\t<meta name=\"author\" content=\"DSX,工科男表白,浪漫表白,表白网站\">\n\t<meta name=\"description\" content=\"宽宽芹芹爱的网站\">\n\t<title>宽宽 LOVE 芹芹</title>\n\t<link rel=\"stylesheet\" href=\"all.min.css\">\n\t<style>\n\t\th2 {\n\t\t\tfont-size: 100%;\n\t\t\tfont-weight: 400;\n\t\t}\n\t\t\n\t\t.content {\n\t\t\tposition: absolute;\n\t\t\twidth: 100%;\n\t\t\ttop: 10%;\n\t\t\ttransform: translate(0, -50%);\n\t\t\ttext-align: right;\n\t\t}\n\t\t\n\t\t.timer {\n\t\t\tfont-size: 80%;\n\t\t\tline-height: 1.5;\n\t\t\tmargin: 1em 0;\n\t\t}\n\t\t\n\t\t.timer b {\n\t\t\tcolor: rgb(253, 99, 125);\n\t\t}\n\t</style>\n</head>\n<body>\n\t<div class=\"flowtime\">\n\t\t<div class=\"ft-section section-1\" data-id=\"section-1\">\n\t\t\t<div id=\"/section-1/page-1\" class=\"ft-page page-1\" data-id=\"page-1\">\n\t\t\t\t<p class=\"text1\"><span id=\"text-75\" contenteditable=\"true\">宽宽</span> ❤ <span id=\"text-76\" contenteditable=\"true\">芹芹</span> <span id=\"text-77\" contenteditable=\"true\">一生一世</span></p>\n\t\t\t\t<p class=\"text2\">按键盘 \"↓\" <span id=\"text-78\" contenteditable=\"true\">开始倾听程序员的浪漫表白</span></p>\n\t\t\t</div>\n\t\t\t<div id=\"/section-1/page-2\" class=\"ft-page page-2\" data-id=\"page-2\">\n\t\t\t\t<p class=\"top-text\" id=\"text-1\" contenteditable=\"true\">过去的我们一直是一个人生活，享受着孤独，也憧憬着爱情。</p>\n\t\t\t\t<img src=\"/love/img/iali63.jpg\" tppabs=\"img/iali63.jpg\" alt=\"过去的XX一直是一个人生活，享受着孤独，也憧憬着爱情。\">\n\t\t\t</div>\n\t\t\t<div id=\"/section-1/page-3\" class=\"ft-page page-3 left-img\" data-id=\"page-3\">\n\t\t\t\t<h2 class=\"text\" id=\"text-2\" contenteditable=\"true\">一个人的长廊</h2>\n\t\t\t\t<img src=\"/love/img/iali35.jpg\" tppabs=\"img/iali35.jpg\" alt=\"一个人的长廊\">\n\t\t\t</div>\n\t\t\t<div id=\"/section-1/page-4\" class=\"ft-page page-4 full-img\" data-id=\"page-4\">\n\t\t\t\t<h2 class=\"center-text\" id=\"text-3\" contenteditable=\"true\">一个人的山岗</h2>\n\t\t\t\t<img src=\"/love/img/iali6.jpg\" tppabs=\"img/iali6.jpg\" alt=\"一个人的山岗\">\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"ft-section section-2\" data-id=\"section-2\">\n\t\t\t<div id=\"/section-2/page-1\" class=\"ft-page page-5 full-img\" data-id=\"page-1\">\n\t\t\t\t<h2 class=\"center-text\" id=\"text-4\" contenteditable=\"true\">一个人的地铁</h2>\n\t\t\t\t<img src=\"/love/img/iali19.jpg\" tppabs=\"img/iali19.jpg\" alt=\"一个人的地铁\">\n\t\t\t</div>\n\t\t\t<div id=\"/section-2/page-2\" class=\"ft-page page-6\" data-id=\"page-2\">\n\t\t\t\t<h2 class=\"center-text\" id=\"text-5\" contenteditable=\"true\">一个人的游乐场</h2>\n\t\t\t\t<img src=\"/love/img/iali29.jpg\" tppabs=\"img/iali29.jpg\" alt=\"一个人的游乐场\">\n\t\t\t</div>\n\t\t\t<div id=\"/section-2/page-3\" class=\"ft-page page-7\" data-id=\"page-3\">\n\t\t\t\t<h3 id=\"text-6\" contenteditable=\"true\">但我们依然乐观，微笑着，等待着</h3>\n\t\t\t\t<img src=\"/love/img/iali60.jpg\" tppabs=\"img/iali60.jpg\" alt=\"但他依然乐观，微笑着，等待着\">\n\t\t\t</div>\n\t\t\t<div id=\"/section-2/page-4\" class=\"ft-page page-8 full-img\" data-id=\"page-4\">\n\t\t\t\t<h3 id=\"text-7\" contenteditable=\"true\">生活难免有风风雨雨</h3>\n\t\t\t\t<img src=\"/love/img/iali51.jpg\" tppabs=\"img/iali51.jpg\" alt=\"生活难免有风风雨雨\">\n\t\t\t</div>\n\t\t\t<div id=\"/section-2/page-5\" class=\"ft-page page-9\" data-id=\"page-5\">\n\t\t\t\t<h3 id=\"text-8\" contenteditable=\"true\">我们也总是能够轻松的应对</h3>\n\t\t\t\t<img src=\"/love/img/iali5.jpg\" tppabs=\"img/iali5.jpg\">\n\t\t\t</div>\n\t\t\t<div id=\"/section-2/page-6\" class=\"ft-page page-10\" data-id=\"page-6\">\n\t\t\t\t<h3 id=\"text-9\" contenteditable=\"true\">并且面带阳光、自信的笑容</h3>\n\t\t\t\t<img src=\"/love/img/iali22.jpg\" tppabs=\"img/iali22.jpg\">\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"ft-section section-3\" data-id=\"section-3\">\n\t\t\t<div id=\"/section-3/page-1\" class=\"ft-page page-11 full-img\" data-id=\"page-1\">\n\t\t\t\t<h3 id=\"text-10\" contenteditable=\"true\">生活也不会总是一帆风顺</h3>\n\t\t\t\t<img src=\"/love/img/iali24.jpg\" tppabs=\"img/iali24.jpg\">\n\t\t\t</div>\n\t\t\t<div id=\"/section-3/page-2\" class=\"ft-page page-12\" data-id=\"page-2\">\n\t\t\t\t<h3><span id=\"text-11\" contenteditable=\"true\">但我们都该勇敢的面对</span><br><span id=\"text-12\" contenteditable=\"true\">随时准备接受生活的挑战</span></h3>\n\t\t\t\t<img src=\"/love/img/iali25.jpg\" tppabs=\"img/iali25.jpg\">\n\t\t\t</div>\n\t\t\t<div id=\"/section-3/page-3\" class=\"ft-page page-13\" data-id=\"page-3\">\n\t\t\t\t<img src=\"/love/img/iali64.jpg\" tppabs=\"img/iali64.jpg\" alt=\"可是小明的爱情又在哪里呢？\">\n\t\t\t\t<h3 id=\"text-13\" contenteditable=\"true\">可是我们的爱情又在哪里呢？</h3>\n\t\t\t</div>\n\t\t\t<div id=\"/section-3/page-4\" class=\"ft-page page-14 left-img\" data-id=\"page-4\">\n\t\t\t\t<h3 id=\"text-14\" contenteditable=\"true\">望着镜子憧憬着。。。。</h3>\n\t\t\t\t<img src=\"/love/img/iali46.jpg\" tppabs=\"img/iali46.jpg\">\n\t\t\t</div>\n\t\t\t<div id=\"/section-3/page-5\" class=\"ft-page page-15 left-img\" data-id=\"page-5\">\n\t\t\t\t<h3><span id=\"text-15\" contenteditable=\"true\">没有人能够告诉我们爱情的归属</span><br><span id=\"text-16\" contenteditable=\"true\">即使是大树精灵也不知道答案</span></h3>\n\t\t\t\t<img src=\"/love/img/iali45.jpg\" tppabs=\"img/iali45.jpg\">\n\t\t\t</div>\n\t\t\t<div id=\"/section-3/page-6\" class=\"ft-page page-16 left-img\" data-id=\"page-6\">\n\t\t\t\t<h3><span id=\"text-17\" contenteditable=\"true\">只有我们自己向前迈进，自己去寻找</span><br><span id=\"text-18\" contenteditable=\"true\">走在茫茫的雪地上</span></h3>\n\t\t\t\t<img src=\"/love/img/iali66.jpg\" tppabs=\"img/iali66.jpg\">\n\t\t\t</div>\n\t\t\t<div id=\"/section-3/page-7\" class=\"ft-page page-17 top-text\" data-id=\"page-7\">\n\t\t\t\t<h3 id=\"text-19\" contenteditable=\"true\">直到有一天我与你相遇了</h3>\n\t\t\t\t<img src=\"/love/img/iali16.jpg\" tppabs=\"img/iali16.jpg\">\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"ft-section section-4\" data-id=\"section-4\">\n\t\t\t<div id=\"/section-4/page-1\" class=\"ft-page page-18 full-img\" data-id=\"page-1\">\n\t\t\t\t<p class=\"text\" id=\"text-20\" contenteditable=\"true\">杨宽喜欢王显芹，非常非常的喜欢，因为芹芹的出现，宽宽脸上有了更加灿烂的笑容</p>\n\t\t\t\t<img src=\"/love/img/iali11.jpg\" tppabs=\"img/iali11.jpg\">\n\t\t\t</div>\n\t\t\t<div id=\"/section-4/page-2\" class=\"ft-page page-19\" data-id=\"page-2\">\n\t\t\t\t<h3 id=\"text-21\" contenteditable=\"true\">宽宽憧憬着与芹芹在一起会有的幸福生活</h3>\n\t\t\t\t<img src=\"/love/img/iali75.jpg\" tppabs=\"img/iali75.jpg\">\n\t\t\t</div>\n\t\t\t<div id=\"/section-4/page-3\" class=\"ft-page page-20\" data-id=\"page-3\">\n\t\t\t\t<img src=\"/love/img/iali59.png\" tppabs=\"img/iali59.png\">\n\t\t\t\t<h3 id=\"text-22\" contenteditable=\"true\">会想。。。</h3>\n\t\t\t\t<img src=\"/love/img/iali9.jpg\" tppabs=\"img/iali9.jpg\">\n\t\t\t</div>\n\t\t\t<div id=\"/section-4/page-4\" class=\"ft-page page-21\" data-id=\"page-4\">\n\t\t\t\t<h3 id=\"text-23\" contenteditable=\"true\">我们一定能够开心的在一起</h3>\n\t\t\t\t<img src=\"/love/img/iali59.png\" tppabs=\"img/iali59.png\">\n\t\t\t</div>\n\t\t\t<div id=\"/section-4/page-5\" class=\"ft-page page-22 left-img\" data-id=\"page-5\">\n\t\t\t\t<h3 id=\"text-24\" contenteditable=\"true\">即时相隔千里，我们也彼此挂念，步步靠近</h3>\n\t\t\t\t<img src=\"/love/img/iali4.jpg\" tppabs=\"img/iali4.jpg\">\n\t\t\t</div>\n\t\t\t<div id=\"/section-4/page-6\" class=\"ft-page page-23 left-img\" data-id=\"page-6\">\n\t\t\t\t<h3 id=\"text-25\" contenteditable=\"true\">然后两个人一起出去玩</h3>\n\t\t\t\t<img src=\"/love/img/iali44.jpg\" tppabs=\"img/iali44.jpg\">\n\t\t\t</div>\n\t\t\t<div id=\"/section-4/page-7\" class=\"ft-page page-24 full-img\" data-id=\"page-7\">\t\n\t\t\t\t<h3 id=\"text-26\" contenteditable=\"true\">晚上一起回家</h3>\n\t\t\t\t<img src=\"/love/img/iali32.jpg\" tppabs=\"img/iali32.jpg\">\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"ft-section section-5\" data-id=\"section-5\">\n\t\t\t<div id=\"/section-5/page-1\" class=\"ft-page page-25 left-img\" data-id=\"page-1\">\n\t\t\t\t<h3><span id=\"text-27\" contenteditable=\"true\">一起在生日蛋糕的蜡烛下许愿</span><br><span id=\"text-28\" contenteditable=\"true\">再一起分享甜蜜</span></h3>\n\t\t\t\t<img src=\"/love/img/iali37.jpg\" tppabs=\"img/iali37.jpg\">\n\t\t\t</div>\n\t\t\t<div id=\"/section-5/page-2\" class=\"ft-page page-26 top-text\" data-id=\"page-2\">\n\t\t\t\t<h3 id=\"text-29\" contenteditable=\"true\">然后高兴地进入梦乡，在梦中还会和彼此在一起</h3>\n\t\t\t\t<img src=\"/love/img/iali10.gif\" tppabs=\"img/iali10.gif\">\n\t\t\t</div>\n\t\t\t<div id=\"/section-5/page-3\" class=\"ft-page page-27\" data-id=\"page-3\">\n\t\t\t\t<h3 id=\"text-30\" contenteditable=\"true\">宽宽成为了芹芹的逛街助手</h3>\n\t\t\t\t<img src=\"/love/img/iali67.jpg\" tppabs=\"img/iali67.jpg\">\n\t\t\t</div>\n\t\t\t<div id=\"/section-5/page-4\" class=\"ft-page page-28\" data-id=\"page-4\">\n\t\t\t\t<h3 id=\"text-31\" contenteditable=\"true\">然后，他们会一起去很多地方玩</h3>\n\t\t\t\t<img src=\"/love/img/iali40.jpg\" tppabs=\"img/iali40.jpg\">\n\t\t\t</div>\n\t\t\t<div id=\"/section-5/page-5\" class=\"ft-page page-29\" data-id=\"page-5\">\n\t\t\t\t<h3 id=\"text-32\" contenteditable=\"true\">宽宽和芹芹一块成为一对吃货</h3>\n\t\t\t\t<img src=\"/love/img/iali12.jpg\" tppabs=\"img/iali12.jpg\">\n\t\t\t</div>\n\t\t\t<div id=\"/section-5/page-6\" class=\"ft-page page-30\" data-id=\"page-6\">\n\t\t\t\t<h3 id=\"text-33\" contenteditable=\"true\">不久之后，他们会搬到了一起</h3>\n\t\t\t\t<img src=\"/love/img/iali76.gif\" tppabs=\"img/iali76.gif\">\n\t\t\t</div>\n\t\t\t<div id=\"/section-5/page-7\" class=\"ft-page page-31\" data-id=\"page-7\">\n\t\t\t\t<h3 id=\"text-34\" contenteditable=\"true\">再然后，宽宽会主动去学习各种技能</h3>\n\t\t\t\t<img src=\"/love/img/iali77.jpg\" tppabs=\"img/iali77.jpg\">\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"ft-section section-6\" data-id=\"section-6\">\n\t\t\t<div id=\"/section-6/page-1\" class=\"ft-page page-32\" data-id=\"page-1\">\n\t\t\t\t<h3 id=\"text-35\" contenteditable=\"true\">煮饭</h3>\n\t\t\t\t<img src=\"/love/img/iali62.jpg\" tppabs=\"img/iali62.jpg\">\n\t\t\t</div>\n\t\t\t<div id=\"/section-6/page-2\" class=\"ft-page page-33 top-text\" data-id=\"page-2\">\n\t\t\t\t<h3 id=\"text-36\" contenteditable=\"true\">那时候，每天早上，他们吃着自己做的美食</h3>\n\t\t\t\t<img src=\"/love/img/iali3.jpg\" tppabs=\"img/iali3.jpg\">\n\t\t\t</div>\n\t\t\t<div id=\"/section-6/page-3\" class=\"ft-page page-34 left-img\" data-id=\"page-3\">\n\t\t\t\t<h3 id=\"text-37\" contenteditable=\"true\">然后在同一个站台，高高兴兴的一起上班</h3>\n\t\t\t</div>\n\t\t\t<div id=\"/section-6/page-4\" class=\"ft-page page-35\" data-id=\"page-4\">\n\t\t\t\t<h3><span id=\"text-38\" contenteditable=\"true\">他们会感觉自己好幸福。</span><br><span id=\"text-39\" contenteditable=\"true\">因为自己有了家</span><br><span id=\"text-40\" contenteditable=\"true\">那个温暖的港湾</span></h3>\n\t\t\t\t<img src=\"/love/img/iali8.gif\" tppabs=\"img/iali8.gif\">\n\t\t\t</div>\n\t\t\t<div id=\"/section-6/page-5\" class=\"ft-page page-36 full-img\" data-id=\"page-5\">\n\t\t\t\t<h3 id=\"text-41\" contenteditable=\"true\">他们可能偶尔也会吵架</h3>\n\t\t\t\t<img src=\"/love/img/iali31.jpg\" tppabs=\"img/iali31.jpg\">\n\t\t\t</div>\n\t\t\t<div id=\"/section-6/page-6\" class=\"ft-page page-37 left-img\" data-id=\"page-6\">\n\t\t\t\t<h3 id=\"text-42\" contenteditable=\"true\">但是都不想这样</h3>\n\t\t\t\t<img src=\"/love/img/iali49.jpg\" tppabs=\"img/iali49.jpg\">\n\t\t\t</div>\n\t\t\t<div id=\"/section-6/page-7\" class=\"ft-page page-38 bottom-text\" data-id=\"page-7\">\n\t\t\t\t<img src=\"/love/img/iali21.jpg\" tppabs=\"img/iali21.jpg\">\n\t\t\t\t<h3 id=\"text-43\" contenteditable=\"true\">一定是我有什么做的不对，宽宽会这么想</h3>\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"ft-section section-7\" data-id=\"section-7\">\n\t\t\t<div id=\"/section-7/page-1\" class=\"ft-page page-39 left-img\" data-id=\"page-1\">\n\t\t\t\t<h3 id=\"text-44\" contenteditable=\"true\">如果没有芹芹在身边，窗外就没有风景</h3>\n\t\t\t\t<img src=\"/love/img/iali2.jpg\" tppabs=\"img/iali2.jpg\">\n\t\t\t</div>\n\t\t\t<div id=\"/section-7/page-2\" class=\"ft-page page-40\" data-id=\"page-2\">\n\t\t\t\t<h3 id=\"text-45\" contenteditable=\"true\">如果没有芹芹在身边</h3>\n\t\t\t\t<img src=\"/love/img/iali14.jpg\" tppabs=\"img/iali14.jpg\">\n\t\t\t</div>\n\t\t\t<div id=\"/section-7/page-3\" class=\"ft-page page-41\" data-id=\"page-3\">\n\t\t\t\t<img src=\"/love/img/iali30_1.jpg\" tppabs=\"img/iali30_1.jpg\" class=\"img1\">\n\t\t\t\t<img src=\"/love/img/iali30_2.jpg\" tppabs=\"img/iali30_2.jpg\" class=\"img2\">\n\t\t\t\t<h3 id=\"text-46\" contenteditable=\"true\"> 宽宽又怎会飞的更高更远</h3>\n\t\t\t</div>\n\t\t\t<div id=\"/section-7/page-4\" class=\"ft-page page-42\" data-id=\"page-4\">\n\t\t\t\t<h3><span id=\"text-47\" contenteditable=\"true\">宽宽努力着，希望能不断进步</span><br><span id=\"text-48\" contenteditable=\"true\">让芹芹有钱买好吃的、穿好看的、住温馨的房子。</span></h3>\n\t\t\t\t<img src=\"/love/img/iali69.jpg\" tppabs=\"img/iali69.jpg\">\n\t\t\t</div>\n\t\t\t<div id=\"/section-7/page-5\" class=\"ft-page page-43\" data-id=\"page-5\">\n\t\t\t\t<img src=\"/love/img/iali42.jpg\" tppabs=\"img/iali42.jpg\">\n\t\t\t\t<h3 id=\"text-49\" contenteditable=\"true\">我愿意一直陪伴着你</h3>\n\t\t\t</div>\n\t\t\t<div id=\"/section-7/page-6\" class=\"ft-page page-44 left-img\" data-id=\"page-6\">\n\t\t\t\t<h3><span id=\"text-50\" contenteditable=\"true\">爱情就像花草一样</span><br><span id=\"text-51\" contenteditable=\"true\">需要用包容来浇灌</span></h3>\n\t\t\t\t<img src=\"/love/img/iali0.jpg\" tppabs=\"img/iali0.jpg\">\n\t\t\t</div>\n\t\t\t<div id=\"/section-7/page-7\" class=\"ft-page page-45 left-img\" data-id=\"page-7\">\n\t\t\t\t<h3><span id=\"text-52\" contenteditable=\"true\">直到一天，</span><br><span id=\"text-53\" contenteditable=\"true\">宽宽开始准备一份惊喜</span></h3>\n\t\t\t\t<img src=\"/love/img/iali18.jpg\" tppabs=\"img/iali18.jpg\">\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"ft-section section-8\" data-id=\"section-8\">\n\t\t\t<div id=\"/section-8/page-1\" class=\"ft-page page-46\" data-id=\"page-1\">\n\t\t\t\t<img src=\"/love/img/iali57.gif\" tppabs=\"img/iali57.gif\">\n\t\t\t\t<h3>\n\t\t\t\t\t<span id=\"text-54\" contenteditable=\"true\">看着惊喜一点点准备好了</span>\n\t\t\t\t\t<span id=\"text-55\" contenteditable=\"true\">宽宽好开心</span>\n\t\t\t\t\t<span id=\"text-56\" contenteditable=\"true\">因为他想象着芹芹看到时</span>\n\t\t\t\t\t<span id=\"text-57\" contenteditable=\"true\">开心的样子</span>\n\t\t\t\t</h3>\n\t\t\t</div>\n\t\t\t<div id=\"/section-8/page-2\" class=\"ft-page page-47 top-text\" data-id=\"page-2\">\n\t\t\t\t<img src=\"/love/img/iali58.jpg\" tppabs=\"img/iali58.jpg\">\n\t\t\t\t<h3>\n\t\t\t\t\t<span id=\"text-58\" contenteditable=\"true\">想想未来他们</span>\n                    <span id=\"text-59\" contenteditable=\"true\">会有一辈子的时间相守</span>\n\t\t\t\t\t<span id=\"text-59\" contenteditable=\"true\">宽宽好开心</span>\n\t\t\t\t\t<span id=\"text-60\" contenteditable=\"true\">他可以和芹芹一起</span>\n\t\t\t\t\t<span id=\"text-61\" contenteditable=\"true\">去各种好玩儿的地方</span>\n\t\t\t\t</h3>\n\t\t\t\t\n\t\t\t</div>\n\t\t\t<div id=\"/section-8/page-3\" class=\"ft-page page-48 left-img\" data-id=\"page-3\">\n\t\t\t\t<p><span id=\"text-62\" contenteditable=\"true\">宽宽会努力</span><br><span id=\"text-63\" contenteditable=\"true\">为了他和芹芹的梦之城堡</span></p>\n\t\t\t\t<img src=\"/love/img/iali65.jpg\" tppabs=\"img/iali65.jpg\">\n\t\t\t</div>\n\t\t\t<div id=\"/section-8/page-4\" class=\"ft-page page-49 full-img\" data-id=\"page-4\">\n\t\t\t<img src=\"/love/img/iali71.jpg\" tppabs=\"img/iali71.jpg\">\n\t\t\t\t<p class=\"text\">\n\t\t\t\t\t<span class=\"text\" id=\"text-64\" contenteditable=\"true\">宽宽很幸福，因为他遇到了芹芹。他相信后面的每天都会是快乐的</span><br>\n\t\t\t\t\t<span class=\"text\" id=\"text-65\" contenteditable=\"true\">简简单单，体会与芹芹在一起的每一个刻</span>\n\t\t\t\t</p>\n\t\t\t</div>\n\t\t\t<div id=\"/section-8/page-5\" class=\"ft-page page-50\" data-id=\"page-5\">\n\t\t\t\t<p class=\"text\" id=\"text-66\" contenteditable=\"true\">宽宽和芹芹会一起过幸福的生活</p>\n\t\t\t\t<img src=\"/love/img/iali50_1.jpg\" tppabs=\"img/iali50_1.jpg\" class=\"img1\">\n\t\t\t\t<img src=\"/love/img/iali50_2.jpg\" tppabs=\"img/iali50_2.jpg\" class=\"img2\">\n\t\t\t</div>\n\t\t\t<div id=\"/section-8/page-6\" class=\"ft-page page-51\" data-id=\"page-6\">\n\t\t\t\t<p>\n\t\t\t\t\t<span id=\"text-67\" contenteditable=\"true\">永远有多远？</span><br>\n\t\t\t\t\t<span id=\"text-68\" contenteditable=\"true\">比时间多一秒就是永远，我会永远爱你</span><br>\n\t\t\t\t\t<span id=\"text-69\" contenteditable=\"true\">世界有多大？</span><br>\n\t\t\t\t\t<span id=\"text-70\" contenteditable=\"true\">你走到哪里，世界就有多大</span>\n\t\t\t\t\t</p>\n\t\t\t</div>\n\t\t</div>\n\t\t<div class=\"ft-section section-9\" data-id=\"section-9\">\n\t\t\t<div id=\"/section-9/page-1\" class=\"ft-page page-52 full-img\" data-id=\"page-1\">\n\t\t\t\t<h3 id=\"text-71\" contenteditable=\"true\">希望未来的日子里，你中有我，我中有你，开开心心</h3>\n\t\t\t\t<img src=\"/love/img/iali20.jpg\" tppabs=\"img/iali20.jpg\">\n\t\t\t</div>\n\t\t\t<div id=\"/section-9/page-2\" class=\"ft-page page-53\" data-id=\"page-2\">\n\t\t\t\t<img src=\"/love/img/iali68.jpg\" tppabs=\"img/iali68.jpg\" alt=\"happy birthday\">\n\t\t\t\t<h3 id=\"text-72\" contenteditable=\"true\">我爱你</h3>\n\t\t\t</div>\n\t\t\t<div id=\"/section-9/page-3\" class=\"ft-page page-54 center-img\" data-id=\"page-3\">\n\t\t\t\t<div class=\"center-img\">I love you</div>\n\t\t\t</div>\n\t\t\t<div id=\"/section-9/page-4\" class=\"ft-page page-55 right-img\" data-id=\"page-4\">\n\t\t\t\t<img src=\"/love/img/14915.jpg\" tppabs=\"img/14915.jpg\">\n\t\t\t\t<p class=\"text\">\n\t\t\t\t\t<span id=\"text-73\" contenteditable=\"true\">我相信，宽宽和芹芹的故事会一直继续下去，持续到永远。</span><br>\n\t\t\t\t\t<span id=\"text-74\" contenteditable=\"true\">无论精彩、平淡都会是他们喜欢的。</span><br>\n                    <span id=\"text-74\" contenteditable=\"true\">芹宝贝儿，我爱你</span><br>\n\t\t\t\t\t<br>\n\t\t\t\t\t<br>\n\t\t\t\t\t<span> -- 按“Esc\"键有惊喜</span>\n\t\t\t\t</p>\t\t\t\t\n\t\t\t</div>\n\t\t</div>\n\t</div>\n\t<div class=\"nojavascript\">您的浏览器禁用了javascript，无法正常浏览本页面</div>\n\t<div class=\"content\">\n\t\t<h2>小乖乖，我们已经在一起了</h2>\n\t\t<div class=\"timer\">\n\t\t\t<b id=\"d\"></b> Days <b id=\"h\"></b> Hours <b id=\"m\"></b> Minutes <b id=\"s\"></b> Seconds\n\t\t</div>\n\t</div>\n\n\t<audio id=\"bgmMusic\" src=\"lovebgm.mp3\" autoplay=\"autoplay\" loop preload=\"auto\" type=\"audio/mp3\"></audio>\n\n\n\t<script type=\"text/javascript\" src=\"/js/custom/jquery.min.js\"></script>\n\t<script type=\"text/javascript\" src=\"/js/custom/all.min.js\"></script>\n\t<script type=\"text/javascript\" src=\"/js/custom/love.min.js\"></script>\n\n\t<div class=\"mPower\"><span id=\"on\" title=\"点击暂停\" style=\"\"></span><span id=\"off\" title=\"点击播放\" style=\"\"></span></div>\n\t<script>\n\t\tfunction timer() {\n\t\t\tvar start = new Date(2016, 6, 18); \n\t\t\tvar t = new Date() - start;\n\t\t\tvar h = ~~(t / 1000 / 60 / 60 % 24);\n\t\t\tif (h < 10) {\n\t\t\t\th = \"0\" + h;\n\t\t\t}\n\t\t\tvar m = ~~(t / 1000 / 60 % 60);\n\t\t\tif (m < 10) {\n\t\t\t\tm = \"0\" + m;\n\t\t\t}\n\n\t\t\tvar s = ~~(t / 1000 % 60);\n\t\t\tif (s < 10) {\n\t\t\t\ts = \"0\" + s;\n\t\t\t}\n\t\t\tdocument.getElementById('d').innerHTML = ~~(t / 1000 / 60 / 60 / 24);\n\t\t\tdocument.getElementById('h').innerHTML = h;\n\t\t\tdocument.getElementById('m').innerHTML = m;\n\t\t\tdocument.getElementById('s').innerHTML = s;\n\t\t}\n\t\ttimer();\n\t\tsetInterval(timer, 1000);\n\t</script>\n\t\n</body>\n</html>\n</html>"},{"_content":"<h1 align=\"center\"><a href=\"https://github.com/revir/need-more-share2\">NeedMoreShare2</a> for <a href=\"https://github.com/theme-next\">NexT</a></h1>\n\n<h1 align=\"center\">Installation</h1>\n\n<h2 align=\"center\">Step 1 &rarr; Go to NexT dir</h2>\n\nChange dir to **NexT** directory. There must be `layout`, `source`, `languages` and other directories:\n\n```sh\n$ cd themes/next\n$ ls\nbower.json  _config.yml  docs  gulpfile.coffee  languages  layout  LICENSE.md  package.json  README.md  scripts  source  test\n```\n\n<h2 align=\"center\">Step 2 &rarr; Get module</h2>\n\nInstall module to `source/lib` directory:\n\n```sh\n$ git clone https://github.com/theme-next/theme-next-needmoreshare2 source/lib/needsharebutton\n```\n\n<h2 align=\"center\">Step 3 &rarr; Set it up</h2>\n\nEnable module in **NexT** `_config.yml` file:\n\n```yml\nneedmoreshare2:\n  enable: true\n  postbottom:\n    enable: true\n  float:\n    enable: true\n```\n\n<h1 align=\"center\">Update</h1>\n\n```sh\n$ cd themes/next/source/lib/needsharebutton\n$ git pull\n```\n","source":"lib/needsharebutton/README.md","raw":"<h1 align=\"center\"><a href=\"https://github.com/revir/need-more-share2\">NeedMoreShare2</a> for <a href=\"https://github.com/theme-next\">NexT</a></h1>\n\n<h1 align=\"center\">Installation</h1>\n\n<h2 align=\"center\">Step 1 &rarr; Go to NexT dir</h2>\n\nChange dir to **NexT** directory. There must be `layout`, `source`, `languages` and other directories:\n\n```sh\n$ cd themes/next\n$ ls\nbower.json  _config.yml  docs  gulpfile.coffee  languages  layout  LICENSE.md  package.json  README.md  scripts  source  test\n```\n\n<h2 align=\"center\">Step 2 &rarr; Get module</h2>\n\nInstall module to `source/lib` directory:\n\n```sh\n$ git clone https://github.com/theme-next/theme-next-needmoreshare2 source/lib/needsharebutton\n```\n\n<h2 align=\"center\">Step 3 &rarr; Set it up</h2>\n\nEnable module in **NexT** `_config.yml` file:\n\n```yml\nneedmoreshare2:\n  enable: true\n  postbottom:\n    enable: true\n  float:\n    enable: true\n```\n\n<h1 align=\"center\">Update</h1>\n\n```sh\n$ cd themes/next/source/lib/needsharebutton\n$ git pull\n```\n","date":"2019-01-09T03:12:08.094Z","updated":"2019-01-09T03:12:08.094Z","path":"lib/needsharebutton/README.html","title":"","comments":1,"layout":"page","_id":"ck0ozhj4k007pgkuwz0qsa8z2","content":"<h1 align=\"center\"><a href=\"https://github.com/revir/need-more-share2\" target=\"_blank\" rel=\"noopener\">NeedMoreShare2</a> for <a href=\"https://github.com/theme-next\" target=\"_blank\" rel=\"noopener\">NexT</a></h1>\n\n<h1 align=\"center\">Installation</h1>\n\n<h2 align=\"center\">Step 1 &rarr; Go to NexT dir</h2>\n\n<p>Change dir to <strong>NexT</strong> directory. There must be <code>layout</code>, <code>source</code>, <code>languages</code> and other directories:</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">cd</span> themes/next</span><br><span class=\"line\">$ ls</span><br><span class=\"line\">bower.json  _config.yml  docs  gulpfile.coffee  languages  layout  LICENSE.md  package.json  README.md  scripts  <span class=\"built_in\">source</span>  <span class=\"built_in\">test</span></span><br></pre></td></tr></table></figure>\n<h2 align=\"center\">Step 2 &rarr; Get module</h2>\n\n<p>Install module to <code>source/lib</code> directory:</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git <span class=\"built_in\">clone</span> https://github.com/theme-next/theme-next-needmoreshare2 <span class=\"built_in\">source</span>/lib/needsharebutton</span><br></pre></td></tr></table></figure>\n<h2 align=\"center\">Step 3 &rarr; Set it up</h2>\n\n<p>Enable module in <strong>NexT</strong> <code>_config.yml</code> file:</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">needmoreshare2:</span></span><br><span class=\"line\"><span class=\"attr\">  enable:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">  postbottom:</span></span><br><span class=\"line\"><span class=\"attr\">    enable:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">  float:</span></span><br><span class=\"line\"><span class=\"attr\">    enable:</span> <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n<h1 align=\"center\">Update</h1>\n\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">cd</span> themes/next/<span class=\"built_in\">source</span>/lib/needsharebutton</span><br><span class=\"line\">$ git pull</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h1 align=\"center\"><a href=\"https://github.com/revir/need-more-share2\" target=\"_blank\" rel=\"noopener\">NeedMoreShare2</a> for <a href=\"https://github.com/theme-next\" target=\"_blank\" rel=\"noopener\">NexT</a></h1>\n\n<h1 align=\"center\">Installation</h1>\n\n<h2 align=\"center\">Step 1 &rarr; Go to NexT dir</h2>\n\n<p>Change dir to <strong>NexT</strong> directory. There must be <code>layout</code>, <code>source</code>, <code>languages</code> and other directories:</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">cd</span> themes/next</span><br><span class=\"line\">$ ls</span><br><span class=\"line\">bower.json  _config.yml  docs  gulpfile.coffee  languages  layout  LICENSE.md  package.json  README.md  scripts  <span class=\"built_in\">source</span>  <span class=\"built_in\">test</span></span><br></pre></td></tr></table></figure>\n<h2 align=\"center\">Step 2 &rarr; Get module</h2>\n\n<p>Install module to <code>source/lib</code> directory:</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ git <span class=\"built_in\">clone</span> https://github.com/theme-next/theme-next-needmoreshare2 <span class=\"built_in\">source</span>/lib/needsharebutton</span><br></pre></td></tr></table></figure>\n<h2 align=\"center\">Step 3 &rarr; Set it up</h2>\n\n<p>Enable module in <strong>NexT</strong> <code>_config.yml</code> file:</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">needmoreshare2:</span></span><br><span class=\"line\"><span class=\"attr\">  enable:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">  postbottom:</span></span><br><span class=\"line\"><span class=\"attr\">    enable:</span> <span class=\"literal\">true</span></span><br><span class=\"line\"><span class=\"attr\">  float:</span></span><br><span class=\"line\"><span class=\"attr\">    enable:</span> <span class=\"literal\">true</span></span><br></pre></td></tr></table></figure>\n<h1 align=\"center\">Update</h1>\n\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ <span class=\"built_in\">cd</span> themes/next/<span class=\"built_in\">source</span>/lib/needsharebutton</span><br><span class=\"line\">$ git pull</span><br></pre></td></tr></table></figure>\n"},{"_content":"/***********************************************\n  needShareButton\n  - Version 1.0.0\n  - Copyright 2015 Dzmitry Vasileuski\n\t- Licensed under MIT (http://opensource.org/licenses/MIT)\n***********************************************/\n\n(function () {\n\n  // find closest\n  function closest(elem, parent) {\n    if (typeof (parent) == \"string\") {\n      var matchesSelector = elem.matches || elem.webkitMatchesSelector ||\n                            elem.mozMatchesSelector || elem.msMatchesSelector;\n\n      if (!!matchesSelector) {\n        while (elem) {\n          if (matchesSelector.bind(elem)(parent)) {\n            return elem;\n          } else {\n            elem = elem.parentElement;\n          }\n        }\n      }\n      return false;\n    } else {\n      while (elem) {\n        if (elem == parent) {\n          return elem;\n        } else {\n          elem = elem.parentElement;\n        }\n      }\n      return false;\n    }\n  }\n\n  // share button class\n  window.needShareButton = function (elem, options) {\n    // create element reference\n    var root = this;\n    root.elem = elem || \"need-share-button\";\n\n    /* Helpers\n     ***********************************************/\n\n    // get title from html\n    root.getTitle = function () {\n      var content;\n      // check querySelector existance for old browsers\n      if (document.querySelector) {\n        content = document.querySelector(\"title\");\n        if (content) {\n          return content.innerText;\n        }\n      }\n      return document.title;\n    };\n\n    // get image from html\n    root.getImage = function () {\n      var content;\n      // check querySelector existance for old browsers\n      if (document.querySelector) {\n        content = document.querySelector(\"meta[property=\\\"og:image\\\"]\") ||\n                  document.querySelector(\"meta[name=\\\"twitter:image\\\"]\");\n        if (content) {\n          return content.getAttribute(\"content\");\n        } else {\n          return \"\";\n        }\n      } else {\n        return \"\";\n      }\n    };\n\n    // get description from html\n    root.getDescription = function () {\n      var content;\n      // check querySelector existance for old browsers\n      if (document.querySelector) {\n        content = document.querySelector(\"meta[property=\\\"og:description\\\"]\") ||\n                  document.querySelector(\"meta[name=\\\"twitter:description\\\"]\") ||\n                  document.querySelector(\"meta[name=\\\"description\\\"]\");\n        if (content) {\n          return content.getAttribute(\"content\");\n        } else {\n          return \"\";\n        }\n      } else {\n        content = document.getElementsByTagName(\"meta\").namedItem(\"description\");\n        if (content) {\n          return content.getAttribute(\"content\");\n        } else {\n          return \"\";\n        }\n      }\n    };\n\n    // share urls for all networks\n    root.share = {\n      \"weibo\": function (el) {\n        var myoptions = getOptions(el);\n        var url = \"http://v.t.sina.com.cn/share/share.php?title=\" +\n          encodeURIComponent(myoptions.title) +\n          \"&url=\" + encodeURIComponent(myoptions.url) +\n          \"&pic=\" + encodeURIComponent(myoptions.image);\n        root.popup(url);\n      },\n      \"wechat\": function (el) {\n        var myoptions = getOptions(el);\n        var imgSrc = \"https://api.qrserver.com/v1/create-qr-code/?size=200x200&data=\" + encodeURIComponent(myoptions.url);\n        var dropdownEl = el.querySelector(\".need-share-button_dropdown\");\n        var img = dropdownEl.getElementsByClassName(\"need-share-wechat-code-image\")[0];\n        if (img) {\n          img.remove();\n        } else {\n          img = document.createElement(\"img\");\n          img.src = imgSrc;\n          img.alt = \"loading wechat image...\";\n          img.setAttribute(\"class\", \"need-share-wechat-code-image\");\n\n          if (root.options.position == 'middleRight') {\n            dropdownEl.insertBefore(img, dropdownEl.children[0]);\n          }\n          else {\n            dropdownEl.appendChild(img);\n          }\n        }\n      },\n      \"douban\": function (el) {\n        var myoptions = getOptions(el);\n        var url = \"https://www.douban.com/share/service?name=\" +\n          encodeURIComponent(myoptions.title) +\n          \"&href=\" + encodeURIComponent(myoptions.url) +\n          \"&image=\" + encodeURIComponent(myoptions.image);\n        root.popup(url);\n      },\n      \"qqzone\": function (el) {\n        var myoptions = getOptions(el);\n        var url = \"http://sns.qzone.qq.com/cgi-bin/qzshare/cgi_qzshare_onekey?title=\" +\n          encodeURIComponent(myoptions.title) +\n          \"&url=\" + encodeURIComponent(myoptions.url) +\n          \"&pics=\" + encodeURIComponent(myoptions.image) +\n          \"&desc=\" + encodeURIComponent(myoptions.description);\n        root.popup(url);\n      },\n      \"renren\": function (el) {\n        var myoptions = getOptions(el);\n        var url = \"http://widget.renren.com/dialog/share?title=\" +\n          encodeURIComponent(myoptions.title) +\n          \"&resourceUrl=\" + encodeURIComponent(myoptions.url) +\n          \"&pic=\" + encodeURIComponent(myoptions.image) +\n          \"&description=\" + encodeURIComponent(myoptions.description);\n        root.popup(url);\n      },\n      \"mailto\": function (el) {\n        var myoptions = getOptions(el);\n        var url = \"mailto:?subject=\" + encodeURIComponent(myoptions.title) +\n          \"&body=Thought you might enjoy reading this: \" + encodeURIComponent(myoptions.url) +\n          \" - \" + encodeURIComponent(myoptions.description);\n\n        window.location.href = url;\n      },\n      \"twitter\": function (el) {\n        var myoptions = getOptions(el);\n        var url = myoptions.protocol + \"twitter.com/intent/tweet?text=\";\n        url += encodeURIComponent(myoptions.title) + \"&url=\" + encodeURIComponent(myoptions.url);\n\n        root.popup(url);\n      },\n      \"pinterest\": function (el) {\n        var myoptions = getOptions(el);\n        var url = myoptions.protocol + \"pinterest.com/pin/create/bookmarklet/?is_video=false\";\n        url += \"&media=\" + encodeURIComponent(myoptions.image);\n        url += \"&url=\" + encodeURIComponent(myoptions.url);\n        url += \"&description=\" + encodeURIComponent(myoptions.title);\n\n        root.popup(url);\n      },\n      \"facebook\": function (el) {\n        var myoptions = getOptions(el);\n        var url = myoptions.protocol + \"www.facebook.com/share.php?\";\n        url += \"u=\" + encodeURIComponent(myoptions.url);\n        url += \"&title=\" + encodeURIComponent(myoptions.title);\n\n        root.popup(url);\n      },\n      \"googleplus\": function (el) {\n        var myoptions = getOptions(el);\n        var url = myoptions.protocol + \"plus.google.com/share?\";\n        url += \"url=\" + encodeURIComponent(myoptions.url);\n\n        root.popup(url);\n      },\n      \"reddit\": function (el) {\n        var myoptions = getOptions(el);\n        var url = myoptions.protocol + \"www.reddit.com/submit?\";\n        url += \"url=\" + encodeURIComponent(myoptions.url);\n        url += \"&title=\" + encodeURIComponent(myoptions.title);\n\n        root.popup(url);\n      },\n      \"delicious\": function (el) {\n        var myoptions = getOptions(el);\n        var url = myoptions.protocol + \"del.icio.us/post?\";\n        url += \"url=\" + encodeURIComponent(myoptions.url);\n        url += \"&title=\" + encodeURIComponent(myoptions.title);\n        url += \"&notes=\" + encodeURIComponent(myoptions.description);\n\n        root.popup(url);\n      },\n      \"stumbleupon\": function (el) {\n        var myoptions = getOptions(el);\n        var url = myoptions.protocol + \"www.stumbleupon.com/submit?\";\n        url += \"url=\" + encodeURIComponent(myoptions.url);\n        url += \"&title=\" + encodeURIComponent(myoptions.title);\n\n        root.popup(url);\n      },\n      \"linkedin\": function (el) {\n        var myoptions = getOptions(el);\n        var url = myoptions.protocol + \"www.linkedin.com/shareArticle?mini=true\";\n        url += \"&url=\" + encodeURIComponent(myoptions.url);\n        url += \"&title=\" + encodeURIComponent(myoptions.title);\n        url += \"&source=\" + encodeURIComponent(myoptions.source);\n\n        root.popup(url);\n      },\n      \"tumblr\": function (el) {\n        var myoptions = getOptions(el);\n        var url = myoptions.protocol + \"www.tumblr.com/share?v=3\";\n        url += \"&u=\" + encodeURIComponent(myoptions.url);\n        url += \"&t=\" + encodeURIComponent(myoptions.title);\n\n        root.popup(url);\n      },\n      \"googlebookmarks\": function (el) {\n        var myoptions = getOptions(el);\n        var url = myoptions.protocol + \"www.google.com/bookmarks/mark?op=edit\";\n        url += \"&bkmk=\" + encodeURIComponent(myoptions.url);\n        url += \"&title=\" + encodeURIComponent(myoptions.title);\n        url += \"&annotation=\" + encodeURIComponent(myoptions.description);\n\n        root.popup(url);\n      },\n      \"newsvine\": function (el) {\n        var myoptions = getOptions(el);\n        var url = myoptions.protocol + \"www.newsvine.com/_tools/seed&save?\";\n        url += \"u=\" + encodeURIComponent(myoptions.url);\n        url += \"&h=\" + encodeURIComponent(myoptions.title);\n\n        root.popup(url);\n      },\n      \"evernote\": function (el) {\n        var myoptions = getOptions(el);\n        var url = myoptions.protocol + \"www.evernote.com/clip.action?\";\n        url += \"url=\" + encodeURIComponent(myoptions.url);\n        url += \"&title=\" + encodeURIComponent(myoptions.title);\n\n        root.popup(url);\n      },\n      \"friendfeed\": function (el) {\n        var myoptions = getOptions(el);\n        var url = myoptions.protocol + \"www.friendfeed.com/share?\";\n        url += \"url=\" + encodeURIComponent(myoptions.url);\n        url += \"&title=\" + encodeURIComponent(myoptions.title);\n\n        root.popup(url);\n      },\n      \"vkontakte\": function (el) {\n        var myoptions = getOptions(el);\n        var url = myoptions.protocol + \"vkontakte.ru/share.php?\";\n        url += \"url=\" + encodeURIComponent(myoptions.url);\n        url += \"&title=\" + encodeURIComponent(myoptions.title);\n        url += \"&description=\" + encodeURIComponent(myoptions.description);\n        url += \"&image=\" + encodeURIComponent(myoptions.image);\n        url += \"&noparse=true\";\n\n        root.popup(url);\n      },\n      \"odnoklassniki\": function (el) {\n        var myoptions = getOptions(el);\n        var url = myoptions.protocol + \"www.odnoklassniki.ru/dk?st.cmd=addShare&st.s=1\";\n        url += \"&st.comments=\" + encodeURIComponent(myoptions.description);\n        url += \"&st._surl=\" + encodeURIComponent(myoptions.url);\n\n        root.popup(url);\n      },\n      \"mailru\": function (el) {\n        var myoptions = getOptions(el);\n        var url = myoptions.protocol + \"connect.mail.ru/share?\";\n        url += \"url=\" + encodeURIComponent(myoptions.url);\n        url += \"&title=\" + encodeURIComponent(myoptions.title);\n        url += \"&description=\" + encodeURIComponent(myoptions.description);\n        url += \"&imageurl=\" + encodeURIComponent(myoptions.image);\n\n        root.popup(url);\n      }\n\n    };\n\n    // open share link in a popup\n    root.popup = function (url) {\n      // set left and top position\n      var popupWidth = 600,\n        popupHeight = 500,\n        // fix dual screen mode\n        dualScreenLeft = window.screenLeft !== undefined ? window.screenLeft : screen.left,\n        dualScreenTop = window.screenTop !== undefined ? window.screenTop : screen.top,\n        width = window.innerWidth ?\n                window.innerWidth :\n                document.documentElement.clientWidth ?\n                document.documentElement.clientWidth :\n                screen.width,\n        height = window.innerHeight ?\n                 window.innerHeight :\n                 document.documentElement.clientHeight ?\n                 document.documentElement.clientHeight :\n                 screen.height,\n        // calculate top and left position\n        left = ((width / 2) - (popupWidth / 2)) + dualScreenLeft,\n        top = ((height / 2) - (popupHeight / 2)) + dualScreenTop,\n\n        // show popup\n        shareWindow = window.open(url, \"targetWindow\",\n          \"toolbar=no,location=no,status=no,menubar=no,scrollbars=yes,resizable=yes,width=\" + popupWidth +\n          \", height=\" + popupHeight + \", top=\" + top + \", left=\" + left);\n\n      // Puts focus on the newWindow\n      if (window.focus) {\n        shareWindow.focus();\n      }\n    };\n\n    /* Set options\n     ***********************************************/\n\n    // create default options\n    root.options = {\n      iconStyle: \"default\", // default or box\n      boxForm: \"horizontal\", // horizontal or vertical\n      position: \"bottomCenter\", // top / middle / bottom + Left / Center / Right\n      protocol: [\"http\", \"https\"].indexOf(window.location.href.split(\":\")[0]) === -1 ? \"https://\" : \"//\",\n      networks: \"Weibo,Wechat,Douban,QQZone,Twitter,Pinterest,Facebook,GooglePlus,Reddit,Linkedin,Tumblr,Evernote\"\n    };\n\n    // integrate custom options\n    for (var i in options) {\n      if (options.hasOwnProperty(i)) {\n        root.options[i] = options[i];\n      }\n    }\n    // convert networks string into array\n    //root.options.networks = root.options.networks.toLowerCase().split(\",\");\n    root.options.networks = root.options.networks.split(\",\");\n\n    function getOptions(el) {\n      // integrate data attribute options\n      var ret = {};\n      for (var i in root.options) {\n        if (root.options.hasOwnProperty(i)) {\n          ret[i] = root.options[i];\n        }\n      }\n\n      // these attrs must get dynamically.\n      ret.url = window.location.href;\n      ret.title = root.getTitle();\n      ret.image = root.getImage();\n      ret.description = root.getDescription();\n\n      for (var option in el.dataset) {\n        // replace only 'share-' prefixed data-attributes\n        if (option.match(/share/)) {\n          var newOption = option.replace(/share/, \"\");\n          if (!newOption.length) {\n            continue;\n          }\n          newOption = newOption.charAt(0).toLowerCase() + newOption.slice(1);\n          var val = el.dataset[option];\n          if (newOption === \"networks\") {\n            //val = val.toLowerCase().split(\",\");\n            val = val.split(\",\");\n          } else if (newOption === \"url\" && val && val[0] === \"/\") {\n            // fix relative url problem.\n            val = location.origin + val;\n          }\n          ret[newOption] = val;\n        }\n      }\n      return ret;\n    }\n\n    function createDropdown(el) {\n      // create dropdown\n      var dropdownEl = document.createElement(\"span\");\n      dropdownEl.className = \"need-share-button_dropdown\";\n      if (el.querySelector(\".need-share-button_dropdown\")) {\n        return;\n      }\n      var myoptions = getOptions(el);\n\n      // set dropdown row length\n      if (myoptions.iconStyle == \"default\" && myoptions.boxForm == \"vertical\") {\n        dropdownEl.className += \" need-share-button_dropdown-box-vertical\";\n      } else if (myoptions.iconStyle == \"box\" && myoptions.boxForm == \"horizontal\") {\n        dropdownEl.className += \" need-share-button_dropdown-box-horizontal\";\n      } else if (myoptions.iconStyle == \"box\" && myoptions.boxForm == \"vertical\") {\n        dropdownEl.className += \" need-share-button_dropdown-box-vertical\";\n      }\n\n      // set dropdown position\n      setTimeout(function () {\n        switch (myoptions.position) {\n          case \"topLeft\":\n            dropdownEl.className += \" need-share-button_dropdown-top-left\";\n            break;\n          case \"topRight\":\n            dropdownEl.className += \" need-share-button_dropdown-top-right\";\n            break;\n          case \"topCenter\":\n            dropdownEl.className += \" need-share-button_dropdown-top-center\";\n            dropdownEl.style.marginLeft = -dropdownEl.offsetWidth / 2 + \"px\";\n            break;\n          case \"middleLeft\":\n            dropdownEl.className += \" need-share-button_dropdown-middle-left\";\n            dropdownEl.style.marginTop = -dropdownEl.offsetHeight / 2 + \"px\";\n            break;\n          case \"middleRight\":\n            dropdownEl.className += \" need-share-button_dropdown-middle-right\";\n            dropdownEl.style.marginTop = -dropdownEl.offsetHeight / 2 + \"px\";\n            break;\n          case \"bottomLeft\":\n            dropdownEl.className += \" need-share-button_dropdown-bottom-left\";\n            break;\n          case \"bottomRight\":\n            dropdownEl.className += \" need-share-button_dropdown-bottom-right\";\n            break;\n          case \"bottomCenter\":\n            dropdownEl.className += \" need-share-button_dropdown-bottom-center\";\n            dropdownEl.style.marginLeft = -dropdownEl.offsetWidth / 2 + \"px\";\n            break;\n          default:\n            dropdownEl.className += \" need-share-button_dropdown-bottom-center\";\n            dropdownEl.style.marginLeft = -dropdownEl.offsetWidth / 2 + \"px\";\n            break;\n        }\n      }, 1);\n\n\n      // fill fropdown with buttons\n      var iconClass = myoptions.iconStyle == \"default\" ?\n                      \"need-share-button_link need-share-button_\" :\n                      \"need-share-button_link-\" + myoptions.iconStyle + \" need-share-button_link need-share-button_\";\n      for (var network in myoptions.networks) {\n        if (myoptions.networks.hasOwnProperty(network)) {\n          var link = document.createElement(\"span\");\n          network = myoptions.networks[network].trim();\n          var networkLC = network.toLowerCase();\n          link.className = iconClass + networkLC;\n          var fontello = [\"weibo\", \"wechat\", \"douban\", \"qqzone\", \"renren\"];\n          if (fontello.indexOf(networkLC) === -1) {\n            link.className += \" social-\" + networkLC;\n          } else {\n            link.className += \" icon-\" + networkLC;\n          }\n          link.dataset.network = networkLC;\n          link.title = network;\n          dropdownEl.appendChild(link);\n        }\n      }\n\n      dropdownEl.addEventListener(\"click\", function (event) {\n        if (closest(event.target, \".need-share-button_link\")) {\n          event.preventDefault();\n          event.stopPropagation();\n\n          root.share[event.target.dataset.network](el);\n          return false;\n        }\n      });\n\n      el.appendChild(dropdownEl);\n    }\n\n    // close on click outside\n    document.addEventListener(\"click\", function (event) {\n      var openedEl = document.querySelector(\".need-share-button-opened\");\n      if (!closest(event.target, \".need-share-button-opened\")) {\n        if (openedEl) {\n          openedEl.classList.remove(\"need-share-button-opened\");\n\n          // hide wechat code image when close the dropdown.\n          if (openedEl.querySelector(\".need-share-wechat-code-image\")) {\n            openedEl.querySelector(\".need-share-wechat-code-image\").remove();\n          }\n        } else {\n          var el = closest(event.target, root.elem);\n          if (el) {\n            if (!el.classList.contains(\"need-share-button-opened\")) {\n              createDropdown(el);\n              setTimeout(function () {\n                el.classList.add(\"need-share-button-opened\");\n              }, 1);\n            }\n          }\n        }\n      } else {\n        setTimeout(function () {\n          openedEl.classList.remove(\"need-share-button-opened\");\n\n          // hide wechat code image when close the dropdown.\n          if (openedEl.querySelector(\".need-share-wechat-code-image\")) {\n            openedEl.querySelector(\".need-share-wechat-code-image\").remove();\n          }\n        }, 1);\n      }\n    });\n\n  };\n})();\n","source":"lib/needsharebutton/needsharebutton.js","raw":"/***********************************************\n  needShareButton\n  - Version 1.0.0\n  - Copyright 2015 Dzmitry Vasileuski\n\t- Licensed under MIT (http://opensource.org/licenses/MIT)\n***********************************************/\n\n(function () {\n\n  // find closest\n  function closest(elem, parent) {\n    if (typeof (parent) == \"string\") {\n      var matchesSelector = elem.matches || elem.webkitMatchesSelector ||\n                            elem.mozMatchesSelector || elem.msMatchesSelector;\n\n      if (!!matchesSelector) {\n        while (elem) {\n          if (matchesSelector.bind(elem)(parent)) {\n            return elem;\n          } else {\n            elem = elem.parentElement;\n          }\n        }\n      }\n      return false;\n    } else {\n      while (elem) {\n        if (elem == parent) {\n          return elem;\n        } else {\n          elem = elem.parentElement;\n        }\n      }\n      return false;\n    }\n  }\n\n  // share button class\n  window.needShareButton = function (elem, options) {\n    // create element reference\n    var root = this;\n    root.elem = elem || \"need-share-button\";\n\n    /* Helpers\n     ***********************************************/\n\n    // get title from html\n    root.getTitle = function () {\n      var content;\n      // check querySelector existance for old browsers\n      if (document.querySelector) {\n        content = document.querySelector(\"title\");\n        if (content) {\n          return content.innerText;\n        }\n      }\n      return document.title;\n    };\n\n    // get image from html\n    root.getImage = function () {\n      var content;\n      // check querySelector existance for old browsers\n      if (document.querySelector) {\n        content = document.querySelector(\"meta[property=\\\"og:image\\\"]\") ||\n                  document.querySelector(\"meta[name=\\\"twitter:image\\\"]\");\n        if (content) {\n          return content.getAttribute(\"content\");\n        } else {\n          return \"\";\n        }\n      } else {\n        return \"\";\n      }\n    };\n\n    // get description from html\n    root.getDescription = function () {\n      var content;\n      // check querySelector existance for old browsers\n      if (document.querySelector) {\n        content = document.querySelector(\"meta[property=\\\"og:description\\\"]\") ||\n                  document.querySelector(\"meta[name=\\\"twitter:description\\\"]\") ||\n                  document.querySelector(\"meta[name=\\\"description\\\"]\");\n        if (content) {\n          return content.getAttribute(\"content\");\n        } else {\n          return \"\";\n        }\n      } else {\n        content = document.getElementsByTagName(\"meta\").namedItem(\"description\");\n        if (content) {\n          return content.getAttribute(\"content\");\n        } else {\n          return \"\";\n        }\n      }\n    };\n\n    // share urls for all networks\n    root.share = {\n      \"weibo\": function (el) {\n        var myoptions = getOptions(el);\n        var url = \"http://v.t.sina.com.cn/share/share.php?title=\" +\n          encodeURIComponent(myoptions.title) +\n          \"&url=\" + encodeURIComponent(myoptions.url) +\n          \"&pic=\" + encodeURIComponent(myoptions.image);\n        root.popup(url);\n      },\n      \"wechat\": function (el) {\n        var myoptions = getOptions(el);\n        var imgSrc = \"https://api.qrserver.com/v1/create-qr-code/?size=200x200&data=\" + encodeURIComponent(myoptions.url);\n        var dropdownEl = el.querySelector(\".need-share-button_dropdown\");\n        var img = dropdownEl.getElementsByClassName(\"need-share-wechat-code-image\")[0];\n        if (img) {\n          img.remove();\n        } else {\n          img = document.createElement(\"img\");\n          img.src = imgSrc;\n          img.alt = \"loading wechat image...\";\n          img.setAttribute(\"class\", \"need-share-wechat-code-image\");\n\n          if (root.options.position == 'middleRight') {\n            dropdownEl.insertBefore(img, dropdownEl.children[0]);\n          }\n          else {\n            dropdownEl.appendChild(img);\n          }\n        }\n      },\n      \"douban\": function (el) {\n        var myoptions = getOptions(el);\n        var url = \"https://www.douban.com/share/service?name=\" +\n          encodeURIComponent(myoptions.title) +\n          \"&href=\" + encodeURIComponent(myoptions.url) +\n          \"&image=\" + encodeURIComponent(myoptions.image);\n        root.popup(url);\n      },\n      \"qqzone\": function (el) {\n        var myoptions = getOptions(el);\n        var url = \"http://sns.qzone.qq.com/cgi-bin/qzshare/cgi_qzshare_onekey?title=\" +\n          encodeURIComponent(myoptions.title) +\n          \"&url=\" + encodeURIComponent(myoptions.url) +\n          \"&pics=\" + encodeURIComponent(myoptions.image) +\n          \"&desc=\" + encodeURIComponent(myoptions.description);\n        root.popup(url);\n      },\n      \"renren\": function (el) {\n        var myoptions = getOptions(el);\n        var url = \"http://widget.renren.com/dialog/share?title=\" +\n          encodeURIComponent(myoptions.title) +\n          \"&resourceUrl=\" + encodeURIComponent(myoptions.url) +\n          \"&pic=\" + encodeURIComponent(myoptions.image) +\n          \"&description=\" + encodeURIComponent(myoptions.description);\n        root.popup(url);\n      },\n      \"mailto\": function (el) {\n        var myoptions = getOptions(el);\n        var url = \"mailto:?subject=\" + encodeURIComponent(myoptions.title) +\n          \"&body=Thought you might enjoy reading this: \" + encodeURIComponent(myoptions.url) +\n          \" - \" + encodeURIComponent(myoptions.description);\n\n        window.location.href = url;\n      },\n      \"twitter\": function (el) {\n        var myoptions = getOptions(el);\n        var url = myoptions.protocol + \"twitter.com/intent/tweet?text=\";\n        url += encodeURIComponent(myoptions.title) + \"&url=\" + encodeURIComponent(myoptions.url);\n\n        root.popup(url);\n      },\n      \"pinterest\": function (el) {\n        var myoptions = getOptions(el);\n        var url = myoptions.protocol + \"pinterest.com/pin/create/bookmarklet/?is_video=false\";\n        url += \"&media=\" + encodeURIComponent(myoptions.image);\n        url += \"&url=\" + encodeURIComponent(myoptions.url);\n        url += \"&description=\" + encodeURIComponent(myoptions.title);\n\n        root.popup(url);\n      },\n      \"facebook\": function (el) {\n        var myoptions = getOptions(el);\n        var url = myoptions.protocol + \"www.facebook.com/share.php?\";\n        url += \"u=\" + encodeURIComponent(myoptions.url);\n        url += \"&title=\" + encodeURIComponent(myoptions.title);\n\n        root.popup(url);\n      },\n      \"googleplus\": function (el) {\n        var myoptions = getOptions(el);\n        var url = myoptions.protocol + \"plus.google.com/share?\";\n        url += \"url=\" + encodeURIComponent(myoptions.url);\n\n        root.popup(url);\n      },\n      \"reddit\": function (el) {\n        var myoptions = getOptions(el);\n        var url = myoptions.protocol + \"www.reddit.com/submit?\";\n        url += \"url=\" + encodeURIComponent(myoptions.url);\n        url += \"&title=\" + encodeURIComponent(myoptions.title);\n\n        root.popup(url);\n      },\n      \"delicious\": function (el) {\n        var myoptions = getOptions(el);\n        var url = myoptions.protocol + \"del.icio.us/post?\";\n        url += \"url=\" + encodeURIComponent(myoptions.url);\n        url += \"&title=\" + encodeURIComponent(myoptions.title);\n        url += \"&notes=\" + encodeURIComponent(myoptions.description);\n\n        root.popup(url);\n      },\n      \"stumbleupon\": function (el) {\n        var myoptions = getOptions(el);\n        var url = myoptions.protocol + \"www.stumbleupon.com/submit?\";\n        url += \"url=\" + encodeURIComponent(myoptions.url);\n        url += \"&title=\" + encodeURIComponent(myoptions.title);\n\n        root.popup(url);\n      },\n      \"linkedin\": function (el) {\n        var myoptions = getOptions(el);\n        var url = myoptions.protocol + \"www.linkedin.com/shareArticle?mini=true\";\n        url += \"&url=\" + encodeURIComponent(myoptions.url);\n        url += \"&title=\" + encodeURIComponent(myoptions.title);\n        url += \"&source=\" + encodeURIComponent(myoptions.source);\n\n        root.popup(url);\n      },\n      \"tumblr\": function (el) {\n        var myoptions = getOptions(el);\n        var url = myoptions.protocol + \"www.tumblr.com/share?v=3\";\n        url += \"&u=\" + encodeURIComponent(myoptions.url);\n        url += \"&t=\" + encodeURIComponent(myoptions.title);\n\n        root.popup(url);\n      },\n      \"googlebookmarks\": function (el) {\n        var myoptions = getOptions(el);\n        var url = myoptions.protocol + \"www.google.com/bookmarks/mark?op=edit\";\n        url += \"&bkmk=\" + encodeURIComponent(myoptions.url);\n        url += \"&title=\" + encodeURIComponent(myoptions.title);\n        url += \"&annotation=\" + encodeURIComponent(myoptions.description);\n\n        root.popup(url);\n      },\n      \"newsvine\": function (el) {\n        var myoptions = getOptions(el);\n        var url = myoptions.protocol + \"www.newsvine.com/_tools/seed&save?\";\n        url += \"u=\" + encodeURIComponent(myoptions.url);\n        url += \"&h=\" + encodeURIComponent(myoptions.title);\n\n        root.popup(url);\n      },\n      \"evernote\": function (el) {\n        var myoptions = getOptions(el);\n        var url = myoptions.protocol + \"www.evernote.com/clip.action?\";\n        url += \"url=\" + encodeURIComponent(myoptions.url);\n        url += \"&title=\" + encodeURIComponent(myoptions.title);\n\n        root.popup(url);\n      },\n      \"friendfeed\": function (el) {\n        var myoptions = getOptions(el);\n        var url = myoptions.protocol + \"www.friendfeed.com/share?\";\n        url += \"url=\" + encodeURIComponent(myoptions.url);\n        url += \"&title=\" + encodeURIComponent(myoptions.title);\n\n        root.popup(url);\n      },\n      \"vkontakte\": function (el) {\n        var myoptions = getOptions(el);\n        var url = myoptions.protocol + \"vkontakte.ru/share.php?\";\n        url += \"url=\" + encodeURIComponent(myoptions.url);\n        url += \"&title=\" + encodeURIComponent(myoptions.title);\n        url += \"&description=\" + encodeURIComponent(myoptions.description);\n        url += \"&image=\" + encodeURIComponent(myoptions.image);\n        url += \"&noparse=true\";\n\n        root.popup(url);\n      },\n      \"odnoklassniki\": function (el) {\n        var myoptions = getOptions(el);\n        var url = myoptions.protocol + \"www.odnoklassniki.ru/dk?st.cmd=addShare&st.s=1\";\n        url += \"&st.comments=\" + encodeURIComponent(myoptions.description);\n        url += \"&st._surl=\" + encodeURIComponent(myoptions.url);\n\n        root.popup(url);\n      },\n      \"mailru\": function (el) {\n        var myoptions = getOptions(el);\n        var url = myoptions.protocol + \"connect.mail.ru/share?\";\n        url += \"url=\" + encodeURIComponent(myoptions.url);\n        url += \"&title=\" + encodeURIComponent(myoptions.title);\n        url += \"&description=\" + encodeURIComponent(myoptions.description);\n        url += \"&imageurl=\" + encodeURIComponent(myoptions.image);\n\n        root.popup(url);\n      }\n\n    };\n\n    // open share link in a popup\n    root.popup = function (url) {\n      // set left and top position\n      var popupWidth = 600,\n        popupHeight = 500,\n        // fix dual screen mode\n        dualScreenLeft = window.screenLeft !== undefined ? window.screenLeft : screen.left,\n        dualScreenTop = window.screenTop !== undefined ? window.screenTop : screen.top,\n        width = window.innerWidth ?\n                window.innerWidth :\n                document.documentElement.clientWidth ?\n                document.documentElement.clientWidth :\n                screen.width,\n        height = window.innerHeight ?\n                 window.innerHeight :\n                 document.documentElement.clientHeight ?\n                 document.documentElement.clientHeight :\n                 screen.height,\n        // calculate top and left position\n        left = ((width / 2) - (popupWidth / 2)) + dualScreenLeft,\n        top = ((height / 2) - (popupHeight / 2)) + dualScreenTop,\n\n        // show popup\n        shareWindow = window.open(url, \"targetWindow\",\n          \"toolbar=no,location=no,status=no,menubar=no,scrollbars=yes,resizable=yes,width=\" + popupWidth +\n          \", height=\" + popupHeight + \", top=\" + top + \", left=\" + left);\n\n      // Puts focus on the newWindow\n      if (window.focus) {\n        shareWindow.focus();\n      }\n    };\n\n    /* Set options\n     ***********************************************/\n\n    // create default options\n    root.options = {\n      iconStyle: \"default\", // default or box\n      boxForm: \"horizontal\", // horizontal or vertical\n      position: \"bottomCenter\", // top / middle / bottom + Left / Center / Right\n      protocol: [\"http\", \"https\"].indexOf(window.location.href.split(\":\")[0]) === -1 ? \"https://\" : \"//\",\n      networks: \"Weibo,Wechat,Douban,QQZone,Twitter,Pinterest,Facebook,GooglePlus,Reddit,Linkedin,Tumblr,Evernote\"\n    };\n\n    // integrate custom options\n    for (var i in options) {\n      if (options.hasOwnProperty(i)) {\n        root.options[i] = options[i];\n      }\n    }\n    // convert networks string into array\n    //root.options.networks = root.options.networks.toLowerCase().split(\",\");\n    root.options.networks = root.options.networks.split(\",\");\n\n    function getOptions(el) {\n      // integrate data attribute options\n      var ret = {};\n      for (var i in root.options) {\n        if (root.options.hasOwnProperty(i)) {\n          ret[i] = root.options[i];\n        }\n      }\n\n      // these attrs must get dynamically.\n      ret.url = window.location.href;\n      ret.title = root.getTitle();\n      ret.image = root.getImage();\n      ret.description = root.getDescription();\n\n      for (var option in el.dataset) {\n        // replace only 'share-' prefixed data-attributes\n        if (option.match(/share/)) {\n          var newOption = option.replace(/share/, \"\");\n          if (!newOption.length) {\n            continue;\n          }\n          newOption = newOption.charAt(0).toLowerCase() + newOption.slice(1);\n          var val = el.dataset[option];\n          if (newOption === \"networks\") {\n            //val = val.toLowerCase().split(\",\");\n            val = val.split(\",\");\n          } else if (newOption === \"url\" && val && val[0] === \"/\") {\n            // fix relative url problem.\n            val = location.origin + val;\n          }\n          ret[newOption] = val;\n        }\n      }\n      return ret;\n    }\n\n    function createDropdown(el) {\n      // create dropdown\n      var dropdownEl = document.createElement(\"span\");\n      dropdownEl.className = \"need-share-button_dropdown\";\n      if (el.querySelector(\".need-share-button_dropdown\")) {\n        return;\n      }\n      var myoptions = getOptions(el);\n\n      // set dropdown row length\n      if (myoptions.iconStyle == \"default\" && myoptions.boxForm == \"vertical\") {\n        dropdownEl.className += \" need-share-button_dropdown-box-vertical\";\n      } else if (myoptions.iconStyle == \"box\" && myoptions.boxForm == \"horizontal\") {\n        dropdownEl.className += \" need-share-button_dropdown-box-horizontal\";\n      } else if (myoptions.iconStyle == \"box\" && myoptions.boxForm == \"vertical\") {\n        dropdownEl.className += \" need-share-button_dropdown-box-vertical\";\n      }\n\n      // set dropdown position\n      setTimeout(function () {\n        switch (myoptions.position) {\n          case \"topLeft\":\n            dropdownEl.className += \" need-share-button_dropdown-top-left\";\n            break;\n          case \"topRight\":\n            dropdownEl.className += \" need-share-button_dropdown-top-right\";\n            break;\n          case \"topCenter\":\n            dropdownEl.className += \" need-share-button_dropdown-top-center\";\n            dropdownEl.style.marginLeft = -dropdownEl.offsetWidth / 2 + \"px\";\n            break;\n          case \"middleLeft\":\n            dropdownEl.className += \" need-share-button_dropdown-middle-left\";\n            dropdownEl.style.marginTop = -dropdownEl.offsetHeight / 2 + \"px\";\n            break;\n          case \"middleRight\":\n            dropdownEl.className += \" need-share-button_dropdown-middle-right\";\n            dropdownEl.style.marginTop = -dropdownEl.offsetHeight / 2 + \"px\";\n            break;\n          case \"bottomLeft\":\n            dropdownEl.className += \" need-share-button_dropdown-bottom-left\";\n            break;\n          case \"bottomRight\":\n            dropdownEl.className += \" need-share-button_dropdown-bottom-right\";\n            break;\n          case \"bottomCenter\":\n            dropdownEl.className += \" need-share-button_dropdown-bottom-center\";\n            dropdownEl.style.marginLeft = -dropdownEl.offsetWidth / 2 + \"px\";\n            break;\n          default:\n            dropdownEl.className += \" need-share-button_dropdown-bottom-center\";\n            dropdownEl.style.marginLeft = -dropdownEl.offsetWidth / 2 + \"px\";\n            break;\n        }\n      }, 1);\n\n\n      // fill fropdown with buttons\n      var iconClass = myoptions.iconStyle == \"default\" ?\n                      \"need-share-button_link need-share-button_\" :\n                      \"need-share-button_link-\" + myoptions.iconStyle + \" need-share-button_link need-share-button_\";\n      for (var network in myoptions.networks) {\n        if (myoptions.networks.hasOwnProperty(network)) {\n          var link = document.createElement(\"span\");\n          network = myoptions.networks[network].trim();\n          var networkLC = network.toLowerCase();\n          link.className = iconClass + networkLC;\n          var fontello = [\"weibo\", \"wechat\", \"douban\", \"qqzone\", \"renren\"];\n          if (fontello.indexOf(networkLC) === -1) {\n            link.className += \" social-\" + networkLC;\n          } else {\n            link.className += \" icon-\" + networkLC;\n          }\n          link.dataset.network = networkLC;\n          link.title = network;\n          dropdownEl.appendChild(link);\n        }\n      }\n\n      dropdownEl.addEventListener(\"click\", function (event) {\n        if (closest(event.target, \".need-share-button_link\")) {\n          event.preventDefault();\n          event.stopPropagation();\n\n          root.share[event.target.dataset.network](el);\n          return false;\n        }\n      });\n\n      el.appendChild(dropdownEl);\n    }\n\n    // close on click outside\n    document.addEventListener(\"click\", function (event) {\n      var openedEl = document.querySelector(\".need-share-button-opened\");\n      if (!closest(event.target, \".need-share-button-opened\")) {\n        if (openedEl) {\n          openedEl.classList.remove(\"need-share-button-opened\");\n\n          // hide wechat code image when close the dropdown.\n          if (openedEl.querySelector(\".need-share-wechat-code-image\")) {\n            openedEl.querySelector(\".need-share-wechat-code-image\").remove();\n          }\n        } else {\n          var el = closest(event.target, root.elem);\n          if (el) {\n            if (!el.classList.contains(\"need-share-button-opened\")) {\n              createDropdown(el);\n              setTimeout(function () {\n                el.classList.add(\"need-share-button-opened\");\n              }, 1);\n            }\n          }\n        }\n      } else {\n        setTimeout(function () {\n          openedEl.classList.remove(\"need-share-button-opened\");\n\n          // hide wechat code image when close the dropdown.\n          if (openedEl.querySelector(\".need-share-wechat-code-image\")) {\n            openedEl.querySelector(\".need-share-wechat-code-image\").remove();\n          }\n        }, 1);\n      }\n    });\n\n  };\n})();\n","date":"2019-01-09T03:12:08.112Z","updated":"2019-01-09T03:12:08.112Z","path":"lib/needsharebutton/needsharebutton.js","layout":"false","title":"","comments":1,"_id":"ck0ozhj6c007qgkuw4v9w76qj","content":"/***********************************************\n  needShareButton\n  - Version 1.0.0\n  - Copyright 2015 Dzmitry Vasileuski\n\t- Licensed under MIT (http://opensource.org/licenses/MIT)\n***********************************************/\n\n(function () {\n\n  // find closest\n  function closest(elem, parent) {\n    if (typeof (parent) == \"string\") {\n      var matchesSelector = elem.matches || elem.webkitMatchesSelector ||\n                            elem.mozMatchesSelector || elem.msMatchesSelector;\n\n      if (!!matchesSelector) {\n        while (elem) {\n          if (matchesSelector.bind(elem)(parent)) {\n            return elem;\n          } else {\n            elem = elem.parentElement;\n          }\n        }\n      }\n      return false;\n    } else {\n      while (elem) {\n        if (elem == parent) {\n          return elem;\n        } else {\n          elem = elem.parentElement;\n        }\n      }\n      return false;\n    }\n  }\n\n  // share button class\n  window.needShareButton = function (elem, options) {\n    // create element reference\n    var root = this;\n    root.elem = elem || \"need-share-button\";\n\n    /* Helpers\n     ***********************************************/\n\n    // get title from html\n    root.getTitle = function () {\n      var content;\n      // check querySelector existance for old browsers\n      if (document.querySelector) {\n        content = document.querySelector(\"title\");\n        if (content) {\n          return content.innerText;\n        }\n      }\n      return document.title;\n    };\n\n    // get image from html\n    root.getImage = function () {\n      var content;\n      // check querySelector existance for old browsers\n      if (document.querySelector) {\n        content = document.querySelector(\"meta[property=\\\"og:image\\\"]\") ||\n                  document.querySelector(\"meta[name=\\\"twitter:image\\\"]\");\n        if (content) {\n          return content.getAttribute(\"content\");\n        } else {\n          return \"\";\n        }\n      } else {\n        return \"\";\n      }\n    };\n\n    // get description from html\n    root.getDescription = function () {\n      var content;\n      // check querySelector existance for old browsers\n      if (document.querySelector) {\n        content = document.querySelector(\"meta[property=\\\"og:description\\\"]\") ||\n                  document.querySelector(\"meta[name=\\\"twitter:description\\\"]\") ||\n                  document.querySelector(\"meta[name=\\\"description\\\"]\");\n        if (content) {\n          return content.getAttribute(\"content\");\n        } else {\n          return \"\";\n        }\n      } else {\n        content = document.getElementsByTagName(\"meta\").namedItem(\"description\");\n        if (content) {\n          return content.getAttribute(\"content\");\n        } else {\n          return \"\";\n        }\n      }\n    };\n\n    // share urls for all networks\n    root.share = {\n      \"weibo\": function (el) {\n        var myoptions = getOptions(el);\n        var url = \"http://v.t.sina.com.cn/share/share.php?title=\" +\n          encodeURIComponent(myoptions.title) +\n          \"&url=\" + encodeURIComponent(myoptions.url) +\n          \"&pic=\" + encodeURIComponent(myoptions.image);\n        root.popup(url);\n      },\n      \"wechat\": function (el) {\n        var myoptions = getOptions(el);\n        var imgSrc = \"https://api.qrserver.com/v1/create-qr-code/?size=200x200&data=\" + encodeURIComponent(myoptions.url);\n        var dropdownEl = el.querySelector(\".need-share-button_dropdown\");\n        var img = dropdownEl.getElementsByClassName(\"need-share-wechat-code-image\")[0];\n        if (img) {\n          img.remove();\n        } else {\n          img = document.createElement(\"img\");\n          img.src = imgSrc;\n          img.alt = \"loading wechat image...\";\n          img.setAttribute(\"class\", \"need-share-wechat-code-image\");\n\n          if (root.options.position == 'middleRight') {\n            dropdownEl.insertBefore(img, dropdownEl.children[0]);\n          }\n          else {\n            dropdownEl.appendChild(img);\n          }\n        }\n      },\n      \"douban\": function (el) {\n        var myoptions = getOptions(el);\n        var url = \"https://www.douban.com/share/service?name=\" +\n          encodeURIComponent(myoptions.title) +\n          \"&href=\" + encodeURIComponent(myoptions.url) +\n          \"&image=\" + encodeURIComponent(myoptions.image);\n        root.popup(url);\n      },\n      \"qqzone\": function (el) {\n        var myoptions = getOptions(el);\n        var url = \"http://sns.qzone.qq.com/cgi-bin/qzshare/cgi_qzshare_onekey?title=\" +\n          encodeURIComponent(myoptions.title) +\n          \"&url=\" + encodeURIComponent(myoptions.url) +\n          \"&pics=\" + encodeURIComponent(myoptions.image) +\n          \"&desc=\" + encodeURIComponent(myoptions.description);\n        root.popup(url);\n      },\n      \"renren\": function (el) {\n        var myoptions = getOptions(el);\n        var url = \"http://widget.renren.com/dialog/share?title=\" +\n          encodeURIComponent(myoptions.title) +\n          \"&resourceUrl=\" + encodeURIComponent(myoptions.url) +\n          \"&pic=\" + encodeURIComponent(myoptions.image) +\n          \"&description=\" + encodeURIComponent(myoptions.description);\n        root.popup(url);\n      },\n      \"mailto\": function (el) {\n        var myoptions = getOptions(el);\n        var url = \"mailto:?subject=\" + encodeURIComponent(myoptions.title) +\n          \"&body=Thought you might enjoy reading this: \" + encodeURIComponent(myoptions.url) +\n          \" - \" + encodeURIComponent(myoptions.description);\n\n        window.location.href = url;\n      },\n      \"twitter\": function (el) {\n        var myoptions = getOptions(el);\n        var url = myoptions.protocol + \"twitter.com/intent/tweet?text=\";\n        url += encodeURIComponent(myoptions.title) + \"&url=\" + encodeURIComponent(myoptions.url);\n\n        root.popup(url);\n      },\n      \"pinterest\": function (el) {\n        var myoptions = getOptions(el);\n        var url = myoptions.protocol + \"pinterest.com/pin/create/bookmarklet/?is_video=false\";\n        url += \"&media=\" + encodeURIComponent(myoptions.image);\n        url += \"&url=\" + encodeURIComponent(myoptions.url);\n        url += \"&description=\" + encodeURIComponent(myoptions.title);\n\n        root.popup(url);\n      },\n      \"facebook\": function (el) {\n        var myoptions = getOptions(el);\n        var url = myoptions.protocol + \"www.facebook.com/share.php?\";\n        url += \"u=\" + encodeURIComponent(myoptions.url);\n        url += \"&title=\" + encodeURIComponent(myoptions.title);\n\n        root.popup(url);\n      },\n      \"googleplus\": function (el) {\n        var myoptions = getOptions(el);\n        var url = myoptions.protocol + \"plus.google.com/share?\";\n        url += \"url=\" + encodeURIComponent(myoptions.url);\n\n        root.popup(url);\n      },\n      \"reddit\": function (el) {\n        var myoptions = getOptions(el);\n        var url = myoptions.protocol + \"www.reddit.com/submit?\";\n        url += \"url=\" + encodeURIComponent(myoptions.url);\n        url += \"&title=\" + encodeURIComponent(myoptions.title);\n\n        root.popup(url);\n      },\n      \"delicious\": function (el) {\n        var myoptions = getOptions(el);\n        var url = myoptions.protocol + \"del.icio.us/post?\";\n        url += \"url=\" + encodeURIComponent(myoptions.url);\n        url += \"&title=\" + encodeURIComponent(myoptions.title);\n        url += \"&notes=\" + encodeURIComponent(myoptions.description);\n\n        root.popup(url);\n      },\n      \"stumbleupon\": function (el) {\n        var myoptions = getOptions(el);\n        var url = myoptions.protocol + \"www.stumbleupon.com/submit?\";\n        url += \"url=\" + encodeURIComponent(myoptions.url);\n        url += \"&title=\" + encodeURIComponent(myoptions.title);\n\n        root.popup(url);\n      },\n      \"linkedin\": function (el) {\n        var myoptions = getOptions(el);\n        var url = myoptions.protocol + \"www.linkedin.com/shareArticle?mini=true\";\n        url += \"&url=\" + encodeURIComponent(myoptions.url);\n        url += \"&title=\" + encodeURIComponent(myoptions.title);\n        url += \"&source=\" + encodeURIComponent(myoptions.source);\n\n        root.popup(url);\n      },\n      \"tumblr\": function (el) {\n        var myoptions = getOptions(el);\n        var url = myoptions.protocol + \"www.tumblr.com/share?v=3\";\n        url += \"&u=\" + encodeURIComponent(myoptions.url);\n        url += \"&t=\" + encodeURIComponent(myoptions.title);\n\n        root.popup(url);\n      },\n      \"googlebookmarks\": function (el) {\n        var myoptions = getOptions(el);\n        var url = myoptions.protocol + \"www.google.com/bookmarks/mark?op=edit\";\n        url += \"&bkmk=\" + encodeURIComponent(myoptions.url);\n        url += \"&title=\" + encodeURIComponent(myoptions.title);\n        url += \"&annotation=\" + encodeURIComponent(myoptions.description);\n\n        root.popup(url);\n      },\n      \"newsvine\": function (el) {\n        var myoptions = getOptions(el);\n        var url = myoptions.protocol + \"www.newsvine.com/_tools/seed&save?\";\n        url += \"u=\" + encodeURIComponent(myoptions.url);\n        url += \"&h=\" + encodeURIComponent(myoptions.title);\n\n        root.popup(url);\n      },\n      \"evernote\": function (el) {\n        var myoptions = getOptions(el);\n        var url = myoptions.protocol + \"www.evernote.com/clip.action?\";\n        url += \"url=\" + encodeURIComponent(myoptions.url);\n        url += \"&title=\" + encodeURIComponent(myoptions.title);\n\n        root.popup(url);\n      },\n      \"friendfeed\": function (el) {\n        var myoptions = getOptions(el);\n        var url = myoptions.protocol + \"www.friendfeed.com/share?\";\n        url += \"url=\" + encodeURIComponent(myoptions.url);\n        url += \"&title=\" + encodeURIComponent(myoptions.title);\n\n        root.popup(url);\n      },\n      \"vkontakte\": function (el) {\n        var myoptions = getOptions(el);\n        var url = myoptions.protocol + \"vkontakte.ru/share.php?\";\n        url += \"url=\" + encodeURIComponent(myoptions.url);\n        url += \"&title=\" + encodeURIComponent(myoptions.title);\n        url += \"&description=\" + encodeURIComponent(myoptions.description);\n        url += \"&image=\" + encodeURIComponent(myoptions.image);\n        url += \"&noparse=true\";\n\n        root.popup(url);\n      },\n      \"odnoklassniki\": function (el) {\n        var myoptions = getOptions(el);\n        var url = myoptions.protocol + \"www.odnoklassniki.ru/dk?st.cmd=addShare&st.s=1\";\n        url += \"&st.comments=\" + encodeURIComponent(myoptions.description);\n        url += \"&st._surl=\" + encodeURIComponent(myoptions.url);\n\n        root.popup(url);\n      },\n      \"mailru\": function (el) {\n        var myoptions = getOptions(el);\n        var url = myoptions.protocol + \"connect.mail.ru/share?\";\n        url += \"url=\" + encodeURIComponent(myoptions.url);\n        url += \"&title=\" + encodeURIComponent(myoptions.title);\n        url += \"&description=\" + encodeURIComponent(myoptions.description);\n        url += \"&imageurl=\" + encodeURIComponent(myoptions.image);\n\n        root.popup(url);\n      }\n\n    };\n\n    // open share link in a popup\n    root.popup = function (url) {\n      // set left and top position\n      var popupWidth = 600,\n        popupHeight = 500,\n        // fix dual screen mode\n        dualScreenLeft = window.screenLeft !== undefined ? window.screenLeft : screen.left,\n        dualScreenTop = window.screenTop !== undefined ? window.screenTop : screen.top,\n        width = window.innerWidth ?\n                window.innerWidth :\n                document.documentElement.clientWidth ?\n                document.documentElement.clientWidth :\n                screen.width,\n        height = window.innerHeight ?\n                 window.innerHeight :\n                 document.documentElement.clientHeight ?\n                 document.documentElement.clientHeight :\n                 screen.height,\n        // calculate top and left position\n        left = ((width / 2) - (popupWidth / 2)) + dualScreenLeft,\n        top = ((height / 2) - (popupHeight / 2)) + dualScreenTop,\n\n        // show popup\n        shareWindow = window.open(url, \"targetWindow\",\n          \"toolbar=no,location=no,status=no,menubar=no,scrollbars=yes,resizable=yes,width=\" + popupWidth +\n          \", height=\" + popupHeight + \", top=\" + top + \", left=\" + left);\n\n      // Puts focus on the newWindow\n      if (window.focus) {\n        shareWindow.focus();\n      }\n    };\n\n    /* Set options\n     ***********************************************/\n\n    // create default options\n    root.options = {\n      iconStyle: \"default\", // default or box\n      boxForm: \"horizontal\", // horizontal or vertical\n      position: \"bottomCenter\", // top / middle / bottom + Left / Center / Right\n      protocol: [\"http\", \"https\"].indexOf(window.location.href.split(\":\")[0]) === -1 ? \"https://\" : \"//\",\n      networks: \"Weibo,Wechat,Douban,QQZone,Twitter,Pinterest,Facebook,GooglePlus,Reddit,Linkedin,Tumblr,Evernote\"\n    };\n\n    // integrate custom options\n    for (var i in options) {\n      if (options.hasOwnProperty(i)) {\n        root.options[i] = options[i];\n      }\n    }\n    // convert networks string into array\n    //root.options.networks = root.options.networks.toLowerCase().split(\",\");\n    root.options.networks = root.options.networks.split(\",\");\n\n    function getOptions(el) {\n      // integrate data attribute options\n      var ret = {};\n      for (var i in root.options) {\n        if (root.options.hasOwnProperty(i)) {\n          ret[i] = root.options[i];\n        }\n      }\n\n      // these attrs must get dynamically.\n      ret.url = window.location.href;\n      ret.title = root.getTitle();\n      ret.image = root.getImage();\n      ret.description = root.getDescription();\n\n      for (var option in el.dataset) {\n        // replace only 'share-' prefixed data-attributes\n        if (option.match(/share/)) {\n          var newOption = option.replace(/share/, \"\");\n          if (!newOption.length) {\n            continue;\n          }\n          newOption = newOption.charAt(0).toLowerCase() + newOption.slice(1);\n          var val = el.dataset[option];\n          if (newOption === \"networks\") {\n            //val = val.toLowerCase().split(\",\");\n            val = val.split(\",\");\n          } else if (newOption === \"url\" && val && val[0] === \"/\") {\n            // fix relative url problem.\n            val = location.origin + val;\n          }\n          ret[newOption] = val;\n        }\n      }\n      return ret;\n    }\n\n    function createDropdown(el) {\n      // create dropdown\n      var dropdownEl = document.createElement(\"span\");\n      dropdownEl.className = \"need-share-button_dropdown\";\n      if (el.querySelector(\".need-share-button_dropdown\")) {\n        return;\n      }\n      var myoptions = getOptions(el);\n\n      // set dropdown row length\n      if (myoptions.iconStyle == \"default\" && myoptions.boxForm == \"vertical\") {\n        dropdownEl.className += \" need-share-button_dropdown-box-vertical\";\n      } else if (myoptions.iconStyle == \"box\" && myoptions.boxForm == \"horizontal\") {\n        dropdownEl.className += \" need-share-button_dropdown-box-horizontal\";\n      } else if (myoptions.iconStyle == \"box\" && myoptions.boxForm == \"vertical\") {\n        dropdownEl.className += \" need-share-button_dropdown-box-vertical\";\n      }\n\n      // set dropdown position\n      setTimeout(function () {\n        switch (myoptions.position) {\n          case \"topLeft\":\n            dropdownEl.className += \" need-share-button_dropdown-top-left\";\n            break;\n          case \"topRight\":\n            dropdownEl.className += \" need-share-button_dropdown-top-right\";\n            break;\n          case \"topCenter\":\n            dropdownEl.className += \" need-share-button_dropdown-top-center\";\n            dropdownEl.style.marginLeft = -dropdownEl.offsetWidth / 2 + \"px\";\n            break;\n          case \"middleLeft\":\n            dropdownEl.className += \" need-share-button_dropdown-middle-left\";\n            dropdownEl.style.marginTop = -dropdownEl.offsetHeight / 2 + \"px\";\n            break;\n          case \"middleRight\":\n            dropdownEl.className += \" need-share-button_dropdown-middle-right\";\n            dropdownEl.style.marginTop = -dropdownEl.offsetHeight / 2 + \"px\";\n            break;\n          case \"bottomLeft\":\n            dropdownEl.className += \" need-share-button_dropdown-bottom-left\";\n            break;\n          case \"bottomRight\":\n            dropdownEl.className += \" need-share-button_dropdown-bottom-right\";\n            break;\n          case \"bottomCenter\":\n            dropdownEl.className += \" need-share-button_dropdown-bottom-center\";\n            dropdownEl.style.marginLeft = -dropdownEl.offsetWidth / 2 + \"px\";\n            break;\n          default:\n            dropdownEl.className += \" need-share-button_dropdown-bottom-center\";\n            dropdownEl.style.marginLeft = -dropdownEl.offsetWidth / 2 + \"px\";\n            break;\n        }\n      }, 1);\n\n\n      // fill fropdown with buttons\n      var iconClass = myoptions.iconStyle == \"default\" ?\n                      \"need-share-button_link need-share-button_\" :\n                      \"need-share-button_link-\" + myoptions.iconStyle + \" need-share-button_link need-share-button_\";\n      for (var network in myoptions.networks) {\n        if (myoptions.networks.hasOwnProperty(network)) {\n          var link = document.createElement(\"span\");\n          network = myoptions.networks[network].trim();\n          var networkLC = network.toLowerCase();\n          link.className = iconClass + networkLC;\n          var fontello = [\"weibo\", \"wechat\", \"douban\", \"qqzone\", \"renren\"];\n          if (fontello.indexOf(networkLC) === -1) {\n            link.className += \" social-\" + networkLC;\n          } else {\n            link.className += \" icon-\" + networkLC;\n          }\n          link.dataset.network = networkLC;\n          link.title = network;\n          dropdownEl.appendChild(link);\n        }\n      }\n\n      dropdownEl.addEventListener(\"click\", function (event) {\n        if (closest(event.target, \".need-share-button_link\")) {\n          event.preventDefault();\n          event.stopPropagation();\n\n          root.share[event.target.dataset.network](el);\n          return false;\n        }\n      });\n\n      el.appendChild(dropdownEl);\n    }\n\n    // close on click outside\n    document.addEventListener(\"click\", function (event) {\n      var openedEl = document.querySelector(\".need-share-button-opened\");\n      if (!closest(event.target, \".need-share-button-opened\")) {\n        if (openedEl) {\n          openedEl.classList.remove(\"need-share-button-opened\");\n\n          // hide wechat code image when close the dropdown.\n          if (openedEl.querySelector(\".need-share-wechat-code-image\")) {\n            openedEl.querySelector(\".need-share-wechat-code-image\").remove();\n          }\n        } else {\n          var el = closest(event.target, root.elem);\n          if (el) {\n            if (!el.classList.contains(\"need-share-button-opened\")) {\n              createDropdown(el);\n              setTimeout(function () {\n                el.classList.add(\"need-share-button-opened\");\n              }, 1);\n            }\n          }\n        }\n      } else {\n        setTimeout(function () {\n          openedEl.classList.remove(\"need-share-button-opened\");\n\n          // hide wechat code image when close the dropdown.\n          if (openedEl.querySelector(\".need-share-wechat-code-image\")) {\n            openedEl.querySelector(\".need-share-wechat-code-image\").remove();\n          }\n        }, 1);\n      }\n    });\n\n  };\n})();\n","site":{"data":{}},"excerpt":"","more":"/***********************************************\n  needShareButton\n  - Version 1.0.0\n  - Copyright 2015 Dzmitry Vasileuski\n\t- Licensed under MIT (http://opensource.org/licenses/MIT)\n***********************************************/\n\n(function () {\n\n  // find closest\n  function closest(elem, parent) {\n    if (typeof (parent) == \"string\") {\n      var matchesSelector = elem.matches || elem.webkitMatchesSelector ||\n                            elem.mozMatchesSelector || elem.msMatchesSelector;\n\n      if (!!matchesSelector) {\n        while (elem) {\n          if (matchesSelector.bind(elem)(parent)) {\n            return elem;\n          } else {\n            elem = elem.parentElement;\n          }\n        }\n      }\n      return false;\n    } else {\n      while (elem) {\n        if (elem == parent) {\n          return elem;\n        } else {\n          elem = elem.parentElement;\n        }\n      }\n      return false;\n    }\n  }\n\n  // share button class\n  window.needShareButton = function (elem, options) {\n    // create element reference\n    var root = this;\n    root.elem = elem || \"need-share-button\";\n\n    /* Helpers\n     ***********************************************/\n\n    // get title from html\n    root.getTitle = function () {\n      var content;\n      // check querySelector existance for old browsers\n      if (document.querySelector) {\n        content = document.querySelector(\"title\");\n        if (content) {\n          return content.innerText;\n        }\n      }\n      return document.title;\n    };\n\n    // get image from html\n    root.getImage = function () {\n      var content;\n      // check querySelector existance for old browsers\n      if (document.querySelector) {\n        content = document.querySelector(\"meta[property=\\\"og:image\\\"]\") ||\n                  document.querySelector(\"meta[name=\\\"twitter:image\\\"]\");\n        if (content) {\n          return content.getAttribute(\"content\");\n        } else {\n          return \"\";\n        }\n      } else {\n        return \"\";\n      }\n    };\n\n    // get description from html\n    root.getDescription = function () {\n      var content;\n      // check querySelector existance for old browsers\n      if (document.querySelector) {\n        content = document.querySelector(\"meta[property=\\\"og:description\\\"]\") ||\n                  document.querySelector(\"meta[name=\\\"twitter:description\\\"]\") ||\n                  document.querySelector(\"meta[name=\\\"description\\\"]\");\n        if (content) {\n          return content.getAttribute(\"content\");\n        } else {\n          return \"\";\n        }\n      } else {\n        content = document.getElementsByTagName(\"meta\").namedItem(\"description\");\n        if (content) {\n          return content.getAttribute(\"content\");\n        } else {\n          return \"\";\n        }\n      }\n    };\n\n    // share urls for all networks\n    root.share = {\n      \"weibo\": function (el) {\n        var myoptions = getOptions(el);\n        var url = \"http://v.t.sina.com.cn/share/share.php?title=\" +\n          encodeURIComponent(myoptions.title) +\n          \"&url=\" + encodeURIComponent(myoptions.url) +\n          \"&pic=\" + encodeURIComponent(myoptions.image);\n        root.popup(url);\n      },\n      \"wechat\": function (el) {\n        var myoptions = getOptions(el);\n        var imgSrc = \"https://api.qrserver.com/v1/create-qr-code/?size=200x200&data=\" + encodeURIComponent(myoptions.url);\n        var dropdownEl = el.querySelector(\".need-share-button_dropdown\");\n        var img = dropdownEl.getElementsByClassName(\"need-share-wechat-code-image\")[0];\n        if (img) {\n          img.remove();\n        } else {\n          img = document.createElement(\"img\");\n          img.src = imgSrc;\n          img.alt = \"loading wechat image...\";\n          img.setAttribute(\"class\", \"need-share-wechat-code-image\");\n\n          if (root.options.position == 'middleRight') {\n            dropdownEl.insertBefore(img, dropdownEl.children[0]);\n          }\n          else {\n            dropdownEl.appendChild(img);\n          }\n        }\n      },\n      \"douban\": function (el) {\n        var myoptions = getOptions(el);\n        var url = \"https://www.douban.com/share/service?name=\" +\n          encodeURIComponent(myoptions.title) +\n          \"&href=\" + encodeURIComponent(myoptions.url) +\n          \"&image=\" + encodeURIComponent(myoptions.image);\n        root.popup(url);\n      },\n      \"qqzone\": function (el) {\n        var myoptions = getOptions(el);\n        var url = \"http://sns.qzone.qq.com/cgi-bin/qzshare/cgi_qzshare_onekey?title=\" +\n          encodeURIComponent(myoptions.title) +\n          \"&url=\" + encodeURIComponent(myoptions.url) +\n          \"&pics=\" + encodeURIComponent(myoptions.image) +\n          \"&desc=\" + encodeURIComponent(myoptions.description);\n        root.popup(url);\n      },\n      \"renren\": function (el) {\n        var myoptions = getOptions(el);\n        var url = \"http://widget.renren.com/dialog/share?title=\" +\n          encodeURIComponent(myoptions.title) +\n          \"&resourceUrl=\" + encodeURIComponent(myoptions.url) +\n          \"&pic=\" + encodeURIComponent(myoptions.image) +\n          \"&description=\" + encodeURIComponent(myoptions.description);\n        root.popup(url);\n      },\n      \"mailto\": function (el) {\n        var myoptions = getOptions(el);\n        var url = \"mailto:?subject=\" + encodeURIComponent(myoptions.title) +\n          \"&body=Thought you might enjoy reading this: \" + encodeURIComponent(myoptions.url) +\n          \" - \" + encodeURIComponent(myoptions.description);\n\n        window.location.href = url;\n      },\n      \"twitter\": function (el) {\n        var myoptions = getOptions(el);\n        var url = myoptions.protocol + \"twitter.com/intent/tweet?text=\";\n        url += encodeURIComponent(myoptions.title) + \"&url=\" + encodeURIComponent(myoptions.url);\n\n        root.popup(url);\n      },\n      \"pinterest\": function (el) {\n        var myoptions = getOptions(el);\n        var url = myoptions.protocol + \"pinterest.com/pin/create/bookmarklet/?is_video=false\";\n        url += \"&media=\" + encodeURIComponent(myoptions.image);\n        url += \"&url=\" + encodeURIComponent(myoptions.url);\n        url += \"&description=\" + encodeURIComponent(myoptions.title);\n\n        root.popup(url);\n      },\n      \"facebook\": function (el) {\n        var myoptions = getOptions(el);\n        var url = myoptions.protocol + \"www.facebook.com/share.php?\";\n        url += \"u=\" + encodeURIComponent(myoptions.url);\n        url += \"&title=\" + encodeURIComponent(myoptions.title);\n\n        root.popup(url);\n      },\n      \"googleplus\": function (el) {\n        var myoptions = getOptions(el);\n        var url = myoptions.protocol + \"plus.google.com/share?\";\n        url += \"url=\" + encodeURIComponent(myoptions.url);\n\n        root.popup(url);\n      },\n      \"reddit\": function (el) {\n        var myoptions = getOptions(el);\n        var url = myoptions.protocol + \"www.reddit.com/submit?\";\n        url += \"url=\" + encodeURIComponent(myoptions.url);\n        url += \"&title=\" + encodeURIComponent(myoptions.title);\n\n        root.popup(url);\n      },\n      \"delicious\": function (el) {\n        var myoptions = getOptions(el);\n        var url = myoptions.protocol + \"del.icio.us/post?\";\n        url += \"url=\" + encodeURIComponent(myoptions.url);\n        url += \"&title=\" + encodeURIComponent(myoptions.title);\n        url += \"&notes=\" + encodeURIComponent(myoptions.description);\n\n        root.popup(url);\n      },\n      \"stumbleupon\": function (el) {\n        var myoptions = getOptions(el);\n        var url = myoptions.protocol + \"www.stumbleupon.com/submit?\";\n        url += \"url=\" + encodeURIComponent(myoptions.url);\n        url += \"&title=\" + encodeURIComponent(myoptions.title);\n\n        root.popup(url);\n      },\n      \"linkedin\": function (el) {\n        var myoptions = getOptions(el);\n        var url = myoptions.protocol + \"www.linkedin.com/shareArticle?mini=true\";\n        url += \"&url=\" + encodeURIComponent(myoptions.url);\n        url += \"&title=\" + encodeURIComponent(myoptions.title);\n        url += \"&source=\" + encodeURIComponent(myoptions.source);\n\n        root.popup(url);\n      },\n      \"tumblr\": function (el) {\n        var myoptions = getOptions(el);\n        var url = myoptions.protocol + \"www.tumblr.com/share?v=3\";\n        url += \"&u=\" + encodeURIComponent(myoptions.url);\n        url += \"&t=\" + encodeURIComponent(myoptions.title);\n\n        root.popup(url);\n      },\n      \"googlebookmarks\": function (el) {\n        var myoptions = getOptions(el);\n        var url = myoptions.protocol + \"www.google.com/bookmarks/mark?op=edit\";\n        url += \"&bkmk=\" + encodeURIComponent(myoptions.url);\n        url += \"&title=\" + encodeURIComponent(myoptions.title);\n        url += \"&annotation=\" + encodeURIComponent(myoptions.description);\n\n        root.popup(url);\n      },\n      \"newsvine\": function (el) {\n        var myoptions = getOptions(el);\n        var url = myoptions.protocol + \"www.newsvine.com/_tools/seed&save?\";\n        url += \"u=\" + encodeURIComponent(myoptions.url);\n        url += \"&h=\" + encodeURIComponent(myoptions.title);\n\n        root.popup(url);\n      },\n      \"evernote\": function (el) {\n        var myoptions = getOptions(el);\n        var url = myoptions.protocol + \"www.evernote.com/clip.action?\";\n        url += \"url=\" + encodeURIComponent(myoptions.url);\n        url += \"&title=\" + encodeURIComponent(myoptions.title);\n\n        root.popup(url);\n      },\n      \"friendfeed\": function (el) {\n        var myoptions = getOptions(el);\n        var url = myoptions.protocol + \"www.friendfeed.com/share?\";\n        url += \"url=\" + encodeURIComponent(myoptions.url);\n        url += \"&title=\" + encodeURIComponent(myoptions.title);\n\n        root.popup(url);\n      },\n      \"vkontakte\": function (el) {\n        var myoptions = getOptions(el);\n        var url = myoptions.protocol + \"vkontakte.ru/share.php?\";\n        url += \"url=\" + encodeURIComponent(myoptions.url);\n        url += \"&title=\" + encodeURIComponent(myoptions.title);\n        url += \"&description=\" + encodeURIComponent(myoptions.description);\n        url += \"&image=\" + encodeURIComponent(myoptions.image);\n        url += \"&noparse=true\";\n\n        root.popup(url);\n      },\n      \"odnoklassniki\": function (el) {\n        var myoptions = getOptions(el);\n        var url = myoptions.protocol + \"www.odnoklassniki.ru/dk?st.cmd=addShare&st.s=1\";\n        url += \"&st.comments=\" + encodeURIComponent(myoptions.description);\n        url += \"&st._surl=\" + encodeURIComponent(myoptions.url);\n\n        root.popup(url);\n      },\n      \"mailru\": function (el) {\n        var myoptions = getOptions(el);\n        var url = myoptions.protocol + \"connect.mail.ru/share?\";\n        url += \"url=\" + encodeURIComponent(myoptions.url);\n        url += \"&title=\" + encodeURIComponent(myoptions.title);\n        url += \"&description=\" + encodeURIComponent(myoptions.description);\n        url += \"&imageurl=\" + encodeURIComponent(myoptions.image);\n\n        root.popup(url);\n      }\n\n    };\n\n    // open share link in a popup\n    root.popup = function (url) {\n      // set left and top position\n      var popupWidth = 600,\n        popupHeight = 500,\n        // fix dual screen mode\n        dualScreenLeft = window.screenLeft !== undefined ? window.screenLeft : screen.left,\n        dualScreenTop = window.screenTop !== undefined ? window.screenTop : screen.top,\n        width = window.innerWidth ?\n                window.innerWidth :\n                document.documentElement.clientWidth ?\n                document.documentElement.clientWidth :\n                screen.width,\n        height = window.innerHeight ?\n                 window.innerHeight :\n                 document.documentElement.clientHeight ?\n                 document.documentElement.clientHeight :\n                 screen.height,\n        // calculate top and left position\n        left = ((width / 2) - (popupWidth / 2)) + dualScreenLeft,\n        top = ((height / 2) - (popupHeight / 2)) + dualScreenTop,\n\n        // show popup\n        shareWindow = window.open(url, \"targetWindow\",\n          \"toolbar=no,location=no,status=no,menubar=no,scrollbars=yes,resizable=yes,width=\" + popupWidth +\n          \", height=\" + popupHeight + \", top=\" + top + \", left=\" + left);\n\n      // Puts focus on the newWindow\n      if (window.focus) {\n        shareWindow.focus();\n      }\n    };\n\n    /* Set options\n     ***********************************************/\n\n    // create default options\n    root.options = {\n      iconStyle: \"default\", // default or box\n      boxForm: \"horizontal\", // horizontal or vertical\n      position: \"bottomCenter\", // top / middle / bottom + Left / Center / Right\n      protocol: [\"http\", \"https\"].indexOf(window.location.href.split(\":\")[0]) === -1 ? \"https://\" : \"//\",\n      networks: \"Weibo,Wechat,Douban,QQZone,Twitter,Pinterest,Facebook,GooglePlus,Reddit,Linkedin,Tumblr,Evernote\"\n    };\n\n    // integrate custom options\n    for (var i in options) {\n      if (options.hasOwnProperty(i)) {\n        root.options[i] = options[i];\n      }\n    }\n    // convert networks string into array\n    //root.options.networks = root.options.networks.toLowerCase().split(\",\");\n    root.options.networks = root.options.networks.split(\",\");\n\n    function getOptions(el) {\n      // integrate data attribute options\n      var ret = {};\n      for (var i in root.options) {\n        if (root.options.hasOwnProperty(i)) {\n          ret[i] = root.options[i];\n        }\n      }\n\n      // these attrs must get dynamically.\n      ret.url = window.location.href;\n      ret.title = root.getTitle();\n      ret.image = root.getImage();\n      ret.description = root.getDescription();\n\n      for (var option in el.dataset) {\n        // replace only 'share-' prefixed data-attributes\n        if (option.match(/share/)) {\n          var newOption = option.replace(/share/, \"\");\n          if (!newOption.length) {\n            continue;\n          }\n          newOption = newOption.charAt(0).toLowerCase() + newOption.slice(1);\n          var val = el.dataset[option];\n          if (newOption === \"networks\") {\n            //val = val.toLowerCase().split(\",\");\n            val = val.split(\",\");\n          } else if (newOption === \"url\" && val && val[0] === \"/\") {\n            // fix relative url problem.\n            val = location.origin + val;\n          }\n          ret[newOption] = val;\n        }\n      }\n      return ret;\n    }\n\n    function createDropdown(el) {\n      // create dropdown\n      var dropdownEl = document.createElement(\"span\");\n      dropdownEl.className = \"need-share-button_dropdown\";\n      if (el.querySelector(\".need-share-button_dropdown\")) {\n        return;\n      }\n      var myoptions = getOptions(el);\n\n      // set dropdown row length\n      if (myoptions.iconStyle == \"default\" && myoptions.boxForm == \"vertical\") {\n        dropdownEl.className += \" need-share-button_dropdown-box-vertical\";\n      } else if (myoptions.iconStyle == \"box\" && myoptions.boxForm == \"horizontal\") {\n        dropdownEl.className += \" need-share-button_dropdown-box-horizontal\";\n      } else if (myoptions.iconStyle == \"box\" && myoptions.boxForm == \"vertical\") {\n        dropdownEl.className += \" need-share-button_dropdown-box-vertical\";\n      }\n\n      // set dropdown position\n      setTimeout(function () {\n        switch (myoptions.position) {\n          case \"topLeft\":\n            dropdownEl.className += \" need-share-button_dropdown-top-left\";\n            break;\n          case \"topRight\":\n            dropdownEl.className += \" need-share-button_dropdown-top-right\";\n            break;\n          case \"topCenter\":\n            dropdownEl.className += \" need-share-button_dropdown-top-center\";\n            dropdownEl.style.marginLeft = -dropdownEl.offsetWidth / 2 + \"px\";\n            break;\n          case \"middleLeft\":\n            dropdownEl.className += \" need-share-button_dropdown-middle-left\";\n            dropdownEl.style.marginTop = -dropdownEl.offsetHeight / 2 + \"px\";\n            break;\n          case \"middleRight\":\n            dropdownEl.className += \" need-share-button_dropdown-middle-right\";\n            dropdownEl.style.marginTop = -dropdownEl.offsetHeight / 2 + \"px\";\n            break;\n          case \"bottomLeft\":\n            dropdownEl.className += \" need-share-button_dropdown-bottom-left\";\n            break;\n          case \"bottomRight\":\n            dropdownEl.className += \" need-share-button_dropdown-bottom-right\";\n            break;\n          case \"bottomCenter\":\n            dropdownEl.className += \" need-share-button_dropdown-bottom-center\";\n            dropdownEl.style.marginLeft = -dropdownEl.offsetWidth / 2 + \"px\";\n            break;\n          default:\n            dropdownEl.className += \" need-share-button_dropdown-bottom-center\";\n            dropdownEl.style.marginLeft = -dropdownEl.offsetWidth / 2 + \"px\";\n            break;\n        }\n      }, 1);\n\n\n      // fill fropdown with buttons\n      var iconClass = myoptions.iconStyle == \"default\" ?\n                      \"need-share-button_link need-share-button_\" :\n                      \"need-share-button_link-\" + myoptions.iconStyle + \" need-share-button_link need-share-button_\";\n      for (var network in myoptions.networks) {\n        if (myoptions.networks.hasOwnProperty(network)) {\n          var link = document.createElement(\"span\");\n          network = myoptions.networks[network].trim();\n          var networkLC = network.toLowerCase();\n          link.className = iconClass + networkLC;\n          var fontello = [\"weibo\", \"wechat\", \"douban\", \"qqzone\", \"renren\"];\n          if (fontello.indexOf(networkLC) === -1) {\n            link.className += \" social-\" + networkLC;\n          } else {\n            link.className += \" icon-\" + networkLC;\n          }\n          link.dataset.network = networkLC;\n          link.title = network;\n          dropdownEl.appendChild(link);\n        }\n      }\n\n      dropdownEl.addEventListener(\"click\", function (event) {\n        if (closest(event.target, \".need-share-button_link\")) {\n          event.preventDefault();\n          event.stopPropagation();\n\n          root.share[event.target.dataset.network](el);\n          return false;\n        }\n      });\n\n      el.appendChild(dropdownEl);\n    }\n\n    // close on click outside\n    document.addEventListener(\"click\", function (event) {\n      var openedEl = document.querySelector(\".need-share-button-opened\");\n      if (!closest(event.target, \".need-share-button-opened\")) {\n        if (openedEl) {\n          openedEl.classList.remove(\"need-share-button-opened\");\n\n          // hide wechat code image when close the dropdown.\n          if (openedEl.querySelector(\".need-share-wechat-code-image\")) {\n            openedEl.querySelector(\".need-share-wechat-code-image\").remove();\n          }\n        } else {\n          var el = closest(event.target, root.elem);\n          if (el) {\n            if (!el.classList.contains(\"need-share-button-opened\")) {\n              createDropdown(el);\n              setTimeout(function () {\n                el.classList.add(\"need-share-button-opened\");\n              }, 1);\n            }\n          }\n        }\n      } else {\n        setTimeout(function () {\n          openedEl.classList.remove(\"need-share-button-opened\");\n\n          // hide wechat code image when close the dropdown.\n          if (openedEl.querySelector(\".need-share-wechat-code-image\")) {\n            openedEl.querySelector(\".need-share-wechat-code-image\").remove();\n          }\n        }, 1);\n      }\n    });\n\n  };\n})();\n"},{"_content":"/***********************************************\n  needShareButton\n  - Version 1.0.0\n  - Copyright 2015 Dzmitry Vasileuski\n  - Licensed under MIT (http://opensource.org/licenses/MIT)\n***********************************************/\n/* Social icons font\n***********************************************/\n/* SOCIAL ICON */\n\n@font-face {\n  font-family: 'social-icons';\n  font-weight: normal;\n  font-style: normal;\n  src: url('font/social.eot?44259375');\n  src: url('font/social.eot?44259375#iefix') format('embedded-opentype'), url('font/social.woff?44259375') format('woff'), url('font/social.ttf?44259375') format('truetype'), url('font/social.svg?44259375#social') format('svg');\n}\n@font-face {\n  font-family: 'social-icons';\n  src: url('data:application/font-woff;charset=utf-8;base64,') format('woff'), url('data:application/font-ttf;charset=utf-8;base64,') format('truetype');\n}\n\n.need-share-button_dropdown [class^=\"social-\"]:before, .need-share-button_dropdown [class*=\" social-\"]:before {\n  font-family: \"social-icons\";\n  font-style: normal;\n  font-weight: normal;\n  speak: none;\n\n  display: inline-block;\n  text-decoration: inherit;\n  width: 1em;\n  margin-right: .2em;\n  text-align: center;\n  /* opacity: .8; */\n\n  /* For safety - reset parent styles, that can break glyph codes*/\n  font-variant: normal;\n  text-transform: none;\n\n  /* fix buttons height, for twitter bootstrap */\n  line-height: 1em;\n\n  /* Animation center compensation - margins should be symmetric */\n  /* remove if not needed */\n  margin-left: .2em;\n\n  /* you can be more comfortable with increased icons size */\n  /* font-size: 120%; */\n\n  /* Uncomment for 3D effect */\n  /* text-shadow: 1px 1px 1px rgba(127, 127, 127, 0.3); */\n}\n\n.social-mailto:before { content: '\\e80a'; }\n.social-twitter:before { content: '\\e813'; }\n.social-pinterest:before { content: '\\e80f'; }\n.social-facebook:before { content: '\\e80e'; }\n.social-googleplus:before { content: '\\e80d'; }\n.social-reddit:before { content: '\\e810'; }\n.social-linkedin:before { content: '\\e80c'; }\n.social-tumblr:before { content: '\\e812'; }\n.social-evernote:before { content: '\\e801'; }\n.social-delicious:before { content: '\\e815'; }\n.social-stumbleupon:before { content: '\\e811'; }\n.social-googlebookmarks:before { content: '\\e80b'; }\n.social-newsvine:before { content: '\\e803'; }\n.social-friendfeed:before { content: '\\e802'; }\n.social-vkontakte:before { content: '\\e814'; }\n.social-odnoklassniki:before { content: '\\e804'; }\n.social-mailru:before { content: '\\e800'; }\n\n/* FONTELLO ICON */\n\n@font-face {\nfont-family: 'fontello';\nsrc: url('../font/fontello.eot?34242489');\nsrc: url('../font/fontello.eot?34242489#iefix') format('embedded-opentype'),\n     url('../font/fontello.svg?34242489#fontello') format('svg');\nfont-weight: normal;\nfont-style: normal;\n}\n@font-face {\nfont-family: 'fontello';\nsrc: url('data:application/octet-stream;base64,d09GRgABAAAAAA7IAA8AAAAAGBAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAABHU1VCAAABWAAAADsAAABUIIslek9TLzIAAAGUAAAAQwAAAFY+S1NOY21hcAAAAdgAAABqAAABqkbJ0JZjdnQgAAACRAAAABMAAAAgBtX/BGZwZ20AAAJYAAAFkAAAC3CKkZBZZ2FzcAAAB+gAAAAIAAAACAAAABBnbHlmAAAH8AAABBsAAAToO/jZ62hlYWQAAAwMAAAAMwAAADYPhh2FaGhlYQAADEAAAAAgAAAAJAfKA91obXR4AAAMYAAAABQAAAAUE4f//mxvY2EAAAx0AAAADAAAAAwChAN+bWF4cAAADIAAAAAgAAAAIAETDBZuYW1lAAAMoAAAAXcAAALNzJ0dH3Bvc3QAAA4YAAAAMwAAAEYXwzMzcHJlcAAADkwAAAB6AAAAhuVBK7x4nGNgZGBg4GIwYLBjYHJx8wlh4MtJLMljkGJgYYAAkDwymzEnMz2RgQPGA8qxgGkOIGaDiAIAJjsFSAB4nGNgZH7BOIGBlYGBqYppDwMDQw+EZnzAYMjIBBRlYGVmwAoC0lxTGBxeaH+8zhz0P4shijmIYRpQmBEkBwAenQ0gAHic7ZHLDYAgEERnZTXE2IkW4NFiPNkK/UELXrcC3A9lOOSR2QlwGADMAJJyKAzQA4Lp1pQ8T1g9Z5w6Z10T8O5SpPU+XDXnIj+R3U16195c8Gvz/RoTW2+BtSwlsGalBvYr0gLwBz3aG2gAAHicY2BAAxIQyBz0PwuEARJsA90AeJytVml300YUHXlJnIQsJQstamHExGmwRiZswYAJQbJjIF2crZWgixQ76b7xid/gX/Nk2nPoN35a7xsvJJC053Cak6N3583VzNtlElqS2AvrkZSbL8XU1iaN7DwJ6YZNy1F8KDt7IWWKyd8FURCtltq3HYdERCJQta6wRBD7HlmaZHzoUUbLtqRXTcotPekuW+NBvVXffho6yrE7oaRmM3RoPbIlVRhVokimPVLSpmWo+itJK7y/wsxXzVDCiE4iabwZxtBI3htntMpoNbbjKIpsstwoUiSa4UEUeZTVEufkigkMygfNkPLKpxHlw/yIrNijnFawS7bT/L4vead3OT+xX29RtuRAH8iO7ODsdCVfhFtbYdy0k+0oVBF213dCbNnsVP9mj/KaRgO3KzK90IxgqXyFECs/ocz+IVktnE/5kkejWrKRE0HrZU7sSz6B1uOIKXHNGFnQ3dEJEdT9kjMM9pg+Hvzx3imWCxMCeBzLekclnAgTKWFzNEnaMHJgJWWLKqn1rpg45XVaxFvCfu3a0ZfOaONQd2I8Ww8dWzlRyfFoUqeZTJ3aSc2jKQ2ilHQmeMyvAyg/oklebWM1iZVH0zhmxoREIgIt3EtTQSw7saQpBM2jGb25G6a5di1apMkD9dyj9/TmVri501PaDvSzRn9Wp2I62AvT6WnkL/Fp2uUiRen66Rl+TOJB1gIykS02w5SDB2/9DtLL15YchdcG2O7t8yuofdZE8KQB+xvQHk/VKQlMhZhViFZAYq1rWZbJ1awWqcjUd0OaVr6s0wSKchwXx76Mcf1fMzOWmBK+34nTsyMuPXPtSwjTHHybdT2a16nFcgFxZnlOp1mW7+s0x/IDneZZntfpCEtbp6MsP9RpgeVHOh1jeUELmnTfwZCLMOQCDpAwhKUDQ1hegiEsFQxhuQhDWBZhCMslGMLyYxjCchmGsLysZdXUU0nj2plYBmxCYGKOHrnMReVqKrlUQrtoVGpDnhJulVQUz6p/ZaBePPKGObAWSJfIml8xzpWPRuX41hUtbxo7V8Cx6m8fjvY58VLWi4U/Bf/V1lQlvWLNw5Or8BuGnmwnqjapeHRNl89VPbr+X1RUWAv0G0iFWCjKsmxwZyKEjzqdhmqglUPMbMw8tOt1y5qfw/03MUIWUP34NxQaC9yDTllJWe3grNXX27LcO4NyOBMsSTE38/pW+CIjs9J+kVnKno98HnAFjEpl2GoDrRW82ScxD5neJM8EcVtRNkja2M4EiQ0c84B5850EJmHqqg3kTuGGDfgFYW7BeSdconqjLIfuRezzKKT8W6fiRPaoaIzAs9kbYa/vQspvcQwkNPmlfgxUFaGpGDUV0DRSbqgGX8bZum1Cxg70Iyp2w7Ks4sPHFveVkm0ZhHykiNWjo5/WXqJOqtx+ZhSX752+BcEgNTF/e990cZDKu1rJMkdtA1O3GpVT15pD41WH6uZR9b3j7BM5a5puuiceel/TqtvBxVwssPZtDtJSJhfU9WGFDaLLxaVQ6mU0Se+4BxgWGNDvUIqN/6v62HyeK1WF0XEk307Ut9HnYAz8D9h/R/UD0Pdj6HINLs/3mhOfbvThbJmuohfrp+g3MGutuVm6BtzQdAPiIUetjrjKDXynBnF6pLkc6SHgY90V4gHAJoDF4BPdtYzmUwCj+Yw5PsDnzGHQZA6DLeYw2GbOGsAOcxjsMofBHnMYfMGcdYAvmcMgZA6DiDkMnjAnAHjKHAZfMYfB18xh8A1z7gN8yxwGMXMYJMxhsK/p1jDMLV7QXaC2QVWgA1NPWNzD4lBTZcj+jheG/b1BzP7BIKb+qOn2kPoTLwz1Z4OY+otBTP1V050h9TdeGOrvBjH1D4OY+ky/GMtlBr+MfJcKB5RdbD7n74n3D9vFQLkAAQAB//8AD3icZVPfT9tWFL7nXvvasR3HcYydBGNSxzihQQbSxNYYhRCFH6MhtIwhqBBFFTDUFtiqisLU7WXdVCGKpq7SpgmhCXV7nDRp2tOe9jDtf9jDXvswTer7Bruhe9os697j75x7zvH5vouE87PzX8gr/BeKoRTqQiU0i9bQPsrUzDoggEnE1h2E0MZ4ozyIeaPUEwZABepAGL22LDO0VAhgBCwHogALKjNwNAKRoZKARJWQ2ZbZPjIKYdlkfqcdQRxgZiGAKPQF6hd8ltCMLsA2xhLRoF3EhH1ZKvTJcckPajxVdRJLitp65qMP+ioP3hwJn/OLz64/eiHyN4/mPjz9pjh359nxlw+auDW58nPRy2CO8nJrr5wBTuKEXMUrWqrEp+OKyssDXjyNiaa49UeDtsnbjsppxsTqgJYVda3x5NOUn9SSKd/Q3xE0ngq6iGn1jYq/uVnRtLVL1bmiGH8893qb9VvNsEhzU6ujtWeTK9NF74ZIMZBL4zVBpBxIuWEY6mzkFIWw4vlQZGVVkwjGWHg0mtCUrBaszTgy0R0bJy4jgtD592SJECQiHdnIqCUzHfEYJRSNt9lIAt9R4qlbYGN2gCQNKvjVygiAIQRQSDoY7936bXVmW09t/3r0/vrKKV5av38Iay+Ws9XqwOHs9QP8x9mrw5fR3vHmj7tn9473opeHkEju/YAY4+j8DvmdzKENdLU2dGspK3KA3g7LhABuC4IgIFuIYPbeZc0oUwjj+BTiuDj31tR4fWx4qOD38azBFOspjBixbA2vlC2HdoPZYdAuMMoCY9qgeTfg8wIVHMw0JLQ/oZ/RzzTAzH+1w1RTLbRxl8FC3mVSqVa+4BURJHFjcubda9OdgZs1VZWHbomDUhlMg3lVTgI2/14lcHjAxPukqxbk46LHWauB4dcDH5QkzbEs0FkXCealogWY/Qh8JuuyKyqu0PrW7emWHfdyMQxyuL9HdCgLqL03nK6JiqZqGC8UZCObxioJJUXmMIaMiUU1l7IMHRRgD6abHlYsj3DQnfkKIcpm+5R7SAYYrwa7b71oAi2izdq6l8AEXy3jGGlODxM5RiavgdxAEpJ22PAB7fAAIruJoiLuCEBwDJPYForJOCbfRbK8jRSMlXmkKHiRAlZwc2F+dqZRr17Jd3gpw/NSepzvKkHFd1UwyyEzBJcKhmmVQ8JAavwHLPh5FmkZFuPEb1OSF6ILhVllh6mMClbhgi2GRG2kYfd74Ac2nNimloZswrQ/ZpDXb8NtpyPBENW0P9fNlZNliBt6IqtnhIB/Wjy999PW7e92YblZ796Z95l7+WTl5skqvmHZTsnOnv2dyLKzLGUa+v4H/UkWni/09WLM5itN7N//up1+6vHZw7HdwfVho/Xk5KAJrQP0D0Q/xGYAeJxjYGRgYADiZ4l/fOP5bb4ycDO/AIowXP3x5hOM/v/vfxZLOXMQkMvBwAQSBQDMRxC+AHicY2BkYGAO+p/FwMBS9v/f/+8s5QxAERTACgCiiQauA+gAAAPo//4DWQAAA+gAAAR2AAAAAAAAAMwBCgG4AnQAAQAAAAUAegAHAAAAAAACABoAKgBzAAAAeQtwAAAAAHicdZDdasIwGIbfzJ9tCtvYYKfL0VDG6g8MQRAEh55sJzI8HbXWtlIbSaPgbewedjG7iV3LXts4hrKWNM/35MuXrwFwjW8I5M8TR84CZ4xyPsEpepYL9M+Wi+QXyyVU8Wa5TP9uuYIHBJaruMEHK4jiOaMFPi0LXIlLyye4EHeWC/SPlovknuUSbsWr5TK9Z7mCiUgtV3EvvgZqtdVREBpZG9Rlu9nqyOlWKqoocWPprk2odCr7cq4S48excjy13PPYD9axq/fhfp74Oo1UIltOc69GfuJr1/izXfV0E7SNmcu5Vks5tBlypdXC94wTGrPqNhp/z8MACitsoRHxqkIYSNRo65zbaKKFDmnKDMnMPCtCAhcxjYs1d4TZSsq4zzFnlND6zIjJDjx+l0d+TAq4P2YVfbR6GE9IuzOizEv25bC7w6wRKcky3czOfntPseFpbVrDXbsuddaVxPCghuR97NYWNB69k92Koe2iwfef//sB5m6EUQB4nGNgYoAALgbsgJWRiZGZkYWRlZGNgbU8NTMpn60oNQ+ImAoL2cpTkzMSSxgYAHR0CDwAeJxj8N7BcCIoYiMjY1/kBsadHAwcDMkFGxlYnTYxMDJogRibuZgYOSAsPgYwi81pF9MBoDQnkM3utIvBAcJmZnDZqMLYERixwaEjYiNzistGNRBvF0cDAyOLQ0dySARISSQQbOZhYuTR2sH4v3UDS+9GJgYXAAx2I/QAAA==') format('woff'),\n     url('data:application/octet-stream;base64,') format('truetype');\n}\n/* Chrome hack: SVG is rendered more smooth in Windozze. 100% magic, uncomment if you need it. */\n/* Note, that will break hinting! In other OS-es font will be not as sharp as it could be */\n/*\n@media screen and (-webkit-min-device-pixel-ratio:0) {\n  @font-face {\n    font-family: 'fontello';\n    src: url('../font/fontello.svg?13586373#fontello') format('svg');\n  }\n}\n*/\n\n .need-share-button_dropdown [class^=\"icon-\"]:before, .need-share-button_dropdown [class*=\" icon-\"]:before {\n  font-family: \"fontello\";\n  font-style: normal;\n  font-weight: normal;\n  speak: none;\n\n  display: inline-block;\n  text-decoration: inherit;\n  width: 1em;\n  margin-right: .2em;\n  text-align: center;\n  /* opacity: .8; */\n\n  /* For safety - reset parent styles, that can break glyph codes*/\n  font-variant: normal;\n  text-transform: none;\n\n  /* fix buttons height, for twitter bootstrap */\n  line-height: 1em;\n\n  /* Animation center compensation - margins should be symmetric */\n  /* remove if not needed */\n  margin-left: .2em;\n\n  /* you can be more comfortable with increased icons size */\n  /* font-size: 120%; */\n\n  /* Uncomment for 3D effect */\n  /* text-shadow: 1px 1px 1px rgba(127, 127, 127, 0.3); */\n}\n\n.icon-weibo:before { content: '\\e82b'; } /* '' */\n.icon-renren:before { content: '\\f18b'; } /* '' */\n.icon-qqzone:before { content: '\\f1d6'; } /* '' */\n.icon-wechat:before { content: '\\f1d7'; } /* '' */\n\n/* Need Share Button\n***********************************************/\n.need-share-button {\n  position: relative;\n}\n.need-share-button-opened {\n  position: relative;\n}\n.need-share-button-opened img.need-share-wechat-code-image {\n  display: block;\n\n  width: 100%;\n  max-width: 200px;\n  margin: 10px auto;\n}\n.need-share-button_dropdown {\n  position: absolute;\n  z-index: 10;\n\n  visibility: hidden;\n  overflow: hidden;\n\n  width: 300px;\n\n  font-size: 16px;\n\n  -webkit-transition: .3s;\n          transition: .3s;\n  -webkit-transform: scale(.1);\n      -ms-transform: scale(.1);\n          transform: scale(.1);\n  text-align: center;\n  white-space: normal;\n\n  opacity: 0;\n  -webkit-border-radius: 4px;\n          border-radius: 4px;\n  background-color: #fff;\n  -webkit-box-shadow: 0 0 2px rgba(0, 0, 0, .5);\n          box-shadow: 0 0 2px rgba(0, 0, 0, .5);\n}\n.need-share-button-opened .need-share-button_dropdown {\n  visibility: visible;\n\n  -webkit-transform: scale(1);\n      -ms-transform: scale(1);\n          transform: scale(1);\n\n  opacity: 1;\n}\n.need-share-button_dropdown-box-vertical,\n.need-share-button_dropdown-box-horizontal {\n  -webkit-border-radius: 0;\n          border-radius: 0;\n}\n.need-share-button_dropdown-box-vertical {\n  width: 50px;\n}\n.need-share-button_dropdown-box-horizontal {\n  width: auto;\n\n  white-space: nowrap;\n}\n.need-share-button_link {\n  display: inline-block;\n\n  width: 50px;\n  height: 50px;\n\n  line-height: 50px;\n\n  cursor: pointer;\n  text-align: center;\n}\n.need-share-button_link:hover {\n  -webkit-transition: .3s;\n          transition: .3s;\n\n  opacity: .7;\n}\n/* Dropdown position\n***********************************************/\n.need-share-button_dropdown-top-left {\n  right: 100%;\n  bottom: 100%;\n\n  margin-right: 10px;\n  margin-bottom: 10px;\n}\n.need-share-button_dropdown-top-right {\n  bottom: 100%;\n  left: 100%;\n\n  margin-bottom: 10px;\n  margin-left: 10px;\n}\n.need-share-button_dropdown-top-center {\n  bottom: 100%;\n  left: 50%;\n\n  margin-bottom: 10px;\n}\n.need-share-button_dropdown-middle-left {\n  top: 50%;\n  right: 100%;\n\n  margin-right: 10px;\n}\n.need-share-button_dropdown-middle-right {\n  bottom: 0;\n  left: 100%;\n\n  margin-left: 10px;\n}\n.need-share-button_dropdown-bottom-left {\n  top: 100%;\n  right: 100%;\n\n  margin-top: 10px;\n  margin-right: 10px;\n}\n.need-share-button_dropdown-bottom-right {\n  top: 100%;\n  left: 100%;\n\n  margin-top: 10px;\n  margin-left: 10px;\n}\n.need-share-button_dropdown-bottom-center {\n  top: 100%;\n  left: 50%;\n\n  margin-top: 10px;\n}\n/* Default theme\n***********************************************/\n.need-share-button-default {\n  display: inline-block;\n\n  margin-bottom: 0;\n  padding: 6px 12px;\n\n  font-size: 14px;\n  line-height: 1.42857143;\n  font-weight: 400;\n  color: #333;\n\n  cursor: pointer;\n  -webkit-user-select: none;\n     -moz-user-select: none;\n      -ms-user-select: none;\n          user-select: none;\n  text-align: center;\n  vertical-align: middle;\n\n  border: 1px solid #ccc;\n  -webkit-border-radius: 4px;\n          border-radius: 4px;\n  background-color: #fff;\n}\n/* Network buttons\n***********************************************/\n.need-share-button_wechat {\n  color: #a2dc30;\n}\n.need-share-button_wechat.need-share-button_link-box {\n  color: #fff;\n\n  background: #a2dc30;\n}\n.need-share-button_weibo {\n  color: #d52b2b;\n}\n.need-share-button_weibo.need-share-button_link-box {\n  color: #fff;\n\n  background: #d52b2b;\n}\n.need-share-button_douban {\n  color: #072;\n}\n.need-share-button_douban:before {\n  content: '豆';\n}\n.need-share-button_douban.need-share-button_link-box {\n  color: #fff;\n\n  background: #072;\n}\n.need-share-button_qqzone {\n  color: #ffce00;\n}\n.need-share-button_qqzone.need-share-button_link-box {\n  color: #fff;\n\n  background: #ffce00;\n}\n.need-share-button_renren {\n  color: #207cc5;\n}\n.need-share-button_renren.need-share-button_link-box {\n  color: #fff;\n\n  background: #207cc5;\n}\n.need-share-button_mailto {\n  color: #efbe00;\n}\n.need-share-button_mailto.need-share-button_link-box {\n  color: #fff;\n\n  background: #efbe00;\n}\n.need-share-button_twitter {\n  color: #00acec;\n}\n.need-share-button_twitter.need-share-button_link-box {\n  color: #fff;\n\n  background: #00acec;\n}\n.need-share-button_pinterest {\n  color: #cd2027;\n}\n.need-share-button_pinterest.need-share-button_link-box {\n  color: #fff;\n\n  background: #cd2027;\n}\n.need-share-button_facebook {\n  color: #3b5998;\n}\n.need-share-button_facebook.need-share-button_link-box {\n  color: #fff;\n\n  background: #3b5998;\n}\n.need-share-button_googleplus {\n  color: #d44132;\n}\n.need-share-button_googleplus.need-share-button_link-box {\n  color: #fff;\n\n  background: #d44132;\n}\n.need-share-button_reddit {\n  color: #000;\n}\n.need-share-button_reddit.need-share-button_link-box {\n  color: #fff;\n\n  background: #000;\n}\n.need-share-button_delicious {\n  color: #000;\n}\n.need-share-button_delicious.need-share-button_link-box {\n  color: #fff;\n\n  background: #000;\n}\n.need-share-button_stumbleupon {\n  color: #f04e23;\n}\n.need-share-button_stumbleupon.need-share-button_link-box {\n  color: #fff;\n\n  background: #f04e23;\n}\n.need-share-button_linkedin {\n  color: #0085af;\n}\n.need-share-button_linkedin.need-share-button_link-box {\n  color: #fff;\n\n  background: #0085af;\n}\n.need-share-button_tumblr {\n  color: #34465d;\n}\n.need-share-button_tumblr.need-share-button_link-box {\n  color: #fff;\n\n  background: #34465d;\n}\n.need-share-button_googlebookmarks {\n  color: #fde331;\n}\n.need-share-button_googlebookmarks.need-share-button_link-box {\n  color: #fff;\n\n  background: #fde331;\n}\n.need-share-button_newsvine {\n  color: #03652c;\n}\n.need-share-button_newsvine.need-share-button_link-box {\n  color: #fff;\n\n  background: #03652c;\n}\n.need-share-button_evernote {\n  color: #79d626;\n}\n.need-share-button_evernote.need-share-button_link-box {\n  color: #fff;\n\n  background: #79d626;\n}\n.need-share-button_friendfeed {\n  color: #b0cbe9;\n}\n.need-share-button_friendfeed.need-share-button_link-box {\n  color: #fff;\n\n  background: #b0cbe9;\n}\n.need-share-button_vkontakte {\n  color: #4c75a3;\n}\n.need-share-button_vkontakte.need-share-button_link-box {\n  color: #fff;\n\n  background: #4c75a3;\n}\n.need-share-button_odnoklassniki {\n  color: #ed812b;\n}\n.need-share-button_odnoklassniki.need-share-button_link-box {\n  color: #fff;\n\n  background: #ed812b;\n}\n.need-share-button_mailru {\n  color: #f89c0e;\n}\n.need-share-button_mailru.need-share-button_link-box {\n  color: #fff;\n\n  background: #f89c0e;\n}\n","source":"lib/needsharebutton/needsharebutton.css","raw":"/***********************************************\n  needShareButton\n  - Version 1.0.0\n  - Copyright 2015 Dzmitry Vasileuski\n  - Licensed under MIT (http://opensource.org/licenses/MIT)\n***********************************************/\n/* Social icons font\n***********************************************/\n/* SOCIAL ICON */\n\n@font-face {\n  font-family: 'social-icons';\n  font-weight: normal;\n  font-style: normal;\n  src: url('font/social.eot?44259375');\n  src: url('font/social.eot?44259375#iefix') format('embedded-opentype'), url('font/social.woff?44259375') format('woff'), url('font/social.ttf?44259375') format('truetype'), url('font/social.svg?44259375#social') format('svg');\n}\n@font-face {\n  font-family: 'social-icons';\n  src: url('data:application/font-woff;charset=utf-8;base64,') format('woff'), url('data:application/font-ttf;charset=utf-8;base64,') format('truetype');\n}\n\n.need-share-button_dropdown [class^=\"social-\"]:before, .need-share-button_dropdown [class*=\" social-\"]:before {\n  font-family: \"social-icons\";\n  font-style: normal;\n  font-weight: normal;\n  speak: none;\n\n  display: inline-block;\n  text-decoration: inherit;\n  width: 1em;\n  margin-right: .2em;\n  text-align: center;\n  /* opacity: .8; */\n\n  /* For safety - reset parent styles, that can break glyph codes*/\n  font-variant: normal;\n  text-transform: none;\n\n  /* fix buttons height, for twitter bootstrap */\n  line-height: 1em;\n\n  /* Animation center compensation - margins should be symmetric */\n  /* remove if not needed */\n  margin-left: .2em;\n\n  /* you can be more comfortable with increased icons size */\n  /* font-size: 120%; */\n\n  /* Uncomment for 3D effect */\n  /* text-shadow: 1px 1px 1px rgba(127, 127, 127, 0.3); */\n}\n\n.social-mailto:before { content: '\\e80a'; }\n.social-twitter:before { content: '\\e813'; }\n.social-pinterest:before { content: '\\e80f'; }\n.social-facebook:before { content: '\\e80e'; }\n.social-googleplus:before { content: '\\e80d'; }\n.social-reddit:before { content: '\\e810'; }\n.social-linkedin:before { content: '\\e80c'; }\n.social-tumblr:before { content: '\\e812'; }\n.social-evernote:before { content: '\\e801'; }\n.social-delicious:before { content: '\\e815'; }\n.social-stumbleupon:before { content: '\\e811'; }\n.social-googlebookmarks:before { content: '\\e80b'; }\n.social-newsvine:before { content: '\\e803'; }\n.social-friendfeed:before { content: '\\e802'; }\n.social-vkontakte:before { content: '\\e814'; }\n.social-odnoklassniki:before { content: '\\e804'; }\n.social-mailru:before { content: '\\e800'; }\n\n/* FONTELLO ICON */\n\n@font-face {\nfont-family: 'fontello';\nsrc: url('../font/fontello.eot?34242489');\nsrc: url('../font/fontello.eot?34242489#iefix') format('embedded-opentype'),\n     url('../font/fontello.svg?34242489#fontello') format('svg');\nfont-weight: normal;\nfont-style: normal;\n}\n@font-face {\nfont-family: 'fontello';\nsrc: url('data:application/octet-stream;base64,d09GRgABAAAAAA7IAA8AAAAAGBAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAABHU1VCAAABWAAAADsAAABUIIslek9TLzIAAAGUAAAAQwAAAFY+S1NOY21hcAAAAdgAAABqAAABqkbJ0JZjdnQgAAACRAAAABMAAAAgBtX/BGZwZ20AAAJYAAAFkAAAC3CKkZBZZ2FzcAAAB+gAAAAIAAAACAAAABBnbHlmAAAH8AAABBsAAAToO/jZ62hlYWQAAAwMAAAAMwAAADYPhh2FaGhlYQAADEAAAAAgAAAAJAfKA91obXR4AAAMYAAAABQAAAAUE4f//mxvY2EAAAx0AAAADAAAAAwChAN+bWF4cAAADIAAAAAgAAAAIAETDBZuYW1lAAAMoAAAAXcAAALNzJ0dH3Bvc3QAAA4YAAAAMwAAAEYXwzMzcHJlcAAADkwAAAB6AAAAhuVBK7x4nGNgZGBg4GIwYLBjYHJx8wlh4MtJLMljkGJgYYAAkDwymzEnMz2RgQPGA8qxgGkOIGaDiAIAJjsFSAB4nGNgZH7BOIGBlYGBqYppDwMDQw+EZnzAYMjIBBRlYGVmwAoC0lxTGBxeaH+8zhz0P4shijmIYRpQmBEkBwAenQ0gAHic7ZHLDYAgEERnZTXE2IkW4NFiPNkK/UELXrcC3A9lOOSR2QlwGADMAJJyKAzQA4Lp1pQ8T1g9Z5w6Z10T8O5SpPU+XDXnIj+R3U16195c8Gvz/RoTW2+BtSwlsGalBvYr0gLwBz3aG2gAAHicY2BAAxIQyBz0PwuEARJsA90AeJytVml300YUHXlJnIQsJQstamHExGmwRiZswYAJQbJjIF2crZWgixQ76b7xid/gX/Nk2nPoN35a7xsvJJC053Cak6N3583VzNtlElqS2AvrkZSbL8XU1iaN7DwJ6YZNy1F8KDt7IWWKyd8FURCtltq3HYdERCJQta6wRBD7HlmaZHzoUUbLtqRXTcotPekuW+NBvVXffho6yrE7oaRmM3RoPbIlVRhVokimPVLSpmWo+itJK7y/wsxXzVDCiE4iabwZxtBI3htntMpoNbbjKIpsstwoUiSa4UEUeZTVEufkigkMygfNkPLKpxHlw/yIrNijnFawS7bT/L4vead3OT+xX29RtuRAH8iO7ODsdCVfhFtbYdy0k+0oVBF213dCbNnsVP9mj/KaRgO3KzK90IxgqXyFECs/ocz+IVktnE/5kkejWrKRE0HrZU7sSz6B1uOIKXHNGFnQ3dEJEdT9kjMM9pg+Hvzx3imWCxMCeBzLekclnAgTKWFzNEnaMHJgJWWLKqn1rpg45XVaxFvCfu3a0ZfOaONQd2I8Ww8dWzlRyfFoUqeZTJ3aSc2jKQ2ilHQmeMyvAyg/oklebWM1iZVH0zhmxoREIgIt3EtTQSw7saQpBM2jGb25G6a5di1apMkD9dyj9/TmVri501PaDvSzRn9Wp2I62AvT6WnkL/Fp2uUiRen66Rl+TOJB1gIykS02w5SDB2/9DtLL15YchdcG2O7t8yuofdZE8KQB+xvQHk/VKQlMhZhViFZAYq1rWZbJ1awWqcjUd0OaVr6s0wSKchwXx76Mcf1fMzOWmBK+34nTsyMuPXPtSwjTHHybdT2a16nFcgFxZnlOp1mW7+s0x/IDneZZntfpCEtbp6MsP9RpgeVHOh1jeUELmnTfwZCLMOQCDpAwhKUDQ1hegiEsFQxhuQhDWBZhCMslGMLyYxjCchmGsLysZdXUU0nj2plYBmxCYGKOHrnMReVqKrlUQrtoVGpDnhJulVQUz6p/ZaBePPKGObAWSJfIml8xzpWPRuX41hUtbxo7V8Cx6m8fjvY58VLWi4U/Bf/V1lQlvWLNw5Or8BuGnmwnqjapeHRNl89VPbr+X1RUWAv0G0iFWCjKsmxwZyKEjzqdhmqglUPMbMw8tOt1y5qfw/03MUIWUP34NxQaC9yDTllJWe3grNXX27LcO4NyOBMsSTE38/pW+CIjs9J+kVnKno98HnAFjEpl2GoDrRW82ScxD5neJM8EcVtRNkja2M4EiQ0c84B5850EJmHqqg3kTuGGDfgFYW7BeSdconqjLIfuRezzKKT8W6fiRPaoaIzAs9kbYa/vQspvcQwkNPmlfgxUFaGpGDUV0DRSbqgGX8bZum1Cxg70Iyp2w7Ks4sPHFveVkm0ZhHykiNWjo5/WXqJOqtx+ZhSX752+BcEgNTF/e990cZDKu1rJMkdtA1O3GpVT15pD41WH6uZR9b3j7BM5a5puuiceel/TqtvBxVwssPZtDtJSJhfU9WGFDaLLxaVQ6mU0Se+4BxgWGNDvUIqN/6v62HyeK1WF0XEk307Ut9HnYAz8D9h/R/UD0Pdj6HINLs/3mhOfbvThbJmuohfrp+g3MGutuVm6BtzQdAPiIUetjrjKDXynBnF6pLkc6SHgY90V4gHAJoDF4BPdtYzmUwCj+Yw5PsDnzGHQZA6DLeYw2GbOGsAOcxjsMofBHnMYfMGcdYAvmcMgZA6DiDkMnjAnAHjKHAZfMYfB18xh8A1z7gN8yxwGMXMYJMxhsK/p1jDMLV7QXaC2QVWgA1NPWNzD4lBTZcj+jheG/b1BzP7BIKb+qOn2kPoTLwz1Z4OY+otBTP1V050h9TdeGOrvBjH1D4OY+ky/GMtlBr+MfJcKB5RdbD7n74n3D9vFQLkAAQAB//8AD3icZVPfT9tWFL7nXvvasR3HcYydBGNSxzihQQbSxNYYhRCFH6MhtIwhqBBFFTDUFtiqisLU7WXdVCGKpq7SpgmhCXV7nDRp2tOe9jDtf9jDXvswTer7Bruhe9os697j75x7zvH5vouE87PzX8gr/BeKoRTqQiU0i9bQPsrUzDoggEnE1h2E0MZ4ozyIeaPUEwZABepAGL22LDO0VAhgBCwHogALKjNwNAKRoZKARJWQ2ZbZPjIKYdlkfqcdQRxgZiGAKPQF6hd8ltCMLsA2xhLRoF3EhH1ZKvTJcckPajxVdRJLitp65qMP+ioP3hwJn/OLz64/eiHyN4/mPjz9pjh359nxlw+auDW58nPRy2CO8nJrr5wBTuKEXMUrWqrEp+OKyssDXjyNiaa49UeDtsnbjsppxsTqgJYVda3x5NOUn9SSKd/Q3xE0ngq6iGn1jYq/uVnRtLVL1bmiGH8893qb9VvNsEhzU6ujtWeTK9NF74ZIMZBL4zVBpBxIuWEY6mzkFIWw4vlQZGVVkwjGWHg0mtCUrBaszTgy0R0bJy4jgtD592SJECQiHdnIqCUzHfEYJRSNt9lIAt9R4qlbYGN2gCQNKvjVygiAIQRQSDoY7936bXVmW09t/3r0/vrKKV5av38Iay+Ws9XqwOHs9QP8x9mrw5fR3vHmj7tn9473opeHkEju/YAY4+j8DvmdzKENdLU2dGspK3KA3g7LhABuC4IgIFuIYPbeZc0oUwjj+BTiuDj31tR4fWx4qOD38azBFOspjBixbA2vlC2HdoPZYdAuMMoCY9qgeTfg8wIVHMw0JLQ/oZ/RzzTAzH+1w1RTLbRxl8FC3mVSqVa+4BURJHFjcubda9OdgZs1VZWHbomDUhlMg3lVTgI2/14lcHjAxPukqxbk46LHWauB4dcDH5QkzbEs0FkXCealogWY/Qh8JuuyKyqu0PrW7emWHfdyMQxyuL9HdCgLqL03nK6JiqZqGC8UZCObxioJJUXmMIaMiUU1l7IMHRRgD6abHlYsj3DQnfkKIcpm+5R7SAYYrwa7b71oAi2izdq6l8AEXy3jGGlODxM5RiavgdxAEpJ22PAB7fAAIruJoiLuCEBwDJPYForJOCbfRbK8jRSMlXmkKHiRAlZwc2F+dqZRr17Jd3gpw/NSepzvKkHFd1UwyyEzBJcKhmmVQ8JAavwHLPh5FmkZFuPEb1OSF6ILhVllh6mMClbhgi2GRG2kYfd74Ac2nNimloZswrQ/ZpDXb8NtpyPBENW0P9fNlZNliBt6IqtnhIB/Wjy999PW7e92YblZ796Z95l7+WTl5skqvmHZTsnOnv2dyLKzLGUa+v4H/UkWni/09WLM5itN7N//up1+6vHZw7HdwfVho/Xk5KAJrQP0D0Q/xGYAeJxjYGRgYADiZ4l/fOP5bb4ycDO/AIowXP3x5hOM/v/vfxZLOXMQkMvBwAQSBQDMRxC+AHicY2BkYGAO+p/FwMBS9v/f/+8s5QxAERTACgCiiQauA+gAAAPo//4DWQAAA+gAAAR2AAAAAAAAAMwBCgG4AnQAAQAAAAUAegAHAAAAAAACABoAKgBzAAAAeQtwAAAAAHicdZDdasIwGIbfzJ9tCtvYYKfL0VDG6g8MQRAEh55sJzI8HbXWtlIbSaPgbewedjG7iV3LXts4hrKWNM/35MuXrwFwjW8I5M8TR84CZ4xyPsEpepYL9M+Wi+QXyyVU8Wa5TP9uuYIHBJaruMEHK4jiOaMFPi0LXIlLyye4EHeWC/SPlovknuUSbsWr5TK9Z7mCiUgtV3EvvgZqtdVREBpZG9Rlu9nqyOlWKqoocWPprk2odCr7cq4S48excjy13PPYD9axq/fhfp74Oo1UIltOc69GfuJr1/izXfV0E7SNmcu5Vks5tBlypdXC94wTGrPqNhp/z8MACitsoRHxqkIYSNRo65zbaKKFDmnKDMnMPCtCAhcxjYs1d4TZSsq4zzFnlND6zIjJDjx+l0d+TAq4P2YVfbR6GE9IuzOizEv25bC7w6wRKcky3czOfntPseFpbVrDXbsuddaVxPCghuR97NYWNB69k92Koe2iwfef//sB5m6EUQB4nGNgYoAALgbsgJWRiZGZkYWRlZGNgbU8NTMpn60oNQ+ImAoL2cpTkzMSSxgYAHR0CDwAeJxj8N7BcCIoYiMjY1/kBsadHAwcDMkFGxlYnTYxMDJogRibuZgYOSAsPgYwi81pF9MBoDQnkM3utIvBAcJmZnDZqMLYERixwaEjYiNzistGNRBvF0cDAyOLQ0dySARISSQQbOZhYuTR2sH4v3UDS+9GJgYXAAx2I/QAAA==') format('woff'),\n     url('data:application/octet-stream;base64,') format('truetype');\n}\n/* Chrome hack: SVG is rendered more smooth in Windozze. 100% magic, uncomment if you need it. */\n/* Note, that will break hinting! In other OS-es font will be not as sharp as it could be */\n/*\n@media screen and (-webkit-min-device-pixel-ratio:0) {\n  @font-face {\n    font-family: 'fontello';\n    src: url('../font/fontello.svg?13586373#fontello') format('svg');\n  }\n}\n*/\n\n .need-share-button_dropdown [class^=\"icon-\"]:before, .need-share-button_dropdown [class*=\" icon-\"]:before {\n  font-family: \"fontello\";\n  font-style: normal;\n  font-weight: normal;\n  speak: none;\n\n  display: inline-block;\n  text-decoration: inherit;\n  width: 1em;\n  margin-right: .2em;\n  text-align: center;\n  /* opacity: .8; */\n\n  /* For safety - reset parent styles, that can break glyph codes*/\n  font-variant: normal;\n  text-transform: none;\n\n  /* fix buttons height, for twitter bootstrap */\n  line-height: 1em;\n\n  /* Animation center compensation - margins should be symmetric */\n  /* remove if not needed */\n  margin-left: .2em;\n\n  /* you can be more comfortable with increased icons size */\n  /* font-size: 120%; */\n\n  /* Uncomment for 3D effect */\n  /* text-shadow: 1px 1px 1px rgba(127, 127, 127, 0.3); */\n}\n\n.icon-weibo:before { content: '\\e82b'; } /* '' */\n.icon-renren:before { content: '\\f18b'; } /* '' */\n.icon-qqzone:before { content: '\\f1d6'; } /* '' */\n.icon-wechat:before { content: '\\f1d7'; } /* '' */\n\n/* Need Share Button\n***********************************************/\n.need-share-button {\n  position: relative;\n}\n.need-share-button-opened {\n  position: relative;\n}\n.need-share-button-opened img.need-share-wechat-code-image {\n  display: block;\n\n  width: 100%;\n  max-width: 200px;\n  margin: 10px auto;\n}\n.need-share-button_dropdown {\n  position: absolute;\n  z-index: 10;\n\n  visibility: hidden;\n  overflow: hidden;\n\n  width: 300px;\n\n  font-size: 16px;\n\n  -webkit-transition: .3s;\n          transition: .3s;\n  -webkit-transform: scale(.1);\n      -ms-transform: scale(.1);\n          transform: scale(.1);\n  text-align: center;\n  white-space: normal;\n\n  opacity: 0;\n  -webkit-border-radius: 4px;\n          border-radius: 4px;\n  background-color: #fff;\n  -webkit-box-shadow: 0 0 2px rgba(0, 0, 0, .5);\n          box-shadow: 0 0 2px rgba(0, 0, 0, .5);\n}\n.need-share-button-opened .need-share-button_dropdown {\n  visibility: visible;\n\n  -webkit-transform: scale(1);\n      -ms-transform: scale(1);\n          transform: scale(1);\n\n  opacity: 1;\n}\n.need-share-button_dropdown-box-vertical,\n.need-share-button_dropdown-box-horizontal {\n  -webkit-border-radius: 0;\n          border-radius: 0;\n}\n.need-share-button_dropdown-box-vertical {\n  width: 50px;\n}\n.need-share-button_dropdown-box-horizontal {\n  width: auto;\n\n  white-space: nowrap;\n}\n.need-share-button_link {\n  display: inline-block;\n\n  width: 50px;\n  height: 50px;\n\n  line-height: 50px;\n\n  cursor: pointer;\n  text-align: center;\n}\n.need-share-button_link:hover {\n  -webkit-transition: .3s;\n          transition: .3s;\n\n  opacity: .7;\n}\n/* Dropdown position\n***********************************************/\n.need-share-button_dropdown-top-left {\n  right: 100%;\n  bottom: 100%;\n\n  margin-right: 10px;\n  margin-bottom: 10px;\n}\n.need-share-button_dropdown-top-right {\n  bottom: 100%;\n  left: 100%;\n\n  margin-bottom: 10px;\n  margin-left: 10px;\n}\n.need-share-button_dropdown-top-center {\n  bottom: 100%;\n  left: 50%;\n\n  margin-bottom: 10px;\n}\n.need-share-button_dropdown-middle-left {\n  top: 50%;\n  right: 100%;\n\n  margin-right: 10px;\n}\n.need-share-button_dropdown-middle-right {\n  bottom: 0;\n  left: 100%;\n\n  margin-left: 10px;\n}\n.need-share-button_dropdown-bottom-left {\n  top: 100%;\n  right: 100%;\n\n  margin-top: 10px;\n  margin-right: 10px;\n}\n.need-share-button_dropdown-bottom-right {\n  top: 100%;\n  left: 100%;\n\n  margin-top: 10px;\n  margin-left: 10px;\n}\n.need-share-button_dropdown-bottom-center {\n  top: 100%;\n  left: 50%;\n\n  margin-top: 10px;\n}\n/* Default theme\n***********************************************/\n.need-share-button-default {\n  display: inline-block;\n\n  margin-bottom: 0;\n  padding: 6px 12px;\n\n  font-size: 14px;\n  line-height: 1.42857143;\n  font-weight: 400;\n  color: #333;\n\n  cursor: pointer;\n  -webkit-user-select: none;\n     -moz-user-select: none;\n      -ms-user-select: none;\n          user-select: none;\n  text-align: center;\n  vertical-align: middle;\n\n  border: 1px solid #ccc;\n  -webkit-border-radius: 4px;\n          border-radius: 4px;\n  background-color: #fff;\n}\n/* Network buttons\n***********************************************/\n.need-share-button_wechat {\n  color: #a2dc30;\n}\n.need-share-button_wechat.need-share-button_link-box {\n  color: #fff;\n\n  background: #a2dc30;\n}\n.need-share-button_weibo {\n  color: #d52b2b;\n}\n.need-share-button_weibo.need-share-button_link-box {\n  color: #fff;\n\n  background: #d52b2b;\n}\n.need-share-button_douban {\n  color: #072;\n}\n.need-share-button_douban:before {\n  content: '豆';\n}\n.need-share-button_douban.need-share-button_link-box {\n  color: #fff;\n\n  background: #072;\n}\n.need-share-button_qqzone {\n  color: #ffce00;\n}\n.need-share-button_qqzone.need-share-button_link-box {\n  color: #fff;\n\n  background: #ffce00;\n}\n.need-share-button_renren {\n  color: #207cc5;\n}\n.need-share-button_renren.need-share-button_link-box {\n  color: #fff;\n\n  background: #207cc5;\n}\n.need-share-button_mailto {\n  color: #efbe00;\n}\n.need-share-button_mailto.need-share-button_link-box {\n  color: #fff;\n\n  background: #efbe00;\n}\n.need-share-button_twitter {\n  color: #00acec;\n}\n.need-share-button_twitter.need-share-button_link-box {\n  color: #fff;\n\n  background: #00acec;\n}\n.need-share-button_pinterest {\n  color: #cd2027;\n}\n.need-share-button_pinterest.need-share-button_link-box {\n  color: #fff;\n\n  background: #cd2027;\n}\n.need-share-button_facebook {\n  color: #3b5998;\n}\n.need-share-button_facebook.need-share-button_link-box {\n  color: #fff;\n\n  background: #3b5998;\n}\n.need-share-button_googleplus {\n  color: #d44132;\n}\n.need-share-button_googleplus.need-share-button_link-box {\n  color: #fff;\n\n  background: #d44132;\n}\n.need-share-button_reddit {\n  color: #000;\n}\n.need-share-button_reddit.need-share-button_link-box {\n  color: #fff;\n\n  background: #000;\n}\n.need-share-button_delicious {\n  color: #000;\n}\n.need-share-button_delicious.need-share-button_link-box {\n  color: #fff;\n\n  background: #000;\n}\n.need-share-button_stumbleupon {\n  color: #f04e23;\n}\n.need-share-button_stumbleupon.need-share-button_link-box {\n  color: #fff;\n\n  background: #f04e23;\n}\n.need-share-button_linkedin {\n  color: #0085af;\n}\n.need-share-button_linkedin.need-share-button_link-box {\n  color: #fff;\n\n  background: #0085af;\n}\n.need-share-button_tumblr {\n  color: #34465d;\n}\n.need-share-button_tumblr.need-share-button_link-box {\n  color: #fff;\n\n  background: #34465d;\n}\n.need-share-button_googlebookmarks {\n  color: #fde331;\n}\n.need-share-button_googlebookmarks.need-share-button_link-box {\n  color: #fff;\n\n  background: #fde331;\n}\n.need-share-button_newsvine {\n  color: #03652c;\n}\n.need-share-button_newsvine.need-share-button_link-box {\n  color: #fff;\n\n  background: #03652c;\n}\n.need-share-button_evernote {\n  color: #79d626;\n}\n.need-share-button_evernote.need-share-button_link-box {\n  color: #fff;\n\n  background: #79d626;\n}\n.need-share-button_friendfeed {\n  color: #b0cbe9;\n}\n.need-share-button_friendfeed.need-share-button_link-box {\n  color: #fff;\n\n  background: #b0cbe9;\n}\n.need-share-button_vkontakte {\n  color: #4c75a3;\n}\n.need-share-button_vkontakte.need-share-button_link-box {\n  color: #fff;\n\n  background: #4c75a3;\n}\n.need-share-button_odnoklassniki {\n  color: #ed812b;\n}\n.need-share-button_odnoklassniki.need-share-button_link-box {\n  color: #fff;\n\n  background: #ed812b;\n}\n.need-share-button_mailru {\n  color: #f89c0e;\n}\n.need-share-button_mailru.need-share-button_link-box {\n  color: #fff;\n\n  background: #f89c0e;\n}\n","date":"2019-01-09T03:12:08.095Z","updated":"2019-01-09T03:12:08.095Z","path":"lib/needsharebutton/needsharebutton.css","layout":"false","title":"","comments":1,"_id":"ck0ozhj7y007rgkuwgfyd4nnx","content":"/***********************************************\n  needShareButton\n  - Version 1.0.0\n  - Copyright 2015 Dzmitry Vasileuski\n  - Licensed under MIT (http://opensource.org/licenses/MIT)\n***********************************************/\n/* Social icons font\n***********************************************/\n/* SOCIAL ICON */\n\n@font-face {\n  font-family: 'social-icons';\n  font-weight: normal;\n  font-style: normal;\n  src: url('font/social.eot?44259375');\n  src: url('font/social.eot?44259375#iefix') format('embedded-opentype'), url('font/social.woff?44259375') format('woff'), url('font/social.ttf?44259375') format('truetype'), url('font/social.svg?44259375#social') format('svg');\n}\n@font-face {\n  font-family: 'social-icons';\n  src: url('data:application/font-woff;charset=utf-8;base64,') format('woff'), url('data:application/font-ttf;charset=utf-8;base64,') format('truetype');\n}\n\n.need-share-button_dropdown [class^=\"social-\"]:before, .need-share-button_dropdown [class*=\" social-\"]:before {\n  font-family: \"social-icons\";\n  font-style: normal;\n  font-weight: normal;\n  speak: none;\n\n  display: inline-block;\n  text-decoration: inherit;\n  width: 1em;\n  margin-right: .2em;\n  text-align: center;\n  /* opacity: .8; */\n\n  /* For safety - reset parent styles, that can break glyph codes*/\n  font-variant: normal;\n  text-transform: none;\n\n  /* fix buttons height, for twitter bootstrap */\n  line-height: 1em;\n\n  /* Animation center compensation - margins should be symmetric */\n  /* remove if not needed */\n  margin-left: .2em;\n\n  /* you can be more comfortable with increased icons size */\n  /* font-size: 120%; */\n\n  /* Uncomment for 3D effect */\n  /* text-shadow: 1px 1px 1px rgba(127, 127, 127, 0.3); */\n}\n\n.social-mailto:before { content: '\\e80a'; }\n.social-twitter:before { content: '\\e813'; }\n.social-pinterest:before { content: '\\e80f'; }\n.social-facebook:before { content: '\\e80e'; }\n.social-googleplus:before { content: '\\e80d'; }\n.social-reddit:before { content: '\\e810'; }\n.social-linkedin:before { content: '\\e80c'; }\n.social-tumblr:before { content: '\\e812'; }\n.social-evernote:before { content: '\\e801'; }\n.social-delicious:before { content: '\\e815'; }\n.social-stumbleupon:before { content: '\\e811'; }\n.social-googlebookmarks:before { content: '\\e80b'; }\n.social-newsvine:before { content: '\\e803'; }\n.social-friendfeed:before { content: '\\e802'; }\n.social-vkontakte:before { content: '\\e814'; }\n.social-odnoklassniki:before { content: '\\e804'; }\n.social-mailru:before { content: '\\e800'; }\n\n/* FONTELLO ICON */\n\n@font-face {\nfont-family: 'fontello';\nsrc: url('../font/fontello.eot?34242489');\nsrc: url('../font/fontello.eot?34242489#iefix') format('embedded-opentype'),\n     url('../font/fontello.svg?34242489#fontello') format('svg');\nfont-weight: normal;\nfont-style: normal;\n}\n@font-face {\nfont-family: 'fontello';\nsrc: url('data:application/octet-stream;base64,d09GRgABAAAAAA7IAA8AAAAAGBAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAABHU1VCAAABWAAAADsAAABUIIslek9TLzIAAAGUAAAAQwAAAFY+S1NOY21hcAAAAdgAAABqAAABqkbJ0JZjdnQgAAACRAAAABMAAAAgBtX/BGZwZ20AAAJYAAAFkAAAC3CKkZBZZ2FzcAAAB+gAAAAIAAAACAAAABBnbHlmAAAH8AAABBsAAAToO/jZ62hlYWQAAAwMAAAAMwAAADYPhh2FaGhlYQAADEAAAAAgAAAAJAfKA91obXR4AAAMYAAAABQAAAAUE4f//mxvY2EAAAx0AAAADAAAAAwChAN+bWF4cAAADIAAAAAgAAAAIAETDBZuYW1lAAAMoAAAAXcAAALNzJ0dH3Bvc3QAAA4YAAAAMwAAAEYXwzMzcHJlcAAADkwAAAB6AAAAhuVBK7x4nGNgZGBg4GIwYLBjYHJx8wlh4MtJLMljkGJgYYAAkDwymzEnMz2RgQPGA8qxgGkOIGaDiAIAJjsFSAB4nGNgZH7BOIGBlYGBqYppDwMDQw+EZnzAYMjIBBRlYGVmwAoC0lxTGBxeaH+8zhz0P4shijmIYRpQmBEkBwAenQ0gAHic7ZHLDYAgEERnZTXE2IkW4NFiPNkK/UELXrcC3A9lOOSR2QlwGADMAJJyKAzQA4Lp1pQ8T1g9Z5w6Z10T8O5SpPU+XDXnIj+R3U16195c8Gvz/RoTW2+BtSwlsGalBvYr0gLwBz3aG2gAAHicY2BAAxIQyBz0PwuEARJsA90AeJytVml300YUHXlJnIQsJQstamHExGmwRiZswYAJQbJjIF2crZWgixQ76b7xid/gX/Nk2nPoN35a7xsvJJC053Cak6N3583VzNtlElqS2AvrkZSbL8XU1iaN7DwJ6YZNy1F8KDt7IWWKyd8FURCtltq3HYdERCJQta6wRBD7HlmaZHzoUUbLtqRXTcotPekuW+NBvVXffho6yrE7oaRmM3RoPbIlVRhVokimPVLSpmWo+itJK7y/wsxXzVDCiE4iabwZxtBI3htntMpoNbbjKIpsstwoUiSa4UEUeZTVEufkigkMygfNkPLKpxHlw/yIrNijnFawS7bT/L4vead3OT+xX29RtuRAH8iO7ODsdCVfhFtbYdy0k+0oVBF213dCbNnsVP9mj/KaRgO3KzK90IxgqXyFECs/ocz+IVktnE/5kkejWrKRE0HrZU7sSz6B1uOIKXHNGFnQ3dEJEdT9kjMM9pg+Hvzx3imWCxMCeBzLekclnAgTKWFzNEnaMHJgJWWLKqn1rpg45XVaxFvCfu3a0ZfOaONQd2I8Ww8dWzlRyfFoUqeZTJ3aSc2jKQ2ilHQmeMyvAyg/oklebWM1iZVH0zhmxoREIgIt3EtTQSw7saQpBM2jGb25G6a5di1apMkD9dyj9/TmVri501PaDvSzRn9Wp2I62AvT6WnkL/Fp2uUiRen66Rl+TOJB1gIykS02w5SDB2/9DtLL15YchdcG2O7t8yuofdZE8KQB+xvQHk/VKQlMhZhViFZAYq1rWZbJ1awWqcjUd0OaVr6s0wSKchwXx76Mcf1fMzOWmBK+34nTsyMuPXPtSwjTHHybdT2a16nFcgFxZnlOp1mW7+s0x/IDneZZntfpCEtbp6MsP9RpgeVHOh1jeUELmnTfwZCLMOQCDpAwhKUDQ1hegiEsFQxhuQhDWBZhCMslGMLyYxjCchmGsLysZdXUU0nj2plYBmxCYGKOHrnMReVqKrlUQrtoVGpDnhJulVQUz6p/ZaBePPKGObAWSJfIml8xzpWPRuX41hUtbxo7V8Cx6m8fjvY58VLWi4U/Bf/V1lQlvWLNw5Or8BuGnmwnqjapeHRNl89VPbr+X1RUWAv0G0iFWCjKsmxwZyKEjzqdhmqglUPMbMw8tOt1y5qfw/03MUIWUP34NxQaC9yDTllJWe3grNXX27LcO4NyOBMsSTE38/pW+CIjs9J+kVnKno98HnAFjEpl2GoDrRW82ScxD5neJM8EcVtRNkja2M4EiQ0c84B5850EJmHqqg3kTuGGDfgFYW7BeSdconqjLIfuRezzKKT8W6fiRPaoaIzAs9kbYa/vQspvcQwkNPmlfgxUFaGpGDUV0DRSbqgGX8bZum1Cxg70Iyp2w7Ks4sPHFveVkm0ZhHykiNWjo5/WXqJOqtx+ZhSX752+BcEgNTF/e990cZDKu1rJMkdtA1O3GpVT15pD41WH6uZR9b3j7BM5a5puuiceel/TqtvBxVwssPZtDtJSJhfU9WGFDaLLxaVQ6mU0Se+4BxgWGNDvUIqN/6v62HyeK1WF0XEk307Ut9HnYAz8D9h/R/UD0Pdj6HINLs/3mhOfbvThbJmuohfrp+g3MGutuVm6BtzQdAPiIUetjrjKDXynBnF6pLkc6SHgY90V4gHAJoDF4BPdtYzmUwCj+Yw5PsDnzGHQZA6DLeYw2GbOGsAOcxjsMofBHnMYfMGcdYAvmcMgZA6DiDkMnjAnAHjKHAZfMYfB18xh8A1z7gN8yxwGMXMYJMxhsK/p1jDMLV7QXaC2QVWgA1NPWNzD4lBTZcj+jheG/b1BzP7BIKb+qOn2kPoTLwz1Z4OY+otBTP1V050h9TdeGOrvBjH1D4OY+ky/GMtlBr+MfJcKB5RdbD7n74n3D9vFQLkAAQAB//8AD3icZVPfT9tWFL7nXvvasR3HcYydBGNSxzihQQbSxNYYhRCFH6MhtIwhqBBFFTDUFtiqisLU7WXdVCGKpq7SpgmhCXV7nDRp2tOe9jDtf9jDXvswTer7Bruhe9os697j75x7zvH5vouE87PzX8gr/BeKoRTqQiU0i9bQPsrUzDoggEnE1h2E0MZ4ozyIeaPUEwZABepAGL22LDO0VAhgBCwHogALKjNwNAKRoZKARJWQ2ZbZPjIKYdlkfqcdQRxgZiGAKPQF6hd8ltCMLsA2xhLRoF3EhH1ZKvTJcckPajxVdRJLitp65qMP+ioP3hwJn/OLz64/eiHyN4/mPjz9pjh359nxlw+auDW58nPRy2CO8nJrr5wBTuKEXMUrWqrEp+OKyssDXjyNiaa49UeDtsnbjsppxsTqgJYVda3x5NOUn9SSKd/Q3xE0ngq6iGn1jYq/uVnRtLVL1bmiGH8893qb9VvNsEhzU6ujtWeTK9NF74ZIMZBL4zVBpBxIuWEY6mzkFIWw4vlQZGVVkwjGWHg0mtCUrBaszTgy0R0bJy4jgtD592SJECQiHdnIqCUzHfEYJRSNt9lIAt9R4qlbYGN2gCQNKvjVygiAIQRQSDoY7936bXVmW09t/3r0/vrKKV5av38Iay+Ws9XqwOHs9QP8x9mrw5fR3vHmj7tn9473opeHkEju/YAY4+j8DvmdzKENdLU2dGspK3KA3g7LhABuC4IgIFuIYPbeZc0oUwjj+BTiuDj31tR4fWx4qOD38azBFOspjBixbA2vlC2HdoPZYdAuMMoCY9qgeTfg8wIVHMw0JLQ/oZ/RzzTAzH+1w1RTLbRxl8FC3mVSqVa+4BURJHFjcubda9OdgZs1VZWHbomDUhlMg3lVTgI2/14lcHjAxPukqxbk46LHWauB4dcDH5QkzbEs0FkXCealogWY/Qh8JuuyKyqu0PrW7emWHfdyMQxyuL9HdCgLqL03nK6JiqZqGC8UZCObxioJJUXmMIaMiUU1l7IMHRRgD6abHlYsj3DQnfkKIcpm+5R7SAYYrwa7b71oAi2izdq6l8AEXy3jGGlODxM5RiavgdxAEpJ22PAB7fAAIruJoiLuCEBwDJPYForJOCbfRbK8jRSMlXmkKHiRAlZwc2F+dqZRr17Jd3gpw/NSepzvKkHFd1UwyyEzBJcKhmmVQ8JAavwHLPh5FmkZFuPEb1OSF6ILhVllh6mMClbhgi2GRG2kYfd74Ac2nNimloZswrQ/ZpDXb8NtpyPBENW0P9fNlZNliBt6IqtnhIB/Wjy999PW7e92YblZ796Z95l7+WTl5skqvmHZTsnOnv2dyLKzLGUa+v4H/UkWni/09WLM5itN7N//up1+6vHZw7HdwfVho/Xk5KAJrQP0D0Q/xGYAeJxjYGRgYADiZ4l/fOP5bb4ycDO/AIowXP3x5hOM/v/vfxZLOXMQkMvBwAQSBQDMRxC+AHicY2BkYGAO+p/FwMBS9v/f/+8s5QxAERTACgCiiQauA+gAAAPo//4DWQAAA+gAAAR2AAAAAAAAAMwBCgG4AnQAAQAAAAUAegAHAAAAAAACABoAKgBzAAAAeQtwAAAAAHicdZDdasIwGIbfzJ9tCtvYYKfL0VDG6g8MQRAEh55sJzI8HbXWtlIbSaPgbewedjG7iV3LXts4hrKWNM/35MuXrwFwjW8I5M8TR84CZ4xyPsEpepYL9M+Wi+QXyyVU8Wa5TP9uuYIHBJaruMEHK4jiOaMFPi0LXIlLyye4EHeWC/SPlovknuUSbsWr5TK9Z7mCiUgtV3EvvgZqtdVREBpZG9Rlu9nqyOlWKqoocWPprk2odCr7cq4S48excjy13PPYD9axq/fhfp74Oo1UIltOc69GfuJr1/izXfV0E7SNmcu5Vks5tBlypdXC94wTGrPqNhp/z8MACitsoRHxqkIYSNRo65zbaKKFDmnKDMnMPCtCAhcxjYs1d4TZSsq4zzFnlND6zIjJDjx+l0d+TAq4P2YVfbR6GE9IuzOizEv25bC7w6wRKcky3czOfntPseFpbVrDXbsuddaVxPCghuR97NYWNB69k92Koe2iwfef//sB5m6EUQB4nGNgYoAALgbsgJWRiZGZkYWRlZGNgbU8NTMpn60oNQ+ImAoL2cpTkzMSSxgYAHR0CDwAeJxj8N7BcCIoYiMjY1/kBsadHAwcDMkFGxlYnTYxMDJogRibuZgYOSAsPgYwi81pF9MBoDQnkM3utIvBAcJmZnDZqMLYERixwaEjYiNzistGNRBvF0cDAyOLQ0dySARISSQQbOZhYuTR2sH4v3UDS+9GJgYXAAx2I/QAAA==') format('woff'),\n     url('data:application/octet-stream;base64,') format('truetype');\n}\n/* Chrome hack: SVG is rendered more smooth in Windozze. 100% magic, uncomment if you need it. */\n/* Note, that will break hinting! In other OS-es font will be not as sharp as it could be */\n/*\n@media screen and (-webkit-min-device-pixel-ratio:0) {\n  @font-face {\n    font-family: 'fontello';\n    src: url('../font/fontello.svg?13586373#fontello') format('svg');\n  }\n}\n*/\n\n .need-share-button_dropdown [class^=\"icon-\"]:before, .need-share-button_dropdown [class*=\" icon-\"]:before {\n  font-family: \"fontello\";\n  font-style: normal;\n  font-weight: normal;\n  speak: none;\n\n  display: inline-block;\n  text-decoration: inherit;\n  width: 1em;\n  margin-right: .2em;\n  text-align: center;\n  /* opacity: .8; */\n\n  /* For safety - reset parent styles, that can break glyph codes*/\n  font-variant: normal;\n  text-transform: none;\n\n  /* fix buttons height, for twitter bootstrap */\n  line-height: 1em;\n\n  /* Animation center compensation - margins should be symmetric */\n  /* remove if not needed */\n  margin-left: .2em;\n\n  /* you can be more comfortable with increased icons size */\n  /* font-size: 120%; */\n\n  /* Uncomment for 3D effect */\n  /* text-shadow: 1px 1px 1px rgba(127, 127, 127, 0.3); */\n}\n\n.icon-weibo:before { content: '\\e82b'; } /* '' */\n.icon-renren:before { content: '\\f18b'; } /* '' */\n.icon-qqzone:before { content: '\\f1d6'; } /* '' */\n.icon-wechat:before { content: '\\f1d7'; } /* '' */\n\n/* Need Share Button\n***********************************************/\n.need-share-button {\n  position: relative;\n}\n.need-share-button-opened {\n  position: relative;\n}\n.need-share-button-opened img.need-share-wechat-code-image {\n  display: block;\n\n  width: 100%;\n  max-width: 200px;\n  margin: 10px auto;\n}\n.need-share-button_dropdown {\n  position: absolute;\n  z-index: 10;\n\n  visibility: hidden;\n  overflow: hidden;\n\n  width: 300px;\n\n  font-size: 16px;\n\n  -webkit-transition: .3s;\n          transition: .3s;\n  -webkit-transform: scale(.1);\n      -ms-transform: scale(.1);\n          transform: scale(.1);\n  text-align: center;\n  white-space: normal;\n\n  opacity: 0;\n  -webkit-border-radius: 4px;\n          border-radius: 4px;\n  background-color: #fff;\n  -webkit-box-shadow: 0 0 2px rgba(0, 0, 0, .5);\n          box-shadow: 0 0 2px rgba(0, 0, 0, .5);\n}\n.need-share-button-opened .need-share-button_dropdown {\n  visibility: visible;\n\n  -webkit-transform: scale(1);\n      -ms-transform: scale(1);\n          transform: scale(1);\n\n  opacity: 1;\n}\n.need-share-button_dropdown-box-vertical,\n.need-share-button_dropdown-box-horizontal {\n  -webkit-border-radius: 0;\n          border-radius: 0;\n}\n.need-share-button_dropdown-box-vertical {\n  width: 50px;\n}\n.need-share-button_dropdown-box-horizontal {\n  width: auto;\n\n  white-space: nowrap;\n}\n.need-share-button_link {\n  display: inline-block;\n\n  width: 50px;\n  height: 50px;\n\n  line-height: 50px;\n\n  cursor: pointer;\n  text-align: center;\n}\n.need-share-button_link:hover {\n  -webkit-transition: .3s;\n          transition: .3s;\n\n  opacity: .7;\n}\n/* Dropdown position\n***********************************************/\n.need-share-button_dropdown-top-left {\n  right: 100%;\n  bottom: 100%;\n\n  margin-right: 10px;\n  margin-bottom: 10px;\n}\n.need-share-button_dropdown-top-right {\n  bottom: 100%;\n  left: 100%;\n\n  margin-bottom: 10px;\n  margin-left: 10px;\n}\n.need-share-button_dropdown-top-center {\n  bottom: 100%;\n  left: 50%;\n\n  margin-bottom: 10px;\n}\n.need-share-button_dropdown-middle-left {\n  top: 50%;\n  right: 100%;\n\n  margin-right: 10px;\n}\n.need-share-button_dropdown-middle-right {\n  bottom: 0;\n  left: 100%;\n\n  margin-left: 10px;\n}\n.need-share-button_dropdown-bottom-left {\n  top: 100%;\n  right: 100%;\n\n  margin-top: 10px;\n  margin-right: 10px;\n}\n.need-share-button_dropdown-bottom-right {\n  top: 100%;\n  left: 100%;\n\n  margin-top: 10px;\n  margin-left: 10px;\n}\n.need-share-button_dropdown-bottom-center {\n  top: 100%;\n  left: 50%;\n\n  margin-top: 10px;\n}\n/* Default theme\n***********************************************/\n.need-share-button-default {\n  display: inline-block;\n\n  margin-bottom: 0;\n  padding: 6px 12px;\n\n  font-size: 14px;\n  line-height: 1.42857143;\n  font-weight: 400;\n  color: #333;\n\n  cursor: pointer;\n  -webkit-user-select: none;\n     -moz-user-select: none;\n      -ms-user-select: none;\n          user-select: none;\n  text-align: center;\n  vertical-align: middle;\n\n  border: 1px solid #ccc;\n  -webkit-border-radius: 4px;\n          border-radius: 4px;\n  background-color: #fff;\n}\n/* Network buttons\n***********************************************/\n.need-share-button_wechat {\n  color: #a2dc30;\n}\n.need-share-button_wechat.need-share-button_link-box {\n  color: #fff;\n\n  background: #a2dc30;\n}\n.need-share-button_weibo {\n  color: #d52b2b;\n}\n.need-share-button_weibo.need-share-button_link-box {\n  color: #fff;\n\n  background: #d52b2b;\n}\n.need-share-button_douban {\n  color: #072;\n}\n.need-share-button_douban:before {\n  content: '豆';\n}\n.need-share-button_douban.need-share-button_link-box {\n  color: #fff;\n\n  background: #072;\n}\n.need-share-button_qqzone {\n  color: #ffce00;\n}\n.need-share-button_qqzone.need-share-button_link-box {\n  color: #fff;\n\n  background: #ffce00;\n}\n.need-share-button_renren {\n  color: #207cc5;\n}\n.need-share-button_renren.need-share-button_link-box {\n  color: #fff;\n\n  background: #207cc5;\n}\n.need-share-button_mailto {\n  color: #efbe00;\n}\n.need-share-button_mailto.need-share-button_link-box {\n  color: #fff;\n\n  background: #efbe00;\n}\n.need-share-button_twitter {\n  color: #00acec;\n}\n.need-share-button_twitter.need-share-button_link-box {\n  color: #fff;\n\n  background: #00acec;\n}\n.need-share-button_pinterest {\n  color: #cd2027;\n}\n.need-share-button_pinterest.need-share-button_link-box {\n  color: #fff;\n\n  background: #cd2027;\n}\n.need-share-button_facebook {\n  color: #3b5998;\n}\n.need-share-button_facebook.need-share-button_link-box {\n  color: #fff;\n\n  background: #3b5998;\n}\n.need-share-button_googleplus {\n  color: #d44132;\n}\n.need-share-button_googleplus.need-share-button_link-box {\n  color: #fff;\n\n  background: #d44132;\n}\n.need-share-button_reddit {\n  color: #000;\n}\n.need-share-button_reddit.need-share-button_link-box {\n  color: #fff;\n\n  background: #000;\n}\n.need-share-button_delicious {\n  color: #000;\n}\n.need-share-button_delicious.need-share-button_link-box {\n  color: #fff;\n\n  background: #000;\n}\n.need-share-button_stumbleupon {\n  color: #f04e23;\n}\n.need-share-button_stumbleupon.need-share-button_link-box {\n  color: #fff;\n\n  background: #f04e23;\n}\n.need-share-button_linkedin {\n  color: #0085af;\n}\n.need-share-button_linkedin.need-share-button_link-box {\n  color: #fff;\n\n  background: #0085af;\n}\n.need-share-button_tumblr {\n  color: #34465d;\n}\n.need-share-button_tumblr.need-share-button_link-box {\n  color: #fff;\n\n  background: #34465d;\n}\n.need-share-button_googlebookmarks {\n  color: #fde331;\n}\n.need-share-button_googlebookmarks.need-share-button_link-box {\n  color: #fff;\n\n  background: #fde331;\n}\n.need-share-button_newsvine {\n  color: #03652c;\n}\n.need-share-button_newsvine.need-share-button_link-box {\n  color: #fff;\n\n  background: #03652c;\n}\n.need-share-button_evernote {\n  color: #79d626;\n}\n.need-share-button_evernote.need-share-button_link-box {\n  color: #fff;\n\n  background: #79d626;\n}\n.need-share-button_friendfeed {\n  color: #b0cbe9;\n}\n.need-share-button_friendfeed.need-share-button_link-box {\n  color: #fff;\n\n  background: #b0cbe9;\n}\n.need-share-button_vkontakte {\n  color: #4c75a3;\n}\n.need-share-button_vkontakte.need-share-button_link-box {\n  color: #fff;\n\n  background: #4c75a3;\n}\n.need-share-button_odnoklassniki {\n  color: #ed812b;\n}\n.need-share-button_odnoklassniki.need-share-button_link-box {\n  color: #fff;\n\n  background: #ed812b;\n}\n.need-share-button_mailru {\n  color: #f89c0e;\n}\n.need-share-button_mailru.need-share-button_link-box {\n  color: #fff;\n\n  background: #f89c0e;\n}\n","site":{"data":{}},"excerpt":"","more":"/***********************************************\n  needShareButton\n  - Version 1.0.0\n  - Copyright 2015 Dzmitry Vasileuski\n  - Licensed under MIT (http://opensource.org/licenses/MIT)\n***********************************************/\n/* Social icons font\n***********************************************/\n/* SOCIAL ICON */\n\n@font-face {\n  font-family: 'social-icons';\n  font-weight: normal;\n  font-style: normal;\n  src: url('font/social.eot?44259375');\n  src: url('font/social.eot?44259375#iefix') format('embedded-opentype'), url('font/social.woff?44259375') format('woff'), url('font/social.ttf?44259375') format('truetype'), url('font/social.svg?44259375#social') format('svg');\n}\n@font-face {\n  font-family: 'social-icons';\n  src: url('data:application/font-woff;charset=utf-8;base64,') format('woff'), url('data:application/font-ttf;charset=utf-8;base64,') format('truetype');\n}\n\n.need-share-button_dropdown [class^=\"social-\"]:before, .need-share-button_dropdown [class*=\" social-\"]:before {\n  font-family: \"social-icons\";\n  font-style: normal;\n  font-weight: normal;\n  speak: none;\n\n  display: inline-block;\n  text-decoration: inherit;\n  width: 1em;\n  margin-right: .2em;\n  text-align: center;\n  /* opacity: .8; */\n\n  /* For safety - reset parent styles, that can break glyph codes*/\n  font-variant: normal;\n  text-transform: none;\n\n  /* fix buttons height, for twitter bootstrap */\n  line-height: 1em;\n\n  /* Animation center compensation - margins should be symmetric */\n  /* remove if not needed */\n  margin-left: .2em;\n\n  /* you can be more comfortable with increased icons size */\n  /* font-size: 120%; */\n\n  /* Uncomment for 3D effect */\n  /* text-shadow: 1px 1px 1px rgba(127, 127, 127, 0.3); */\n}\n\n.social-mailto:before { content: '\\e80a'; }\n.social-twitter:before { content: '\\e813'; }\n.social-pinterest:before { content: '\\e80f'; }\n.social-facebook:before { content: '\\e80e'; }\n.social-googleplus:before { content: '\\e80d'; }\n.social-reddit:before { content: '\\e810'; }\n.social-linkedin:before { content: '\\e80c'; }\n.social-tumblr:before { content: '\\e812'; }\n.social-evernote:before { content: '\\e801'; }\n.social-delicious:before { content: '\\e815'; }\n.social-stumbleupon:before { content: '\\e811'; }\n.social-googlebookmarks:before { content: '\\e80b'; }\n.social-newsvine:before { content: '\\e803'; }\n.social-friendfeed:before { content: '\\e802'; }\n.social-vkontakte:before { content: '\\e814'; }\n.social-odnoklassniki:before { content: '\\e804'; }\n.social-mailru:before { content: '\\e800'; }\n\n/* FONTELLO ICON */\n\n@font-face {\nfont-family: 'fontello';\nsrc: url('../font/fontello.eot?34242489');\nsrc: url('../font/fontello.eot?34242489#iefix') format('embedded-opentype'),\n     url('../font/fontello.svg?34242489#fontello') format('svg');\nfont-weight: normal;\nfont-style: normal;\n}\n@font-face {\nfont-family: 'fontello';\nsrc: url('data:application/octet-stream;base64,d09GRgABAAAAAA7IAA8AAAAAGBAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAABHU1VCAAABWAAAADsAAABUIIslek9TLzIAAAGUAAAAQwAAAFY+S1NOY21hcAAAAdgAAABqAAABqkbJ0JZjdnQgAAACRAAAABMAAAAgBtX/BGZwZ20AAAJYAAAFkAAAC3CKkZBZZ2FzcAAAB+gAAAAIAAAACAAAABBnbHlmAAAH8AAABBsAAAToO/jZ62hlYWQAAAwMAAAAMwAAADYPhh2FaGhlYQAADEAAAAAgAAAAJAfKA91obXR4AAAMYAAAABQAAAAUE4f//mxvY2EAAAx0AAAADAAAAAwChAN+bWF4cAAADIAAAAAgAAAAIAETDBZuYW1lAAAMoAAAAXcAAALNzJ0dH3Bvc3QAAA4YAAAAMwAAAEYXwzMzcHJlcAAADkwAAAB6AAAAhuVBK7x4nGNgZGBg4GIwYLBjYHJx8wlh4MtJLMljkGJgYYAAkDwymzEnMz2RgQPGA8qxgGkOIGaDiAIAJjsFSAB4nGNgZH7BOIGBlYGBqYppDwMDQw+EZnzAYMjIBBRlYGVmwAoC0lxTGBxeaH+8zhz0P4shijmIYRpQmBEkBwAenQ0gAHic7ZHLDYAgEERnZTXE2IkW4NFiPNkK/UELXrcC3A9lOOSR2QlwGADMAJJyKAzQA4Lp1pQ8T1g9Z5w6Z10T8O5SpPU+XDXnIj+R3U16195c8Gvz/RoTW2+BtSwlsGalBvYr0gLwBz3aG2gAAHicY2BAAxIQyBz0PwuEARJsA90AeJytVml300YUHXlJnIQsJQstamHExGmwRiZswYAJQbJjIF2crZWgixQ76b7xid/gX/Nk2nPoN35a7xsvJJC053Cak6N3583VzNtlElqS2AvrkZSbL8XU1iaN7DwJ6YZNy1F8KDt7IWWKyd8FURCtltq3HYdERCJQta6wRBD7HlmaZHzoUUbLtqRXTcotPekuW+NBvVXffho6yrE7oaRmM3RoPbIlVRhVokimPVLSpmWo+itJK7y/wsxXzVDCiE4iabwZxtBI3htntMpoNbbjKIpsstwoUiSa4UEUeZTVEufkigkMygfNkPLKpxHlw/yIrNijnFawS7bT/L4vead3OT+xX29RtuRAH8iO7ODsdCVfhFtbYdy0k+0oVBF213dCbNnsVP9mj/KaRgO3KzK90IxgqXyFECs/ocz+IVktnE/5kkejWrKRE0HrZU7sSz6B1uOIKXHNGFnQ3dEJEdT9kjMM9pg+Hvzx3imWCxMCeBzLekclnAgTKWFzNEnaMHJgJWWLKqn1rpg45XVaxFvCfu3a0ZfOaONQd2I8Ww8dWzlRyfFoUqeZTJ3aSc2jKQ2ilHQmeMyvAyg/oklebWM1iZVH0zhmxoREIgIt3EtTQSw7saQpBM2jGb25G6a5di1apMkD9dyj9/TmVri501PaDvSzRn9Wp2I62AvT6WnkL/Fp2uUiRen66Rl+TOJB1gIykS02w5SDB2/9DtLL15YchdcG2O7t8yuofdZE8KQB+xvQHk/VKQlMhZhViFZAYq1rWZbJ1awWqcjUd0OaVr6s0wSKchwXx76Mcf1fMzOWmBK+34nTsyMuPXPtSwjTHHybdT2a16nFcgFxZnlOp1mW7+s0x/IDneZZntfpCEtbp6MsP9RpgeVHOh1jeUELmnTfwZCLMOQCDpAwhKUDQ1hegiEsFQxhuQhDWBZhCMslGMLyYxjCchmGsLysZdXUU0nj2plYBmxCYGKOHrnMReVqKrlUQrtoVGpDnhJulVQUz6p/ZaBePPKGObAWSJfIml8xzpWPRuX41hUtbxo7V8Cx6m8fjvY58VLWi4U/Bf/V1lQlvWLNw5Or8BuGnmwnqjapeHRNl89VPbr+X1RUWAv0G0iFWCjKsmxwZyKEjzqdhmqglUPMbMw8tOt1y5qfw/03MUIWUP34NxQaC9yDTllJWe3grNXX27LcO4NyOBMsSTE38/pW+CIjs9J+kVnKno98HnAFjEpl2GoDrRW82ScxD5neJM8EcVtRNkja2M4EiQ0c84B5850EJmHqqg3kTuGGDfgFYW7BeSdconqjLIfuRezzKKT8W6fiRPaoaIzAs9kbYa/vQspvcQwkNPmlfgxUFaGpGDUV0DRSbqgGX8bZum1Cxg70Iyp2w7Ks4sPHFveVkm0ZhHykiNWjo5/WXqJOqtx+ZhSX752+BcEgNTF/e990cZDKu1rJMkdtA1O3GpVT15pD41WH6uZR9b3j7BM5a5puuiceel/TqtvBxVwssPZtDtJSJhfU9WGFDaLLxaVQ6mU0Se+4BxgWGNDvUIqN/6v62HyeK1WF0XEk307Ut9HnYAz8D9h/R/UD0Pdj6HINLs/3mhOfbvThbJmuohfrp+g3MGutuVm6BtzQdAPiIUetjrjKDXynBnF6pLkc6SHgY90V4gHAJoDF4BPdtYzmUwCj+Yw5PsDnzGHQZA6DLeYw2GbOGsAOcxjsMofBHnMYfMGcdYAvmcMgZA6DiDkMnjAnAHjKHAZfMYfB18xh8A1z7gN8yxwGMXMYJMxhsK/p1jDMLV7QXaC2QVWgA1NPWNzD4lBTZcj+jheG/b1BzP7BIKb+qOn2kPoTLwz1Z4OY+otBTP1V050h9TdeGOrvBjH1D4OY+ky/GMtlBr+MfJcKB5RdbD7n74n3D9vFQLkAAQAB//8AD3icZVPfT9tWFL7nXvvasR3HcYydBGNSxzihQQbSxNYYhRCFH6MhtIwhqBBFFTDUFtiqisLU7WXdVCGKpq7SpgmhCXV7nDRp2tOe9jDtf9jDXvswTer7Bruhe9os697j75x7zvH5vouE87PzX8gr/BeKoRTqQiU0i9bQPsrUzDoggEnE1h2E0MZ4ozyIeaPUEwZABepAGL22LDO0VAhgBCwHogALKjNwNAKRoZKARJWQ2ZbZPjIKYdlkfqcdQRxgZiGAKPQF6hd8ltCMLsA2xhLRoF3EhH1ZKvTJcckPajxVdRJLitp65qMP+ioP3hwJn/OLz64/eiHyN4/mPjz9pjh359nxlw+auDW58nPRy2CO8nJrr5wBTuKEXMUrWqrEp+OKyssDXjyNiaa49UeDtsnbjsppxsTqgJYVda3x5NOUn9SSKd/Q3xE0ngq6iGn1jYq/uVnRtLVL1bmiGH8893qb9VvNsEhzU6ujtWeTK9NF74ZIMZBL4zVBpBxIuWEY6mzkFIWw4vlQZGVVkwjGWHg0mtCUrBaszTgy0R0bJy4jgtD592SJECQiHdnIqCUzHfEYJRSNt9lIAt9R4qlbYGN2gCQNKvjVygiAIQRQSDoY7936bXVmW09t/3r0/vrKKV5av38Iay+Ws9XqwOHs9QP8x9mrw5fR3vHmj7tn9473opeHkEju/YAY4+j8DvmdzKENdLU2dGspK3KA3g7LhABuC4IgIFuIYPbeZc0oUwjj+BTiuDj31tR4fWx4qOD38azBFOspjBixbA2vlC2HdoPZYdAuMMoCY9qgeTfg8wIVHMw0JLQ/oZ/RzzTAzH+1w1RTLbRxl8FC3mVSqVa+4BURJHFjcubda9OdgZs1VZWHbomDUhlMg3lVTgI2/14lcHjAxPukqxbk46LHWauB4dcDH5QkzbEs0FkXCealogWY/Qh8JuuyKyqu0PrW7emWHfdyMQxyuL9HdCgLqL03nK6JiqZqGC8UZCObxioJJUXmMIaMiUU1l7IMHRRgD6abHlYsj3DQnfkKIcpm+5R7SAYYrwa7b71oAi2izdq6l8AEXy3jGGlODxM5RiavgdxAEpJ22PAB7fAAIruJoiLuCEBwDJPYForJOCbfRbK8jRSMlXmkKHiRAlZwc2F+dqZRr17Jd3gpw/NSepzvKkHFd1UwyyEzBJcKhmmVQ8JAavwHLPh5FmkZFuPEb1OSF6ILhVllh6mMClbhgi2GRG2kYfd74Ac2nNimloZswrQ/ZpDXb8NtpyPBENW0P9fNlZNliBt6IqtnhIB/Wjy999PW7e92YblZ796Z95l7+WTl5skqvmHZTsnOnv2dyLKzLGUa+v4H/UkWni/09WLM5itN7N//up1+6vHZw7HdwfVho/Xk5KAJrQP0D0Q/xGYAeJxjYGRgYADiZ4l/fOP5bb4ycDO/AIowXP3x5hOM/v/vfxZLOXMQkMvBwAQSBQDMRxC+AHicY2BkYGAO+p/FwMBS9v/f/+8s5QxAERTACgCiiQauA+gAAAPo//4DWQAAA+gAAAR2AAAAAAAAAMwBCgG4AnQAAQAAAAUAegAHAAAAAAACABoAKgBzAAAAeQtwAAAAAHicdZDdasIwGIbfzJ9tCtvYYKfL0VDG6g8MQRAEh55sJzI8HbXWtlIbSaPgbewedjG7iV3LXts4hrKWNM/35MuXrwFwjW8I5M8TR84CZ4xyPsEpepYL9M+Wi+QXyyVU8Wa5TP9uuYIHBJaruMEHK4jiOaMFPi0LXIlLyye4EHeWC/SPlovknuUSbsWr5TK9Z7mCiUgtV3EvvgZqtdVREBpZG9Rlu9nqyOlWKqoocWPprk2odCr7cq4S48excjy13PPYD9axq/fhfp74Oo1UIltOc69GfuJr1/izXfV0E7SNmcu5Vks5tBlypdXC94wTGrPqNhp/z8MACitsoRHxqkIYSNRo65zbaKKFDmnKDMnMPCtCAhcxjYs1d4TZSsq4zzFnlND6zIjJDjx+l0d+TAq4P2YVfbR6GE9IuzOizEv25bC7w6wRKcky3czOfntPseFpbVrDXbsuddaVxPCghuR97NYWNB69k92Koe2iwfef//sB5m6EUQB4nGNgYoAALgbsgJWRiZGZkYWRlZGNgbU8NTMpn60oNQ+ImAoL2cpTkzMSSxgYAHR0CDwAeJxj8N7BcCIoYiMjY1/kBsadHAwcDMkFGxlYnTYxMDJogRibuZgYOSAsPgYwi81pF9MBoDQnkM3utIvBAcJmZnDZqMLYERixwaEjYiNzistGNRBvF0cDAyOLQ0dySARISSQQbOZhYuTR2sH4v3UDS+9GJgYXAAx2I/QAAA==') format('woff'),\n     url('data:application/octet-stream;base64,') format('truetype');\n}\n/* Chrome hack: SVG is rendered more smooth in Windozze. 100% magic, uncomment if you need it. */\n/* Note, that will break hinting! In other OS-es font will be not as sharp as it could be */\n/*\n@media screen and (-webkit-min-device-pixel-ratio:0) {\n  @font-face {\n    font-family: 'fontello';\n    src: url('../font/fontello.svg?13586373#fontello') format('svg');\n  }\n}\n*/\n\n .need-share-button_dropdown [class^=\"icon-\"]:before, .need-share-button_dropdown [class*=\" icon-\"]:before {\n  font-family: \"fontello\";\n  font-style: normal;\n  font-weight: normal;\n  speak: none;\n\n  display: inline-block;\n  text-decoration: inherit;\n  width: 1em;\n  margin-right: .2em;\n  text-align: center;\n  /* opacity: .8; */\n\n  /* For safety - reset parent styles, that can break glyph codes*/\n  font-variant: normal;\n  text-transform: none;\n\n  /* fix buttons height, for twitter bootstrap */\n  line-height: 1em;\n\n  /* Animation center compensation - margins should be symmetric */\n  /* remove if not needed */\n  margin-left: .2em;\n\n  /* you can be more comfortable with increased icons size */\n  /* font-size: 120%; */\n\n  /* Uncomment for 3D effect */\n  /* text-shadow: 1px 1px 1px rgba(127, 127, 127, 0.3); */\n}\n\n.icon-weibo:before { content: '\\e82b'; } /* '' */\n.icon-renren:before { content: '\\f18b'; } /* '' */\n.icon-qqzone:before { content: '\\f1d6'; } /* '' */\n.icon-wechat:before { content: '\\f1d7'; } /* '' */\n\n/* Need Share Button\n***********************************************/\n.need-share-button {\n  position: relative;\n}\n.need-share-button-opened {\n  position: relative;\n}\n.need-share-button-opened img.need-share-wechat-code-image {\n  display: block;\n\n  width: 100%;\n  max-width: 200px;\n  margin: 10px auto;\n}\n.need-share-button_dropdown {\n  position: absolute;\n  z-index: 10;\n\n  visibility: hidden;\n  overflow: hidden;\n\n  width: 300px;\n\n  font-size: 16px;\n\n  -webkit-transition: .3s;\n          transition: .3s;\n  -webkit-transform: scale(.1);\n      -ms-transform: scale(.1);\n          transform: scale(.1);\n  text-align: center;\n  white-space: normal;\n\n  opacity: 0;\n  -webkit-border-radius: 4px;\n          border-radius: 4px;\n  background-color: #fff;\n  -webkit-box-shadow: 0 0 2px rgba(0, 0, 0, .5);\n          box-shadow: 0 0 2px rgba(0, 0, 0, .5);\n}\n.need-share-button-opened .need-share-button_dropdown {\n  visibility: visible;\n\n  -webkit-transform: scale(1);\n      -ms-transform: scale(1);\n          transform: scale(1);\n\n  opacity: 1;\n}\n.need-share-button_dropdown-box-vertical,\n.need-share-button_dropdown-box-horizontal {\n  -webkit-border-radius: 0;\n          border-radius: 0;\n}\n.need-share-button_dropdown-box-vertical {\n  width: 50px;\n}\n.need-share-button_dropdown-box-horizontal {\n  width: auto;\n\n  white-space: nowrap;\n}\n.need-share-button_link {\n  display: inline-block;\n\n  width: 50px;\n  height: 50px;\n\n  line-height: 50px;\n\n  cursor: pointer;\n  text-align: center;\n}\n.need-share-button_link:hover {\n  -webkit-transition: .3s;\n          transition: .3s;\n\n  opacity: .7;\n}\n/* Dropdown position\n***********************************************/\n.need-share-button_dropdown-top-left {\n  right: 100%;\n  bottom: 100%;\n\n  margin-right: 10px;\n  margin-bottom: 10px;\n}\n.need-share-button_dropdown-top-right {\n  bottom: 100%;\n  left: 100%;\n\n  margin-bottom: 10px;\n  margin-left: 10px;\n}\n.need-share-button_dropdown-top-center {\n  bottom: 100%;\n  left: 50%;\n\n  margin-bottom: 10px;\n}\n.need-share-button_dropdown-middle-left {\n  top: 50%;\n  right: 100%;\n\n  margin-right: 10px;\n}\n.need-share-button_dropdown-middle-right {\n  bottom: 0;\n  left: 100%;\n\n  margin-left: 10px;\n}\n.need-share-button_dropdown-bottom-left {\n  top: 100%;\n  right: 100%;\n\n  margin-top: 10px;\n  margin-right: 10px;\n}\n.need-share-button_dropdown-bottom-right {\n  top: 100%;\n  left: 100%;\n\n  margin-top: 10px;\n  margin-left: 10px;\n}\n.need-share-button_dropdown-bottom-center {\n  top: 100%;\n  left: 50%;\n\n  margin-top: 10px;\n}\n/* Default theme\n***********************************************/\n.need-share-button-default {\n  display: inline-block;\n\n  margin-bottom: 0;\n  padding: 6px 12px;\n\n  font-size: 14px;\n  line-height: 1.42857143;\n  font-weight: 400;\n  color: #333;\n\n  cursor: pointer;\n  -webkit-user-select: none;\n     -moz-user-select: none;\n      -ms-user-select: none;\n          user-select: none;\n  text-align: center;\n  vertical-align: middle;\n\n  border: 1px solid #ccc;\n  -webkit-border-radius: 4px;\n          border-radius: 4px;\n  background-color: #fff;\n}\n/* Network buttons\n***********************************************/\n.need-share-button_wechat {\n  color: #a2dc30;\n}\n.need-share-button_wechat.need-share-button_link-box {\n  color: #fff;\n\n  background: #a2dc30;\n}\n.need-share-button_weibo {\n  color: #d52b2b;\n}\n.need-share-button_weibo.need-share-button_link-box {\n  color: #fff;\n\n  background: #d52b2b;\n}\n.need-share-button_douban {\n  color: #072;\n}\n.need-share-button_douban:before {\n  content: '豆';\n}\n.need-share-button_douban.need-share-button_link-box {\n  color: #fff;\n\n  background: #072;\n}\n.need-share-button_qqzone {\n  color: #ffce00;\n}\n.need-share-button_qqzone.need-share-button_link-box {\n  color: #fff;\n\n  background: #ffce00;\n}\n.need-share-button_renren {\n  color: #207cc5;\n}\n.need-share-button_renren.need-share-button_link-box {\n  color: #fff;\n\n  background: #207cc5;\n}\n.need-share-button_mailto {\n  color: #efbe00;\n}\n.need-share-button_mailto.need-share-button_link-box {\n  color: #fff;\n\n  background: #efbe00;\n}\n.need-share-button_twitter {\n  color: #00acec;\n}\n.need-share-button_twitter.need-share-button_link-box {\n  color: #fff;\n\n  background: #00acec;\n}\n.need-share-button_pinterest {\n  color: #cd2027;\n}\n.need-share-button_pinterest.need-share-button_link-box {\n  color: #fff;\n\n  background: #cd2027;\n}\n.need-share-button_facebook {\n  color: #3b5998;\n}\n.need-share-button_facebook.need-share-button_link-box {\n  color: #fff;\n\n  background: #3b5998;\n}\n.need-share-button_googleplus {\n  color: #d44132;\n}\n.need-share-button_googleplus.need-share-button_link-box {\n  color: #fff;\n\n  background: #d44132;\n}\n.need-share-button_reddit {\n  color: #000;\n}\n.need-share-button_reddit.need-share-button_link-box {\n  color: #fff;\n\n  background: #000;\n}\n.need-share-button_delicious {\n  color: #000;\n}\n.need-share-button_delicious.need-share-button_link-box {\n  color: #fff;\n\n  background: #000;\n}\n.need-share-button_stumbleupon {\n  color: #f04e23;\n}\n.need-share-button_stumbleupon.need-share-button_link-box {\n  color: #fff;\n\n  background: #f04e23;\n}\n.need-share-button_linkedin {\n  color: #0085af;\n}\n.need-share-button_linkedin.need-share-button_link-box {\n  color: #fff;\n\n  background: #0085af;\n}\n.need-share-button_tumblr {\n  color: #34465d;\n}\n.need-share-button_tumblr.need-share-button_link-box {\n  color: #fff;\n\n  background: #34465d;\n}\n.need-share-button_googlebookmarks {\n  color: #fde331;\n}\n.need-share-button_googlebookmarks.need-share-button_link-box {\n  color: #fff;\n\n  background: #fde331;\n}\n.need-share-button_newsvine {\n  color: #03652c;\n}\n.need-share-button_newsvine.need-share-button_link-box {\n  color: #fff;\n\n  background: #03652c;\n}\n.need-share-button_evernote {\n  color: #79d626;\n}\n.need-share-button_evernote.need-share-button_link-box {\n  color: #fff;\n\n  background: #79d626;\n}\n.need-share-button_friendfeed {\n  color: #b0cbe9;\n}\n.need-share-button_friendfeed.need-share-button_link-box {\n  color: #fff;\n\n  background: #b0cbe9;\n}\n.need-share-button_vkontakte {\n  color: #4c75a3;\n}\n.need-share-button_vkontakte.need-share-button_link-box {\n  color: #fff;\n\n  background: #4c75a3;\n}\n.need-share-button_odnoklassniki {\n  color: #ed812b;\n}\n.need-share-button_odnoklassniki.need-share-button_link-box {\n  color: #fff;\n\n  background: #ed812b;\n}\n.need-share-button_mailru {\n  color: #f89c0e;\n}\n.need-share-button_mailru.need-share-button_link-box {\n  color: #fff;\n\n  background: #f89c0e;\n}\n"}],"Post":[{"title":"Deep Residual Learning for Image Recognition","date":"2019-03-06T12:49:41.000Z","_content":"\n神经网络越深就越难训练，作者提出一种残差学习框架来降低网络训练的难度。\n<!-- more --> \n","source":"_posts/Deep-Residual-Learning-for-Image-Recognition.md","raw":"---\ntitle: Deep Residual Learning for Image Recognition\ndate: 2019-03-06 20:49:41\ntags:\n    - 图像识别\n    - 残差网络\n    - 神经网络\n    - 论文阅读\ncategories: 科研\n---\n\n神经网络越深就越难训练，作者提出一种残差学习框架来降低网络训练的难度。\n<!-- more --> \n","slug":"Deep-Residual-Learning-for-Image-Recognition","published":1,"updated":"2019-03-07T03:12:31.558Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck0ozhiw30000gkuwc9m9kqfq","content":"<p>神经网络越深就越难训练，作者提出一种残差学习框架来降低网络训练的难度。<br><a id=\"more\"></a> </p>\n","site":{"data":{}},"excerpt":"<p>神经网络越深就越难训练，作者提出一种残差学习框架来降低网络训练的难度。<br></p>","more":"<p></p>"},{"title":"Java内存区域","date":"2019-01-10T04:04:56.000Z","_content":"\n# Java内存区域\n\nJava虚拟机在执行Java程序的过程中，把其所管理的内存划分成多个区域，如下图所示。每个数据区域都有各自的用途，有的区域随着虚拟机进程的启动而存在，是线程公有的；有些区域依赖于特定的线程而存在，是线程私有的。\n![image](Java内存区域/运行时内存.png)\n<!-- more -->\n## 程序计数器\n\n程序计数器是一小块内存区域，可以看作是当前线程执行的字节码的行号指示器。每条线程都独立拥有一个程序计数器，因此程序计数器是线程私有的。\n\n## Java虚拟机栈\n\nJava虚拟机栈描述的是Java方法执行的内存模型：每个方法在执行时都会创建一个栈帧（stack frame）用于存储局部变量表、操作数栈、动态链接、方法出口等信息。每个方法从被调用开始执行到执行完成返回的过程，就对应这一个栈帧在虚拟机栈中入栈和出栈的过程。Java内存区域经常被简单地划分为堆内存和栈内存，其中的栈内存粗略来讲就是指的Java虚拟机栈，当然实际上内存划分肯定更加复杂。虚拟机栈与程序计数器一样的线程私有的。  \n局部变量表存放了编译器可知的各种基本数据类型（boolean、byte、char、short、int、float、long、double）、对象引用（reference类型，直观上相当于C语言中的指针，存放的是对象地址）。64位长度的long和double类型的数据会占用2个局部变量空间（Slot），其余的数据类型只占用1个Slot。  \n与Java虚拟机栈相关的两个异常：如果线程请求的栈深度大于虚拟机所允许的深度，就会抛出StackOverflowError异常，一般Java程序中递归调用一个方法而不设置终止条件就会出现这个异常，例如下面样例程序求解斐波那契数列，注释了终止条件就会出现异常；如果虚拟机栈可以动态扩展，但是扩展时无法申请到足够的内存空间，就会抛出OutOfMemoryError异常。\n\n```\npublic int getFibonacci(int n) {\n    // if(n == 0||n == 1){\n    //     return n;\n    // }\n    return getFibonacciByRecursion(n-1)+getFibonacciByRecursion(n-2);\n}\n```\n## 本地方法栈\n\n本地方法栈（Native Method Stack）与虚拟机栈所发挥的作用相似，只不过区别在于虚拟机栈为虚拟机执行Java方法服务，本地方法栈为虚拟机中使用到的Native方法服务。有的虚拟机，如Sun HotSpot虚拟机将本地方法栈和虚拟机栈合二为一。  \n那什么是Native方法呢？简单来讲，一个native method就是一个java调用非java代码的接口，也就是该方法由非java语言实现，比如C语言。那么可以知道，在定义一个native方法时，不需要提供实现，只需要定义方法名，参数以及返回类型，如下面实例：\n```\npublic class IHaveNatives {\n    native public void Native1( int x ) ;\n    native static public long Native2() ;\n    native synchronized private float Native3( Object o ) ;\n    native void Native4( int[] ary ) throws Exception ;\n} \n\n```\n## Java堆\n\nJava堆（Java Heap）一般是Java虚拟机所管理的内存中最大的一块，被Java虚拟机进程下的所有线程共享的一块内存区域。Java堆的唯一目的就是存放对象实例，几乎所有的对象实例都要在堆上分配内存。Java虚拟机规范中描述：所有的对象实例以及数组都要在堆上分配（The heap is the runtime data area from which memory for all class instances and arrays is allocated），但是随着JIT编译器的发展以及逃逸分析技术的成熟，栈上分配、标量替换优化技术使得所有对象在堆上分配内存就变得不那么“绝对”。  \nJava堆是垃圾收集器管理的主要区域，很多时候也被称之为“GC 堆（Garbage Collected Heap）”。从垃圾回收的角度来看，目前垃圾收集器都采用分代算法，所以Java堆还细分为：新生代和老年代，其中新生代又可以分为Eden空间、From Survivor空间、To Survivor空间，HotSpot虚拟机默认Eden和Survivor的大小比例是8:1。  \n根据Java虚拟机规范规定，Java堆可以处在物理上不连续的内存空间中，只要逻辑连续就行了。目前主流的虚拟机都可以通过命令来自主设置Java堆的大小，其中命令-Xms1024m指的是Java堆的初始大小，-Xmx2048m指的是分配给Java堆的最大内存。\n## 方法区\n\n方法区和Java堆一样也是所有线程共享的内存区域，它用于存储已被虚拟机加载的类信息、常量、静态变量、即时编译器编译后的代码等数据。有些在HotSpot虚拟机上开发、部署程序的开发者习惯称方法区为“永久代（Permanent Generation）”，这是由于HotSpot虚拟机的垃圾收集器可以像管理Java堆一样管理方法区这块内存区域，省去了专门为方法区编写内存管理代码的工作。\n## 运行时常量池\n\n运行时常量池（Runtime Constant Pool）是方法区的一部分。Class文件中除了有类的版本、字段、方法、接口等描述信息外，还有一项信息是常量池，用于存放编译期生成的各种字面量和符号引用，这部分内容将在类加载后进入方法区的运行时常量池。  \n运行时常量池相对于Class文件常量池的另一个重要特征是具备动态性，Java语言并不要求常量一定只有编译期才能产生，也就是并非预置入Class文件中常量池的内容才能进入方法区运行时常量池，运行期间也可能将新的常量放入池中，比如String类中的intern()方法。\n\n## 直接内存\n\n直接内存（Direct Memory）并不是虚拟机运行时数据区的一部分，也不是Java虚拟机规范中定义的内存区域，但是这部分内存也被频繁使用。  \n自从JDK1.4中引入NIO（New Input/Output）类，提出一种基于通道（Channel）和缓冲区（Buffer）的I/O方式，它可以使用Native方法直接分配堆外内存，然后通过一个存储在Java堆中的DirectByteBuffer对象作为这块内存的引用进行操作。\n\n## 对象创建过程\n\n虚拟机遇到一条new指令，首先检查这个指令的参数是否能在常量池中定位到一个类的符号引用，并且检查这个符号引用代表的类是否已被加载、解析和初始化过。如果没有就必须先执行相关的类加载过程。  \n在类加载检查通过之后，接下来虚拟机将为新生对象分配内存。对象所需内存的大小在类加载完成后就可以完全确定，为对象分配空间的任务就是把一块确定大小的内存从Java堆中划分出来。\n假设Java堆中内存是绝对规整的，所有用过的内存都放在一边，空闲的内存放在另一边，中间放着一个指针作为分界点的指示器，那么分配内存就是把指针往空闲内存的方向挪动一段与对象大小相等的距离，这种分配方式称为“指针碰撞（Bump the Pointer）”；如果Java堆中的内存不规整，那么虚拟机就必须维护一个列表，记录哪些内存块可用，在为对象分配内存的时候就从列表中寻找一块足够大的空间划分给对象实例，并更新表上的记录，这种分配方式称为“空闲列表（Free List）”。","source":"_posts/Java内存区域.md","raw":"---\ntitle: Java内存区域\ndate: 2019-01-10 12:04:56\ntags: \n    - Java堆\n    - 方法区\n    - Java虚拟机栈\ncategories: 深入理解Java虚拟机\n---\n\n# Java内存区域\n\nJava虚拟机在执行Java程序的过程中，把其所管理的内存划分成多个区域，如下图所示。每个数据区域都有各自的用途，有的区域随着虚拟机进程的启动而存在，是线程公有的；有些区域依赖于特定的线程而存在，是线程私有的。\n![image](Java内存区域/运行时内存.png)\n<!-- more -->\n## 程序计数器\n\n程序计数器是一小块内存区域，可以看作是当前线程执行的字节码的行号指示器。每条线程都独立拥有一个程序计数器，因此程序计数器是线程私有的。\n\n## Java虚拟机栈\n\nJava虚拟机栈描述的是Java方法执行的内存模型：每个方法在执行时都会创建一个栈帧（stack frame）用于存储局部变量表、操作数栈、动态链接、方法出口等信息。每个方法从被调用开始执行到执行完成返回的过程，就对应这一个栈帧在虚拟机栈中入栈和出栈的过程。Java内存区域经常被简单地划分为堆内存和栈内存，其中的栈内存粗略来讲就是指的Java虚拟机栈，当然实际上内存划分肯定更加复杂。虚拟机栈与程序计数器一样的线程私有的。  \n局部变量表存放了编译器可知的各种基本数据类型（boolean、byte、char、short、int、float、long、double）、对象引用（reference类型，直观上相当于C语言中的指针，存放的是对象地址）。64位长度的long和double类型的数据会占用2个局部变量空间（Slot），其余的数据类型只占用1个Slot。  \n与Java虚拟机栈相关的两个异常：如果线程请求的栈深度大于虚拟机所允许的深度，就会抛出StackOverflowError异常，一般Java程序中递归调用一个方法而不设置终止条件就会出现这个异常，例如下面样例程序求解斐波那契数列，注释了终止条件就会出现异常；如果虚拟机栈可以动态扩展，但是扩展时无法申请到足够的内存空间，就会抛出OutOfMemoryError异常。\n\n```\npublic int getFibonacci(int n) {\n    // if(n == 0||n == 1){\n    //     return n;\n    // }\n    return getFibonacciByRecursion(n-1)+getFibonacciByRecursion(n-2);\n}\n```\n## 本地方法栈\n\n本地方法栈（Native Method Stack）与虚拟机栈所发挥的作用相似，只不过区别在于虚拟机栈为虚拟机执行Java方法服务，本地方法栈为虚拟机中使用到的Native方法服务。有的虚拟机，如Sun HotSpot虚拟机将本地方法栈和虚拟机栈合二为一。  \n那什么是Native方法呢？简单来讲，一个native method就是一个java调用非java代码的接口，也就是该方法由非java语言实现，比如C语言。那么可以知道，在定义一个native方法时，不需要提供实现，只需要定义方法名，参数以及返回类型，如下面实例：\n```\npublic class IHaveNatives {\n    native public void Native1( int x ) ;\n    native static public long Native2() ;\n    native synchronized private float Native3( Object o ) ;\n    native void Native4( int[] ary ) throws Exception ;\n} \n\n```\n## Java堆\n\nJava堆（Java Heap）一般是Java虚拟机所管理的内存中最大的一块，被Java虚拟机进程下的所有线程共享的一块内存区域。Java堆的唯一目的就是存放对象实例，几乎所有的对象实例都要在堆上分配内存。Java虚拟机规范中描述：所有的对象实例以及数组都要在堆上分配（The heap is the runtime data area from which memory for all class instances and arrays is allocated），但是随着JIT编译器的发展以及逃逸分析技术的成熟，栈上分配、标量替换优化技术使得所有对象在堆上分配内存就变得不那么“绝对”。  \nJava堆是垃圾收集器管理的主要区域，很多时候也被称之为“GC 堆（Garbage Collected Heap）”。从垃圾回收的角度来看，目前垃圾收集器都采用分代算法，所以Java堆还细分为：新生代和老年代，其中新生代又可以分为Eden空间、From Survivor空间、To Survivor空间，HotSpot虚拟机默认Eden和Survivor的大小比例是8:1。  \n根据Java虚拟机规范规定，Java堆可以处在物理上不连续的内存空间中，只要逻辑连续就行了。目前主流的虚拟机都可以通过命令来自主设置Java堆的大小，其中命令-Xms1024m指的是Java堆的初始大小，-Xmx2048m指的是分配给Java堆的最大内存。\n## 方法区\n\n方法区和Java堆一样也是所有线程共享的内存区域，它用于存储已被虚拟机加载的类信息、常量、静态变量、即时编译器编译后的代码等数据。有些在HotSpot虚拟机上开发、部署程序的开发者习惯称方法区为“永久代（Permanent Generation）”，这是由于HotSpot虚拟机的垃圾收集器可以像管理Java堆一样管理方法区这块内存区域，省去了专门为方法区编写内存管理代码的工作。\n## 运行时常量池\n\n运行时常量池（Runtime Constant Pool）是方法区的一部分。Class文件中除了有类的版本、字段、方法、接口等描述信息外，还有一项信息是常量池，用于存放编译期生成的各种字面量和符号引用，这部分内容将在类加载后进入方法区的运行时常量池。  \n运行时常量池相对于Class文件常量池的另一个重要特征是具备动态性，Java语言并不要求常量一定只有编译期才能产生，也就是并非预置入Class文件中常量池的内容才能进入方法区运行时常量池，运行期间也可能将新的常量放入池中，比如String类中的intern()方法。\n\n## 直接内存\n\n直接内存（Direct Memory）并不是虚拟机运行时数据区的一部分，也不是Java虚拟机规范中定义的内存区域，但是这部分内存也被频繁使用。  \n自从JDK1.4中引入NIO（New Input/Output）类，提出一种基于通道（Channel）和缓冲区（Buffer）的I/O方式，它可以使用Native方法直接分配堆外内存，然后通过一个存储在Java堆中的DirectByteBuffer对象作为这块内存的引用进行操作。\n\n## 对象创建过程\n\n虚拟机遇到一条new指令，首先检查这个指令的参数是否能在常量池中定位到一个类的符号引用，并且检查这个符号引用代表的类是否已被加载、解析和初始化过。如果没有就必须先执行相关的类加载过程。  \n在类加载检查通过之后，接下来虚拟机将为新生对象分配内存。对象所需内存的大小在类加载完成后就可以完全确定，为对象分配空间的任务就是把一块确定大小的内存从Java堆中划分出来。\n假设Java堆中内存是绝对规整的，所有用过的内存都放在一边，空闲的内存放在另一边，中间放着一个指针作为分界点的指示器，那么分配内存就是把指针往空闲内存的方向挪动一段与对象大小相等的距离，这种分配方式称为“指针碰撞（Bump the Pointer）”；如果Java堆中的内存不规整，那么虚拟机就必须维护一个列表，记录哪些内存块可用，在为对象分配内存的时候就从列表中寻找一块足够大的空间划分给对象实例，并更新表上的记录，这种分配方式称为“空闲列表（Free List）”。","slug":"Java内存区域","published":1,"updated":"2019-01-18T04:19:10.584Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck0ozhiwb0002gkuwxvdybr59","content":"<h1 id=\"Java内存区域\"><a href=\"#Java内存区域\" class=\"headerlink\" title=\"Java内存区域\"></a>Java内存区域</h1><p>Java虚拟机在执行Java程序的过程中，把其所管理的内存划分成多个区域，如下图所示。每个数据区域都有各自的用途，有的区域随着虚拟机进程的启动而存在，是线程公有的；有些区域依赖于特定的线程而存在，是线程私有的。<br><img src=\"/2019/01/10/Java内存区域/运行时内存.png\" alt=\"image\"><br><a id=\"more\"></a></p>\n<h2 id=\"程序计数器\"><a href=\"#程序计数器\" class=\"headerlink\" title=\"程序计数器\"></a>程序计数器</h2><p>程序计数器是一小块内存区域，可以看作是当前线程执行的字节码的行号指示器。每条线程都独立拥有一个程序计数器，因此程序计数器是线程私有的。</p>\n<h2 id=\"Java虚拟机栈\"><a href=\"#Java虚拟机栈\" class=\"headerlink\" title=\"Java虚拟机栈\"></a>Java虚拟机栈</h2><p>Java虚拟机栈描述的是Java方法执行的内存模型：每个方法在执行时都会创建一个栈帧（stack frame）用于存储局部变量表、操作数栈、动态链接、方法出口等信息。每个方法从被调用开始执行到执行完成返回的过程，就对应这一个栈帧在虚拟机栈中入栈和出栈的过程。Java内存区域经常被简单地划分为堆内存和栈内存，其中的栈内存粗略来讲就是指的Java虚拟机栈，当然实际上内存划分肯定更加复杂。虚拟机栈与程序计数器一样的线程私有的。<br>局部变量表存放了编译器可知的各种基本数据类型（boolean、byte、char、short、int、float、long、double）、对象引用（reference类型，直观上相当于C语言中的指针，存放的是对象地址）。64位长度的long和double类型的数据会占用2个局部变量空间（Slot），其余的数据类型只占用1个Slot。<br>与Java虚拟机栈相关的两个异常：如果线程请求的栈深度大于虚拟机所允许的深度，就会抛出StackOverflowError异常，一般Java程序中递归调用一个方法而不设置终止条件就会出现这个异常，例如下面样例程序求解斐波那契数列，注释了终止条件就会出现异常；如果虚拟机栈可以动态扩展，但是扩展时无法申请到足够的内存空间，就会抛出OutOfMemoryError异常。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public int getFibonacci(int n) &#123;</span><br><span class=\"line\">    // if(n == 0||n == 1)&#123;</span><br><span class=\"line\">    //     return n;</span><br><span class=\"line\">    // &#125;</span><br><span class=\"line\">    return getFibonacciByRecursion(n-1)+getFibonacciByRecursion(n-2);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"本地方法栈\"><a href=\"#本地方法栈\" class=\"headerlink\" title=\"本地方法栈\"></a>本地方法栈</h2><p>本地方法栈（Native Method Stack）与虚拟机栈所发挥的作用相似，只不过区别在于虚拟机栈为虚拟机执行Java方法服务，本地方法栈为虚拟机中使用到的Native方法服务。有的虚拟机，如Sun HotSpot虚拟机将本地方法栈和虚拟机栈合二为一。<br>那什么是Native方法呢？简单来讲，一个native method就是一个java调用非java代码的接口，也就是该方法由非java语言实现，比如C语言。那么可以知道，在定义一个native方法时，不需要提供实现，只需要定义方法名，参数以及返回类型，如下面实例：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public class IHaveNatives &#123;</span><br><span class=\"line\">    native public void Native1( int x ) ;</span><br><span class=\"line\">    native static public long Native2() ;</span><br><span class=\"line\">    native synchronized private float Native3( Object o ) ;</span><br><span class=\"line\">    native void Native4( int[] ary ) throws Exception ;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"Java堆\"><a href=\"#Java堆\" class=\"headerlink\" title=\"Java堆\"></a>Java堆</h2><p>Java堆（Java Heap）一般是Java虚拟机所管理的内存中最大的一块，被Java虚拟机进程下的所有线程共享的一块内存区域。Java堆的唯一目的就是存放对象实例，几乎所有的对象实例都要在堆上分配内存。Java虚拟机规范中描述：所有的对象实例以及数组都要在堆上分配（The heap is the runtime data area from which memory for all class instances and arrays is allocated），但是随着JIT编译器的发展以及逃逸分析技术的成熟，栈上分配、标量替换优化技术使得所有对象在堆上分配内存就变得不那么“绝对”。<br>Java堆是垃圾收集器管理的主要区域，很多时候也被称之为“GC 堆（Garbage Collected Heap）”。从垃圾回收的角度来看，目前垃圾收集器都采用分代算法，所以Java堆还细分为：新生代和老年代，其中新生代又可以分为Eden空间、From Survivor空间、To Survivor空间，HotSpot虚拟机默认Eden和Survivor的大小比例是8:1。<br>根据Java虚拟机规范规定，Java堆可以处在物理上不连续的内存空间中，只要逻辑连续就行了。目前主流的虚拟机都可以通过命令来自主设置Java堆的大小，其中命令-Xms1024m指的是Java堆的初始大小，-Xmx2048m指的是分配给Java堆的最大内存。</p>\n<h2 id=\"方法区\"><a href=\"#方法区\" class=\"headerlink\" title=\"方法区\"></a>方法区</h2><p>方法区和Java堆一样也是所有线程共享的内存区域，它用于存储已被虚拟机加载的类信息、常量、静态变量、即时编译器编译后的代码等数据。有些在HotSpot虚拟机上开发、部署程序的开发者习惯称方法区为“永久代（Permanent Generation）”，这是由于HotSpot虚拟机的垃圾收集器可以像管理Java堆一样管理方法区这块内存区域，省去了专门为方法区编写内存管理代码的工作。</p>\n<h2 id=\"运行时常量池\"><a href=\"#运行时常量池\" class=\"headerlink\" title=\"运行时常量池\"></a>运行时常量池</h2><p>运行时常量池（Runtime Constant Pool）是方法区的一部分。Class文件中除了有类的版本、字段、方法、接口等描述信息外，还有一项信息是常量池，用于存放编译期生成的各种字面量和符号引用，这部分内容将在类加载后进入方法区的运行时常量池。<br>运行时常量池相对于Class文件常量池的另一个重要特征是具备动态性，Java语言并不要求常量一定只有编译期才能产生，也就是并非预置入Class文件中常量池的内容才能进入方法区运行时常量池，运行期间也可能将新的常量放入池中，比如String类中的intern()方法。</p>\n<h2 id=\"直接内存\"><a href=\"#直接内存\" class=\"headerlink\" title=\"直接内存\"></a>直接内存</h2><p>直接内存（Direct Memory）并不是虚拟机运行时数据区的一部分，也不是Java虚拟机规范中定义的内存区域，但是这部分内存也被频繁使用。<br>自从JDK1.4中引入NIO（New Input/Output）类，提出一种基于通道（Channel）和缓冲区（Buffer）的I/O方式，它可以使用Native方法直接分配堆外内存，然后通过一个存储在Java堆中的DirectByteBuffer对象作为这块内存的引用进行操作。</p>\n<h2 id=\"对象创建过程\"><a href=\"#对象创建过程\" class=\"headerlink\" title=\"对象创建过程\"></a>对象创建过程</h2><p>虚拟机遇到一条new指令，首先检查这个指令的参数是否能在常量池中定位到一个类的符号引用，并且检查这个符号引用代表的类是否已被加载、解析和初始化过。如果没有就必须先执行相关的类加载过程。<br>在类加载检查通过之后，接下来虚拟机将为新生对象分配内存。对象所需内存的大小在类加载完成后就可以完全确定，为对象分配空间的任务就是把一块确定大小的内存从Java堆中划分出来。<br>假设Java堆中内存是绝对规整的，所有用过的内存都放在一边，空闲的内存放在另一边，中间放着一个指针作为分界点的指示器，那么分配内存就是把指针往空闲内存的方向挪动一段与对象大小相等的距离，这种分配方式称为“指针碰撞（Bump the Pointer）”；如果Java堆中的内存不规整，那么虚拟机就必须维护一个列表，记录哪些内存块可用，在为对象分配内存的时候就从列表中寻找一块足够大的空间划分给对象实例，并更新表上的记录，这种分配方式称为“空闲列表（Free List）”。</p>\n","site":{"data":{}},"excerpt":"<h1 id=\"Java内存区域\"><a href=\"#Java内存区域\" class=\"headerlink\" title=\"Java内存区域\"></a>Java内存区域</h1><p>Java虚拟机在执行Java程序的过程中，把其所管理的内存划分成多个区域，如下图所示。每个数据区域都有各自的用途，有的区域随着虚拟机进程的启动而存在，是线程公有的；有些区域依赖于特定的线程而存在，是线程私有的。<br><img src=\"/2019/01/10/Java内存区域/运行时内存.png\" alt=\"image\"><br></p>","more":"<p></p>\n<h2 id=\"程序计数器\"><a href=\"#程序计数器\" class=\"headerlink\" title=\"程序计数器\"></a>程序计数器</h2><p>程序计数器是一小块内存区域，可以看作是当前线程执行的字节码的行号指示器。每条线程都独立拥有一个程序计数器，因此程序计数器是线程私有的。</p>\n<h2 id=\"Java虚拟机栈\"><a href=\"#Java虚拟机栈\" class=\"headerlink\" title=\"Java虚拟机栈\"></a>Java虚拟机栈</h2><p>Java虚拟机栈描述的是Java方法执行的内存模型：每个方法在执行时都会创建一个栈帧（stack frame）用于存储局部变量表、操作数栈、动态链接、方法出口等信息。每个方法从被调用开始执行到执行完成返回的过程，就对应这一个栈帧在虚拟机栈中入栈和出栈的过程。Java内存区域经常被简单地划分为堆内存和栈内存，其中的栈内存粗略来讲就是指的Java虚拟机栈，当然实际上内存划分肯定更加复杂。虚拟机栈与程序计数器一样的线程私有的。<br>局部变量表存放了编译器可知的各种基本数据类型（boolean、byte、char、short、int、float、long、double）、对象引用（reference类型，直观上相当于C语言中的指针，存放的是对象地址）。64位长度的long和double类型的数据会占用2个局部变量空间（Slot），其余的数据类型只占用1个Slot。<br>与Java虚拟机栈相关的两个异常：如果线程请求的栈深度大于虚拟机所允许的深度，就会抛出StackOverflowError异常，一般Java程序中递归调用一个方法而不设置终止条件就会出现这个异常，例如下面样例程序求解斐波那契数列，注释了终止条件就会出现异常；如果虚拟机栈可以动态扩展，但是扩展时无法申请到足够的内存空间，就会抛出OutOfMemoryError异常。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public int getFibonacci(int n) &#123;</span><br><span class=\"line\">    // if(n == 0||n == 1)&#123;</span><br><span class=\"line\">    //     return n;</span><br><span class=\"line\">    // &#125;</span><br><span class=\"line\">    return getFibonacciByRecursion(n-1)+getFibonacciByRecursion(n-2);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"本地方法栈\"><a href=\"#本地方法栈\" class=\"headerlink\" title=\"本地方法栈\"></a>本地方法栈</h2><p>本地方法栈（Native Method Stack）与虚拟机栈所发挥的作用相似，只不过区别在于虚拟机栈为虚拟机执行Java方法服务，本地方法栈为虚拟机中使用到的Native方法服务。有的虚拟机，如Sun HotSpot虚拟机将本地方法栈和虚拟机栈合二为一。<br>那什么是Native方法呢？简单来讲，一个native method就是一个java调用非java代码的接口，也就是该方法由非java语言实现，比如C语言。那么可以知道，在定义一个native方法时，不需要提供实现，只需要定义方法名，参数以及返回类型，如下面实例：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public class IHaveNatives &#123;</span><br><span class=\"line\">    native public void Native1( int x ) ;</span><br><span class=\"line\">    native static public long Native2() ;</span><br><span class=\"line\">    native synchronized private float Native3( Object o ) ;</span><br><span class=\"line\">    native void Native4( int[] ary ) throws Exception ;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"Java堆\"><a href=\"#Java堆\" class=\"headerlink\" title=\"Java堆\"></a>Java堆</h2><p>Java堆（Java Heap）一般是Java虚拟机所管理的内存中最大的一块，被Java虚拟机进程下的所有线程共享的一块内存区域。Java堆的唯一目的就是存放对象实例，几乎所有的对象实例都要在堆上分配内存。Java虚拟机规范中描述：所有的对象实例以及数组都要在堆上分配（The heap is the runtime data area from which memory for all class instances and arrays is allocated），但是随着JIT编译器的发展以及逃逸分析技术的成熟，栈上分配、标量替换优化技术使得所有对象在堆上分配内存就变得不那么“绝对”。<br>Java堆是垃圾收集器管理的主要区域，很多时候也被称之为“GC 堆（Garbage Collected Heap）”。从垃圾回收的角度来看，目前垃圾收集器都采用分代算法，所以Java堆还细分为：新生代和老年代，其中新生代又可以分为Eden空间、From Survivor空间、To Survivor空间，HotSpot虚拟机默认Eden和Survivor的大小比例是8:1。<br>根据Java虚拟机规范规定，Java堆可以处在物理上不连续的内存空间中，只要逻辑连续就行了。目前主流的虚拟机都可以通过命令来自主设置Java堆的大小，其中命令-Xms1024m指的是Java堆的初始大小，-Xmx2048m指的是分配给Java堆的最大内存。</p>\n<h2 id=\"方法区\"><a href=\"#方法区\" class=\"headerlink\" title=\"方法区\"></a>方法区</h2><p>方法区和Java堆一样也是所有线程共享的内存区域，它用于存储已被虚拟机加载的类信息、常量、静态变量、即时编译器编译后的代码等数据。有些在HotSpot虚拟机上开发、部署程序的开发者习惯称方法区为“永久代（Permanent Generation）”，这是由于HotSpot虚拟机的垃圾收集器可以像管理Java堆一样管理方法区这块内存区域，省去了专门为方法区编写内存管理代码的工作。</p>\n<h2 id=\"运行时常量池\"><a href=\"#运行时常量池\" class=\"headerlink\" title=\"运行时常量池\"></a>运行时常量池</h2><p>运行时常量池（Runtime Constant Pool）是方法区的一部分。Class文件中除了有类的版本、字段、方法、接口等描述信息外，还有一项信息是常量池，用于存放编译期生成的各种字面量和符号引用，这部分内容将在类加载后进入方法区的运行时常量池。<br>运行时常量池相对于Class文件常量池的另一个重要特征是具备动态性，Java语言并不要求常量一定只有编译期才能产生，也就是并非预置入Class文件中常量池的内容才能进入方法区运行时常量池，运行期间也可能将新的常量放入池中，比如String类中的intern()方法。</p>\n<h2 id=\"直接内存\"><a href=\"#直接内存\" class=\"headerlink\" title=\"直接内存\"></a>直接内存</h2><p>直接内存（Direct Memory）并不是虚拟机运行时数据区的一部分，也不是Java虚拟机规范中定义的内存区域，但是这部分内存也被频繁使用。<br>自从JDK1.4中引入NIO（New Input/Output）类，提出一种基于通道（Channel）和缓冲区（Buffer）的I/O方式，它可以使用Native方法直接分配堆外内存，然后通过一个存储在Java堆中的DirectByteBuffer对象作为这块内存的引用进行操作。</p>\n<h2 id=\"对象创建过程\"><a href=\"#对象创建过程\" class=\"headerlink\" title=\"对象创建过程\"></a>对象创建过程</h2><p>虚拟机遇到一条new指令，首先检查这个指令的参数是否能在常量池中定位到一个类的符号引用，并且检查这个符号引用代表的类是否已被加载、解析和初始化过。如果没有就必须先执行相关的类加载过程。<br>在类加载检查通过之后，接下来虚拟机将为新生对象分配内存。对象所需内存的大小在类加载完成后就可以完全确定，为对象分配空间的任务就是把一块确定大小的内存从Java堆中划分出来。<br>假设Java堆中内存是绝对规整的，所有用过的内存都放在一边，空闲的内存放在另一边，中间放着一个指针作为分界点的指示器，那么分配内存就是把指针往空闲内存的方向挪动一段与对象大小相等的距离，这种分配方式称为“指针碰撞（Bump the Pointer）”；如果Java堆中的内存不规整，那么虚拟机就必须维护一个列表，记录哪些内存块可用，在为对象分配内存的时候就从列表中寻找一块足够大的空间划分给对象实例，并更新表上的记录，这种分配方式称为“空闲列表（Free List）”。</p>"},{"title":"Hierarchical Object Detection with Deep Reinforcement Learning","date":"2019-01-08T13:31:17.000Z","_content":"# Hierarchical Object Detection with Deep Reinforcement Learning\n\n## Abstract\n> 关键的思想在于关注图像中包含更丰富信息的那些部分并放大它们。\n\n\n\n## Introduction\n1. 考虑区域之间的联系，\n2. 利用top-down的扫描方式，首先获取整个图像，关注局部区域的相关信息，\n3. 基于增强学习训练的代理（agent）有能力检测图像中的对象\n<!-- more --> \n\n## Hierarchical Object Detection Model\n###### **1. Markov Decision Process（马尔科夫决策过程）**\n> State:当前区域描述符（the descriptor of current region）和记忆向量（memory vector）\n\n> Actions:move actions和terminal actions\n\n> Reward:\n保证move action都是朝着更靠近ground truth的方向移动；\n当IOU超过threshold，则终止移动。\n\n###### **2. Q-learning**\n$$\nQ(s,a) = r+\\lambda{max}_{a'}Q(s',a')\n$$\n\n###### **3. Model**\n* the Image-Zooms model\n> 使用VGG-16提取图像区域特征向量$(7*7*512)$,\n> 拼接区域特征向量与记忆向量（memory vector）$(7*7*512+24=25088+24)$,\n> 经过两个1024维的全连接层，输出6个可能的动作（actions），\n> 反复迭代，直到终止动作\n\n* the Pool45-Crops model\n![image](Hierarchical-Object-Detection-with-Deep-Reinforcement-Learning/Hierarchical-Object-Detection-Models.png)\n\n\n###### **4. Training**\n\n\n\n## Experiments\n\n### **1. Qualitative Results**\n![image](Hierarchical-Object-Detection-with-Deep-Reinforcement-Learning/aeroplane20180626.png)\n\n\n\n## [Implementation](https://github.com/imatge-upc/detection-2016-nipsws)\n\n### **1. keras实现**\n* 提取区域特征\n\n![image](Hierarchical-Object-Detection-with-Deep-Reinforcement-Learning/vgg16.png)\n* state不断更新，并作为model的输入\n```\n(7*7*512)\n```\n* \n\n## 代码问题总结\n1. 数据类型错误**TypeError: slice indices must be integers or None or have an __index__ method**\n\n这是由于数组，矩阵等类型数据的下标是整数，而在\n\n```\n   region_mask[offset[0]:offset[0] + size_mask[0]\n                            , offset[1]:offset[1] + size_mask[1]] = 1\n```\noffset是float类型，所以报错，解决方法就是数据类型转换：\n\n```\n  region_mask[int(offset[0]):int(offset[0] + size_mask[0])\n                            , int(offset[1]):int(offset[1] + size_mask[1])] = 1\n```\n\n2. VGG16提取图像特征尺寸不对\n\n![image](Hierarchical-Object-Detection-with-Deep-Reinforcement-Learning/error1.png)\n\n解决方法：在图片提取特征之前，对图像进行resize；\n\n```\nim = images[z].resize((224, 224))\n```\n3. 除0错误\n\n![image](Hierarchical-Object-Detection-with-Deep-Reinforcement-Learning/error2.png)\n\n对图像进行resize的位置错误\n\n\n\n## 问题总结\n1. 问题：记忆向量的哪儿来的？\n2. 问题：哪6个动作？\n> move actions:左上、右上、左下、右下和中；\n> terminal actions\n3. 问题：每个类训练一个模型？\n> 是的，这篇文章中只训练了飞机类（aeroplane）的检测模型","source":"_posts/Hierarchical-Object-Detection-with-Deep-Reinforcement-Learning.md","raw":"---\ntitle: Hierarchical Object Detection with Deep Reinforcement Learning\ndate: 2019-01-08 21:31:17\ntags: \n    - 对象检测\n    - 论文阅读\n    - 神经网络\n    - 图像识别\ncategories: 科研\n---\n# Hierarchical Object Detection with Deep Reinforcement Learning\n\n## Abstract\n> 关键的思想在于关注图像中包含更丰富信息的那些部分并放大它们。\n\n\n\n## Introduction\n1. 考虑区域之间的联系，\n2. 利用top-down的扫描方式，首先获取整个图像，关注局部区域的相关信息，\n3. 基于增强学习训练的代理（agent）有能力检测图像中的对象\n<!-- more --> \n\n## Hierarchical Object Detection Model\n###### **1. Markov Decision Process（马尔科夫决策过程）**\n> State:当前区域描述符（the descriptor of current region）和记忆向量（memory vector）\n\n> Actions:move actions和terminal actions\n\n> Reward:\n保证move action都是朝着更靠近ground truth的方向移动；\n当IOU超过threshold，则终止移动。\n\n###### **2. Q-learning**\n$$\nQ(s,a) = r+\\lambda{max}_{a'}Q(s',a')\n$$\n\n###### **3. Model**\n* the Image-Zooms model\n> 使用VGG-16提取图像区域特征向量$(7*7*512)$,\n> 拼接区域特征向量与记忆向量（memory vector）$(7*7*512+24=25088+24)$,\n> 经过两个1024维的全连接层，输出6个可能的动作（actions），\n> 反复迭代，直到终止动作\n\n* the Pool45-Crops model\n![image](Hierarchical-Object-Detection-with-Deep-Reinforcement-Learning/Hierarchical-Object-Detection-Models.png)\n\n\n###### **4. Training**\n\n\n\n## Experiments\n\n### **1. Qualitative Results**\n![image](Hierarchical-Object-Detection-with-Deep-Reinforcement-Learning/aeroplane20180626.png)\n\n\n\n## [Implementation](https://github.com/imatge-upc/detection-2016-nipsws)\n\n### **1. keras实现**\n* 提取区域特征\n\n![image](Hierarchical-Object-Detection-with-Deep-Reinforcement-Learning/vgg16.png)\n* state不断更新，并作为model的输入\n```\n(7*7*512)\n```\n* \n\n## 代码问题总结\n1. 数据类型错误**TypeError: slice indices must be integers or None or have an __index__ method**\n\n这是由于数组，矩阵等类型数据的下标是整数，而在\n\n```\n   region_mask[offset[0]:offset[0] + size_mask[0]\n                            , offset[1]:offset[1] + size_mask[1]] = 1\n```\noffset是float类型，所以报错，解决方法就是数据类型转换：\n\n```\n  region_mask[int(offset[0]):int(offset[0] + size_mask[0])\n                            , int(offset[1]):int(offset[1] + size_mask[1])] = 1\n```\n\n2. VGG16提取图像特征尺寸不对\n\n![image](Hierarchical-Object-Detection-with-Deep-Reinforcement-Learning/error1.png)\n\n解决方法：在图片提取特征之前，对图像进行resize；\n\n```\nim = images[z].resize((224, 224))\n```\n3. 除0错误\n\n![image](Hierarchical-Object-Detection-with-Deep-Reinforcement-Learning/error2.png)\n\n对图像进行resize的位置错误\n\n\n\n## 问题总结\n1. 问题：记忆向量的哪儿来的？\n2. 问题：哪6个动作？\n> move actions:左上、右上、左下、右下和中；\n> terminal actions\n3. 问题：每个类训练一个模型？\n> 是的，这篇文章中只训练了飞机类（aeroplane）的检测模型","slug":"Hierarchical-Object-Detection-with-Deep-Reinforcement-Learning","published":1,"updated":"2019-04-12T10:17:04.241Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck0ozhiwf0006gkuwyvng23j3","content":"<h1 id=\"Hierarchical-Object-Detection-with-Deep-Reinforcement-Learning\"><a href=\"#Hierarchical-Object-Detection-with-Deep-Reinforcement-Learning\" class=\"headerlink\" title=\"Hierarchical Object Detection with Deep Reinforcement Learning\"></a>Hierarchical Object Detection with Deep Reinforcement Learning</h1><h2 id=\"Abstract\"><a href=\"#Abstract\" class=\"headerlink\" title=\"Abstract\"></a>Abstract</h2><blockquote>\n<p>关键的思想在于关注图像中包含更丰富信息的那些部分并放大它们。</p>\n</blockquote>\n<h2 id=\"Introduction\"><a href=\"#Introduction\" class=\"headerlink\" title=\"Introduction\"></a>Introduction</h2><ol>\n<li>考虑区域之间的联系，</li>\n<li>利用top-down的扫描方式，首先获取整个图像，关注局部区域的相关信息，</li>\n<li>基于增强学习训练的代理（agent）有能力检测图像中的对象<a id=\"more\"></a> \n</li>\n</ol>\n<h2 id=\"Hierarchical-Object-Detection-Model\"><a href=\"#Hierarchical-Object-Detection-Model\" class=\"headerlink\" title=\"Hierarchical Object Detection Model\"></a>Hierarchical Object Detection Model</h2><h6 id=\"1-Markov-Decision-Process（马尔科夫决策过程）\"><a href=\"#1-Markov-Decision-Process（马尔科夫决策过程）\" class=\"headerlink\" title=\"1. Markov Decision Process（马尔科夫决策过程）\"></a><strong>1. Markov Decision Process（马尔科夫决策过程）</strong></h6><blockquote>\n<p>State:当前区域描述符（the descriptor of current region）和记忆向量（memory vector）</p>\n</blockquote>\n<blockquote>\n<p>Actions:move actions和terminal actions</p>\n</blockquote>\n<blockquote>\n<p>Reward:<br>保证move action都是朝着更靠近ground truth的方向移动；<br>当IOU超过threshold，则终止移动。</p>\n</blockquote>\n<h6 id=\"2-Q-learning\"><a href=\"#2-Q-learning\" class=\"headerlink\" title=\"2. Q-learning\"></a><strong>2. Q-learning</strong></h6><p>$$<br>Q(s,a) = r+\\lambda{max}_{a’}Q(s’,a’)<br>$$</p>\n<h6 id=\"3-Model\"><a href=\"#3-Model\" class=\"headerlink\" title=\"3. Model\"></a><strong>3. Model</strong></h6><ul>\n<li><p>the Image-Zooms model</p>\n<blockquote>\n<p>使用VGG-16提取图像区域特征向量$(7<em>7</em>512)$,<br>拼接区域特征向量与记忆向量（memory vector）$(7<em>7</em>512+24=25088+24)$,<br>经过两个1024维的全连接层，输出6个可能的动作（actions），<br>反复迭代，直到终止动作</p>\n</blockquote>\n</li>\n<li><p>the Pool45-Crops model<br><img src=\"/2019/01/08/Hierarchical-Object-Detection-with-Deep-Reinforcement-Learning/Hierarchical-Object-Detection-Models.png\" alt=\"image\"></p>\n</li>\n</ul>\n<h6 id=\"4-Training\"><a href=\"#4-Training\" class=\"headerlink\" title=\"4. Training\"></a><strong>4. Training</strong></h6><h2 id=\"Experiments\"><a href=\"#Experiments\" class=\"headerlink\" title=\"Experiments\"></a>Experiments</h2><h3 id=\"1-Qualitative-Results\"><a href=\"#1-Qualitative-Results\" class=\"headerlink\" title=\"1. Qualitative Results\"></a><strong>1. Qualitative Results</strong></h3><p><img src=\"/2019/01/08/Hierarchical-Object-Detection-with-Deep-Reinforcement-Learning/aeroplane20180626.png\" alt=\"image\"></p>\n<h2 id=\"Implementation\"><a href=\"#Implementation\" class=\"headerlink\" title=\"Implementation\"></a><a href=\"https://github.com/imatge-upc/detection-2016-nipsws\" target=\"_blank\" rel=\"noopener\">Implementation</a></h2><h3 id=\"1-keras实现\"><a href=\"#1-keras实现\" class=\"headerlink\" title=\"1. keras实现\"></a><strong>1. keras实现</strong></h3><ul>\n<li>提取区域特征</li>\n</ul>\n<p><img src=\"/2019/01/08/Hierarchical-Object-Detection-with-Deep-Reinforcement-Learning/vgg16.png\" alt=\"image\"></p>\n<ul>\n<li><p>state不断更新，并作为model的输入</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(7*7*512)</span><br></pre></td></tr></table></figure>\n</li>\n<li></li>\n</ul>\n<h2 id=\"代码问题总结\"><a href=\"#代码问题总结\" class=\"headerlink\" title=\"代码问题总结\"></a>代码问题总结</h2><ol>\n<li>数据类型错误<strong>TypeError: slice indices must be integers or None or have an <strong>index</strong> method</strong></li>\n</ol>\n<p>这是由于数组，矩阵等类型数据的下标是整数，而在</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">region_mask[offset[0]:offset[0] + size_mask[0]</span><br><span class=\"line\">                         , offset[1]:offset[1] + size_mask[1]] = 1</span><br></pre></td></tr></table></figure>\n<p>offset是float类型，所以报错，解决方法就是数据类型转换：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">region_mask[int(offset[0]):int(offset[0] + size_mask[0])</span><br><span class=\"line\">                          , int(offset[1]):int(offset[1] + size_mask[1])] = 1</span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>VGG16提取图像特征尺寸不对</li>\n</ol>\n<p><img src=\"/2019/01/08/Hierarchical-Object-Detection-with-Deep-Reinforcement-Learning/error1.png\" alt=\"image\"></p>\n<p>解决方法：在图片提取特征之前，对图像进行resize；</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">im = images[z].resize((224, 224))</span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li>除0错误</li>\n</ol>\n<p><img src=\"/2019/01/08/Hierarchical-Object-Detection-with-Deep-Reinforcement-Learning/error2.png\" alt=\"image\"></p>\n<p>对图像进行resize的位置错误</p>\n<h2 id=\"问题总结\"><a href=\"#问题总结\" class=\"headerlink\" title=\"问题总结\"></a>问题总结</h2><ol>\n<li>问题：记忆向量的哪儿来的？</li>\n<li>问题：哪6个动作？<blockquote>\n<p>move actions:左上、右上、左下、右下和中；<br>terminal actions</p>\n</blockquote>\n</li>\n<li>问题：每个类训练一个模型？<blockquote>\n<p>是的，这篇文章中只训练了飞机类（aeroplane）的检测模型</p>\n</blockquote>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"<h1 id=\"Hierarchical-Object-Detection-with-Deep-Reinforcement-Learning\"><a href=\"#Hierarchical-Object-Detection-with-Deep-Reinforcement-Learning\" class=\"headerlink\" title=\"Hierarchical Object Detection with Deep Reinforcement Learning\"></a>Hierarchical Object Detection with Deep Reinforcement Learning</h1><h2 id=\"Abstract\"><a href=\"#Abstract\" class=\"headerlink\" title=\"Abstract\"></a>Abstract</h2><blockquote>\n<p>关键的思想在于关注图像中包含更丰富信息的那些部分并放大它们。</p>\n</blockquote>\n<h2 id=\"Introduction\"><a href=\"#Introduction\" class=\"headerlink\" title=\"Introduction\"></a>Introduction</h2><ol>\n<li>考虑区域之间的联系，</li>\n<li>利用top-down的扫描方式，首先获取整个图像，关注局部区域的相关信息，</li>\n<li>基于增强学习训练的代理（agent）有能力检测图像中的对象</li></ol>","more":"\n\n<h2 id=\"Hierarchical-Object-Detection-Model\"><a href=\"#Hierarchical-Object-Detection-Model\" class=\"headerlink\" title=\"Hierarchical Object Detection Model\"></a>Hierarchical Object Detection Model</h2><h6 id=\"1-Markov-Decision-Process（马尔科夫决策过程）\"><a href=\"#1-Markov-Decision-Process（马尔科夫决策过程）\" class=\"headerlink\" title=\"1. Markov Decision Process（马尔科夫决策过程）\"></a><strong>1. Markov Decision Process（马尔科夫决策过程）</strong></h6><blockquote>\n<p>State:当前区域描述符（the descriptor of current region）和记忆向量（memory vector）</p>\n</blockquote>\n<blockquote>\n<p>Actions:move actions和terminal actions</p>\n</blockquote>\n<blockquote>\n<p>Reward:<br>保证move action都是朝着更靠近ground truth的方向移动；<br>当IOU超过threshold，则终止移动。</p>\n</blockquote>\n<h6 id=\"2-Q-learning\"><a href=\"#2-Q-learning\" class=\"headerlink\" title=\"2. Q-learning\"></a><strong>2. Q-learning</strong></h6><p>$$<br>Q(s,a) = r+\\lambda{max}_{a’}Q(s’,a’)<br>$$</p>\n<h6 id=\"3-Model\"><a href=\"#3-Model\" class=\"headerlink\" title=\"3. Model\"></a><strong>3. Model</strong></h6><ul>\n<li><p>the Image-Zooms model</p>\n<blockquote>\n<p>使用VGG-16提取图像区域特征向量$(7<em>7</em>512)$,<br>拼接区域特征向量与记忆向量（memory vector）$(7<em>7</em>512+24=25088+24)$,<br>经过两个1024维的全连接层，输出6个可能的动作（actions），<br>反复迭代，直到终止动作</p>\n</blockquote>\n</li>\n<li><p>the Pool45-Crops model<br><img src=\"/2019/01/08/Hierarchical-Object-Detection-with-Deep-Reinforcement-Learning/Hierarchical-Object-Detection-Models.png\" alt=\"image\"></p>\n</li>\n</ul>\n<h6 id=\"4-Training\"><a href=\"#4-Training\" class=\"headerlink\" title=\"4. Training\"></a><strong>4. Training</strong></h6><h2 id=\"Experiments\"><a href=\"#Experiments\" class=\"headerlink\" title=\"Experiments\"></a>Experiments</h2><h3 id=\"1-Qualitative-Results\"><a href=\"#1-Qualitative-Results\" class=\"headerlink\" title=\"1. Qualitative Results\"></a><strong>1. Qualitative Results</strong></h3><p><img src=\"/2019/01/08/Hierarchical-Object-Detection-with-Deep-Reinforcement-Learning/aeroplane20180626.png\" alt=\"image\"></p>\n<h2 id=\"Implementation\"><a href=\"#Implementation\" class=\"headerlink\" title=\"Implementation\"></a><a href=\"https://github.com/imatge-upc/detection-2016-nipsws\" target=\"_blank\" rel=\"noopener\">Implementation</a></h2><h3 id=\"1-keras实现\"><a href=\"#1-keras实现\" class=\"headerlink\" title=\"1. keras实现\"></a><strong>1. keras实现</strong></h3><ul>\n<li>提取区域特征</li>\n</ul>\n<p><img src=\"/2019/01/08/Hierarchical-Object-Detection-with-Deep-Reinforcement-Learning/vgg16.png\" alt=\"image\"></p>\n<ul>\n<li><p>state不断更新，并作为model的输入</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(7*7*512)</span><br></pre></td></tr></table></figure>\n</li>\n<li></li>\n</ul>\n<h2 id=\"代码问题总结\"><a href=\"#代码问题总结\" class=\"headerlink\" title=\"代码问题总结\"></a>代码问题总结</h2><ol>\n<li>数据类型错误<strong>TypeError: slice indices must be integers or None or have an <strong>index</strong> method</strong></li>\n</ol>\n<p>这是由于数组，矩阵等类型数据的下标是整数，而在</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">region_mask[offset[0]:offset[0] + size_mask[0]</span><br><span class=\"line\">                         , offset[1]:offset[1] + size_mask[1]] = 1</span><br></pre></td></tr></table></figure>\n<p>offset是float类型，所以报错，解决方法就是数据类型转换：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">region_mask[int(offset[0]):int(offset[0] + size_mask[0])</span><br><span class=\"line\">                          , int(offset[1]):int(offset[1] + size_mask[1])] = 1</span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>VGG16提取图像特征尺寸不对</li>\n</ol>\n<p><img src=\"/2019/01/08/Hierarchical-Object-Detection-with-Deep-Reinforcement-Learning/error1.png\" alt=\"image\"></p>\n<p>解决方法：在图片提取特征之前，对图像进行resize；</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">im = images[z].resize((224, 224))</span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li>除0错误</li>\n</ol>\n<p><img src=\"/2019/01/08/Hierarchical-Object-Detection-with-Deep-Reinforcement-Learning/error2.png\" alt=\"image\"></p>\n<p>对图像进行resize的位置错误</p>\n<h2 id=\"问题总结\"><a href=\"#问题总结\" class=\"headerlink\" title=\"问题总结\"></a>问题总结</h2><ol>\n<li>问题：记忆向量的哪儿来的？</li>\n<li>问题：哪6个动作？<blockquote>\n<p>move actions:左上、右上、左下、右下和中；<br>terminal actions</p>\n</blockquote>\n</li>\n<li>问题：每个类训练一个模型？<blockquote>\n<p>是的，这篇文章中只训练了飞机类（aeroplane）的检测模型</p>\n</blockquote>\n</li>\n</ol>"},{"title":"Java内存模型（一）","date":"2019-02-18T06:54:08.000Z","_content":"\n# Java内存模型\n\n## Java内存模型的基础\n### 并发编程模型的两个关键问题\n\n1. 线程之间如何通信？\n2. 线程之间如何同步？\n\n通信是指线程之间以何种机制交换信息，在命令式编程中线程之间的通信机制有两种：共享内存和消息传递。在共享内存模型中，线程之间共享程序的公共状态，通过读写内存中的公共状态进行隐式通信；而在消息传递的并发模型中，线程之间没有公共状态，线程之间必须通过发送消息来显式进行通信。  \n<!-- more --> \n同步是指程序中用来控制不同线程间操作发生的相对顺序的机制。在共享内存并发模型中，同步是显式进行的。程序员必须显式指定某个方法或某个代码段需要在线程之间互斥执行。在消息传递的并发模型中，由于消息的发送必须在消息的接收之前，因此同步是隐式进行的。  \nJava的并发采用的是共享内存模型，Java线程之间的通信总是隐式进行的，整个通信过程对于程序员完全透明。\n\n### Java内存模型的抽象结构\n在Java中，所有实例域、静态域和数组元素都存储在堆内存中，堆内存在线程之间共享。局部变量（Local Variables），方法定义参数（Formal Method Parameters）和异常处理器参数（Exception Handler Parameters）不会在线程之间共享，它们不会有内存可见性问题，也不受内存模型的影响。  \nJava线程之间的通信由Java内存模型（JMM）控制，JMM决定一个线程对共享变量的写入何时对另一个线程可见。从抽象的角度来看，JMM定义了线程和主内存之间的抽象关系：线程之间的共享变量存储在主内存（Main Memory）中，每个线程都有一个私有的本地内存（Local Memory），本地内存中存储了该线程读写共享变量的副本。本地内存是JMM的一个抽象概念，它涵盖了缓存、写缓冲区、寄存器以及其他的硬件和编译器优化。\n\n![image](Java内存模型（一）/jmm1.png)\n\n由上图看出线程A和线程B之间要通信的话，必须经历以下两个步骤：  \n1）.线程A把本地内存A中更新过的共享变量 刷新到主内存中去；\n2）.线程B到主内存中去读取线程A之前已更新过的共享变量。\n\n### 指令重排序\n在执行程序时，为了提高性能，编译器和处理器常常会对指令做重排序。重排序分为3种类型。  \n1）编译器优化的重排序。编译器再不改变单线程程序语义的前提下，可以重新安排语句的执行顺序。\n2）指令级并行的重排序。现代处理器采用了指令级并行技术（Instruction-Level Parallelism，ILP）来将多条指令重叠执行。如果不存在数据依赖性，处理器可以改变语句对应机器指令的执行顺序。  \n3）内存系统的重排序。由于处理器使用缓存和读写缓冲区，这使得加载和存储操作看上去可能是乱序执行。\n\n## happens-before\n在JMM中，如果一个操作执行的结果需要对另一个操作可见，那么这两个操作之间必须要存在happens-before关系。这里提到的两个操作，既可以在一个线程之内，也可以在不同线程之间。  \n与程序员密切相关的happens-before规则如下：  \n- 程序顺序规则：一个线程中的每个操作，happens-before于该线程中的任意后续操作。（也就是说一个线程中的每个操作的结果对于该线程中的其他操作都是可见的）\n- 监视器锁规则：对一个锁的解锁，happens-before于随后对这个锁的加锁。（也就是说一个锁的解锁操作需要对该锁的解锁操作可见）\n- volatile变量规则：对一个volatile域的写，happens-before于任意后续对这个volatile域的读。\n- 传递性：如果`A happens-before B`，且`B happens-before C`，那么`A happens-before C`。","source":"_posts/Java内存模型（一）.md","raw":"---\ntitle: Java内存模型（一）\ndate: 2019-02-18 14:54:08\ntags: \n    - Java内存模型\n    - 共享内存\n    - happens-before\n    - 指令重排序\ncategories: Java并发编程\n---\n\n# Java内存模型\n\n## Java内存模型的基础\n### 并发编程模型的两个关键问题\n\n1. 线程之间如何通信？\n2. 线程之间如何同步？\n\n通信是指线程之间以何种机制交换信息，在命令式编程中线程之间的通信机制有两种：共享内存和消息传递。在共享内存模型中，线程之间共享程序的公共状态，通过读写内存中的公共状态进行隐式通信；而在消息传递的并发模型中，线程之间没有公共状态，线程之间必须通过发送消息来显式进行通信。  \n<!-- more --> \n同步是指程序中用来控制不同线程间操作发生的相对顺序的机制。在共享内存并发模型中，同步是显式进行的。程序员必须显式指定某个方法或某个代码段需要在线程之间互斥执行。在消息传递的并发模型中，由于消息的发送必须在消息的接收之前，因此同步是隐式进行的。  \nJava的并发采用的是共享内存模型，Java线程之间的通信总是隐式进行的，整个通信过程对于程序员完全透明。\n\n### Java内存模型的抽象结构\n在Java中，所有实例域、静态域和数组元素都存储在堆内存中，堆内存在线程之间共享。局部变量（Local Variables），方法定义参数（Formal Method Parameters）和异常处理器参数（Exception Handler Parameters）不会在线程之间共享，它们不会有内存可见性问题，也不受内存模型的影响。  \nJava线程之间的通信由Java内存模型（JMM）控制，JMM决定一个线程对共享变量的写入何时对另一个线程可见。从抽象的角度来看，JMM定义了线程和主内存之间的抽象关系：线程之间的共享变量存储在主内存（Main Memory）中，每个线程都有一个私有的本地内存（Local Memory），本地内存中存储了该线程读写共享变量的副本。本地内存是JMM的一个抽象概念，它涵盖了缓存、写缓冲区、寄存器以及其他的硬件和编译器优化。\n\n![image](Java内存模型（一）/jmm1.png)\n\n由上图看出线程A和线程B之间要通信的话，必须经历以下两个步骤：  \n1）.线程A把本地内存A中更新过的共享变量 刷新到主内存中去；\n2）.线程B到主内存中去读取线程A之前已更新过的共享变量。\n\n### 指令重排序\n在执行程序时，为了提高性能，编译器和处理器常常会对指令做重排序。重排序分为3种类型。  \n1）编译器优化的重排序。编译器再不改变单线程程序语义的前提下，可以重新安排语句的执行顺序。\n2）指令级并行的重排序。现代处理器采用了指令级并行技术（Instruction-Level Parallelism，ILP）来将多条指令重叠执行。如果不存在数据依赖性，处理器可以改变语句对应机器指令的执行顺序。  \n3）内存系统的重排序。由于处理器使用缓存和读写缓冲区，这使得加载和存储操作看上去可能是乱序执行。\n\n## happens-before\n在JMM中，如果一个操作执行的结果需要对另一个操作可见，那么这两个操作之间必须要存在happens-before关系。这里提到的两个操作，既可以在一个线程之内，也可以在不同线程之间。  \n与程序员密切相关的happens-before规则如下：  \n- 程序顺序规则：一个线程中的每个操作，happens-before于该线程中的任意后续操作。（也就是说一个线程中的每个操作的结果对于该线程中的其他操作都是可见的）\n- 监视器锁规则：对一个锁的解锁，happens-before于随后对这个锁的加锁。（也就是说一个锁的解锁操作需要对该锁的解锁操作可见）\n- volatile变量规则：对一个volatile域的写，happens-before于任意后续对这个volatile域的读。\n- 传递性：如果`A happens-before B`，且`B happens-before C`，那么`A happens-before C`。","slug":"Java内存模型（一）","published":1,"updated":"2019-02-18T08:13:46.911Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck0ozhiwh0008gkuwczdcld9r","content":"<h1 id=\"Java内存模型\"><a href=\"#Java内存模型\" class=\"headerlink\" title=\"Java内存模型\"></a>Java内存模型</h1><h2 id=\"Java内存模型的基础\"><a href=\"#Java内存模型的基础\" class=\"headerlink\" title=\"Java内存模型的基础\"></a>Java内存模型的基础</h2><h3 id=\"并发编程模型的两个关键问题\"><a href=\"#并发编程模型的两个关键问题\" class=\"headerlink\" title=\"并发编程模型的两个关键问题\"></a>并发编程模型的两个关键问题</h3><ol>\n<li>线程之间如何通信？</li>\n<li>线程之间如何同步？</li>\n</ol>\n<p>通信是指线程之间以何种机制交换信息，在命令式编程中线程之间的通信机制有两种：共享内存和消息传递。在共享内存模型中，线程之间共享程序的公共状态，通过读写内存中的公共状态进行隐式通信；而在消息传递的并发模型中，线程之间没有公共状态，线程之间必须通过发送消息来显式进行通信。<br><a id=\"more\"></a><br>同步是指程序中用来控制不同线程间操作发生的相对顺序的机制。在共享内存并发模型中，同步是显式进行的。程序员必须显式指定某个方法或某个代码段需要在线程之间互斥执行。在消息传递的并发模型中，由于消息的发送必须在消息的接收之前，因此同步是隐式进行的。<br>Java的并发采用的是共享内存模型，Java线程之间的通信总是隐式进行的，整个通信过程对于程序员完全透明。</p>\n<h3 id=\"Java内存模型的抽象结构\"><a href=\"#Java内存模型的抽象结构\" class=\"headerlink\" title=\"Java内存模型的抽象结构\"></a>Java内存模型的抽象结构</h3><p>在Java中，所有实例域、静态域和数组元素都存储在堆内存中，堆内存在线程之间共享。局部变量（Local Variables），方法定义参数（Formal Method Parameters）和异常处理器参数（Exception Handler Parameters）不会在线程之间共享，它们不会有内存可见性问题，也不受内存模型的影响。<br>Java线程之间的通信由Java内存模型（JMM）控制，JMM决定一个线程对共享变量的写入何时对另一个线程可见。从抽象的角度来看，JMM定义了线程和主内存之间的抽象关系：线程之间的共享变量存储在主内存（Main Memory）中，每个线程都有一个私有的本地内存（Local Memory），本地内存中存储了该线程读写共享变量的副本。本地内存是JMM的一个抽象概念，它涵盖了缓存、写缓冲区、寄存器以及其他的硬件和编译器优化。</p>\n<p><img src=\"/2019/02/18/Java内存模型（一）/jmm1.png\" alt=\"image\"></p>\n<p>由上图看出线程A和线程B之间要通信的话，必须经历以下两个步骤：<br>1）.线程A把本地内存A中更新过的共享变量 刷新到主内存中去；<br>2）.线程B到主内存中去读取线程A之前已更新过的共享变量。</p>\n<h3 id=\"指令重排序\"><a href=\"#指令重排序\" class=\"headerlink\" title=\"指令重排序\"></a>指令重排序</h3><p>在执行程序时，为了提高性能，编译器和处理器常常会对指令做重排序。重排序分为3种类型。<br>1）编译器优化的重排序。编译器再不改变单线程程序语义的前提下，可以重新安排语句的执行顺序。<br>2）指令级并行的重排序。现代处理器采用了指令级并行技术（Instruction-Level Parallelism，ILP）来将多条指令重叠执行。如果不存在数据依赖性，处理器可以改变语句对应机器指令的执行顺序。<br>3）内存系统的重排序。由于处理器使用缓存和读写缓冲区，这使得加载和存储操作看上去可能是乱序执行。</p>\n<h2 id=\"happens-before\"><a href=\"#happens-before\" class=\"headerlink\" title=\"happens-before\"></a>happens-before</h2><p>在JMM中，如果一个操作执行的结果需要对另一个操作可见，那么这两个操作之间必须要存在happens-before关系。这里提到的两个操作，既可以在一个线程之内，也可以在不同线程之间。<br>与程序员密切相关的happens-before规则如下：  </p>\n<ul>\n<li>程序顺序规则：一个线程中的每个操作，happens-before于该线程中的任意后续操作。（也就是说一个线程中的每个操作的结果对于该线程中的其他操作都是可见的）</li>\n<li>监视器锁规则：对一个锁的解锁，happens-before于随后对这个锁的加锁。（也就是说一个锁的解锁操作需要对该锁的解锁操作可见）</li>\n<li>volatile变量规则：对一个volatile域的写，happens-before于任意后续对这个volatile域的读。</li>\n<li>传递性：如果<code>A happens-before B</code>，且<code>B happens-before C</code>，那么<code>A happens-before C</code>。</li>\n</ul>\n","site":{"data":{}},"excerpt":"<h1 id=\"Java内存模型\"><a href=\"#Java内存模型\" class=\"headerlink\" title=\"Java内存模型\"></a>Java内存模型</h1><h2 id=\"Java内存模型的基础\"><a href=\"#Java内存模型的基础\" class=\"headerlink\" title=\"Java内存模型的基础\"></a>Java内存模型的基础</h2><h3 id=\"并发编程模型的两个关键问题\"><a href=\"#并发编程模型的两个关键问题\" class=\"headerlink\" title=\"并发编程模型的两个关键问题\"></a>并发编程模型的两个关键问题</h3><ol>\n<li>线程之间如何通信？</li>\n<li>线程之间如何同步？</li>\n</ol>\n<p>通信是指线程之间以何种机制交换信息，在命令式编程中线程之间的通信机制有两种：共享内存和消息传递。在共享内存模型中，线程之间共享程序的公共状态，通过读写内存中的公共状态进行隐式通信；而在消息传递的并发模型中，线程之间没有公共状态，线程之间必须通过发送消息来显式进行通信。<br></p>","more":"<br>同步是指程序中用来控制不同线程间操作发生的相对顺序的机制。在共享内存并发模型中，同步是显式进行的。程序员必须显式指定某个方法或某个代码段需要在线程之间互斥执行。在消息传递的并发模型中，由于消息的发送必须在消息的接收之前，因此同步是隐式进行的。<br>Java的并发采用的是共享内存模型，Java线程之间的通信总是隐式进行的，整个通信过程对于程序员完全透明。<p></p>\n<h3 id=\"Java内存模型的抽象结构\"><a href=\"#Java内存模型的抽象结构\" class=\"headerlink\" title=\"Java内存模型的抽象结构\"></a>Java内存模型的抽象结构</h3><p>在Java中，所有实例域、静态域和数组元素都存储在堆内存中，堆内存在线程之间共享。局部变量（Local Variables），方法定义参数（Formal Method Parameters）和异常处理器参数（Exception Handler Parameters）不会在线程之间共享，它们不会有内存可见性问题，也不受内存模型的影响。<br>Java线程之间的通信由Java内存模型（JMM）控制，JMM决定一个线程对共享变量的写入何时对另一个线程可见。从抽象的角度来看，JMM定义了线程和主内存之间的抽象关系：线程之间的共享变量存储在主内存（Main Memory）中，每个线程都有一个私有的本地内存（Local Memory），本地内存中存储了该线程读写共享变量的副本。本地内存是JMM的一个抽象概念，它涵盖了缓存、写缓冲区、寄存器以及其他的硬件和编译器优化。</p>\n<p><img src=\"/2019/02/18/Java内存模型（一）/jmm1.png\" alt=\"image\"></p>\n<p>由上图看出线程A和线程B之间要通信的话，必须经历以下两个步骤：<br>1）.线程A把本地内存A中更新过的共享变量 刷新到主内存中去；<br>2）.线程B到主内存中去读取线程A之前已更新过的共享变量。</p>\n<h3 id=\"指令重排序\"><a href=\"#指令重排序\" class=\"headerlink\" title=\"指令重排序\"></a>指令重排序</h3><p>在执行程序时，为了提高性能，编译器和处理器常常会对指令做重排序。重排序分为3种类型。<br>1）编译器优化的重排序。编译器再不改变单线程程序语义的前提下，可以重新安排语句的执行顺序。<br>2）指令级并行的重排序。现代处理器采用了指令级并行技术（Instruction-Level Parallelism，ILP）来将多条指令重叠执行。如果不存在数据依赖性，处理器可以改变语句对应机器指令的执行顺序。<br>3）内存系统的重排序。由于处理器使用缓存和读写缓冲区，这使得加载和存储操作看上去可能是乱序执行。</p>\n<h2 id=\"happens-before\"><a href=\"#happens-before\" class=\"headerlink\" title=\"happens-before\"></a>happens-before</h2><p>在JMM中，如果一个操作执行的结果需要对另一个操作可见，那么这两个操作之间必须要存在happens-before关系。这里提到的两个操作，既可以在一个线程之内，也可以在不同线程之间。<br>与程序员密切相关的happens-before规则如下：  </p>\n<ul>\n<li>程序顺序规则：一个线程中的每个操作，happens-before于该线程中的任意后续操作。（也就是说一个线程中的每个操作的结果对于该线程中的其他操作都是可见的）</li>\n<li>监视器锁规则：对一个锁的解锁，happens-before于随后对这个锁的加锁。（也就是说一个锁的解锁操作需要对该锁的解锁操作可见）</li>\n<li>volatile变量规则：对一个volatile域的写，happens-before于任意后续对这个volatile域的读。</li>\n<li>传递性：如果<code>A happens-before B</code>，且<code>B happens-before C</code>，那么<code>A happens-before C</code>。</li>\n</ul>"},{"title":"Java内存模型（二）","date":"2019-02-19T07:05:28.000Z","_content":"\n# Java内存模型\n\n## 重排序\n重排序是指编译器和处理器为了优化程序性能而对指令序列进行重新排序的手段。\n\n### 数据依赖性\n如果两个操作访问同一个变量，且这两个操作中有一为写操作，此时这两个操作时间就存在数据依赖性。数据依赖分为三种类型：写后读、写后写、读后写。  \n上述三种情况，只要重排序这两个操作的执行顺序，程序的执行结果就会改变。因此编译器和处理器在重排序时，会遵守数据依赖性，编译器和处理器不会改变存在数据依赖关系的两个操作顺序。  \n这类所说的数据依赖性仅针对单个处理器中执行的指令序列和单个线程中执行的操作，不同处理器之间和不同线程之间的数据依赖性不被编译器和处理器考虑。\n<!-- more --> \n### `as-if-serial`语义\nas-if-serial语义的意思是：不管怎么重排序（编译器和处理器为了提高并行度），（单线程）程序的执行结果不会被改变。as-if-serial语义把单线程程序保护起来，遵循as-if-serial语义的编译器、runtime和处理器保证单线程程序执行的结果与其按照顺序执行的结果一致。\n\n### 程序顺序规则\n```\ndouble pi = 3.14;           //A\ndouble r = 1.0;             //B\ndouble area = pi * r * r;   //C\n```\n根据happens-before的程序顺序规则，上面计算圆面积的示例代码存在3个happens-before关系：  \n\n- `A happens-before B`\n- `B happens-before C`\n- `A happens-before C`\n\n这里`A happens-before B`，但在实际执行时B却可以在A之前执行。如果`A happens-before B`，JMM并不一定要求A在B之前执行。JMM仅仅要求前一个操作对后一个操作可见，且前一个操作按顺序排在后一操作之前。这里操作A的执行结果并不需要对操作B可见；而且重排序操作A和操作B后的执行结果，与操作A和操作B按照`A happens-before B`顺序执行的结果一致。在这种情况下，JMM会认为这种重排序不非法（not illegal）,JMM允许这种重排序。  \n在计算机中，软件技术和硬件技术有一个共同目的：在不改变程序执行结果的前提下，尽可能提高并行度。\n\n### 重排序对多线程的影响\n\n多线程程序中，对存在控制依赖的操作重排序，可能会改变程序的执行结果。\n\n## 顺序一致性\n\n### 数据竞争与顺序一致性\n当程序未正确同步时，就可能会存在数据竞争。Java内存模型规范对数据竞争的定义如下：  \n- 在一个线程中写入一个变量；\n- 在另一个线程中读同一个变量；\n- 而且写和读没有通过同步来排序。  \n\n当代码中包含数据竞争时，程序的执行往往产生违反直觉的结果。如果一个多线程程序能够同步，这个程序将是一个没有数据竞争的程序。JMM对正确同步的多线程程序的内存一致性做了如下保证：  \n如果程序时正确同步的，程序的执行将具有顺序一致性——即程序的执行结果与改程序在顺序一致性内存模型中的执行结果相同。\n\n### 顺序一致性内存模型\n顺序一致性内存模型是一个被计算机科学家理想化的理论参考模型。它为程序员提供了极强的内存可见性保证。顺序一致性内存模型有两大特性：  \n- 一个线程中的所有操作都必须按照程序的顺序来执行；\n- （不管线程是否同步）所有线程都只能看到一个单一的操作执行顺序。在顺序一致性内存模型中，每个操作都必须原子执行且立刻对所有线程可见。","source":"_posts/Java内存模型（二）.md","raw":"---\ntitle: Java内存模型（二）\ndate: 2019-02-19 15:05:28\ntags: \n    - 重排序\n    - 数据依赖性\n    - 顺序一致性\ncategories: Java并发编程\n---\n\n# Java内存模型\n\n## 重排序\n重排序是指编译器和处理器为了优化程序性能而对指令序列进行重新排序的手段。\n\n### 数据依赖性\n如果两个操作访问同一个变量，且这两个操作中有一为写操作，此时这两个操作时间就存在数据依赖性。数据依赖分为三种类型：写后读、写后写、读后写。  \n上述三种情况，只要重排序这两个操作的执行顺序，程序的执行结果就会改变。因此编译器和处理器在重排序时，会遵守数据依赖性，编译器和处理器不会改变存在数据依赖关系的两个操作顺序。  \n这类所说的数据依赖性仅针对单个处理器中执行的指令序列和单个线程中执行的操作，不同处理器之间和不同线程之间的数据依赖性不被编译器和处理器考虑。\n<!-- more --> \n### `as-if-serial`语义\nas-if-serial语义的意思是：不管怎么重排序（编译器和处理器为了提高并行度），（单线程）程序的执行结果不会被改变。as-if-serial语义把单线程程序保护起来，遵循as-if-serial语义的编译器、runtime和处理器保证单线程程序执行的结果与其按照顺序执行的结果一致。\n\n### 程序顺序规则\n```\ndouble pi = 3.14;           //A\ndouble r = 1.0;             //B\ndouble area = pi * r * r;   //C\n```\n根据happens-before的程序顺序规则，上面计算圆面积的示例代码存在3个happens-before关系：  \n\n- `A happens-before B`\n- `B happens-before C`\n- `A happens-before C`\n\n这里`A happens-before B`，但在实际执行时B却可以在A之前执行。如果`A happens-before B`，JMM并不一定要求A在B之前执行。JMM仅仅要求前一个操作对后一个操作可见，且前一个操作按顺序排在后一操作之前。这里操作A的执行结果并不需要对操作B可见；而且重排序操作A和操作B后的执行结果，与操作A和操作B按照`A happens-before B`顺序执行的结果一致。在这种情况下，JMM会认为这种重排序不非法（not illegal）,JMM允许这种重排序。  \n在计算机中，软件技术和硬件技术有一个共同目的：在不改变程序执行结果的前提下，尽可能提高并行度。\n\n### 重排序对多线程的影响\n\n多线程程序中，对存在控制依赖的操作重排序，可能会改变程序的执行结果。\n\n## 顺序一致性\n\n### 数据竞争与顺序一致性\n当程序未正确同步时，就可能会存在数据竞争。Java内存模型规范对数据竞争的定义如下：  \n- 在一个线程中写入一个变量；\n- 在另一个线程中读同一个变量；\n- 而且写和读没有通过同步来排序。  \n\n当代码中包含数据竞争时，程序的执行往往产生违反直觉的结果。如果一个多线程程序能够同步，这个程序将是一个没有数据竞争的程序。JMM对正确同步的多线程程序的内存一致性做了如下保证：  \n如果程序时正确同步的，程序的执行将具有顺序一致性——即程序的执行结果与改程序在顺序一致性内存模型中的执行结果相同。\n\n### 顺序一致性内存模型\n顺序一致性内存模型是一个被计算机科学家理想化的理论参考模型。它为程序员提供了极强的内存可见性保证。顺序一致性内存模型有两大特性：  \n- 一个线程中的所有操作都必须按照程序的顺序来执行；\n- （不管线程是否同步）所有线程都只能看到一个单一的操作执行顺序。在顺序一致性内存模型中，每个操作都必须原子执行且立刻对所有线程可见。","slug":"Java内存模型（二）","published":1,"updated":"2019-02-19T08:35:29.973Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck0ozhiwi0009gkuwgyq3nwc8","content":"<h1 id=\"Java内存模型\"><a href=\"#Java内存模型\" class=\"headerlink\" title=\"Java内存模型\"></a>Java内存模型</h1><h2 id=\"重排序\"><a href=\"#重排序\" class=\"headerlink\" title=\"重排序\"></a>重排序</h2><p>重排序是指编译器和处理器为了优化程序性能而对指令序列进行重新排序的手段。</p>\n<h3 id=\"数据依赖性\"><a href=\"#数据依赖性\" class=\"headerlink\" title=\"数据依赖性\"></a>数据依赖性</h3><p>如果两个操作访问同一个变量，且这两个操作中有一为写操作，此时这两个操作时间就存在数据依赖性。数据依赖分为三种类型：写后读、写后写、读后写。<br>上述三种情况，只要重排序这两个操作的执行顺序，程序的执行结果就会改变。因此编译器和处理器在重排序时，会遵守数据依赖性，编译器和处理器不会改变存在数据依赖关系的两个操作顺序。<br>这类所说的数据依赖性仅针对单个处理器中执行的指令序列和单个线程中执行的操作，不同处理器之间和不同线程之间的数据依赖性不被编译器和处理器考虑。<br><a id=\"more\"></a> </p>\n<h3 id=\"as-if-serial语义\"><a href=\"#as-if-serial语义\" class=\"headerlink\" title=\"as-if-serial语义\"></a><code>as-if-serial</code>语义</h3><p>as-if-serial语义的意思是：不管怎么重排序（编译器和处理器为了提高并行度），（单线程）程序的执行结果不会被改变。as-if-serial语义把单线程程序保护起来，遵循as-if-serial语义的编译器、runtime和处理器保证单线程程序执行的结果与其按照顺序执行的结果一致。</p>\n<h3 id=\"程序顺序规则\"><a href=\"#程序顺序规则\" class=\"headerlink\" title=\"程序顺序规则\"></a>程序顺序规则</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">double pi = 3.14;           //A</span><br><span class=\"line\">double r = 1.0;             //B</span><br><span class=\"line\">double area = pi * r * r;   //C</span><br></pre></td></tr></table></figure>\n<p>根据happens-before的程序顺序规则，上面计算圆面积的示例代码存在3个happens-before关系：  </p>\n<ul>\n<li><code>A happens-before B</code></li>\n<li><code>B happens-before C</code></li>\n<li><code>A happens-before C</code></li>\n</ul>\n<p>这里<code>A happens-before B</code>，但在实际执行时B却可以在A之前执行。如果<code>A happens-before B</code>，JMM并不一定要求A在B之前执行。JMM仅仅要求前一个操作对后一个操作可见，且前一个操作按顺序排在后一操作之前。这里操作A的执行结果并不需要对操作B可见；而且重排序操作A和操作B后的执行结果，与操作A和操作B按照<code>A happens-before B</code>顺序执行的结果一致。在这种情况下，JMM会认为这种重排序不非法（not illegal）,JMM允许这种重排序。<br>在计算机中，软件技术和硬件技术有一个共同目的：在不改变程序执行结果的前提下，尽可能提高并行度。</p>\n<h3 id=\"重排序对多线程的影响\"><a href=\"#重排序对多线程的影响\" class=\"headerlink\" title=\"重排序对多线程的影响\"></a>重排序对多线程的影响</h3><p>多线程程序中，对存在控制依赖的操作重排序，可能会改变程序的执行结果。</p>\n<h2 id=\"顺序一致性\"><a href=\"#顺序一致性\" class=\"headerlink\" title=\"顺序一致性\"></a>顺序一致性</h2><h3 id=\"数据竞争与顺序一致性\"><a href=\"#数据竞争与顺序一致性\" class=\"headerlink\" title=\"数据竞争与顺序一致性\"></a>数据竞争与顺序一致性</h3><p>当程序未正确同步时，就可能会存在数据竞争。Java内存模型规范对数据竞争的定义如下：  </p>\n<ul>\n<li>在一个线程中写入一个变量；</li>\n<li>在另一个线程中读同一个变量；</li>\n<li>而且写和读没有通过同步来排序。  </li>\n</ul>\n<p>当代码中包含数据竞争时，程序的执行往往产生违反直觉的结果。如果一个多线程程序能够同步，这个程序将是一个没有数据竞争的程序。JMM对正确同步的多线程程序的内存一致性做了如下保证：<br>如果程序时正确同步的，程序的执行将具有顺序一致性——即程序的执行结果与改程序在顺序一致性内存模型中的执行结果相同。</p>\n<h3 id=\"顺序一致性内存模型\"><a href=\"#顺序一致性内存模型\" class=\"headerlink\" title=\"顺序一致性内存模型\"></a>顺序一致性内存模型</h3><p>顺序一致性内存模型是一个被计算机科学家理想化的理论参考模型。它为程序员提供了极强的内存可见性保证。顺序一致性内存模型有两大特性：  </p>\n<ul>\n<li>一个线程中的所有操作都必须按照程序的顺序来执行；</li>\n<li>（不管线程是否同步）所有线程都只能看到一个单一的操作执行顺序。在顺序一致性内存模型中，每个操作都必须原子执行且立刻对所有线程可见。</li>\n</ul>\n","site":{"data":{}},"excerpt":"<h1 id=\"Java内存模型\"><a href=\"#Java内存模型\" class=\"headerlink\" title=\"Java内存模型\"></a>Java内存模型</h1><h2 id=\"重排序\"><a href=\"#重排序\" class=\"headerlink\" title=\"重排序\"></a>重排序</h2><p>重排序是指编译器和处理器为了优化程序性能而对指令序列进行重新排序的手段。</p>\n<h3 id=\"数据依赖性\"><a href=\"#数据依赖性\" class=\"headerlink\" title=\"数据依赖性\"></a>数据依赖性</h3><p>如果两个操作访问同一个变量，且这两个操作中有一为写操作，此时这两个操作时间就存在数据依赖性。数据依赖分为三种类型：写后读、写后写、读后写。<br>上述三种情况，只要重排序这两个操作的执行顺序，程序的执行结果就会改变。因此编译器和处理器在重排序时，会遵守数据依赖性，编译器和处理器不会改变存在数据依赖关系的两个操作顺序。<br>这类所说的数据依赖性仅针对单个处理器中执行的指令序列和单个线程中执行的操作，不同处理器之间和不同线程之间的数据依赖性不被编译器和处理器考虑。<br></p>","more":"<p></p>\n<h3 id=\"as-if-serial语义\"><a href=\"#as-if-serial语义\" class=\"headerlink\" title=\"as-if-serial语义\"></a><code>as-if-serial</code>语义</h3><p>as-if-serial语义的意思是：不管怎么重排序（编译器和处理器为了提高并行度），（单线程）程序的执行结果不会被改变。as-if-serial语义把单线程程序保护起来，遵循as-if-serial语义的编译器、runtime和处理器保证单线程程序执行的结果与其按照顺序执行的结果一致。</p>\n<h3 id=\"程序顺序规则\"><a href=\"#程序顺序规则\" class=\"headerlink\" title=\"程序顺序规则\"></a>程序顺序规则</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">double pi = 3.14;           //A</span><br><span class=\"line\">double r = 1.0;             //B</span><br><span class=\"line\">double area = pi * r * r;   //C</span><br></pre></td></tr></table></figure>\n<p>根据happens-before的程序顺序规则，上面计算圆面积的示例代码存在3个happens-before关系：  </p>\n<ul>\n<li><code>A happens-before B</code></li>\n<li><code>B happens-before C</code></li>\n<li><code>A happens-before C</code></li>\n</ul>\n<p>这里<code>A happens-before B</code>，但在实际执行时B却可以在A之前执行。如果<code>A happens-before B</code>，JMM并不一定要求A在B之前执行。JMM仅仅要求前一个操作对后一个操作可见，且前一个操作按顺序排在后一操作之前。这里操作A的执行结果并不需要对操作B可见；而且重排序操作A和操作B后的执行结果，与操作A和操作B按照<code>A happens-before B</code>顺序执行的结果一致。在这种情况下，JMM会认为这种重排序不非法（not illegal）,JMM允许这种重排序。<br>在计算机中，软件技术和硬件技术有一个共同目的：在不改变程序执行结果的前提下，尽可能提高并行度。</p>\n<h3 id=\"重排序对多线程的影响\"><a href=\"#重排序对多线程的影响\" class=\"headerlink\" title=\"重排序对多线程的影响\"></a>重排序对多线程的影响</h3><p>多线程程序中，对存在控制依赖的操作重排序，可能会改变程序的执行结果。</p>\n<h2 id=\"顺序一致性\"><a href=\"#顺序一致性\" class=\"headerlink\" title=\"顺序一致性\"></a>顺序一致性</h2><h3 id=\"数据竞争与顺序一致性\"><a href=\"#数据竞争与顺序一致性\" class=\"headerlink\" title=\"数据竞争与顺序一致性\"></a>数据竞争与顺序一致性</h3><p>当程序未正确同步时，就可能会存在数据竞争。Java内存模型规范对数据竞争的定义如下：  </p>\n<ul>\n<li>在一个线程中写入一个变量；</li>\n<li>在另一个线程中读同一个变量；</li>\n<li>而且写和读没有通过同步来排序。  </li>\n</ul>\n<p>当代码中包含数据竞争时，程序的执行往往产生违反直觉的结果。如果一个多线程程序能够同步，这个程序将是一个没有数据竞争的程序。JMM对正确同步的多线程程序的内存一致性做了如下保证：<br>如果程序时正确同步的，程序的执行将具有顺序一致性——即程序的执行结果与改程序在顺序一致性内存模型中的执行结果相同。</p>\n<h3 id=\"顺序一致性内存模型\"><a href=\"#顺序一致性内存模型\" class=\"headerlink\" title=\"顺序一致性内存模型\"></a>顺序一致性内存模型</h3><p>顺序一致性内存模型是一个被计算机科学家理想化的理论参考模型。它为程序员提供了极强的内存可见性保证。顺序一致性内存模型有两大特性：  </p>\n<ul>\n<li>一个线程中的所有操作都必须按照程序的顺序来执行；</li>\n<li>（不管线程是否同步）所有线程都只能看到一个单一的操作执行顺序。在顺序一致性内存模型中，每个操作都必须原子执行且立刻对所有线程可见。</li>\n</ul>"},{"title":"Java并发编程基础","date":"2019-02-27T13:49:16.000Z","_content":"\n## 线程\n\n现代操作系统在运行一个程序的时候就会创建一个进程。线程是现在操作系统系统调度的最小单元，也称为轻量级进程（Light Weight Process），在一个进程里可以创建多个线程，每个线程都有自己的程序计数器、堆栈和局部变量等属性，并且能够访问内存中共享的变量。\n\n\n### 使用多线程的原因\n\n1. 更多的处理器核心：随着处理器上的核心数量越来越多，以及超线程技术的广泛应用，现在的计算机比以往更加擅长并行计算；\n2. 更快的响应时间：当业务逻辑过于复杂，使用多线程技术，将对数据一致性要求不高的操作派发给多个线程处理，这样做能更快地处理完一个复杂任务，缩短响应时间，提升用户体验；\n3. 更好的编程模型：Java为多线程提供了良好、考究并且一致的编程模型，使开发人员能够更加专注于问题的解决，即为所遇到的问题建立合适的模型，而不是绞尽脑汁地考虑如何将任务多线程化。\n\n<!-- more -->\n\n### 线程优先级\n\n在Java线程中，通过一个整型成员变量priority来控制优先级，优先级的范围从1~10，在线程构建的时候可以通过setPriority(int)方法修改线程的优先级，默认优先级为5，优先级高的线程分配时间片的数量要多于优先级低的线程。设置线程优先级时，针对频繁阻塞的线程则设置较低的优先级，保证处理器不会被独占。\n\n### 线程状态\n\nJava线程在运行的生命周期可能处于6种不同的状态，在任意给定时刻线程只能处于其中的一种状态：\n\n状态名称|说明\n---|:--:\nNEW|初始状态，线程被构建，但是还没有调用start()方法\nRUNNABLE|运行状态，Java线程将操作系统中的就绪和运行两种状态笼统地称为“运行中”\nBLOCKED|阻塞状态，表示线程阻塞于锁\nWAITING|等待状态，表示线程进入等待状态，进入该状态表示当前线程需要等待其他线程做出一些特定动作（通知或中断）\nTIME_WAITING|超时等待状态，该状态不同于WAITING，它是可以在指定时间自行返回的\nTERMINATED|终止状态，表示当前线程已经执行完毕\n\n### Daemon线程\n\nDaemon线程是一种支持型线程，因为它主要被用作程序中后台调度以及支持性工作。这意味着，当一个Java虚拟机中不存在非Daemon线程时，Java虚拟机将会退出。可以在线程启动之前通过调用Thread.setDaemon(true)将线程设置为Daemon线程。\n\n\n\n","source":"_posts/Java并发编程基础.md","raw":"---\ntitle: Java并发编程基础\ndate: 2019-02-27 21:49:16\ntags:\n    - Java\n    - 多线程\n    - 线程\n    - synchronized\n    - volatile\ncategories: Java并发编程\n---\n\n## 线程\n\n现代操作系统在运行一个程序的时候就会创建一个进程。线程是现在操作系统系统调度的最小单元，也称为轻量级进程（Light Weight Process），在一个进程里可以创建多个线程，每个线程都有自己的程序计数器、堆栈和局部变量等属性，并且能够访问内存中共享的变量。\n\n\n### 使用多线程的原因\n\n1. 更多的处理器核心：随着处理器上的核心数量越来越多，以及超线程技术的广泛应用，现在的计算机比以往更加擅长并行计算；\n2. 更快的响应时间：当业务逻辑过于复杂，使用多线程技术，将对数据一致性要求不高的操作派发给多个线程处理，这样做能更快地处理完一个复杂任务，缩短响应时间，提升用户体验；\n3. 更好的编程模型：Java为多线程提供了良好、考究并且一致的编程模型，使开发人员能够更加专注于问题的解决，即为所遇到的问题建立合适的模型，而不是绞尽脑汁地考虑如何将任务多线程化。\n\n<!-- more -->\n\n### 线程优先级\n\n在Java线程中，通过一个整型成员变量priority来控制优先级，优先级的范围从1~10，在线程构建的时候可以通过setPriority(int)方法修改线程的优先级，默认优先级为5，优先级高的线程分配时间片的数量要多于优先级低的线程。设置线程优先级时，针对频繁阻塞的线程则设置较低的优先级，保证处理器不会被独占。\n\n### 线程状态\n\nJava线程在运行的生命周期可能处于6种不同的状态，在任意给定时刻线程只能处于其中的一种状态：\n\n状态名称|说明\n---|:--:\nNEW|初始状态，线程被构建，但是还没有调用start()方法\nRUNNABLE|运行状态，Java线程将操作系统中的就绪和运行两种状态笼统地称为“运行中”\nBLOCKED|阻塞状态，表示线程阻塞于锁\nWAITING|等待状态，表示线程进入等待状态，进入该状态表示当前线程需要等待其他线程做出一些特定动作（通知或中断）\nTIME_WAITING|超时等待状态，该状态不同于WAITING，它是可以在指定时间自行返回的\nTERMINATED|终止状态，表示当前线程已经执行完毕\n\n### Daemon线程\n\nDaemon线程是一种支持型线程，因为它主要被用作程序中后台调度以及支持性工作。这意味着，当一个Java虚拟机中不存在非Daemon线程时，Java虚拟机将会退出。可以在线程启动之前通过调用Thread.setDaemon(true)将线程设置为Daemon线程。\n\n\n\n","slug":"Java并发编程基础","published":1,"updated":"2019-03-01T14:26:51.548Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck0ozhiwk000cgkuwmhgvw2za","content":"<h2 id=\"线程\"><a href=\"#线程\" class=\"headerlink\" title=\"线程\"></a>线程</h2><p>现代操作系统在运行一个程序的时候就会创建一个进程。线程是现在操作系统系统调度的最小单元，也称为轻量级进程（Light Weight Process），在一个进程里可以创建多个线程，每个线程都有自己的程序计数器、堆栈和局部变量等属性，并且能够访问内存中共享的变量。</p>\n<h3 id=\"使用多线程的原因\"><a href=\"#使用多线程的原因\" class=\"headerlink\" title=\"使用多线程的原因\"></a>使用多线程的原因</h3><ol>\n<li>更多的处理器核心：随着处理器上的核心数量越来越多，以及超线程技术的广泛应用，现在的计算机比以往更加擅长并行计算；</li>\n<li>更快的响应时间：当业务逻辑过于复杂，使用多线程技术，将对数据一致性要求不高的操作派发给多个线程处理，这样做能更快地处理完一个复杂任务，缩短响应时间，提升用户体验；</li>\n<li>更好的编程模型：Java为多线程提供了良好、考究并且一致的编程模型，使开发人员能够更加专注于问题的解决，即为所遇到的问题建立合适的模型，而不是绞尽脑汁地考虑如何将任务多线程化。</li>\n</ol>\n<a id=\"more\"></a>\n<h3 id=\"线程优先级\"><a href=\"#线程优先级\" class=\"headerlink\" title=\"线程优先级\"></a>线程优先级</h3><p>在Java线程中，通过一个整型成员变量priority来控制优先级，优先级的范围从1~10，在线程构建的时候可以通过setPriority(int)方法修改线程的优先级，默认优先级为5，优先级高的线程分配时间片的数量要多于优先级低的线程。设置线程优先级时，针对频繁阻塞的线程则设置较低的优先级，保证处理器不会被独占。</p>\n<h3 id=\"线程状态\"><a href=\"#线程状态\" class=\"headerlink\" title=\"线程状态\"></a>线程状态</h3><p>Java线程在运行的生命周期可能处于6种不同的状态，在任意给定时刻线程只能处于其中的一种状态：</p>\n<table>\n<thead>\n<tr>\n<th>状态名称</th>\n<th style=\"text-align:center\">说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>NEW</td>\n<td style=\"text-align:center\">初始状态，线程被构建，但是还没有调用start()方法</td>\n</tr>\n<tr>\n<td>RUNNABLE</td>\n<td style=\"text-align:center\">运行状态，Java线程将操作系统中的就绪和运行两种状态笼统地称为“运行中”</td>\n</tr>\n<tr>\n<td>BLOCKED</td>\n<td style=\"text-align:center\">阻塞状态，表示线程阻塞于锁</td>\n</tr>\n<tr>\n<td>WAITING</td>\n<td style=\"text-align:center\">等待状态，表示线程进入等待状态，进入该状态表示当前线程需要等待其他线程做出一些特定动作（通知或中断）</td>\n</tr>\n<tr>\n<td>TIME_WAITING</td>\n<td style=\"text-align:center\">超时等待状态，该状态不同于WAITING，它是可以在指定时间自行返回的</td>\n</tr>\n<tr>\n<td>TERMINATED</td>\n<td style=\"text-align:center\">终止状态，表示当前线程已经执行完毕</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"Daemon线程\"><a href=\"#Daemon线程\" class=\"headerlink\" title=\"Daemon线程\"></a>Daemon线程</h3><p>Daemon线程是一种支持型线程，因为它主要被用作程序中后台调度以及支持性工作。这意味着，当一个Java虚拟机中不存在非Daemon线程时，Java虚拟机将会退出。可以在线程启动之前通过调用Thread.setDaemon(true)将线程设置为Daemon线程。</p>\n","site":{"data":{}},"excerpt":"<h2 id=\"线程\"><a href=\"#线程\" class=\"headerlink\" title=\"线程\"></a>线程</h2><p>现代操作系统在运行一个程序的时候就会创建一个进程。线程是现在操作系统系统调度的最小单元，也称为轻量级进程（Light Weight Process），在一个进程里可以创建多个线程，每个线程都有自己的程序计数器、堆栈和局部变量等属性，并且能够访问内存中共享的变量。</p>\n<h3 id=\"使用多线程的原因\"><a href=\"#使用多线程的原因\" class=\"headerlink\" title=\"使用多线程的原因\"></a>使用多线程的原因</h3><ol>\n<li>更多的处理器核心：随着处理器上的核心数量越来越多，以及超线程技术的广泛应用，现在的计算机比以往更加擅长并行计算；</li>\n<li>更快的响应时间：当业务逻辑过于复杂，使用多线程技术，将对数据一致性要求不高的操作派发给多个线程处理，这样做能更快地处理完一个复杂任务，缩短响应时间，提升用户体验；</li>\n<li>更好的编程模型：Java为多线程提供了良好、考究并且一致的编程模型，使开发人员能够更加专注于问题的解决，即为所遇到的问题建立合适的模型，而不是绞尽脑汁地考虑如何将任务多线程化。</li>\n</ol>","more":"<h3 id=\"线程优先级\"><a href=\"#线程优先级\" class=\"headerlink\" title=\"线程优先级\"></a>线程优先级</h3><p>在Java线程中，通过一个整型成员变量priority来控制优先级，优先级的范围从1~10，在线程构建的时候可以通过setPriority(int)方法修改线程的优先级，默认优先级为5，优先级高的线程分配时间片的数量要多于优先级低的线程。设置线程优先级时，针对频繁阻塞的线程则设置较低的优先级，保证处理器不会被独占。</p>\n<h3 id=\"线程状态\"><a href=\"#线程状态\" class=\"headerlink\" title=\"线程状态\"></a>线程状态</h3><p>Java线程在运行的生命周期可能处于6种不同的状态，在任意给定时刻线程只能处于其中的一种状态：</p>\n<table>\n<thead>\n<tr>\n<th>状态名称</th>\n<th style=\"text-align:center\">说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>NEW</td>\n<td style=\"text-align:center\">初始状态，线程被构建，但是还没有调用start()方法</td>\n</tr>\n<tr>\n<td>RUNNABLE</td>\n<td style=\"text-align:center\">运行状态，Java线程将操作系统中的就绪和运行两种状态笼统地称为“运行中”</td>\n</tr>\n<tr>\n<td>BLOCKED</td>\n<td style=\"text-align:center\">阻塞状态，表示线程阻塞于锁</td>\n</tr>\n<tr>\n<td>WAITING</td>\n<td style=\"text-align:center\">等待状态，表示线程进入等待状态，进入该状态表示当前线程需要等待其他线程做出一些特定动作（通知或中断）</td>\n</tr>\n<tr>\n<td>TIME_WAITING</td>\n<td style=\"text-align:center\">超时等待状态，该状态不同于WAITING，它是可以在指定时间自行返回的</td>\n</tr>\n<tr>\n<td>TERMINATED</td>\n<td style=\"text-align:center\">终止状态，表示当前线程已经执行完毕</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"Daemon线程\"><a href=\"#Daemon线程\" class=\"headerlink\" title=\"Daemon线程\"></a>Daemon线程</h3><p>Daemon线程是一种支持型线程，因为它主要被用作程序中后台调度以及支持性工作。这意味着，当一个Java虚拟机中不存在非Daemon线程时，Java虚拟机将会退出。可以在线程启动之前通过调用Thread.setDaemon(true)将线程设置为Daemon线程。</p>"},{"title":"Kafka-分布式流平台","date":"2019-01-16T09:20:56.000Z","_content":"\n# Kafka:分布式流平台\n\n[参考链接：Kafka官网](https://kafka.apache.org/intro)\n\nApache Kafka是一个分布式流平台，具有以下三个关键能力：\n\n- 发布和订阅记录流（`streams of records`），类似于一个消息队列或者是企业消息系统；\n- 以具有容错性和持久性的方式存储记录流；\n- 即时处理记录流\n<!-- more --> \nKafka通常被用在两大类应用中：\n\n- 构建可在系统或应用程序之间可靠获取数据的实时流数据管道\n- 构建转换或响应数据流的实时流应用\n\n一些概念：\n- Kafka作为一个集群可以运行在一个或多个服务器上，这些服务器可跨多个数据中心；\n- Kafka集群存储在类别中的记录流称为主题（topics）；\n- 每个记录包含一个键（key）、一个值（value）以及一个时间戳（timestamp）；\n\nKafka有四个核心API：\n\n- 生产者（Producer）API允许一个应用将记录流发布到一个或多个Kafka主题（topics）上；\n- 消费者（Consumer）API允许一个应用去订阅一个或者多个主题（topics），并处理这些给它们生产的记录流；\n- 流（Streams）API允许一个应用扮演流处理器的角色，从一个或多个主题消费一个输入流，然后向一个或多个主题输出流，高效地进行输入流到输出流的转换；\n- 连接（Connector）API允许创建或者运行可重用的生产者或消费者，并与将Kafka主题与现有的应用或数据系统连接。例如关系数据库的连接器可以捕获对表的每个更改。\n\n![四个核心API](Kafka-分布式流平台/kafka1.png)\n\n## 主题（Topics）和记录（Logs）\n\n一个主题是发布记录的一个类别或订阅源名称。 Kafka中主题总是多订阅用户; 也就是说，一个主题可以有零个，一个或多个消费者订阅写入它的数据。  \n对于每个主题，Kafka群集都维护一个如下所示的分区日志（partitioned log）：\n\n![主题解剖](Kafka-分布式流平台/kafka2.png)  \n\n每个分区（partition）都是有序的，不可变的记录序列，这些记录不断添加到结构化的提交日志中。分区中的每个记录都被分配一个称为偏移的序列id，这些id唯一标识了分区中的每个记录。  \nKafka集群使用可配置的保留期，持久保存所有已发布的记录，无论这些记录是否已被使用。 例如，如果保留策略被设置为两天，那么在发布记录后的两天内，记录都可以被消费，之后将被丢弃以释放空间。 Kafka的性能不受数据大小的影响，因此长时间存储数据不是问题。  \n实际上，基于每个消费者保留的唯一元数据是该消费者在日志中的偏移或位置。 这种偏移由消费者控制：通常消费者会线性地提高其偏移量从而读取记录，但事实上，由于该位置由消费者控制，因此它可以按照自己喜欢的任何顺序去消费记录。 例如，消费者可以重置为较旧的偏移量去重新处理过去的数据，或者跳到最近的记录并从“现在”开始消费。\n\n![主题解剖](Kafka-分布式流平台/kafka3.png)  \n\n这些特性的组合意味着Kafka消费者非常方便，消费者的加入移除对集群或其他消费者没有太大影响。 例如，您可以使用我们的命令行工具“拖尾（tail，此处不太理解）”任何主题的内容，而无需更改任何现有使用者所消耗的内容。\n\n日志中的分区有多种用途。 首先，它们允许日志扩展到超出适合单个服务器的规模。 每个独立分区必须适合托管它的服务器，但一个主题可能有多个分区，因此它可以处理任意数量的数据。 其次，分区充当了并行性的单元。\n\n## 一些基本概念\n\n1. Consumer Group：逻辑概念，对于同一个topic，会广播给不同的group。同一个group中只有一个consumer可以消费该topic。\n2. Broker：物理概念，Kafka集群中的每个Kafka节点。\n3. Partition：物理概念，Kafka下数据存储的基本单元。一个Topic数据，会被分散存储到多个Partition，每个Partition是有序的。\n4. Replication：同一个Partition可能会有多个副本（replication），多个副本之间数据是一致的。\n5. Replication Leader：一个Partition的多个副本需要选举一个leader负责partition上与Producer和Consumer消息传递。\n6. ReplicaManager：负责管理当前Broker所有分区和副本的信息，处理KafkaController发起的请求，如副本状态的切换（重新选举Replication Leader）、添加消息、消费消息等。","source":"_posts/Kafka-分布式流平台.md","raw":"---\ntitle: Kafka-分布式流平台\ndate: 2019-01-16 17:20:56\ntags: \n    - kafka\n    - 开源软件\ncategories: kafka \n---\n\n# Kafka:分布式流平台\n\n[参考链接：Kafka官网](https://kafka.apache.org/intro)\n\nApache Kafka是一个分布式流平台，具有以下三个关键能力：\n\n- 发布和订阅记录流（`streams of records`），类似于一个消息队列或者是企业消息系统；\n- 以具有容错性和持久性的方式存储记录流；\n- 即时处理记录流\n<!-- more --> \nKafka通常被用在两大类应用中：\n\n- 构建可在系统或应用程序之间可靠获取数据的实时流数据管道\n- 构建转换或响应数据流的实时流应用\n\n一些概念：\n- Kafka作为一个集群可以运行在一个或多个服务器上，这些服务器可跨多个数据中心；\n- Kafka集群存储在类别中的记录流称为主题（topics）；\n- 每个记录包含一个键（key）、一个值（value）以及一个时间戳（timestamp）；\n\nKafka有四个核心API：\n\n- 生产者（Producer）API允许一个应用将记录流发布到一个或多个Kafka主题（topics）上；\n- 消费者（Consumer）API允许一个应用去订阅一个或者多个主题（topics），并处理这些给它们生产的记录流；\n- 流（Streams）API允许一个应用扮演流处理器的角色，从一个或多个主题消费一个输入流，然后向一个或多个主题输出流，高效地进行输入流到输出流的转换；\n- 连接（Connector）API允许创建或者运行可重用的生产者或消费者，并与将Kafka主题与现有的应用或数据系统连接。例如关系数据库的连接器可以捕获对表的每个更改。\n\n![四个核心API](Kafka-分布式流平台/kafka1.png)\n\n## 主题（Topics）和记录（Logs）\n\n一个主题是发布记录的一个类别或订阅源名称。 Kafka中主题总是多订阅用户; 也就是说，一个主题可以有零个，一个或多个消费者订阅写入它的数据。  \n对于每个主题，Kafka群集都维护一个如下所示的分区日志（partitioned log）：\n\n![主题解剖](Kafka-分布式流平台/kafka2.png)  \n\n每个分区（partition）都是有序的，不可变的记录序列，这些记录不断添加到结构化的提交日志中。分区中的每个记录都被分配一个称为偏移的序列id，这些id唯一标识了分区中的每个记录。  \nKafka集群使用可配置的保留期，持久保存所有已发布的记录，无论这些记录是否已被使用。 例如，如果保留策略被设置为两天，那么在发布记录后的两天内，记录都可以被消费，之后将被丢弃以释放空间。 Kafka的性能不受数据大小的影响，因此长时间存储数据不是问题。  \n实际上，基于每个消费者保留的唯一元数据是该消费者在日志中的偏移或位置。 这种偏移由消费者控制：通常消费者会线性地提高其偏移量从而读取记录，但事实上，由于该位置由消费者控制，因此它可以按照自己喜欢的任何顺序去消费记录。 例如，消费者可以重置为较旧的偏移量去重新处理过去的数据，或者跳到最近的记录并从“现在”开始消费。\n\n![主题解剖](Kafka-分布式流平台/kafka3.png)  \n\n这些特性的组合意味着Kafka消费者非常方便，消费者的加入移除对集群或其他消费者没有太大影响。 例如，您可以使用我们的命令行工具“拖尾（tail，此处不太理解）”任何主题的内容，而无需更改任何现有使用者所消耗的内容。\n\n日志中的分区有多种用途。 首先，它们允许日志扩展到超出适合单个服务器的规模。 每个独立分区必须适合托管它的服务器，但一个主题可能有多个分区，因此它可以处理任意数量的数据。 其次，分区充当了并行性的单元。\n\n## 一些基本概念\n\n1. Consumer Group：逻辑概念，对于同一个topic，会广播给不同的group。同一个group中只有一个consumer可以消费该topic。\n2. Broker：物理概念，Kafka集群中的每个Kafka节点。\n3. Partition：物理概念，Kafka下数据存储的基本单元。一个Topic数据，会被分散存储到多个Partition，每个Partition是有序的。\n4. Replication：同一个Partition可能会有多个副本（replication），多个副本之间数据是一致的。\n5. Replication Leader：一个Partition的多个副本需要选举一个leader负责partition上与Producer和Consumer消息传递。\n6. ReplicaManager：负责管理当前Broker所有分区和副本的信息，处理KafkaController发起的请求，如副本状态的切换（重新选举Replication Leader）、添加消息、消费消息等。","slug":"Kafka-分布式流平台","published":1,"updated":"2019-03-06T06:57:16.384Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck0ozhiwn000dgkuwfqlz8n1v","content":"<h1 id=\"Kafka-分布式流平台\"><a href=\"#Kafka-分布式流平台\" class=\"headerlink\" title=\"Kafka:分布式流平台\"></a>Kafka:分布式流平台</h1><p><a href=\"https://kafka.apache.org/intro\" target=\"_blank\" rel=\"noopener\">参考链接：Kafka官网</a></p>\n<p>Apache Kafka是一个分布式流平台，具有以下三个关键能力：</p>\n<ul>\n<li>发布和订阅记录流（<code>streams of records</code>），类似于一个消息队列或者是企业消息系统；</li>\n<li>以具有容错性和持久性的方式存储记录流；</li>\n<li><p>即时处理记录流</p>\n<a id=\"more\"></a> \n<p>Kafka通常被用在两大类应用中：</p>\n</li>\n<li><p>构建可在系统或应用程序之间可靠获取数据的实时流数据管道</p>\n</li>\n<li>构建转换或响应数据流的实时流应用</li>\n</ul>\n<p>一些概念：</p>\n<ul>\n<li>Kafka作为一个集群可以运行在一个或多个服务器上，这些服务器可跨多个数据中心；</li>\n<li>Kafka集群存储在类别中的记录流称为主题（topics）；</li>\n<li>每个记录包含一个键（key）、一个值（value）以及一个时间戳（timestamp）；</li>\n</ul>\n<p>Kafka有四个核心API：</p>\n<ul>\n<li>生产者（Producer）API允许一个应用将记录流发布到一个或多个Kafka主题（topics）上；</li>\n<li>消费者（Consumer）API允许一个应用去订阅一个或者多个主题（topics），并处理这些给它们生产的记录流；</li>\n<li>流（Streams）API允许一个应用扮演流处理器的角色，从一个或多个主题消费一个输入流，然后向一个或多个主题输出流，高效地进行输入流到输出流的转换；</li>\n<li>连接（Connector）API允许创建或者运行可重用的生产者或消费者，并与将Kafka主题与现有的应用或数据系统连接。例如关系数据库的连接器可以捕获对表的每个更改。</li>\n</ul>\n<p><img src=\"/2019/01/16/Kafka-分布式流平台/kafka1.png\" alt=\"四个核心API\"></p>\n<h2 id=\"主题（Topics）和记录（Logs）\"><a href=\"#主题（Topics）和记录（Logs）\" class=\"headerlink\" title=\"主题（Topics）和记录（Logs）\"></a>主题（Topics）和记录（Logs）</h2><p>一个主题是发布记录的一个类别或订阅源名称。 Kafka中主题总是多订阅用户; 也就是说，一个主题可以有零个，一个或多个消费者订阅写入它的数据。<br>对于每个主题，Kafka群集都维护一个如下所示的分区日志（partitioned log）：</p>\n<p><img src=\"/2019/01/16/Kafka-分布式流平台/kafka2.png\" alt=\"主题解剖\">  </p>\n<p>每个分区（partition）都是有序的，不可变的记录序列，这些记录不断添加到结构化的提交日志中。分区中的每个记录都被分配一个称为偏移的序列id，这些id唯一标识了分区中的每个记录。<br>Kafka集群使用可配置的保留期，持久保存所有已发布的记录，无论这些记录是否已被使用。 例如，如果保留策略被设置为两天，那么在发布记录后的两天内，记录都可以被消费，之后将被丢弃以释放空间。 Kafka的性能不受数据大小的影响，因此长时间存储数据不是问题。<br>实际上，基于每个消费者保留的唯一元数据是该消费者在日志中的偏移或位置。 这种偏移由消费者控制：通常消费者会线性地提高其偏移量从而读取记录，但事实上，由于该位置由消费者控制，因此它可以按照自己喜欢的任何顺序去消费记录。 例如，消费者可以重置为较旧的偏移量去重新处理过去的数据，或者跳到最近的记录并从“现在”开始消费。</p>\n<p><img src=\"/2019/01/16/Kafka-分布式流平台/kafka3.png\" alt=\"主题解剖\">  </p>\n<p>这些特性的组合意味着Kafka消费者非常方便，消费者的加入移除对集群或其他消费者没有太大影响。 例如，您可以使用我们的命令行工具“拖尾（tail，此处不太理解）”任何主题的内容，而无需更改任何现有使用者所消耗的内容。</p>\n<p>日志中的分区有多种用途。 首先，它们允许日志扩展到超出适合单个服务器的规模。 每个独立分区必须适合托管它的服务器，但一个主题可能有多个分区，因此它可以处理任意数量的数据。 其次，分区充当了并行性的单元。</p>\n<h2 id=\"一些基本概念\"><a href=\"#一些基本概念\" class=\"headerlink\" title=\"一些基本概念\"></a>一些基本概念</h2><ol>\n<li>Consumer Group：逻辑概念，对于同一个topic，会广播给不同的group。同一个group中只有一个consumer可以消费该topic。</li>\n<li>Broker：物理概念，Kafka集群中的每个Kafka节点。</li>\n<li>Partition：物理概念，Kafka下数据存储的基本单元。一个Topic数据，会被分散存储到多个Partition，每个Partition是有序的。</li>\n<li>Replication：同一个Partition可能会有多个副本（replication），多个副本之间数据是一致的。</li>\n<li>Replication Leader：一个Partition的多个副本需要选举一个leader负责partition上与Producer和Consumer消息传递。</li>\n<li>ReplicaManager：负责管理当前Broker所有分区和副本的信息，处理KafkaController发起的请求，如副本状态的切换（重新选举Replication Leader）、添加消息、消费消息等。</li>\n</ol>\n","site":{"data":{}},"excerpt":"<h1 id=\"Kafka-分布式流平台\"><a href=\"#Kafka-分布式流平台\" class=\"headerlink\" title=\"Kafka:分布式流平台\"></a>Kafka:分布式流平台</h1><p><a href=\"https://kafka.apache.org/intro\" target=\"_blank\" rel=\"noopener\">参考链接：Kafka官网</a></p>\n<p>Apache Kafka是一个分布式流平台，具有以下三个关键能力：</p>\n<ul>\n<li>发布和订阅记录流（<code>streams of records</code>），类似于一个消息队列或者是企业消息系统；</li>\n<li>以具有容错性和持久性的方式存储记录流；</li>\n<li><p>即时处理记录流</p></li></ul>","more":"<p>Kafka通常被用在两大类应用中：</p>\n\n<li><p>构建可在系统或应用程序之间可靠获取数据的实时流数据管道</p>\n</li>\n<li>构建转换或响应数据流的实时流应用</li>\n\n<p>一些概念：</p>\n<ul>\n<li>Kafka作为一个集群可以运行在一个或多个服务器上，这些服务器可跨多个数据中心；</li>\n<li>Kafka集群存储在类别中的记录流称为主题（topics）；</li>\n<li>每个记录包含一个键（key）、一个值（value）以及一个时间戳（timestamp）；</li>\n</ul>\n<p>Kafka有四个核心API：</p>\n<ul>\n<li>生产者（Producer）API允许一个应用将记录流发布到一个或多个Kafka主题（topics）上；</li>\n<li>消费者（Consumer）API允许一个应用去订阅一个或者多个主题（topics），并处理这些给它们生产的记录流；</li>\n<li>流（Streams）API允许一个应用扮演流处理器的角色，从一个或多个主题消费一个输入流，然后向一个或多个主题输出流，高效地进行输入流到输出流的转换；</li>\n<li>连接（Connector）API允许创建或者运行可重用的生产者或消费者，并与将Kafka主题与现有的应用或数据系统连接。例如关系数据库的连接器可以捕获对表的每个更改。</li>\n</ul>\n<p><img src=\"/2019/01/16/Kafka-分布式流平台/kafka1.png\" alt=\"四个核心API\"></p>\n<h2 id=\"主题（Topics）和记录（Logs）\"><a href=\"#主题（Topics）和记录（Logs）\" class=\"headerlink\" title=\"主题（Topics）和记录（Logs）\"></a>主题（Topics）和记录（Logs）</h2><p>一个主题是发布记录的一个类别或订阅源名称。 Kafka中主题总是多订阅用户; 也就是说，一个主题可以有零个，一个或多个消费者订阅写入它的数据。<br>对于每个主题，Kafka群集都维护一个如下所示的分区日志（partitioned log）：</p>\n<p><img src=\"/2019/01/16/Kafka-分布式流平台/kafka2.png\" alt=\"主题解剖\">  </p>\n<p>每个分区（partition）都是有序的，不可变的记录序列，这些记录不断添加到结构化的提交日志中。分区中的每个记录都被分配一个称为偏移的序列id，这些id唯一标识了分区中的每个记录。<br>Kafka集群使用可配置的保留期，持久保存所有已发布的记录，无论这些记录是否已被使用。 例如，如果保留策略被设置为两天，那么在发布记录后的两天内，记录都可以被消费，之后将被丢弃以释放空间。 Kafka的性能不受数据大小的影响，因此长时间存储数据不是问题。<br>实际上，基于每个消费者保留的唯一元数据是该消费者在日志中的偏移或位置。 这种偏移由消费者控制：通常消费者会线性地提高其偏移量从而读取记录，但事实上，由于该位置由消费者控制，因此它可以按照自己喜欢的任何顺序去消费记录。 例如，消费者可以重置为较旧的偏移量去重新处理过去的数据，或者跳到最近的记录并从“现在”开始消费。</p>\n<p><img src=\"/2019/01/16/Kafka-分布式流平台/kafka3.png\" alt=\"主题解剖\">  </p>\n<p>这些特性的组合意味着Kafka消费者非常方便，消费者的加入移除对集群或其他消费者没有太大影响。 例如，您可以使用我们的命令行工具“拖尾（tail，此处不太理解）”任何主题的内容，而无需更改任何现有使用者所消耗的内容。</p>\n<p>日志中的分区有多种用途。 首先，它们允许日志扩展到超出适合单个服务器的规模。 每个独立分区必须适合托管它的服务器，但一个主题可能有多个分区，因此它可以处理任意数量的数据。 其次，分区充当了并行性的单元。</p>\n<h2 id=\"一些基本概念\"><a href=\"#一些基本概念\" class=\"headerlink\" title=\"一些基本概念\"></a>一些基本概念</h2><ol>\n<li>Consumer Group：逻辑概念，对于同一个topic，会广播给不同的group。同一个group中只有一个consumer可以消费该topic。</li>\n<li>Broker：物理概念，Kafka集群中的每个Kafka节点。</li>\n<li>Partition：物理概念，Kafka下数据存储的基本单元。一个Topic数据，会被分散存储到多个Partition，每个Partition是有序的。</li>\n<li>Replication：同一个Partition可能会有多个副本（replication），多个副本之间数据是一致的。</li>\n<li>Replication Leader：一个Partition的多个副本需要选举一个leader负责partition上与Producer和Consumer消息传递。</li>\n<li>ReplicaManager：负责管理当前Broker所有分区和副本的信息，处理KafkaController发起的请求，如副本状态的切换（重新选举Replication Leader）、添加消息、消费消息等。</li>\n</ol>"},{"title":"Java面向对象编程知识点","date":"2019-02-20T02:40:58.000Z","_content":"\n## 面向对象的三个基本特征和五种设计原则\n\n### 三个基本特征\n\n#### 封装\n封装就是把客观事物封装成抽象的类，并且类可以把自己的数据和方法只让可信的类或者对象操作，对不可信的进行信息隐藏；\n#### 继承\n继承是指这样一种能力：它可以使用现有类的所有功能，并在无需重写原有类的情况下对这些功能进行扩展。通过继承创建的新类称为“子类”或“派生类”，被继承的类称为“父类”或“基类”。继承的过程就是从一般到特殊的过程。  \n要实现继承可以通过“继承”和“组合”两种方式实现。在某些OOP语言中，一个子类可以继承多个基类，但一般情况下（Java语言），一个子类只有一个基类，实现多重继承可以通过多级继承来实现。 \n<!-- more --> \n继承概念的实现方式有三类：  \n\n- 实现继承：指使用基类的属性和方法而无需额外编码的能力；\n- 接口继承：指仅使用基类的属性和方法名称，但子类必须提供实现的能力；\n- 可视继承：指子类使用基类的外观和实现代码的能力。\n#### 多态\n\n多态是允许你将父对象设置成为和一个或多个它的子对象相等的技术，赋值之后，父对象就可以根据当前赋值给它的子对象的特性以不同方式运作。简单地说就是：允许将子类类型的指针赋值给父类类型的指针。  \n实现多态有两种方式：覆盖和重载：  \n\n- 覆盖是指子类重新定义父类的虚函数的做法；\n- 重载是指允许多个同名函数，这些函数的参数不同（参数个数不同，或参数类型不同，或两者都不同）。\n\n### 五种设计原则\n\n#### 单一职责原则(Single Responsibility Principle，SRP)\n\n单一职责原则是指一个类的功能要单一，不能包罗万象。一个类应该只有一个引起它变化的原因。\n\n#### 开放封闭原则(Open－Close Principle，OCP)\n\n 开放封闭原则指的是对扩展性的开放和对修改的封闭：\n - 对扩展性的开放：模块的行为应该是可扩展的，从而该模块可表现出行的行为以满足需求的变化；\n - 对修改的封闭：模块自身的代码时不应该被修改的，扩展模块的一般途径是修改内部实现。\n\n #### 里氏替换原则(the Liskov Substitution Principle，LSP) \n\n 子类型必须能够替换掉它们的父类型，并出现在父类能够出现的任何地方。\n\n\n#### 依赖倒置原则(the Dependency Inversion Principle，PIP)\n\n具体依赖抽象，上层依赖下层。\n\n#### 接口隔离原则(the Interface Segregation Principle，ISP)\n\n模块间要通过抽象接口隔离开，而不是通过具体的类强耦合起来。\n\n\n## `Class.java`类文件下`getMethods()`和`getDeclaredMethods()`的区别\n\n```\n@CallerSensitive\npublic Method[] getMethods() throws SecurityException {\n    checkMemberAccess(Member.PUBLIC, Reflection.getCallerClass(), true);\n    return copyMethods(privateGetPublicMethods());\n}\n\n@CallerSensitive\npublic Method[] getDeclaredMethods() throws SecurityException {\n    checkMemberAccess(Member.DECLARED, Reflection.getCallerClass(), true);\n    return copyMethods(privateGetDeclaredMethods(false));\n}\n```\n`getMethods()`是获取对应类及其所有父类中的共有（public）方法；`getDeclaredMethods()`获取的是当前类中的所有方法。\n","source":"_posts/Java面向对象编程知识点.md","raw":"---\ntitle: Java面向对象编程知识点\ndate: 2019-02-20 10:40:58\ntags: \n    - Java\n    - 面向对象\ncategories: 工作\n---\n\n## 面向对象的三个基本特征和五种设计原则\n\n### 三个基本特征\n\n#### 封装\n封装就是把客观事物封装成抽象的类，并且类可以把自己的数据和方法只让可信的类或者对象操作，对不可信的进行信息隐藏；\n#### 继承\n继承是指这样一种能力：它可以使用现有类的所有功能，并在无需重写原有类的情况下对这些功能进行扩展。通过继承创建的新类称为“子类”或“派生类”，被继承的类称为“父类”或“基类”。继承的过程就是从一般到特殊的过程。  \n要实现继承可以通过“继承”和“组合”两种方式实现。在某些OOP语言中，一个子类可以继承多个基类，但一般情况下（Java语言），一个子类只有一个基类，实现多重继承可以通过多级继承来实现。 \n<!-- more --> \n继承概念的实现方式有三类：  \n\n- 实现继承：指使用基类的属性和方法而无需额外编码的能力；\n- 接口继承：指仅使用基类的属性和方法名称，但子类必须提供实现的能力；\n- 可视继承：指子类使用基类的外观和实现代码的能力。\n#### 多态\n\n多态是允许你将父对象设置成为和一个或多个它的子对象相等的技术，赋值之后，父对象就可以根据当前赋值给它的子对象的特性以不同方式运作。简单地说就是：允许将子类类型的指针赋值给父类类型的指针。  \n实现多态有两种方式：覆盖和重载：  \n\n- 覆盖是指子类重新定义父类的虚函数的做法；\n- 重载是指允许多个同名函数，这些函数的参数不同（参数个数不同，或参数类型不同，或两者都不同）。\n\n### 五种设计原则\n\n#### 单一职责原则(Single Responsibility Principle，SRP)\n\n单一职责原则是指一个类的功能要单一，不能包罗万象。一个类应该只有一个引起它变化的原因。\n\n#### 开放封闭原则(Open－Close Principle，OCP)\n\n 开放封闭原则指的是对扩展性的开放和对修改的封闭：\n - 对扩展性的开放：模块的行为应该是可扩展的，从而该模块可表现出行的行为以满足需求的变化；\n - 对修改的封闭：模块自身的代码时不应该被修改的，扩展模块的一般途径是修改内部实现。\n\n #### 里氏替换原则(the Liskov Substitution Principle，LSP) \n\n 子类型必须能够替换掉它们的父类型，并出现在父类能够出现的任何地方。\n\n\n#### 依赖倒置原则(the Dependency Inversion Principle，PIP)\n\n具体依赖抽象，上层依赖下层。\n\n#### 接口隔离原则(the Interface Segregation Principle，ISP)\n\n模块间要通过抽象接口隔离开，而不是通过具体的类强耦合起来。\n\n\n## `Class.java`类文件下`getMethods()`和`getDeclaredMethods()`的区别\n\n```\n@CallerSensitive\npublic Method[] getMethods() throws SecurityException {\n    checkMemberAccess(Member.PUBLIC, Reflection.getCallerClass(), true);\n    return copyMethods(privateGetPublicMethods());\n}\n\n@CallerSensitive\npublic Method[] getDeclaredMethods() throws SecurityException {\n    checkMemberAccess(Member.DECLARED, Reflection.getCallerClass(), true);\n    return copyMethods(privateGetDeclaredMethods(false));\n}\n```\n`getMethods()`是获取对应类及其所有父类中的共有（public）方法；`getDeclaredMethods()`获取的是当前类中的所有方法。\n","slug":"Java面向对象编程知识点","published":1,"updated":"2019-04-08T09:10:02.004Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck0ozhiwq000hgkuwomlzw3gh","content":"<h2 id=\"面向对象的三个基本特征和五种设计原则\"><a href=\"#面向对象的三个基本特征和五种设计原则\" class=\"headerlink\" title=\"面向对象的三个基本特征和五种设计原则\"></a>面向对象的三个基本特征和五种设计原则</h2><h3 id=\"三个基本特征\"><a href=\"#三个基本特征\" class=\"headerlink\" title=\"三个基本特征\"></a>三个基本特征</h3><h4 id=\"封装\"><a href=\"#封装\" class=\"headerlink\" title=\"封装\"></a>封装</h4><p>封装就是把客观事物封装成抽象的类，并且类可以把自己的数据和方法只让可信的类或者对象操作，对不可信的进行信息隐藏；</p>\n<h4 id=\"继承\"><a href=\"#继承\" class=\"headerlink\" title=\"继承\"></a>继承</h4><p>继承是指这样一种能力：它可以使用现有类的所有功能，并在无需重写原有类的情况下对这些功能进行扩展。通过继承创建的新类称为“子类”或“派生类”，被继承的类称为“父类”或“基类”。继承的过程就是从一般到特殊的过程。<br>要实现继承可以通过“继承”和“组合”两种方式实现。在某些OOP语言中，一个子类可以继承多个基类，但一般情况下（Java语言），一个子类只有一个基类，实现多重继承可以通过多级继承来实现。<br><a id=\"more\"></a><br>继承概念的实现方式有三类：  </p>\n<ul>\n<li>实现继承：指使用基类的属性和方法而无需额外编码的能力；</li>\n<li>接口继承：指仅使用基类的属性和方法名称，但子类必须提供实现的能力；</li>\n<li>可视继承：指子类使用基类的外观和实现代码的能力。<h4 id=\"多态\"><a href=\"#多态\" class=\"headerlink\" title=\"多态\"></a>多态</h4></li>\n</ul>\n<p>多态是允许你将父对象设置成为和一个或多个它的子对象相等的技术，赋值之后，父对象就可以根据当前赋值给它的子对象的特性以不同方式运作。简单地说就是：允许将子类类型的指针赋值给父类类型的指针。<br>实现多态有两种方式：覆盖和重载：  </p>\n<ul>\n<li>覆盖是指子类重新定义父类的虚函数的做法；</li>\n<li>重载是指允许多个同名函数，这些函数的参数不同（参数个数不同，或参数类型不同，或两者都不同）。</li>\n</ul>\n<h3 id=\"五种设计原则\"><a href=\"#五种设计原则\" class=\"headerlink\" title=\"五种设计原则\"></a>五种设计原则</h3><h4 id=\"单一职责原则-Single-Responsibility-Principle，SRP\"><a href=\"#单一职责原则-Single-Responsibility-Principle，SRP\" class=\"headerlink\" title=\"单一职责原则(Single Responsibility Principle，SRP)\"></a>单一职责原则(Single Responsibility Principle，SRP)</h4><p>单一职责原则是指一个类的功能要单一，不能包罗万象。一个类应该只有一个引起它变化的原因。</p>\n<h4 id=\"开放封闭原则-Open－Close-Principle，OCP\"><a href=\"#开放封闭原则-Open－Close-Principle，OCP\" class=\"headerlink\" title=\"开放封闭原则(Open－Close Principle，OCP)\"></a>开放封闭原则(Open－Close Principle，OCP)</h4><p> 开放封闭原则指的是对扩展性的开放和对修改的封闭：</p>\n<ul>\n<li>对扩展性的开放：模块的行为应该是可扩展的，从而该模块可表现出行的行为以满足需求的变化；</li>\n<li><p>对修改的封闭：模块自身的代码时不应该被修改的，扩展模块的一般途径是修改内部实现。</p>\n<h4 id=\"里氏替换原则-the-Liskov-Substitution-Principle，LSP\"><a href=\"#里氏替换原则-the-Liskov-Substitution-Principle，LSP\" class=\"headerlink\" title=\"里氏替换原则(the Liskov Substitution Principle，LSP)\"></a>里氏替换原则(the Liskov Substitution Principle，LSP)</h4><p>子类型必须能够替换掉它们的父类型，并出现在父类能够出现的任何地方。</p>\n</li>\n</ul>\n<h4 id=\"依赖倒置原则-the-Dependency-Inversion-Principle，PIP\"><a href=\"#依赖倒置原则-the-Dependency-Inversion-Principle，PIP\" class=\"headerlink\" title=\"依赖倒置原则(the Dependency Inversion Principle，PIP)\"></a>依赖倒置原则(the Dependency Inversion Principle，PIP)</h4><p>具体依赖抽象，上层依赖下层。</p>\n<h4 id=\"接口隔离原则-the-Interface-Segregation-Principle，ISP\"><a href=\"#接口隔离原则-the-Interface-Segregation-Principle，ISP\" class=\"headerlink\" title=\"接口隔离原则(the Interface Segregation Principle，ISP)\"></a>接口隔离原则(the Interface Segregation Principle，ISP)</h4><p>模块间要通过抽象接口隔离开，而不是通过具体的类强耦合起来。</p>\n<h2 id=\"Class-java类文件下getMethods-和getDeclaredMethods-的区别\"><a href=\"#Class-java类文件下getMethods-和getDeclaredMethods-的区别\" class=\"headerlink\" title=\"Class.java类文件下getMethods()和getDeclaredMethods()的区别\"></a><code>Class.java</code>类文件下<code>getMethods()</code>和<code>getDeclaredMethods()</code>的区别</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@CallerSensitive</span><br><span class=\"line\">public Method[] getMethods() throws SecurityException &#123;</span><br><span class=\"line\">    checkMemberAccess(Member.PUBLIC, Reflection.getCallerClass(), true);</span><br><span class=\"line\">    return copyMethods(privateGetPublicMethods());</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">@CallerSensitive</span><br><span class=\"line\">public Method[] getDeclaredMethods() throws SecurityException &#123;</span><br><span class=\"line\">    checkMemberAccess(Member.DECLARED, Reflection.getCallerClass(), true);</span><br><span class=\"line\">    return copyMethods(privateGetDeclaredMethods(false));</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><code>getMethods()</code>是获取对应类及其所有父类中的共有（public）方法；<code>getDeclaredMethods()</code>获取的是当前类中的所有方法。</p>\n","site":{"data":{}},"excerpt":"<h2 id=\"面向对象的三个基本特征和五种设计原则\"><a href=\"#面向对象的三个基本特征和五种设计原则\" class=\"headerlink\" title=\"面向对象的三个基本特征和五种设计原则\"></a>面向对象的三个基本特征和五种设计原则</h2><h3 id=\"三个基本特征\"><a href=\"#三个基本特征\" class=\"headerlink\" title=\"三个基本特征\"></a>三个基本特征</h3><h4 id=\"封装\"><a href=\"#封装\" class=\"headerlink\" title=\"封装\"></a>封装</h4><p>封装就是把客观事物封装成抽象的类，并且类可以把自己的数据和方法只让可信的类或者对象操作，对不可信的进行信息隐藏；</p>\n<h4 id=\"继承\"><a href=\"#继承\" class=\"headerlink\" title=\"继承\"></a>继承</h4><p>继承是指这样一种能力：它可以使用现有类的所有功能，并在无需重写原有类的情况下对这些功能进行扩展。通过继承创建的新类称为“子类”或“派生类”，被继承的类称为“父类”或“基类”。继承的过程就是从一般到特殊的过程。<br>要实现继承可以通过“继承”和“组合”两种方式实现。在某些OOP语言中，一个子类可以继承多个基类，但一般情况下（Java语言），一个子类只有一个基类，实现多重继承可以通过多级继承来实现。<br></p>","more":"<br>继承概念的实现方式有三类：  <p></p>\n<ul>\n<li>实现继承：指使用基类的属性和方法而无需额外编码的能力；</li>\n<li>接口继承：指仅使用基类的属性和方法名称，但子类必须提供实现的能力；</li>\n<li>可视继承：指子类使用基类的外观和实现代码的能力。<h4 id=\"多态\"><a href=\"#多态\" class=\"headerlink\" title=\"多态\"></a>多态</h4></li>\n</ul>\n<p>多态是允许你将父对象设置成为和一个或多个它的子对象相等的技术，赋值之后，父对象就可以根据当前赋值给它的子对象的特性以不同方式运作。简单地说就是：允许将子类类型的指针赋值给父类类型的指针。<br>实现多态有两种方式：覆盖和重载：  </p>\n<ul>\n<li>覆盖是指子类重新定义父类的虚函数的做法；</li>\n<li>重载是指允许多个同名函数，这些函数的参数不同（参数个数不同，或参数类型不同，或两者都不同）。</li>\n</ul>\n<h3 id=\"五种设计原则\"><a href=\"#五种设计原则\" class=\"headerlink\" title=\"五种设计原则\"></a>五种设计原则</h3><h4 id=\"单一职责原则-Single-Responsibility-Principle，SRP\"><a href=\"#单一职责原则-Single-Responsibility-Principle，SRP\" class=\"headerlink\" title=\"单一职责原则(Single Responsibility Principle，SRP)\"></a>单一职责原则(Single Responsibility Principle，SRP)</h4><p>单一职责原则是指一个类的功能要单一，不能包罗万象。一个类应该只有一个引起它变化的原因。</p>\n<h4 id=\"开放封闭原则-Open－Close-Principle，OCP\"><a href=\"#开放封闭原则-Open－Close-Principle，OCP\" class=\"headerlink\" title=\"开放封闭原则(Open－Close Principle，OCP)\"></a>开放封闭原则(Open－Close Principle，OCP)</h4><p> 开放封闭原则指的是对扩展性的开放和对修改的封闭：</p>\n<ul>\n<li>对扩展性的开放：模块的行为应该是可扩展的，从而该模块可表现出行的行为以满足需求的变化；</li>\n<li><p>对修改的封闭：模块自身的代码时不应该被修改的，扩展模块的一般途径是修改内部实现。</p>\n<h4 id=\"里氏替换原则-the-Liskov-Substitution-Principle，LSP\"><a href=\"#里氏替换原则-the-Liskov-Substitution-Principle，LSP\" class=\"headerlink\" title=\"里氏替换原则(the Liskov Substitution Principle，LSP)\"></a>里氏替换原则(the Liskov Substitution Principle，LSP)</h4><p>子类型必须能够替换掉它们的父类型，并出现在父类能够出现的任何地方。</p>\n</li>\n</ul>\n<h4 id=\"依赖倒置原则-the-Dependency-Inversion-Principle，PIP\"><a href=\"#依赖倒置原则-the-Dependency-Inversion-Principle，PIP\" class=\"headerlink\" title=\"依赖倒置原则(the Dependency Inversion Principle，PIP)\"></a>依赖倒置原则(the Dependency Inversion Principle，PIP)</h4><p>具体依赖抽象，上层依赖下层。</p>\n<h4 id=\"接口隔离原则-the-Interface-Segregation-Principle，ISP\"><a href=\"#接口隔离原则-the-Interface-Segregation-Principle，ISP\" class=\"headerlink\" title=\"接口隔离原则(the Interface Segregation Principle，ISP)\"></a>接口隔离原则(the Interface Segregation Principle，ISP)</h4><p>模块间要通过抽象接口隔离开，而不是通过具体的类强耦合起来。</p>\n<h2 id=\"Class-java类文件下getMethods-和getDeclaredMethods-的区别\"><a href=\"#Class-java类文件下getMethods-和getDeclaredMethods-的区别\" class=\"headerlink\" title=\"Class.java类文件下getMethods()和getDeclaredMethods()的区别\"></a><code>Class.java</code>类文件下<code>getMethods()</code>和<code>getDeclaredMethods()</code>的区别</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@CallerSensitive</span><br><span class=\"line\">public Method[] getMethods() throws SecurityException &#123;</span><br><span class=\"line\">    checkMemberAccess(Member.PUBLIC, Reflection.getCallerClass(), true);</span><br><span class=\"line\">    return copyMethods(privateGetPublicMethods());</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">@CallerSensitive</span><br><span class=\"line\">public Method[] getDeclaredMethods() throws SecurityException &#123;</span><br><span class=\"line\">    checkMemberAccess(Member.DECLARED, Reflection.getCallerClass(), true);</span><br><span class=\"line\">    return copyMethods(privateGetDeclaredMethods(false));</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><code>getMethods()</code>是获取对应类及其所有父类中的共有（public）方法；<code>getDeclaredMethods()</code>获取的是当前类中的所有方法。</p>"},{"title":"MyIsam存储引擎","date":"2019-04-10T02:18:51.000Z","_content":"\n1. Spring Boot的@Transactional注解对MyISAM存储引擎生效的问题？\n\n未解决问题，一脸懵逼。。。。\n\n<!-- more --> \n其中，数据表对应的实体对象如下，\n```\nimport javax.persistence.Entity;\nimport javax.persistence.GeneratedValue;\nimport javax.persistence.GenerationType;\nimport javax.persistence.Id;\n\n@Entity\npublic class User {\n\n    @GeneratedValue(strategy = GenerationType.AUTO)\n    @Id\n    private Long id;\n\n    private String name;\n    private String password;\n\n    public User() {\n    }\n\n    public User(String name, String password) {\n        this.name = name;\n        this.password = password;\n    }\n\n    @Override\n    public String toString() {\n        return \"User{\" +\n                \"id=\" + id +\n                \", name='\" + name + '\\'' +\n                \", password='\" + password + '\\'' +\n                '}';\n    }\n\n    public Long getId() {\n        return id;\n    }\n\n    public void setId(Long id) {\n        this.id = id;\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public void setName(String name) {\n        this.name = name;\n    }\n\n    public String getPassword() {\n        return password;\n    }\n\n    public void setPassword(String password) {\n        this.password = password;\n    }\n}\n\n```\n使用Spring Data Jpa进行数据操作，代码如下：\n```\nimport org.springframework.data.jpa.repository.JpaRepository;\nimport org.springframework.data.jpa.repository.Modifying;\nimport org.springframework.data.jpa.repository.Query;\nimport org.springframework.stereotype.Repository;\n\n@Repository(\"user_repository\")\npublic interface UserRepository extends JpaRepository<User, Long> {\n\n    Integer deleteUserById(Long id);\n\n    @Modifying(clearAutomatically = true)\n    @Query(value = \"update User set name=?2,password=?3 where id=?1\")\n    Integer updateUserById(Long id,String name,String password);\n\n}\n```\n\n业务逻辑层代码如下：\n```\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Service;\nimport org.springframework.transaction.annotation.Transactional;\n\n@Service(\"uService\")\npublic class UserService {\n\n    @Autowired\n    UserRepository userRepository;\n\n\n    @Transactional(rollbackFor = Exception.class)\n    public Integer deleteUserById(Long id){\n        Integer i = userRepository.deleteUserById(id);\n        if(id.equals(718L)){\n            throw new IllegalArgumentException(\"删除714错误，回滚\");\n        }\n        return i;\n    }\n\n    @Transactional(rollbackFor = {IllegalArgumentException.class})\n    public User saveUser(User user){\n        User u = userRepository.save(user);\n\n        if(u.getName()==\"yang1\"){\n            throw new IllegalArgumentException(\"存入yang，导致回滚\");\n        }\n        return u;\n    }\n\n    @Transactional(rollbackFor = {IllegalArgumentException.class})\n    public Integer updateUserById(User user){\n        Integer i = userRepository.updateUserById(user.getId(),user.getName(),user.getPassword());\n        return i;\n    }\n}\n```\n最后是测试代码，\n```\n@RunWith(SpringRunner.class)\n@SpringBootTest\npublic class UserServiceTest {\n\n    @Autowired\n    UserService userService;\n\n    private final Logger LOGGER = LoggerFactory.getLogger(this.getClass());\n\n    @Test\n    public void deleteUserById() {\n        Integer i = userService.deleteUserById(718L);\n        LOGGER.error(\"delete by user id successful: \"+ i);\n    }\n\n    @Test\n    public void saveUser(){\n        User user = new User(\"yang\",\"adasdsa\");\n        User u = userService.saveUser(user);\n        LOGGER.error(u.toString());\n    }\n\n    @Test\n    public void updateUser(){\n        User user = new User(\"yang\",\"adasdsa\");\n        user.setId(714L);\n        int i = userService.updateUserById(user);\n        LOGGER.error(\"update by user id successful: \"+ i);\n    }\n}\n```\n\n在测试删除用户（deleteUserById）以及保存用户（saveUser）时，发现抛出异常会导致回滚，但是我的数据库引擎是MyIsam，讲道理不应该支持事务。","source":"_posts/MyIsam存储引擎.md","raw":"---\ntitle: MyIsam存储引擎\ndate: 2019-04-10 10:18:51\ntags: \n    - MyIsam\n    - 数据库\n    - 问题\ncategories: 数据库\n---\n\n1. Spring Boot的@Transactional注解对MyISAM存储引擎生效的问题？\n\n未解决问题，一脸懵逼。。。。\n\n<!-- more --> \n其中，数据表对应的实体对象如下，\n```\nimport javax.persistence.Entity;\nimport javax.persistence.GeneratedValue;\nimport javax.persistence.GenerationType;\nimport javax.persistence.Id;\n\n@Entity\npublic class User {\n\n    @GeneratedValue(strategy = GenerationType.AUTO)\n    @Id\n    private Long id;\n\n    private String name;\n    private String password;\n\n    public User() {\n    }\n\n    public User(String name, String password) {\n        this.name = name;\n        this.password = password;\n    }\n\n    @Override\n    public String toString() {\n        return \"User{\" +\n                \"id=\" + id +\n                \", name='\" + name + '\\'' +\n                \", password='\" + password + '\\'' +\n                '}';\n    }\n\n    public Long getId() {\n        return id;\n    }\n\n    public void setId(Long id) {\n        this.id = id;\n    }\n\n    public String getName() {\n        return name;\n    }\n\n    public void setName(String name) {\n        this.name = name;\n    }\n\n    public String getPassword() {\n        return password;\n    }\n\n    public void setPassword(String password) {\n        this.password = password;\n    }\n}\n\n```\n使用Spring Data Jpa进行数据操作，代码如下：\n```\nimport org.springframework.data.jpa.repository.JpaRepository;\nimport org.springframework.data.jpa.repository.Modifying;\nimport org.springframework.data.jpa.repository.Query;\nimport org.springframework.stereotype.Repository;\n\n@Repository(\"user_repository\")\npublic interface UserRepository extends JpaRepository<User, Long> {\n\n    Integer deleteUserById(Long id);\n\n    @Modifying(clearAutomatically = true)\n    @Query(value = \"update User set name=?2,password=?3 where id=?1\")\n    Integer updateUserById(Long id,String name,String password);\n\n}\n```\n\n业务逻辑层代码如下：\n```\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Service;\nimport org.springframework.transaction.annotation.Transactional;\n\n@Service(\"uService\")\npublic class UserService {\n\n    @Autowired\n    UserRepository userRepository;\n\n\n    @Transactional(rollbackFor = Exception.class)\n    public Integer deleteUserById(Long id){\n        Integer i = userRepository.deleteUserById(id);\n        if(id.equals(718L)){\n            throw new IllegalArgumentException(\"删除714错误，回滚\");\n        }\n        return i;\n    }\n\n    @Transactional(rollbackFor = {IllegalArgumentException.class})\n    public User saveUser(User user){\n        User u = userRepository.save(user);\n\n        if(u.getName()==\"yang1\"){\n            throw new IllegalArgumentException(\"存入yang，导致回滚\");\n        }\n        return u;\n    }\n\n    @Transactional(rollbackFor = {IllegalArgumentException.class})\n    public Integer updateUserById(User user){\n        Integer i = userRepository.updateUserById(user.getId(),user.getName(),user.getPassword());\n        return i;\n    }\n}\n```\n最后是测试代码，\n```\n@RunWith(SpringRunner.class)\n@SpringBootTest\npublic class UserServiceTest {\n\n    @Autowired\n    UserService userService;\n\n    private final Logger LOGGER = LoggerFactory.getLogger(this.getClass());\n\n    @Test\n    public void deleteUserById() {\n        Integer i = userService.deleteUserById(718L);\n        LOGGER.error(\"delete by user id successful: \"+ i);\n    }\n\n    @Test\n    public void saveUser(){\n        User user = new User(\"yang\",\"adasdsa\");\n        User u = userService.saveUser(user);\n        LOGGER.error(u.toString());\n    }\n\n    @Test\n    public void updateUser(){\n        User user = new User(\"yang\",\"adasdsa\");\n        user.setId(714L);\n        int i = userService.updateUserById(user);\n        LOGGER.error(\"update by user id successful: \"+ i);\n    }\n}\n```\n\n在测试删除用户（deleteUserById）以及保存用户（saveUser）时，发现抛出异常会导致回滚，但是我的数据库引擎是MyIsam，讲道理不应该支持事务。","slug":"MyIsam存储引擎","published":1,"updated":"2019-04-10T02:46:46.092Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck0ozhiwr000igkuw8f1t3uja","content":"<ol>\n<li>Spring Boot的@Transactional注解对MyISAM存储引擎生效的问题？</li>\n</ol>\n<p>未解决问题，一脸懵逼。。。。</p>\n<a id=\"more\"></a> \n<p>其中，数据表对应的实体对象如下，<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import javax.persistence.Entity;</span><br><span class=\"line\">import javax.persistence.GeneratedValue;</span><br><span class=\"line\">import javax.persistence.GenerationType;</span><br><span class=\"line\">import javax.persistence.Id;</span><br><span class=\"line\"></span><br><span class=\"line\">@Entity</span><br><span class=\"line\">public class User &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    @GeneratedValue(strategy = GenerationType.AUTO)</span><br><span class=\"line\">    @Id</span><br><span class=\"line\">    private Long id;</span><br><span class=\"line\"></span><br><span class=\"line\">    private String name;</span><br><span class=\"line\">    private String password;</span><br><span class=\"line\"></span><br><span class=\"line\">    public User() &#123;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    public User(String name, String password) &#123;</span><br><span class=\"line\">        this.name = name;</span><br><span class=\"line\">        this.password = password;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    @Override</span><br><span class=\"line\">    public String toString() &#123;</span><br><span class=\"line\">        return &quot;User&#123;&quot; +</span><br><span class=\"line\">                &quot;id=&quot; + id +</span><br><span class=\"line\">                &quot;, name=&apos;&quot; + name + &apos;\\&apos;&apos; +</span><br><span class=\"line\">                &quot;, password=&apos;&quot; + password + &apos;\\&apos;&apos; +</span><br><span class=\"line\">                &apos;&#125;&apos;;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    public Long getId() &#123;</span><br><span class=\"line\">        return id;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    public void setId(Long id) &#123;</span><br><span class=\"line\">        this.id = id;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    public String getName() &#123;</span><br><span class=\"line\">        return name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    public void setName(String name) &#123;</span><br><span class=\"line\">        this.name = name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    public String getPassword() &#123;</span><br><span class=\"line\">        return password;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    public void setPassword(String password) &#123;</span><br><span class=\"line\">        this.password = password;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>使用Spring Data Jpa进行数据操作，代码如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import org.springframework.data.jpa.repository.JpaRepository;</span><br><span class=\"line\">import org.springframework.data.jpa.repository.Modifying;</span><br><span class=\"line\">import org.springframework.data.jpa.repository.Query;</span><br><span class=\"line\">import org.springframework.stereotype.Repository;</span><br><span class=\"line\"></span><br><span class=\"line\">@Repository(&quot;user_repository&quot;)</span><br><span class=\"line\">public interface UserRepository extends JpaRepository&lt;User, Long&gt; &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    Integer deleteUserById(Long id);</span><br><span class=\"line\"></span><br><span class=\"line\">    @Modifying(clearAutomatically = true)</span><br><span class=\"line\">    @Query(value = &quot;update User set name=?2,password=?3 where id=?1&quot;)</span><br><span class=\"line\">    Integer updateUserById(Long id,String name,String password);</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>业务逻辑层代码如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import org.springframework.beans.factory.annotation.Autowired;</span><br><span class=\"line\">import org.springframework.stereotype.Service;</span><br><span class=\"line\">import org.springframework.transaction.annotation.Transactional;</span><br><span class=\"line\"></span><br><span class=\"line\">@Service(&quot;uService&quot;)</span><br><span class=\"line\">public class UserService &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    @Autowired</span><br><span class=\"line\">    UserRepository userRepository;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    @Transactional(rollbackFor = Exception.class)</span><br><span class=\"line\">    public Integer deleteUserById(Long id)&#123;</span><br><span class=\"line\">        Integer i = userRepository.deleteUserById(id);</span><br><span class=\"line\">        if(id.equals(718L))&#123;</span><br><span class=\"line\">            throw new IllegalArgumentException(&quot;删除714错误，回滚&quot;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        return i;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    @Transactional(rollbackFor = &#123;IllegalArgumentException.class&#125;)</span><br><span class=\"line\">    public User saveUser(User user)&#123;</span><br><span class=\"line\">        User u = userRepository.save(user);</span><br><span class=\"line\"></span><br><span class=\"line\">        if(u.getName()==&quot;yang1&quot;)&#123;</span><br><span class=\"line\">            throw new IllegalArgumentException(&quot;存入yang，导致回滚&quot;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        return u;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    @Transactional(rollbackFor = &#123;IllegalArgumentException.class&#125;)</span><br><span class=\"line\">    public Integer updateUserById(User user)&#123;</span><br><span class=\"line\">        Integer i = userRepository.updateUserById(user.getId(),user.getName(),user.getPassword());</span><br><span class=\"line\">        return i;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>最后是测试代码，<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@RunWith(SpringRunner.class)</span><br><span class=\"line\">@SpringBootTest</span><br><span class=\"line\">public class UserServiceTest &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    @Autowired</span><br><span class=\"line\">    UserService userService;</span><br><span class=\"line\"></span><br><span class=\"line\">    private final Logger LOGGER = LoggerFactory.getLogger(this.getClass());</span><br><span class=\"line\"></span><br><span class=\"line\">    @Test</span><br><span class=\"line\">    public void deleteUserById() &#123;</span><br><span class=\"line\">        Integer i = userService.deleteUserById(718L);</span><br><span class=\"line\">        LOGGER.error(&quot;delete by user id successful: &quot;+ i);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    @Test</span><br><span class=\"line\">    public void saveUser()&#123;</span><br><span class=\"line\">        User user = new User(&quot;yang&quot;,&quot;adasdsa&quot;);</span><br><span class=\"line\">        User u = userService.saveUser(user);</span><br><span class=\"line\">        LOGGER.error(u.toString());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    @Test</span><br><span class=\"line\">    public void updateUser()&#123;</span><br><span class=\"line\">        User user = new User(&quot;yang&quot;,&quot;adasdsa&quot;);</span><br><span class=\"line\">        user.setId(714L);</span><br><span class=\"line\">        int i = userService.updateUserById(user);</span><br><span class=\"line\">        LOGGER.error(&quot;update by user id successful: &quot;+ i);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>在测试删除用户（deleteUserById）以及保存用户（saveUser）时，发现抛出异常会导致回滚，但是我的数据库引擎是MyIsam，讲道理不应该支持事务。</p>\n","site":{"data":{}},"excerpt":"<ol>\n<li>Spring Boot的@Transactional注解对MyISAM存储引擎生效的问题？</li>\n</ol>\n<p>未解决问题，一脸懵逼。。。。</p>","more":"<p>其中，数据表对应的实体对象如下，<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import javax.persistence.Entity;</span><br><span class=\"line\">import javax.persistence.GeneratedValue;</span><br><span class=\"line\">import javax.persistence.GenerationType;</span><br><span class=\"line\">import javax.persistence.Id;</span><br><span class=\"line\"></span><br><span class=\"line\">@Entity</span><br><span class=\"line\">public class User &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    @GeneratedValue(strategy = GenerationType.AUTO)</span><br><span class=\"line\">    @Id</span><br><span class=\"line\">    private Long id;</span><br><span class=\"line\"></span><br><span class=\"line\">    private String name;</span><br><span class=\"line\">    private String password;</span><br><span class=\"line\"></span><br><span class=\"line\">    public User() &#123;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    public User(String name, String password) &#123;</span><br><span class=\"line\">        this.name = name;</span><br><span class=\"line\">        this.password = password;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    @Override</span><br><span class=\"line\">    public String toString() &#123;</span><br><span class=\"line\">        return &quot;User&#123;&quot; +</span><br><span class=\"line\">                &quot;id=&quot; + id +</span><br><span class=\"line\">                &quot;, name=&apos;&quot; + name + &apos;\\&apos;&apos; +</span><br><span class=\"line\">                &quot;, password=&apos;&quot; + password + &apos;\\&apos;&apos; +</span><br><span class=\"line\">                &apos;&#125;&apos;;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    public Long getId() &#123;</span><br><span class=\"line\">        return id;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    public void setId(Long id) &#123;</span><br><span class=\"line\">        this.id = id;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    public String getName() &#123;</span><br><span class=\"line\">        return name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    public void setName(String name) &#123;</span><br><span class=\"line\">        this.name = name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    public String getPassword() &#123;</span><br><span class=\"line\">        return password;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    public void setPassword(String password) &#123;</span><br><span class=\"line\">        this.password = password;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>使用Spring Data Jpa进行数据操作，代码如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import org.springframework.data.jpa.repository.JpaRepository;</span><br><span class=\"line\">import org.springframework.data.jpa.repository.Modifying;</span><br><span class=\"line\">import org.springframework.data.jpa.repository.Query;</span><br><span class=\"line\">import org.springframework.stereotype.Repository;</span><br><span class=\"line\"></span><br><span class=\"line\">@Repository(&quot;user_repository&quot;)</span><br><span class=\"line\">public interface UserRepository extends JpaRepository&lt;User, Long&gt; &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    Integer deleteUserById(Long id);</span><br><span class=\"line\"></span><br><span class=\"line\">    @Modifying(clearAutomatically = true)</span><br><span class=\"line\">    @Query(value = &quot;update User set name=?2,password=?3 where id=?1&quot;)</span><br><span class=\"line\">    Integer updateUserById(Long id,String name,String password);</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>业务逻辑层代码如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import org.springframework.beans.factory.annotation.Autowired;</span><br><span class=\"line\">import org.springframework.stereotype.Service;</span><br><span class=\"line\">import org.springframework.transaction.annotation.Transactional;</span><br><span class=\"line\"></span><br><span class=\"line\">@Service(&quot;uService&quot;)</span><br><span class=\"line\">public class UserService &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    @Autowired</span><br><span class=\"line\">    UserRepository userRepository;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    @Transactional(rollbackFor = Exception.class)</span><br><span class=\"line\">    public Integer deleteUserById(Long id)&#123;</span><br><span class=\"line\">        Integer i = userRepository.deleteUserById(id);</span><br><span class=\"line\">        if(id.equals(718L))&#123;</span><br><span class=\"line\">            throw new IllegalArgumentException(&quot;删除714错误，回滚&quot;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        return i;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    @Transactional(rollbackFor = &#123;IllegalArgumentException.class&#125;)</span><br><span class=\"line\">    public User saveUser(User user)&#123;</span><br><span class=\"line\">        User u = userRepository.save(user);</span><br><span class=\"line\"></span><br><span class=\"line\">        if(u.getName()==&quot;yang1&quot;)&#123;</span><br><span class=\"line\">            throw new IllegalArgumentException(&quot;存入yang，导致回滚&quot;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        return u;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    @Transactional(rollbackFor = &#123;IllegalArgumentException.class&#125;)</span><br><span class=\"line\">    public Integer updateUserById(User user)&#123;</span><br><span class=\"line\">        Integer i = userRepository.updateUserById(user.getId(),user.getName(),user.getPassword());</span><br><span class=\"line\">        return i;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>最后是测试代码，<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@RunWith(SpringRunner.class)</span><br><span class=\"line\">@SpringBootTest</span><br><span class=\"line\">public class UserServiceTest &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    @Autowired</span><br><span class=\"line\">    UserService userService;</span><br><span class=\"line\"></span><br><span class=\"line\">    private final Logger LOGGER = LoggerFactory.getLogger(this.getClass());</span><br><span class=\"line\"></span><br><span class=\"line\">    @Test</span><br><span class=\"line\">    public void deleteUserById() &#123;</span><br><span class=\"line\">        Integer i = userService.deleteUserById(718L);</span><br><span class=\"line\">        LOGGER.error(&quot;delete by user id successful: &quot;+ i);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    @Test</span><br><span class=\"line\">    public void saveUser()&#123;</span><br><span class=\"line\">        User user = new User(&quot;yang&quot;,&quot;adasdsa&quot;);</span><br><span class=\"line\">        User u = userService.saveUser(user);</span><br><span class=\"line\">        LOGGER.error(u.toString());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    @Test</span><br><span class=\"line\">    public void updateUser()&#123;</span><br><span class=\"line\">        User user = new User(&quot;yang&quot;,&quot;adasdsa&quot;);</span><br><span class=\"line\">        user.setId(714L);</span><br><span class=\"line\">        int i = userService.updateUserById(user);</span><br><span class=\"line\">        LOGGER.error(&quot;update by user id successful: &quot;+ i);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>在测试删除用户（deleteUserById）以及保存用户（saveUser）时，发现抛出异常会导致回滚，但是我的数据库引擎是MyIsam，讲道理不应该支持事务。</p>"},{"title":"StackGAN: Text to Photo-realistic Image Synthesis with Stacked Generative Adversarial Networks","date":"2019-02-19T09:06:58.000Z","_content":"\n## Abstract\n\n[源码地址：https://github.com/hanzhanggit/StackGAN](https://github.com/hanzhanggit/StackGAN)\n\n这篇文章提出`Stacked Generative Adversarial Networks (StackGAN)`合成高分辨率（$256 \\times 256$）的逼真图像。这个模型将困难的图像合成问题分成两个子问题：`Stage-I GAN`根据输入的文本描述合成对象的基本形状和颜色；`Stage-II GAN`根据`Stage-I GAN`以合成的图像结果和文本描述作为输入，丰富合成图像的细节，生成逼真的高分辨率图像。 \n\n![image](StackGAN-Text-to-Photo-realistic-Image-Synthesis-with-Stacked-Generative-Adversarial-Networks/StackGAN0.png)\n\n<!-- more --> \n我们都知道生成对抗网络的训练过程存在不稳定性，作者提出了一种新的条件增强技术促进潜在条件流形（`latent conditioning manifold`）的平滑性，从而改善了合成图像的多样性和训练生成对抗网络过程的稳定性。\n\n\n## Stacked Generative Adversarial Networks\n![image](StackGAN-Text-to-Photo-realistic-Image-Synthesis-with-Stacked-Generative-Adversarial-Networks/StackGAN.png)\n\n`Stacked Generative Adversarial Networks`的结构如下图所示分为`Stage-I GAN`和`Stage-II GAN`两个子网络：  \n\n- `Stage-I GAN`：以文本描述和噪声向量为输入，文本描述控制对象的基本形状和颜色，噪声控制背景布局，从而生成一张低分辨率图像；\n- `Stage-II GAN`：纠正`Stage-I`生成的低分辨率图像的缺陷，再次通过读取文本描述来补全图像的细节，从而生成高分辨率的逼真图像。\n\n### Stage-I GAN\n\n#### KL散度（`Kullback–Leibler divergence,KL divergence`）\n本文章中的条件增强技术中计算标准高斯分布和条件高斯分布之间的KL散度，所以先简单介绍KL散度。  \nKL散度又被称为相对熵（`relative entropy`）或者信息散度，是连个概率分布间差异的非对称性度量。  \n\n$$\nKL(p(x)||q(x))=\\sum_x{p(x)\\log{\\frac{p(x)}{q(x)}}}\\\\\\\\\n=\\sum_x{p(x)\\log{p(x)}-p(x)\\log{q(x)}}\n$$\n\nKL散度是衡量两个分布之间的差异大小的，KL散度大于等于0，并且越接近0说明p与q这两个分布越像，当且仅当p与q相等时KL散度取0。\n\n#### 模型框架\n对于生成器$G_0$，为了获得文本条件变量$\\hat{c}_0$，文本嵌入$\\varphi_t$首先通过全连接层生成$\\mu_0$和$\\delta_0$（$\\delta_0$是$\\sum_0$的对角线元素值）。$\\hat{c}_0$由高斯分布$N(\\mu(\\varphi(t)),\\sum_0(\\varphi(t)))$抽样得到。$N_g$维的条件向量$\\hat{c}_0$由公式$\\hat{c}_0=\\mu_0+\\delta_0 \\bigodot\\epsilon$计算得到，其中$\\bigodot$表示元素乘积（`element-wise multiplication`），$\\epsilon\\sim\\N(0,I)$。之后，$\\hat{c}_0$与$N_z$维的噪声向量拼接并通过一系列的上采样块生成尺寸为$W_0\\times H_0$的图像。  \n对于判别器$D_0$,文本嵌入$\\varphi(t)$通过全连接压缩为$N_d$维然后通过复制将其转换成$M_d \\times M_d \\times N_d$大小的张量。同时图像经过一系列下采样块，输出$M_d \\times M_d$大小的张量。最后把图像和文本得到的张量拼接在一起，经过$1\\times 1$的卷积层以及一个只有一个节点的全连接层，从而得到决策值。  \nStage-I训练过程损失函数如下，目的在于最大化$L_{D_0}$以训练判别器，最小化$L_{G_0}$以训练生成器。\n\n$$\nL_{D_0}=E_{(I_0,t)\\sim{p_{data}}}[\\log D_0(I_0,\\varphi_t)]\n+E_{z\\sim{p_z},t\\sim p_{data}}[\\log {(1-D_0(G_0(z,\\hat{c}_0),\\varphi_t)}]\\\\\\\\\nL_{G_0}=E_{z\\sim{p_z},t\\sim p_{data}}[\\log {(1-D_0(G_0(z,\\hat{c}_0),\\varphi_t)}]+\\lambda{D_{KL}}(N(\\mu_0(\\varphi_t),\\sum_0(\\varphi_t)||N(0,I)),\n$$\n\n### Stage-II GAN\n`Stage-II GAN`的模型框架和`Stage-I GAN`相似，只不过没有了噪声输入，换成了`Stage-I`合成的低分率图像。\nStage-II其损失函数如下，目的在于最大化$L_D$以训练判别器，最小化$L_G$以训练生成器。  \n\n$$\nL_D=E_{(I,t)\\sim{p_{data}}}[\\log D(I,\\varphi_t)]\n+E_{s_0\\sim{p_{G_0}},t\\sim p_{data}}[\\log {(1-D(G(s_0,\\hat{c}),\\varphi_t)}]\\\\\\\\\nL_G=E_{s_0\\sim{p_{G_0}},t\\sim p_{data}}[\\log {(1-D(G(s_0,\\hat{c}),\\varphi_t)}]+\\lambda{D_{KL}}(N(\\mu(\\varphi_t),\\sum(\\varphi_t)||N(0,I)),\n$$\n","source":"_posts/StackGAN-Text-to-Photo-realistic-Image-Synthesis-with-Stacked-Generative-Adversarial-Networks.md","raw":"---\ntitle: >-\n  StackGAN: Text to Photo-realistic Image Synthesis with Stacked Generative\n  Adversarial Networks\ndate: 2019-02-19 17:06:58\ntags: \n    - text2image\n    - 图像合成\n    - 生成对抗网络\n    - 论文阅读\ncategories: 科研\n---\n\n## Abstract\n\n[源码地址：https://github.com/hanzhanggit/StackGAN](https://github.com/hanzhanggit/StackGAN)\n\n这篇文章提出`Stacked Generative Adversarial Networks (StackGAN)`合成高分辨率（$256 \\times 256$）的逼真图像。这个模型将困难的图像合成问题分成两个子问题：`Stage-I GAN`根据输入的文本描述合成对象的基本形状和颜色；`Stage-II GAN`根据`Stage-I GAN`以合成的图像结果和文本描述作为输入，丰富合成图像的细节，生成逼真的高分辨率图像。 \n\n![image](StackGAN-Text-to-Photo-realistic-Image-Synthesis-with-Stacked-Generative-Adversarial-Networks/StackGAN0.png)\n\n<!-- more --> \n我们都知道生成对抗网络的训练过程存在不稳定性，作者提出了一种新的条件增强技术促进潜在条件流形（`latent conditioning manifold`）的平滑性，从而改善了合成图像的多样性和训练生成对抗网络过程的稳定性。\n\n\n## Stacked Generative Adversarial Networks\n![image](StackGAN-Text-to-Photo-realistic-Image-Synthesis-with-Stacked-Generative-Adversarial-Networks/StackGAN.png)\n\n`Stacked Generative Adversarial Networks`的结构如下图所示分为`Stage-I GAN`和`Stage-II GAN`两个子网络：  \n\n- `Stage-I GAN`：以文本描述和噪声向量为输入，文本描述控制对象的基本形状和颜色，噪声控制背景布局，从而生成一张低分辨率图像；\n- `Stage-II GAN`：纠正`Stage-I`生成的低分辨率图像的缺陷，再次通过读取文本描述来补全图像的细节，从而生成高分辨率的逼真图像。\n\n### Stage-I GAN\n\n#### KL散度（`Kullback–Leibler divergence,KL divergence`）\n本文章中的条件增强技术中计算标准高斯分布和条件高斯分布之间的KL散度，所以先简单介绍KL散度。  \nKL散度又被称为相对熵（`relative entropy`）或者信息散度，是连个概率分布间差异的非对称性度量。  \n\n$$\nKL(p(x)||q(x))=\\sum_x{p(x)\\log{\\frac{p(x)}{q(x)}}}\\\\\\\\\n=\\sum_x{p(x)\\log{p(x)}-p(x)\\log{q(x)}}\n$$\n\nKL散度是衡量两个分布之间的差异大小的，KL散度大于等于0，并且越接近0说明p与q这两个分布越像，当且仅当p与q相等时KL散度取0。\n\n#### 模型框架\n对于生成器$G_0$，为了获得文本条件变量$\\hat{c}_0$，文本嵌入$\\varphi_t$首先通过全连接层生成$\\mu_0$和$\\delta_0$（$\\delta_0$是$\\sum_0$的对角线元素值）。$\\hat{c}_0$由高斯分布$N(\\mu(\\varphi(t)),\\sum_0(\\varphi(t)))$抽样得到。$N_g$维的条件向量$\\hat{c}_0$由公式$\\hat{c}_0=\\mu_0+\\delta_0 \\bigodot\\epsilon$计算得到，其中$\\bigodot$表示元素乘积（`element-wise multiplication`），$\\epsilon\\sim\\N(0,I)$。之后，$\\hat{c}_0$与$N_z$维的噪声向量拼接并通过一系列的上采样块生成尺寸为$W_0\\times H_0$的图像。  \n对于判别器$D_0$,文本嵌入$\\varphi(t)$通过全连接压缩为$N_d$维然后通过复制将其转换成$M_d \\times M_d \\times N_d$大小的张量。同时图像经过一系列下采样块，输出$M_d \\times M_d$大小的张量。最后把图像和文本得到的张量拼接在一起，经过$1\\times 1$的卷积层以及一个只有一个节点的全连接层，从而得到决策值。  \nStage-I训练过程损失函数如下，目的在于最大化$L_{D_0}$以训练判别器，最小化$L_{G_0}$以训练生成器。\n\n$$\nL_{D_0}=E_{(I_0,t)\\sim{p_{data}}}[\\log D_0(I_0,\\varphi_t)]\n+E_{z\\sim{p_z},t\\sim p_{data}}[\\log {(1-D_0(G_0(z,\\hat{c}_0),\\varphi_t)}]\\\\\\\\\nL_{G_0}=E_{z\\sim{p_z},t\\sim p_{data}}[\\log {(1-D_0(G_0(z,\\hat{c}_0),\\varphi_t)}]+\\lambda{D_{KL}}(N(\\mu_0(\\varphi_t),\\sum_0(\\varphi_t)||N(0,I)),\n$$\n\n### Stage-II GAN\n`Stage-II GAN`的模型框架和`Stage-I GAN`相似，只不过没有了噪声输入，换成了`Stage-I`合成的低分率图像。\nStage-II其损失函数如下，目的在于最大化$L_D$以训练判别器，最小化$L_G$以训练生成器。  \n\n$$\nL_D=E_{(I,t)\\sim{p_{data}}}[\\log D(I,\\varphi_t)]\n+E_{s_0\\sim{p_{G_0}},t\\sim p_{data}}[\\log {(1-D(G(s_0,\\hat{c}),\\varphi_t)}]\\\\\\\\\nL_G=E_{s_0\\sim{p_{G_0}},t\\sim p_{data}}[\\log {(1-D(G(s_0,\\hat{c}),\\varphi_t)}]+\\lambda{D_{KL}}(N(\\mu(\\varphi_t),\\sum(\\varphi_t)||N(0,I)),\n$$\n","slug":"StackGAN-Text-to-Photo-realistic-Image-Synthesis-with-Stacked-Generative-Adversarial-Networks","published":1,"updated":"2019-02-20T08:12:42.687Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck0ozhiwt000mgkuwvld6qlzw","content":"<h2 id=\"Abstract\"><a href=\"#Abstract\" class=\"headerlink\" title=\"Abstract\"></a>Abstract</h2><p><a href=\"https://github.com/hanzhanggit/StackGAN\" target=\"_blank\" rel=\"noopener\">源码地址：https://github.com/hanzhanggit/StackGAN</a></p>\n<p>这篇文章提出<code>Stacked Generative Adversarial Networks (StackGAN)</code>合成高分辨率（$256 \\times 256$）的逼真图像。这个模型将困难的图像合成问题分成两个子问题：<code>Stage-I GAN</code>根据输入的文本描述合成对象的基本形状和颜色；<code>Stage-II GAN</code>根据<code>Stage-I GAN</code>以合成的图像结果和文本描述作为输入，丰富合成图像的细节，生成逼真的高分辨率图像。 </p>\n<p><img src=\"/2019/02/19/StackGAN-Text-to-Photo-realistic-Image-Synthesis-with-Stacked-Generative-Adversarial-Networks/StackGAN0.png\" alt=\"image\"></p>\n<a id=\"more\"></a> \n<p>我们都知道生成对抗网络的训练过程存在不稳定性，作者提出了一种新的条件增强技术促进潜在条件流形（<code>latent conditioning manifold</code>）的平滑性，从而改善了合成图像的多样性和训练生成对抗网络过程的稳定性。</p>\n<h2 id=\"Stacked-Generative-Adversarial-Networks\"><a href=\"#Stacked-Generative-Adversarial-Networks\" class=\"headerlink\" title=\"Stacked Generative Adversarial Networks\"></a>Stacked Generative Adversarial Networks</h2><p><img src=\"/2019/02/19/StackGAN-Text-to-Photo-realistic-Image-Synthesis-with-Stacked-Generative-Adversarial-Networks/StackGAN.png\" alt=\"image\"></p>\n<p><code>Stacked Generative Adversarial Networks</code>的结构如下图所示分为<code>Stage-I GAN</code>和<code>Stage-II GAN</code>两个子网络：  </p>\n<ul>\n<li><code>Stage-I GAN</code>：以文本描述和噪声向量为输入，文本描述控制对象的基本形状和颜色，噪声控制背景布局，从而生成一张低分辨率图像；</li>\n<li><code>Stage-II GAN</code>：纠正<code>Stage-I</code>生成的低分辨率图像的缺陷，再次通过读取文本描述来补全图像的细节，从而生成高分辨率的逼真图像。</li>\n</ul>\n<h3 id=\"Stage-I-GAN\"><a href=\"#Stage-I-GAN\" class=\"headerlink\" title=\"Stage-I GAN\"></a>Stage-I GAN</h3><h4 id=\"KL散度（Kullback–Leibler-divergence-KL-divergence）\"><a href=\"#KL散度（Kullback–Leibler-divergence-KL-divergence）\" class=\"headerlink\" title=\"KL散度（Kullback–Leibler divergence,KL divergence）\"></a>KL散度（<code>Kullback–Leibler divergence,KL divergence</code>）</h4><p>本文章中的条件增强技术中计算标准高斯分布和条件高斯分布之间的KL散度，所以先简单介绍KL散度。<br>KL散度又被称为相对熵（<code>relative entropy</code>）或者信息散度，是连个概率分布间差异的非对称性度量。  </p>\n<p>$$<br>KL(p(x)||q(x))=\\sum_x{p(x)\\log{\\frac{p(x)}{q(x)}}}\\\\<br>=\\sum_x{p(x)\\log{p(x)}-p(x)\\log{q(x)}}<br>$$</p>\n<p>KL散度是衡量两个分布之间的差异大小的，KL散度大于等于0，并且越接近0说明p与q这两个分布越像，当且仅当p与q相等时KL散度取0。</p>\n<h4 id=\"模型框架\"><a href=\"#模型框架\" class=\"headerlink\" title=\"模型框架\"></a>模型框架</h4><p>对于生成器$G_0$，为了获得文本条件变量$\\hat{c}_0$，文本嵌入$\\varphi_t$首先通过全连接层生成$\\mu_0$和$\\delta_0$（$\\delta_0$是$\\sum_0$的对角线元素值）。$\\hat{c}_0$由高斯分布$N(\\mu(\\varphi(t)),\\sum_0(\\varphi(t)))$抽样得到。$N_g$维的条件向量$\\hat{c}_0$由公式$\\hat{c}_0=\\mu_0+\\delta_0 \\bigodot\\epsilon$计算得到，其中$\\bigodot$表示元素乘积（<code>element-wise multiplication</code>），$\\epsilon\\sim\\N(0,I)$。之后，$\\hat{c}_0$与$N_z$维的噪声向量拼接并通过一系列的上采样块生成尺寸为$W_0\\times H_0$的图像。<br>对于判别器$D_0$,文本嵌入$\\varphi(t)$通过全连接压缩为$N_d$维然后通过复制将其转换成$M_d \\times M_d \\times N_d$大小的张量。同时图像经过一系列下采样块，输出$M_d \\times M_d$大小的张量。最后把图像和文本得到的张量拼接在一起，经过$1\\times 1$的卷积层以及一个只有一个节点的全连接层，从而得到决策值。<br>Stage-I训练过程损失函数如下，目的在于最大化$L_{D_0}$以训练判别器，最小化$L_{G_0}$以训练生成器。</p>\n<p>$$<br>L_{D_0}=E_{(I_0,t)\\sim{p_{data}}}[\\log D_0(I_0,\\varphi_t)]<br>+E_{z\\sim{p_z},t\\sim p_{data}}[\\log {(1-D_0(G_0(z,\\hat{c}_0),\\varphi_t)}]\\\\<br>L_{G_0}=E_{z\\sim{p_z},t\\sim p_{data}}[\\log {(1-D_0(G_0(z,\\hat{c}_0),\\varphi_t)}]+\\lambda{D_{KL}}(N(\\mu_0(\\varphi_t),\\sum_0(\\varphi_t)||N(0,I)),<br>$$</p>\n<h3 id=\"Stage-II-GAN\"><a href=\"#Stage-II-GAN\" class=\"headerlink\" title=\"Stage-II GAN\"></a>Stage-II GAN</h3><p><code>Stage-II GAN</code>的模型框架和<code>Stage-I GAN</code>相似，只不过没有了噪声输入，换成了<code>Stage-I</code>合成的低分率图像。<br>Stage-II其损失函数如下，目的在于最大化$L_D$以训练判别器，最小化$L_G$以训练生成器。  </p>\n<p>$$<br>L_D=E_{(I,t)\\sim{p_{data}}}[\\log D(I,\\varphi_t)]<br>+E_{s_0\\sim{p_{G_0}},t\\sim p_{data}}[\\log {(1-D(G(s_0,\\hat{c}),\\varphi_t)}]\\\\<br>L_G=E_{s_0\\sim{p_{G_0}},t\\sim p_{data}}[\\log {(1-D(G(s_0,\\hat{c}),\\varphi_t)}]+\\lambda{D_{KL}}(N(\\mu(\\varphi_t),\\sum(\\varphi_t)||N(0,I)),<br>$$</p>\n","site":{"data":{}},"excerpt":"<h2 id=\"Abstract\"><a href=\"#Abstract\" class=\"headerlink\" title=\"Abstract\"></a>Abstract</h2><p><a href=\"https://github.com/hanzhanggit/StackGAN\" target=\"_blank\" rel=\"noopener\">源码地址：https://github.com/hanzhanggit/StackGAN</a></p>\n<p>这篇文章提出<code>Stacked Generative Adversarial Networks (StackGAN)</code>合成高分辨率（$256 \\times 256$）的逼真图像。这个模型将困难的图像合成问题分成两个子问题：<code>Stage-I GAN</code>根据输入的文本描述合成对象的基本形状和颜色；<code>Stage-II GAN</code>根据<code>Stage-I GAN</code>以合成的图像结果和文本描述作为输入，丰富合成图像的细节，生成逼真的高分辨率图像。 </p>\n<p><img src=\"/2019/02/19/StackGAN-Text-to-Photo-realistic-Image-Synthesis-with-Stacked-Generative-Adversarial-Networks/StackGAN0.png\" alt=\"image\"></p>","more":"<p>我们都知道生成对抗网络的训练过程存在不稳定性，作者提出了一种新的条件增强技术促进潜在条件流形（<code>latent conditioning manifold</code>）的平滑性，从而改善了合成图像的多样性和训练生成对抗网络过程的稳定性。</p>\n<h2 id=\"Stacked-Generative-Adversarial-Networks\"><a href=\"#Stacked-Generative-Adversarial-Networks\" class=\"headerlink\" title=\"Stacked Generative Adversarial Networks\"></a>Stacked Generative Adversarial Networks</h2><p><img src=\"/2019/02/19/StackGAN-Text-to-Photo-realistic-Image-Synthesis-with-Stacked-Generative-Adversarial-Networks/StackGAN.png\" alt=\"image\"></p>\n<p><code>Stacked Generative Adversarial Networks</code>的结构如下图所示分为<code>Stage-I GAN</code>和<code>Stage-II GAN</code>两个子网络：  </p>\n<ul>\n<li><code>Stage-I GAN</code>：以文本描述和噪声向量为输入，文本描述控制对象的基本形状和颜色，噪声控制背景布局，从而生成一张低分辨率图像；</li>\n<li><code>Stage-II GAN</code>：纠正<code>Stage-I</code>生成的低分辨率图像的缺陷，再次通过读取文本描述来补全图像的细节，从而生成高分辨率的逼真图像。</li>\n</ul>\n<h3 id=\"Stage-I-GAN\"><a href=\"#Stage-I-GAN\" class=\"headerlink\" title=\"Stage-I GAN\"></a>Stage-I GAN</h3><h4 id=\"KL散度（Kullback–Leibler-divergence-KL-divergence）\"><a href=\"#KL散度（Kullback–Leibler-divergence-KL-divergence）\" class=\"headerlink\" title=\"KL散度（Kullback–Leibler divergence,KL divergence）\"></a>KL散度（<code>Kullback–Leibler divergence,KL divergence</code>）</h4><p>本文章中的条件增强技术中计算标准高斯分布和条件高斯分布之间的KL散度，所以先简单介绍KL散度。<br>KL散度又被称为相对熵（<code>relative entropy</code>）或者信息散度，是连个概率分布间差异的非对称性度量。  </p>\n<p>$$<br>KL(p(x)||q(x))=\\sum_x{p(x)\\log{\\frac{p(x)}{q(x)}}}\\\\<br>=\\sum_x{p(x)\\log{p(x)}-p(x)\\log{q(x)}}<br>$$</p>\n<p>KL散度是衡量两个分布之间的差异大小的，KL散度大于等于0，并且越接近0说明p与q这两个分布越像，当且仅当p与q相等时KL散度取0。</p>\n<h4 id=\"模型框架\"><a href=\"#模型框架\" class=\"headerlink\" title=\"模型框架\"></a>模型框架</h4><p>对于生成器$G_0$，为了获得文本条件变量$\\hat{c}_0$，文本嵌入$\\varphi_t$首先通过全连接层生成$\\mu_0$和$\\delta_0$（$\\delta_0$是$\\sum_0$的对角线元素值）。$\\hat{c}_0$由高斯分布$N(\\mu(\\varphi(t)),\\sum_0(\\varphi(t)))$抽样得到。$N_g$维的条件向量$\\hat{c}_0$由公式$\\hat{c}_0=\\mu_0+\\delta_0 \\bigodot\\epsilon$计算得到，其中$\\bigodot$表示元素乘积（<code>element-wise multiplication</code>），$\\epsilon\\sim\\N(0,I)$。之后，$\\hat{c}_0$与$N_z$维的噪声向量拼接并通过一系列的上采样块生成尺寸为$W_0\\times H_0$的图像。<br>对于判别器$D_0$,文本嵌入$\\varphi(t)$通过全连接压缩为$N_d$维然后通过复制将其转换成$M_d \\times M_d \\times N_d$大小的张量。同时图像经过一系列下采样块，输出$M_d \\times M_d$大小的张量。最后把图像和文本得到的张量拼接在一起，经过$1\\times 1$的卷积层以及一个只有一个节点的全连接层，从而得到决策值。<br>Stage-I训练过程损失函数如下，目的在于最大化$L_{D_0}$以训练判别器，最小化$L_{G_0}$以训练生成器。</p>\n<p>$$<br>L_{D_0}=E_{(I_0,t)\\sim{p_{data}}}[\\log D_0(I_0,\\varphi_t)]<br>+E_{z\\sim{p_z},t\\sim p_{data}}[\\log {(1-D_0(G_0(z,\\hat{c}_0),\\varphi_t)}]\\\\<br>L_{G_0}=E_{z\\sim{p_z},t\\sim p_{data}}[\\log {(1-D_0(G_0(z,\\hat{c}_0),\\varphi_t)}]+\\lambda{D_{KL}}(N(\\mu_0(\\varphi_t),\\sum_0(\\varphi_t)||N(0,I)),<br>$$</p>\n<h3 id=\"Stage-II-GAN\"><a href=\"#Stage-II-GAN\" class=\"headerlink\" title=\"Stage-II GAN\"></a>Stage-II GAN</h3><p><code>Stage-II GAN</code>的模型框架和<code>Stage-I GAN</code>相似，只不过没有了噪声输入，换成了<code>Stage-I</code>合成的低分率图像。<br>Stage-II其损失函数如下，目的在于最大化$L_D$以训练判别器，最小化$L_G$以训练生成器。  </p>\n<p>$$<br>L_D=E_{(I,t)\\sim{p_{data}}}[\\log D(I,\\varphi_t)]<br>+E_{s_0\\sim{p_{G_0}},t\\sim p_{data}}[\\log {(1-D(G(s_0,\\hat{c}),\\varphi_t)}]\\\\<br>L_G=E_{s_0\\sim{p_{G_0}},t\\sim p_{data}}[\\log {(1-D(G(s_0,\\hat{c}),\\varphi_t)}]+\\lambda{D_{KL}}(N(\\mu(\\varphi_t),\\sum(\\varphi_t)||N(0,I)),<br>$$</p>"},{"title":"Stacked Cross Attention for Image-Text Matching","date":"2019-04-15T02:30:23.000Z","_content":"\n\n## 这篇文章做了什么？\n通过对图像中的对象或者突出内容与句子中的单词进行潜在语义对齐，使得图文匹配过程能够捕获到视觉与语言之间细粒度的相互关系，使得图文匹配更具有可解释性。目的是将单词和图像区域映射到同一嵌入空间（`common embedding space`）从而推断整个图像与句子之间的相似度。\n<!-- more --> \n## 相比于已有的方法有什么优点？\n已有方法：\n1. 简单聚合所有可能的区域以及单词对之间的相似度，却没有关注区分单词和区域之间的重要性；\n2. 使用多步骤的注意力过程来捕获数量有限且缺乏一定解释性的语义对齐。\n\n这篇文章使用提出的`Stacked Cross Attention`去发现在图像区域和单词之间的所有潜在对齐，从而计算图文相似度。已有方法通过执行固定步骤的注意力推理，从而在一个时刻只能发现有限的语义对齐，而`Stacked Cross Attention`可以同时发现所有可能的语义对齐。由于语义对齐的数量随着不同的图像和句子而变化，因此`Stacked Cross Attention`方法推断出的对应关系更加全面，从而使图像文本匹配更具可解释性。\n## 这篇文章是怎么做的？\n\n1. 利用自底向上的注意力机制检测图像区域，并提取图像区域的特征；\n2. 将句子中的单词及其句子上下文映射为特征向量；\n3. 应用`Stacked Cross Attention`通过对齐图像区域和单词特征来推断图文相似度。\n4. 这篇文章的损失函数关注每一个`Batch`中最负面的图文对（也就是最不匹配的图文对）。所以对于给定的正样例对$(I,T)$，那么最负样例对定义为$\\hat{I}_h=argmax_{m\\neq{I}}S(m,T)$以及$\\hat{T}_h=argmax_{d\\neq{T}}S(I,d)$。所以这篇文章定义损失函数如下：  \n\n$$\nl_{hard}(I,T)=[\\alpha-S(I,T)+S(I,\\hat{T}_h)]_++[\\alpha-S(I,T)+S(\\hat{I}_h,T)]_+\n$$\n\n\n## 怎么文章题目中的`Stacked Cross Attention`？\n`Stacked Cross Attention`通过两个阶段来关注图像和文本的上下文信息。第一个阶段，给定一个图像和一个句子，关注每个图像区域对应的句子中的单词，并将每个图像区域与来自句子的受关注信息进行比较，以确定图像区域的重要性（比如图像区域在句子中是否被提到）。第二阶段，与第一阶段相似的，根据每个单词对应的图像区域来决定每个单词的重要性（也就是对每个单词的关注度）。\n\n## 文章的实验结果展示\n\n这篇文章在Flickr30K以及MS-COCO数据集上进行实验，结果如下：\n\n![image](Stacked-Cross-Attention-for-Image-Text-Matching/Stacked-Cross-Attention1.png)\n\n![image](Stacked-Cross-Attention-for-Image-Text-Matching/Stacked-Cross-Attention2.png)\n","source":"_posts/Stacked-Cross-Attention-for-Image-Text-Matching.md","raw":"---\ntitle: Stacked Cross Attention for Image-Text Matching\ndate: 2019-04-15 10:30:23\ntags:\n    - 图文匹配\n    - 论文阅读\n    - 神经网络\n    - 图像识别\ncategories: 科研\n---\n\n\n## 这篇文章做了什么？\n通过对图像中的对象或者突出内容与句子中的单词进行潜在语义对齐，使得图文匹配过程能够捕获到视觉与语言之间细粒度的相互关系，使得图文匹配更具有可解释性。目的是将单词和图像区域映射到同一嵌入空间（`common embedding space`）从而推断整个图像与句子之间的相似度。\n<!-- more --> \n## 相比于已有的方法有什么优点？\n已有方法：\n1. 简单聚合所有可能的区域以及单词对之间的相似度，却没有关注区分单词和区域之间的重要性；\n2. 使用多步骤的注意力过程来捕获数量有限且缺乏一定解释性的语义对齐。\n\n这篇文章使用提出的`Stacked Cross Attention`去发现在图像区域和单词之间的所有潜在对齐，从而计算图文相似度。已有方法通过执行固定步骤的注意力推理，从而在一个时刻只能发现有限的语义对齐，而`Stacked Cross Attention`可以同时发现所有可能的语义对齐。由于语义对齐的数量随着不同的图像和句子而变化，因此`Stacked Cross Attention`方法推断出的对应关系更加全面，从而使图像文本匹配更具可解释性。\n## 这篇文章是怎么做的？\n\n1. 利用自底向上的注意力机制检测图像区域，并提取图像区域的特征；\n2. 将句子中的单词及其句子上下文映射为特征向量；\n3. 应用`Stacked Cross Attention`通过对齐图像区域和单词特征来推断图文相似度。\n4. 这篇文章的损失函数关注每一个`Batch`中最负面的图文对（也就是最不匹配的图文对）。所以对于给定的正样例对$(I,T)$，那么最负样例对定义为$\\hat{I}_h=argmax_{m\\neq{I}}S(m,T)$以及$\\hat{T}_h=argmax_{d\\neq{T}}S(I,d)$。所以这篇文章定义损失函数如下：  \n\n$$\nl_{hard}(I,T)=[\\alpha-S(I,T)+S(I,\\hat{T}_h)]_++[\\alpha-S(I,T)+S(\\hat{I}_h,T)]_+\n$$\n\n\n## 怎么文章题目中的`Stacked Cross Attention`？\n`Stacked Cross Attention`通过两个阶段来关注图像和文本的上下文信息。第一个阶段，给定一个图像和一个句子，关注每个图像区域对应的句子中的单词，并将每个图像区域与来自句子的受关注信息进行比较，以确定图像区域的重要性（比如图像区域在句子中是否被提到）。第二阶段，与第一阶段相似的，根据每个单词对应的图像区域来决定每个单词的重要性（也就是对每个单词的关注度）。\n\n## 文章的实验结果展示\n\n这篇文章在Flickr30K以及MS-COCO数据集上进行实验，结果如下：\n\n![image](Stacked-Cross-Attention-for-Image-Text-Matching/Stacked-Cross-Attention1.png)\n\n![image](Stacked-Cross-Attention-for-Image-Text-Matching/Stacked-Cross-Attention2.png)\n","slug":"Stacked-Cross-Attention-for-Image-Text-Matching","published":1,"updated":"2019-04-15T09:37:19.549Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck0ozhiwv000ngkuw7uctnlsv","content":"<h2 id=\"这篇文章做了什么？\"><a href=\"#这篇文章做了什么？\" class=\"headerlink\" title=\"这篇文章做了什么？\"></a>这篇文章做了什么？</h2><p>通过对图像中的对象或者突出内容与句子中的单词进行潜在语义对齐，使得图文匹配过程能够捕获到视觉与语言之间细粒度的相互关系，使得图文匹配更具有可解释性。目的是将单词和图像区域映射到同一嵌入空间（<code>common embedding space</code>）从而推断整个图像与句子之间的相似度。<br><a id=\"more\"></a> </p>\n<h2 id=\"相比于已有的方法有什么优点？\"><a href=\"#相比于已有的方法有什么优点？\" class=\"headerlink\" title=\"相比于已有的方法有什么优点？\"></a>相比于已有的方法有什么优点？</h2><p>已有方法：</p>\n<ol>\n<li>简单聚合所有可能的区域以及单词对之间的相似度，却没有关注区分单词和区域之间的重要性；</li>\n<li>使用多步骤的注意力过程来捕获数量有限且缺乏一定解释性的语义对齐。</li>\n</ol>\n<p>这篇文章使用提出的<code>Stacked Cross Attention</code>去发现在图像区域和单词之间的所有潜在对齐，从而计算图文相似度。已有方法通过执行固定步骤的注意力推理，从而在一个时刻只能发现有限的语义对齐，而<code>Stacked Cross Attention</code>可以同时发现所有可能的语义对齐。由于语义对齐的数量随着不同的图像和句子而变化，因此<code>Stacked Cross Attention</code>方法推断出的对应关系更加全面，从而使图像文本匹配更具可解释性。</p>\n<h2 id=\"这篇文章是怎么做的？\"><a href=\"#这篇文章是怎么做的？\" class=\"headerlink\" title=\"这篇文章是怎么做的？\"></a>这篇文章是怎么做的？</h2><ol>\n<li>利用自底向上的注意力机制检测图像区域，并提取图像区域的特征；</li>\n<li>将句子中的单词及其句子上下文映射为特征向量；</li>\n<li>应用<code>Stacked Cross Attention</code>通过对齐图像区域和单词特征来推断图文相似度。</li>\n<li>这篇文章的损失函数关注每一个<code>Batch</code>中最负面的图文对（也就是最不匹配的图文对）。所以对于给定的正样例对$(I,T)$，那么最负样例对定义为$\\hat{I}<em>h=argmax</em>{m\\neq{I}}S(m,T)$以及$\\hat{T}<em>h=argmax</em>{d\\neq{T}}S(I,d)$。所以这篇文章定义损失函数如下：  </li>\n</ol>\n<p>$$<br>l_{hard}(I,T)=[\\alpha-S(I,T)+S(I,\\hat{T}<em>h)]</em>++[\\alpha-S(I,T)+S(\\hat{I}<em>h,T)]</em>+<br>$$</p>\n<h2 id=\"怎么文章题目中的Stacked-Cross-Attention？\"><a href=\"#怎么文章题目中的Stacked-Cross-Attention？\" class=\"headerlink\" title=\"怎么文章题目中的Stacked Cross Attention？\"></a>怎么文章题目中的<code>Stacked Cross Attention</code>？</h2><p><code>Stacked Cross Attention</code>通过两个阶段来关注图像和文本的上下文信息。第一个阶段，给定一个图像和一个句子，关注每个图像区域对应的句子中的单词，并将每个图像区域与来自句子的受关注信息进行比较，以确定图像区域的重要性（比如图像区域在句子中是否被提到）。第二阶段，与第一阶段相似的，根据每个单词对应的图像区域来决定每个单词的重要性（也就是对每个单词的关注度）。</p>\n<h2 id=\"文章的实验结果展示\"><a href=\"#文章的实验结果展示\" class=\"headerlink\" title=\"文章的实验结果展示\"></a>文章的实验结果展示</h2><p>这篇文章在Flickr30K以及MS-COCO数据集上进行实验，结果如下：</p>\n<p><img src=\"/2019/04/15/Stacked-Cross-Attention-for-Image-Text-Matching/Stacked-Cross-Attention1.png\" alt=\"image\"></p>\n<p><img src=\"/2019/04/15/Stacked-Cross-Attention-for-Image-Text-Matching/Stacked-Cross-Attention2.png\" alt=\"image\"></p>\n","site":{"data":{}},"excerpt":"<h2 id=\"这篇文章做了什么？\"><a href=\"#这篇文章做了什么？\" class=\"headerlink\" title=\"这篇文章做了什么？\"></a>这篇文章做了什么？</h2><p>通过对图像中的对象或者突出内容与句子中的单词进行潜在语义对齐，使得图文匹配过程能够捕获到视觉与语言之间细粒度的相互关系，使得图文匹配更具有可解释性。目的是将单词和图像区域映射到同一嵌入空间（<code>common embedding space</code>）从而推断整个图像与句子之间的相似度。<br></p>","more":"<p></p>\n<h2 id=\"相比于已有的方法有什么优点？\"><a href=\"#相比于已有的方法有什么优点？\" class=\"headerlink\" title=\"相比于已有的方法有什么优点？\"></a>相比于已有的方法有什么优点？</h2><p>已有方法：</p>\n<ol>\n<li>简单聚合所有可能的区域以及单词对之间的相似度，却没有关注区分单词和区域之间的重要性；</li>\n<li>使用多步骤的注意力过程来捕获数量有限且缺乏一定解释性的语义对齐。</li>\n</ol>\n<p>这篇文章使用提出的<code>Stacked Cross Attention</code>去发现在图像区域和单词之间的所有潜在对齐，从而计算图文相似度。已有方法通过执行固定步骤的注意力推理，从而在一个时刻只能发现有限的语义对齐，而<code>Stacked Cross Attention</code>可以同时发现所有可能的语义对齐。由于语义对齐的数量随着不同的图像和句子而变化，因此<code>Stacked Cross Attention</code>方法推断出的对应关系更加全面，从而使图像文本匹配更具可解释性。</p>\n<h2 id=\"这篇文章是怎么做的？\"><a href=\"#这篇文章是怎么做的？\" class=\"headerlink\" title=\"这篇文章是怎么做的？\"></a>这篇文章是怎么做的？</h2><ol>\n<li>利用自底向上的注意力机制检测图像区域，并提取图像区域的特征；</li>\n<li>将句子中的单词及其句子上下文映射为特征向量；</li>\n<li>应用<code>Stacked Cross Attention</code>通过对齐图像区域和单词特征来推断图文相似度。</li>\n<li>这篇文章的损失函数关注每一个<code>Batch</code>中最负面的图文对（也就是最不匹配的图文对）。所以对于给定的正样例对$(I,T)$，那么最负样例对定义为$\\hat{I}<em>h=argmax</em>{m\\neq{I}}S(m,T)$以及$\\hat{T}<em>h=argmax</em>{d\\neq{T}}S(I,d)$。所以这篇文章定义损失函数如下：  </li>\n</ol>\n<p>$$<br>l_{hard}(I,T)=[\\alpha-S(I,T)+S(I,\\hat{T}<em>h)]</em>++[\\alpha-S(I,T)+S(\\hat{I}<em>h,T)]</em>+<br>$$</p>\n<h2 id=\"怎么文章题目中的Stacked-Cross-Attention？\"><a href=\"#怎么文章题目中的Stacked-Cross-Attention？\" class=\"headerlink\" title=\"怎么文章题目中的Stacked Cross Attention？\"></a>怎么文章题目中的<code>Stacked Cross Attention</code>？</h2><p><code>Stacked Cross Attention</code>通过两个阶段来关注图像和文本的上下文信息。第一个阶段，给定一个图像和一个句子，关注每个图像区域对应的句子中的单词，并将每个图像区域与来自句子的受关注信息进行比较，以确定图像区域的重要性（比如图像区域在句子中是否被提到）。第二阶段，与第一阶段相似的，根据每个单词对应的图像区域来决定每个单词的重要性（也就是对每个单词的关注度）。</p>\n<h2 id=\"文章的实验结果展示\"><a href=\"#文章的实验结果展示\" class=\"headerlink\" title=\"文章的实验结果展示\"></a>文章的实验结果展示</h2><p>这篇文章在Flickr30K以及MS-COCO数据集上进行实验，结果如下：</p>\n<p><img src=\"/2019/04/15/Stacked-Cross-Attention-for-Image-Text-Matching/Stacked-Cross-Attention1.png\" alt=\"image\"></p>\n<p><img src=\"/2019/04/15/Stacked-Cross-Attention-for-Image-Text-Matching/Stacked-Cross-Attention2.png\" alt=\"image\"></p>"},{"title":"Ubuntu配置shadowsocks科学上网","date":"2019-02-26T04:36:59.000Z","_content":"\n## 系统环境\n\n![科学上网](Ubuntu配置shadowsocks科学上网/科学上网1.png)\n\n## showsocks配置\n\n1. 安装shadowsocks客户端,命令如下\n\n```\nsudo apt install shadowsocks\n```\n<!-- more --> \n2. 查看shadowsocks命令：\n\n```\nsslocal --help\n```\n\n![科学上网](Ubuntu配置shadowsocks科学上网/科学上网2.png)\n\n3. 启动shadowsocks两种方式：\n\n- 通过设置各个参数，如下\n\n```\nsslocal -s 11.22.33.44 -p 50003 -k \"123456\" -l 1080 -t 600 -m aes-256-cfb\n```\n\n- 或者，直接加载json配置文件\n\n```\nsslocal -c file_path/shadowsocks.json\n```\n\n启动shadowsocks如下所示：\n\n![科学上网](Ubuntu配置shadowsocks科学上网/科学上网3.png)\n\n配置好shadowsocks客户端后，我们介绍一下三种方式设置代理模式。\n\n## 方式一：不要关闭上面的终端，重新打开一个终端，配置全局变量：\n\n使用`vim ~/.bashrc`添加语句\n```\nalias hp=\"http_proxy=http://localhost:8123\" \n```\n使用`source ~/.bashrc`使更改生效。\n\n5. 测试效果\n\n- 使用命令`hp curl ip.gs`查看代理服务器网址，结果如下所示：\n\n![科学上网](Ubuntu配置shadowsocks科学上网/科学上网4.png)\n\n可以看出，`alias hp=\"http_proxy=http://localhost:8123\" `这句语句的作用就是用命令`hp`替换`http_proxy=http://localhost:8123`这一串长命令。\n\n## 那我们不想每条指令前面都加上命令`hp`怎么办，这就需要设置全局代理：\n\n### 方式二：为当前窗口设置全局代理\n\n命令如下：\n```\nexport http_proxy=http://localhost:8123 # 当前终端使用代理\nunset http_proxy # 当前终端取消代理\n```\n\n测试如下所示，可以看出上设置全局代理后，就不需要`hp`命令了，取消代理（`unset`）后可以看到`ip`变成了陕西西安。\n![科学上网](Ubuntu配置shadowsocks科学上网/科学上网5.png)\n\n### 方式三：设置当前用户的全局代理\n\n在`~/.bashrc`中添加`export http_proxy=http://localhost:8123`命令设置当前用户的全局代理。别忘了使用`source ~/.bashrc`使更改生效。\n\n如下所示，\n\n![科学上网](Ubuntu配置shadowsocks科学上网/科学上网6.png)\n\n## 经过测试，推荐方式二为当前窗口设置全局代理，命令如下：\n\n```\nexport http_proxy=http://localhost:8123 # 当前终端使用代理\nunset http_proxy # 当前终端取消代理\n```\n\n这种方式可以开启一个窗口运行export作为科学上网窗口，而其他窗口依旧正常上网，这样可以**节约流量**。  \n除此之外，这是我测试的上述三种上网方式中最稳定的一种，建议使用。\n\n## 总结\n\n配置好之后，科学上网的过程，先打开一个终端窗口，运行：\n\n```\nsslocal -c file_path/shadowsocks.json\n```\n再打开新窗口，运行\n```\nexport http_proxy=http://localhost:8123 \n```\n\n我使用R-3D中下载YouTube视频的代码作为测试，运行`python download_video.py`就可以看到下载视频并保存在当前目录的videos目录下。\n\n示意结果如下，`sslocal -c shadowsocks.json`启动窗口下方会出现与`www.youtube.com`连接的日志信息：\n\n![科学上网](Ubuntu配置shadowsocks科学上网/科学上网7.png)\n\n\n\n\n\n\n","source":"_posts/Ubuntu配置shadowsocks科学上网.md","raw":"---\ntitle: Ubuntu配置shadowsocks科学上网\ndate: 2019-02-26 12:36:59\ntags: \n    - Ubuntu\n    - shadowsocks\n    - 科学上网\n    - 代理\n    - proxy\ncategories: 工程 \n---\n\n## 系统环境\n\n![科学上网](Ubuntu配置shadowsocks科学上网/科学上网1.png)\n\n## showsocks配置\n\n1. 安装shadowsocks客户端,命令如下\n\n```\nsudo apt install shadowsocks\n```\n<!-- more --> \n2. 查看shadowsocks命令：\n\n```\nsslocal --help\n```\n\n![科学上网](Ubuntu配置shadowsocks科学上网/科学上网2.png)\n\n3. 启动shadowsocks两种方式：\n\n- 通过设置各个参数，如下\n\n```\nsslocal -s 11.22.33.44 -p 50003 -k \"123456\" -l 1080 -t 600 -m aes-256-cfb\n```\n\n- 或者，直接加载json配置文件\n\n```\nsslocal -c file_path/shadowsocks.json\n```\n\n启动shadowsocks如下所示：\n\n![科学上网](Ubuntu配置shadowsocks科学上网/科学上网3.png)\n\n配置好shadowsocks客户端后，我们介绍一下三种方式设置代理模式。\n\n## 方式一：不要关闭上面的终端，重新打开一个终端，配置全局变量：\n\n使用`vim ~/.bashrc`添加语句\n```\nalias hp=\"http_proxy=http://localhost:8123\" \n```\n使用`source ~/.bashrc`使更改生效。\n\n5. 测试效果\n\n- 使用命令`hp curl ip.gs`查看代理服务器网址，结果如下所示：\n\n![科学上网](Ubuntu配置shadowsocks科学上网/科学上网4.png)\n\n可以看出，`alias hp=\"http_proxy=http://localhost:8123\" `这句语句的作用就是用命令`hp`替换`http_proxy=http://localhost:8123`这一串长命令。\n\n## 那我们不想每条指令前面都加上命令`hp`怎么办，这就需要设置全局代理：\n\n### 方式二：为当前窗口设置全局代理\n\n命令如下：\n```\nexport http_proxy=http://localhost:8123 # 当前终端使用代理\nunset http_proxy # 当前终端取消代理\n```\n\n测试如下所示，可以看出上设置全局代理后，就不需要`hp`命令了，取消代理（`unset`）后可以看到`ip`变成了陕西西安。\n![科学上网](Ubuntu配置shadowsocks科学上网/科学上网5.png)\n\n### 方式三：设置当前用户的全局代理\n\n在`~/.bashrc`中添加`export http_proxy=http://localhost:8123`命令设置当前用户的全局代理。别忘了使用`source ~/.bashrc`使更改生效。\n\n如下所示，\n\n![科学上网](Ubuntu配置shadowsocks科学上网/科学上网6.png)\n\n## 经过测试，推荐方式二为当前窗口设置全局代理，命令如下：\n\n```\nexport http_proxy=http://localhost:8123 # 当前终端使用代理\nunset http_proxy # 当前终端取消代理\n```\n\n这种方式可以开启一个窗口运行export作为科学上网窗口，而其他窗口依旧正常上网，这样可以**节约流量**。  \n除此之外，这是我测试的上述三种上网方式中最稳定的一种，建议使用。\n\n## 总结\n\n配置好之后，科学上网的过程，先打开一个终端窗口，运行：\n\n```\nsslocal -c file_path/shadowsocks.json\n```\n再打开新窗口，运行\n```\nexport http_proxy=http://localhost:8123 \n```\n\n我使用R-3D中下载YouTube视频的代码作为测试，运行`python download_video.py`就可以看到下载视频并保存在当前目录的videos目录下。\n\n示意结果如下，`sslocal -c shadowsocks.json`启动窗口下方会出现与`www.youtube.com`连接的日志信息：\n\n![科学上网](Ubuntu配置shadowsocks科学上网/科学上网7.png)\n\n\n\n\n\n\n","slug":"Ubuntu配置shadowsocks科学上网","published":1,"updated":"2019-02-26T12:08:14.048Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck0ozhiwx000rgkuw659w1wqm","content":"<h2 id=\"系统环境\"><a href=\"#系统环境\" class=\"headerlink\" title=\"系统环境\"></a>系统环境</h2><p><img src=\"/2019/02/26/Ubuntu配置shadowsocks科学上网/科学上网1.png\" alt=\"科学上网\"></p>\n<h2 id=\"showsocks配置\"><a href=\"#showsocks配置\" class=\"headerlink\" title=\"showsocks配置\"></a>showsocks配置</h2><ol>\n<li>安装shadowsocks客户端,命令如下</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt install shadowsocks</span><br></pre></td></tr></table></figure>\n<a id=\"more\"></a> \n<ol start=\"2\">\n<li>查看shadowsocks命令：</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sslocal --help</span><br></pre></td></tr></table></figure>\n<p><img src=\"/2019/02/26/Ubuntu配置shadowsocks科学上网/科学上网2.png\" alt=\"科学上网\"></p>\n<ol start=\"3\">\n<li>启动shadowsocks两种方式：</li>\n</ol>\n<ul>\n<li>通过设置各个参数，如下</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sslocal -s 11.22.33.44 -p 50003 -k &quot;123456&quot; -l 1080 -t 600 -m aes-256-cfb</span><br></pre></td></tr></table></figure>\n<ul>\n<li>或者，直接加载json配置文件</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sslocal -c file_path/shadowsocks.json</span><br></pre></td></tr></table></figure>\n<p>启动shadowsocks如下所示：</p>\n<p><img src=\"/2019/02/26/Ubuntu配置shadowsocks科学上网/科学上网3.png\" alt=\"科学上网\"></p>\n<p>配置好shadowsocks客户端后，我们介绍一下三种方式设置代理模式。</p>\n<h2 id=\"方式一：不要关闭上面的终端，重新打开一个终端，配置全局变量：\"><a href=\"#方式一：不要关闭上面的终端，重新打开一个终端，配置全局变量：\" class=\"headerlink\" title=\"方式一：不要关闭上面的终端，重新打开一个终端，配置全局变量：\"></a>方式一：不要关闭上面的终端，重新打开一个终端，配置全局变量：</h2><p>使用<code>vim ~/.bashrc</code>添加语句<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">alias hp=&quot;http_proxy=http://localhost:8123&quot;</span><br></pre></td></tr></table></figure></p>\n<p>使用<code>source ~/.bashrc</code>使更改生效。</p>\n<ol start=\"5\">\n<li>测试效果</li>\n</ol>\n<ul>\n<li>使用命令<code>hp curl ip.gs</code>查看代理服务器网址，结果如下所示：</li>\n</ul>\n<p><img src=\"/2019/02/26/Ubuntu配置shadowsocks科学上网/科学上网4.png\" alt=\"科学上网\"></p>\n<p>可以看出，<code>alias hp=&quot;http_proxy=http://localhost:8123&quot;</code>这句语句的作用就是用命令<code>hp</code>替换<code>http_proxy=http://localhost:8123</code>这一串长命令。</p>\n<h2 id=\"那我们不想每条指令前面都加上命令hp怎么办，这就需要设置全局代理：\"><a href=\"#那我们不想每条指令前面都加上命令hp怎么办，这就需要设置全局代理：\" class=\"headerlink\" title=\"那我们不想每条指令前面都加上命令hp怎么办，这就需要设置全局代理：\"></a>那我们不想每条指令前面都加上命令<code>hp</code>怎么办，这就需要设置全局代理：</h2><h3 id=\"方式二：为当前窗口设置全局代理\"><a href=\"#方式二：为当前窗口设置全局代理\" class=\"headerlink\" title=\"方式二：为当前窗口设置全局代理\"></a>方式二：为当前窗口设置全局代理</h3><p>命令如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">export http_proxy=http://localhost:8123 # 当前终端使用代理</span><br><span class=\"line\">unset http_proxy # 当前终端取消代理</span><br></pre></td></tr></table></figure></p>\n<p>测试如下所示，可以看出上设置全局代理后，就不需要<code>hp</code>命令了，取消代理（<code>unset</code>）后可以看到<code>ip</code>变成了陕西西安。<br><img src=\"/2019/02/26/Ubuntu配置shadowsocks科学上网/科学上网5.png\" alt=\"科学上网\"></p>\n<h3 id=\"方式三：设置当前用户的全局代理\"><a href=\"#方式三：设置当前用户的全局代理\" class=\"headerlink\" title=\"方式三：设置当前用户的全局代理\"></a>方式三：设置当前用户的全局代理</h3><p>在<code>~/.bashrc</code>中添加<code>export http_proxy=http://localhost:8123</code>命令设置当前用户的全局代理。别忘了使用<code>source ~/.bashrc</code>使更改生效。</p>\n<p>如下所示，</p>\n<p><img src=\"/2019/02/26/Ubuntu配置shadowsocks科学上网/科学上网6.png\" alt=\"科学上网\"></p>\n<h2 id=\"经过测试，推荐方式二为当前窗口设置全局代理，命令如下：\"><a href=\"#经过测试，推荐方式二为当前窗口设置全局代理，命令如下：\" class=\"headerlink\" title=\"经过测试，推荐方式二为当前窗口设置全局代理，命令如下：\"></a>经过测试，推荐方式二为当前窗口设置全局代理，命令如下：</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">export http_proxy=http://localhost:8123 # 当前终端使用代理</span><br><span class=\"line\">unset http_proxy # 当前终端取消代理</span><br></pre></td></tr></table></figure>\n<p>这种方式可以开启一个窗口运行export作为科学上网窗口，而其他窗口依旧正常上网，这样可以<strong>节约流量</strong>。<br>除此之外，这是我测试的上述三种上网方式中最稳定的一种，建议使用。</p>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>配置好之后，科学上网的过程，先打开一个终端窗口，运行：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sslocal -c file_path/shadowsocks.json</span><br></pre></td></tr></table></figure>\n<p>再打开新窗口，运行<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">export http_proxy=http://localhost:8123</span><br></pre></td></tr></table></figure></p>\n<p>我使用R-3D中下载YouTube视频的代码作为测试，运行<code>python download_video.py</code>就可以看到下载视频并保存在当前目录的videos目录下。</p>\n<p>示意结果如下，<code>sslocal -c shadowsocks.json</code>启动窗口下方会出现与<code>www.youtube.com</code>连接的日志信息：</p>\n<p><img src=\"/2019/02/26/Ubuntu配置shadowsocks科学上网/科学上网7.png\" alt=\"科学上网\"></p>\n","site":{"data":{}},"excerpt":"<h2 id=\"系统环境\"><a href=\"#系统环境\" class=\"headerlink\" title=\"系统环境\"></a>系统环境</h2><p><img src=\"/2019/02/26/Ubuntu配置shadowsocks科学上网/科学上网1.png\" alt=\"科学上网\"></p>\n<h2 id=\"showsocks配置\"><a href=\"#showsocks配置\" class=\"headerlink\" title=\"showsocks配置\"></a>showsocks配置</h2><ol>\n<li>安装shadowsocks客户端,命令如下</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt install shadowsocks</span><br></pre></td></tr></table></figure>","more":"<ol start=\"2\">\n<li>查看shadowsocks命令：</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sslocal --help</span><br></pre></td></tr></table></figure>\n<p><img src=\"/2019/02/26/Ubuntu配置shadowsocks科学上网/科学上网2.png\" alt=\"科学上网\"></p>\n<ol start=\"3\">\n<li>启动shadowsocks两种方式：</li>\n</ol>\n<ul>\n<li>通过设置各个参数，如下</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sslocal -s 11.22.33.44 -p 50003 -k &quot;123456&quot; -l 1080 -t 600 -m aes-256-cfb</span><br></pre></td></tr></table></figure>\n<ul>\n<li>或者，直接加载json配置文件</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sslocal -c file_path/shadowsocks.json</span><br></pre></td></tr></table></figure>\n<p>启动shadowsocks如下所示：</p>\n<p><img src=\"/2019/02/26/Ubuntu配置shadowsocks科学上网/科学上网3.png\" alt=\"科学上网\"></p>\n<p>配置好shadowsocks客户端后，我们介绍一下三种方式设置代理模式。</p>\n<h2 id=\"方式一：不要关闭上面的终端，重新打开一个终端，配置全局变量：\"><a href=\"#方式一：不要关闭上面的终端，重新打开一个终端，配置全局变量：\" class=\"headerlink\" title=\"方式一：不要关闭上面的终端，重新打开一个终端，配置全局变量：\"></a>方式一：不要关闭上面的终端，重新打开一个终端，配置全局变量：</h2><p>使用<code>vim ~/.bashrc</code>添加语句<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">alias hp=&quot;http_proxy=http://localhost:8123&quot;</span><br></pre></td></tr></table></figure></p>\n<p>使用<code>source ~/.bashrc</code>使更改生效。</p>\n<ol start=\"5\">\n<li>测试效果</li>\n</ol>\n<ul>\n<li>使用命令<code>hp curl ip.gs</code>查看代理服务器网址，结果如下所示：</li>\n</ul>\n<p><img src=\"/2019/02/26/Ubuntu配置shadowsocks科学上网/科学上网4.png\" alt=\"科学上网\"></p>\n<p>可以看出，<code>alias hp=&quot;http_proxy=http://localhost:8123&quot;</code>这句语句的作用就是用命令<code>hp</code>替换<code>http_proxy=http://localhost:8123</code>这一串长命令。</p>\n<h2 id=\"那我们不想每条指令前面都加上命令hp怎么办，这就需要设置全局代理：\"><a href=\"#那我们不想每条指令前面都加上命令hp怎么办，这就需要设置全局代理：\" class=\"headerlink\" title=\"那我们不想每条指令前面都加上命令hp怎么办，这就需要设置全局代理：\"></a>那我们不想每条指令前面都加上命令<code>hp</code>怎么办，这就需要设置全局代理：</h2><h3 id=\"方式二：为当前窗口设置全局代理\"><a href=\"#方式二：为当前窗口设置全局代理\" class=\"headerlink\" title=\"方式二：为当前窗口设置全局代理\"></a>方式二：为当前窗口设置全局代理</h3><p>命令如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">export http_proxy=http://localhost:8123 # 当前终端使用代理</span><br><span class=\"line\">unset http_proxy # 当前终端取消代理</span><br></pre></td></tr></table></figure></p>\n<p>测试如下所示，可以看出上设置全局代理后，就不需要<code>hp</code>命令了，取消代理（<code>unset</code>）后可以看到<code>ip</code>变成了陕西西安。<br><img src=\"/2019/02/26/Ubuntu配置shadowsocks科学上网/科学上网5.png\" alt=\"科学上网\"></p>\n<h3 id=\"方式三：设置当前用户的全局代理\"><a href=\"#方式三：设置当前用户的全局代理\" class=\"headerlink\" title=\"方式三：设置当前用户的全局代理\"></a>方式三：设置当前用户的全局代理</h3><p>在<code>~/.bashrc</code>中添加<code>export http_proxy=http://localhost:8123</code>命令设置当前用户的全局代理。别忘了使用<code>source ~/.bashrc</code>使更改生效。</p>\n<p>如下所示，</p>\n<p><img src=\"/2019/02/26/Ubuntu配置shadowsocks科学上网/科学上网6.png\" alt=\"科学上网\"></p>\n<h2 id=\"经过测试，推荐方式二为当前窗口设置全局代理，命令如下：\"><a href=\"#经过测试，推荐方式二为当前窗口设置全局代理，命令如下：\" class=\"headerlink\" title=\"经过测试，推荐方式二为当前窗口设置全局代理，命令如下：\"></a>经过测试，推荐方式二为当前窗口设置全局代理，命令如下：</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">export http_proxy=http://localhost:8123 # 当前终端使用代理</span><br><span class=\"line\">unset http_proxy # 当前终端取消代理</span><br></pre></td></tr></table></figure>\n<p>这种方式可以开启一个窗口运行export作为科学上网窗口，而其他窗口依旧正常上网，这样可以<strong>节约流量</strong>。<br>除此之外，这是我测试的上述三种上网方式中最稳定的一种，建议使用。</p>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>配置好之后，科学上网的过程，先打开一个终端窗口，运行：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sslocal -c file_path/shadowsocks.json</span><br></pre></td></tr></table></figure>\n<p>再打开新窗口，运行<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">export http_proxy=http://localhost:8123</span><br></pre></td></tr></table></figure></p>\n<p>我使用R-3D中下载YouTube视频的代码作为测试，运行<code>python download_video.py</code>就可以看到下载视频并保存在当前目录的videos目录下。</p>\n<p>示意结果如下，<code>sslocal -c shadowsocks.json</code>启动窗口下方会出现与<code>www.youtube.com</code>连接的日志信息：</p>\n<p><img src=\"/2019/02/26/Ubuntu配置shadowsocks科学上网/科学上网7.png\" alt=\"科学上网\"></p>"},{"title":"ZooKeeper-分布式应用程序协调服务","date":"2019-03-06T06:51:32.000Z","_content":"\n[参考链接](http://developer.51cto.com/art/201809/583184.htm)\n\n## 基本概念\nApache ZooKeeper is an effort to develop and maintain an open-source server which enables highly reliable distributed coordination.\n\nApache ZooKeeper致力于开发和维护一个支持高度可靠的分布式协调的开源服务器。\n<!-- more --> \nZookeeper是一个典型的分布式数据一致性解决方案，分布式应用程序可以基于Zookeeper实现诸如数据发布/订阅、负载均衡、命名服务、分布式协调/通知、集群管理、Master选举、分布式锁和分布式队列等功能。  \n\n\n## Znode\n\n在ZooKeeper中，“节点”分为两种类型：\n- 第一类是指构成集群的机器，称之为机器节点；\n- 第二类则是指数据模型中的数据单元，我们称之为数据节点-Znode。\n\nZooKeeper将所有的数据存储在内存中，数据模型是一棵树（Znode Tree）\n\n## ZooKeeper集群介绍介绍\n\nZooKeeper集群中的所有机器通过Leader选举过程来选定一台称为“Leader”的机器，Leader既可以为客户端提供写服务又能提供读服务。出Leader外，Follower和Observer只能提供读服务。\n\nFollower与Observer的唯一区别在于Observer机器不参与Leader的选举过程，也不参与写操作的“过半写成功”策略，因此Observer机器可以在不影响写性能的情况下提升集群的读性能。\n\n## ZAB协议\n\nZAB（ZooKeeper Atomic Broadcast，ZooKeeper原子广播）协议是为分布式协调服务ZooKeeper专门设计的一种支持崩溃恢复的原子广播协议。\n\n在ZooKeeper中，主要依赖ZAB协议来实现分布式数据一致性，基于该协议ZooKeeper实现了一种主备模式的系统架构来保持集群中各个副本之间的数据一致性。\n\nZAB协议包括两种基本模式，分别是崩溃恢复和消息广播。  \n当整个服务框架在启动过程中，或是当Leader服务器出现网络中断、崩溃退出与重启等异常情况是，ZAB协议就会进入恢复模式并选举出新的Leader服务器。  \n当选举产生的新的Leader服务器，同时集群中已经有过半的机器与新Leader服务器完成状态同步之后，ZAB协议就会退出恢复模式。其中，所谓的状态同步是指数据同步，也就是保证集群中过半的机器与该Leader服务器的数据状态一致。  \n当集群中已经有过半的Follower服务器完成与Leader服务器的状态同步，那么整个服务框架就可以进入消息广播模式了。  \n当一台同样遵守ZAB协议的服务器启动后加入到集群中时，如果此时集群中已经存在一个Leader服务器在负责消息广播，那么新加入的服务器就会自觉地进去数据恢复模式：找到Leader所在的服务器，并与其进行数据同步，然后一起参与到消息广播流程中去。\n\n正如上文所述，ZooKeeper被设计成只允许唯一的Leader服务器进行事务请求的处理，Leader服务器在接收到客户端的事务请求后，会生成对应的事务提案并发起一轮广播协议。如果集群中的其他机器接收到客户端事务请求，那么这些非Leader服务器会首先将这个事务转发给Leader服务器。\n\n## 应用\n\n在我们的智慧教育示范应用中，主要是使用Kafka收集用户日志，而ZooKeeper就担任了服务生产者和消费者的注册中心。  \n服务生产者将自己提供的服务注册到ZooKeeper中心，服务消费者在进行服务调用的时候先到ZooKeeper中查找服务，获取到服务生产者的详细信息之后，再去调用服务生产者的内容和数据。\n\n","source":"_posts/ZooKeeper-分布式应用程序协调服务.md","raw":"---\ntitle: ZooKeeper-分布式应用程序协调服务\ndate: 2019-03-06 14:51:32\ntags: \n    - ZooKeeper\n    - 开源软件\ncategories: ZooKeeper\n---\n\n[参考链接](http://developer.51cto.com/art/201809/583184.htm)\n\n## 基本概念\nApache ZooKeeper is an effort to develop and maintain an open-source server which enables highly reliable distributed coordination.\n\nApache ZooKeeper致力于开发和维护一个支持高度可靠的分布式协调的开源服务器。\n<!-- more --> \nZookeeper是一个典型的分布式数据一致性解决方案，分布式应用程序可以基于Zookeeper实现诸如数据发布/订阅、负载均衡、命名服务、分布式协调/通知、集群管理、Master选举、分布式锁和分布式队列等功能。  \n\n\n## Znode\n\n在ZooKeeper中，“节点”分为两种类型：\n- 第一类是指构成集群的机器，称之为机器节点；\n- 第二类则是指数据模型中的数据单元，我们称之为数据节点-Znode。\n\nZooKeeper将所有的数据存储在内存中，数据模型是一棵树（Znode Tree）\n\n## ZooKeeper集群介绍介绍\n\nZooKeeper集群中的所有机器通过Leader选举过程来选定一台称为“Leader”的机器，Leader既可以为客户端提供写服务又能提供读服务。出Leader外，Follower和Observer只能提供读服务。\n\nFollower与Observer的唯一区别在于Observer机器不参与Leader的选举过程，也不参与写操作的“过半写成功”策略，因此Observer机器可以在不影响写性能的情况下提升集群的读性能。\n\n## ZAB协议\n\nZAB（ZooKeeper Atomic Broadcast，ZooKeeper原子广播）协议是为分布式协调服务ZooKeeper专门设计的一种支持崩溃恢复的原子广播协议。\n\n在ZooKeeper中，主要依赖ZAB协议来实现分布式数据一致性，基于该协议ZooKeeper实现了一种主备模式的系统架构来保持集群中各个副本之间的数据一致性。\n\nZAB协议包括两种基本模式，分别是崩溃恢复和消息广播。  \n当整个服务框架在启动过程中，或是当Leader服务器出现网络中断、崩溃退出与重启等异常情况是，ZAB协议就会进入恢复模式并选举出新的Leader服务器。  \n当选举产生的新的Leader服务器，同时集群中已经有过半的机器与新Leader服务器完成状态同步之后，ZAB协议就会退出恢复模式。其中，所谓的状态同步是指数据同步，也就是保证集群中过半的机器与该Leader服务器的数据状态一致。  \n当集群中已经有过半的Follower服务器完成与Leader服务器的状态同步，那么整个服务框架就可以进入消息广播模式了。  \n当一台同样遵守ZAB协议的服务器启动后加入到集群中时，如果此时集群中已经存在一个Leader服务器在负责消息广播，那么新加入的服务器就会自觉地进去数据恢复模式：找到Leader所在的服务器，并与其进行数据同步，然后一起参与到消息广播流程中去。\n\n正如上文所述，ZooKeeper被设计成只允许唯一的Leader服务器进行事务请求的处理，Leader服务器在接收到客户端的事务请求后，会生成对应的事务提案并发起一轮广播协议。如果集群中的其他机器接收到客户端事务请求，那么这些非Leader服务器会首先将这个事务转发给Leader服务器。\n\n## 应用\n\n在我们的智慧教育示范应用中，主要是使用Kafka收集用户日志，而ZooKeeper就担任了服务生产者和消费者的注册中心。  \n服务生产者将自己提供的服务注册到ZooKeeper中心，服务消费者在进行服务调用的时候先到ZooKeeper中查找服务，获取到服务生产者的详细信息之后，再去调用服务生产者的内容和数据。\n\n","slug":"ZooKeeper-分布式应用程序协调服务","published":1,"updated":"2019-03-06T08:26:16.895Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck0ozhiwy000tgkuwfon7xaww","content":"<p><a href=\"http://developer.51cto.com/art/201809/583184.htm\" target=\"_blank\" rel=\"noopener\">参考链接</a></p>\n<h2 id=\"基本概念\"><a href=\"#基本概念\" class=\"headerlink\" title=\"基本概念\"></a>基本概念</h2><p>Apache ZooKeeper is an effort to develop and maintain an open-source server which enables highly reliable distributed coordination.</p>\n<p>Apache ZooKeeper致力于开发和维护一个支持高度可靠的分布式协调的开源服务器。<br><a id=\"more\"></a><br>Zookeeper是一个典型的分布式数据一致性解决方案，分布式应用程序可以基于Zookeeper实现诸如数据发布/订阅、负载均衡、命名服务、分布式协调/通知、集群管理、Master选举、分布式锁和分布式队列等功能。  </p>\n<h2 id=\"Znode\"><a href=\"#Znode\" class=\"headerlink\" title=\"Znode\"></a>Znode</h2><p>在ZooKeeper中，“节点”分为两种类型：</p>\n<ul>\n<li>第一类是指构成集群的机器，称之为机器节点；</li>\n<li>第二类则是指数据模型中的数据单元，我们称之为数据节点-Znode。</li>\n</ul>\n<p>ZooKeeper将所有的数据存储在内存中，数据模型是一棵树（Znode Tree）</p>\n<h2 id=\"ZooKeeper集群介绍介绍\"><a href=\"#ZooKeeper集群介绍介绍\" class=\"headerlink\" title=\"ZooKeeper集群介绍介绍\"></a>ZooKeeper集群介绍介绍</h2><p>ZooKeeper集群中的所有机器通过Leader选举过程来选定一台称为“Leader”的机器，Leader既可以为客户端提供写服务又能提供读服务。出Leader外，Follower和Observer只能提供读服务。</p>\n<p>Follower与Observer的唯一区别在于Observer机器不参与Leader的选举过程，也不参与写操作的“过半写成功”策略，因此Observer机器可以在不影响写性能的情况下提升集群的读性能。</p>\n<h2 id=\"ZAB协议\"><a href=\"#ZAB协议\" class=\"headerlink\" title=\"ZAB协议\"></a>ZAB协议</h2><p>ZAB（ZooKeeper Atomic Broadcast，ZooKeeper原子广播）协议是为分布式协调服务ZooKeeper专门设计的一种支持崩溃恢复的原子广播协议。</p>\n<p>在ZooKeeper中，主要依赖ZAB协议来实现分布式数据一致性，基于该协议ZooKeeper实现了一种主备模式的系统架构来保持集群中各个副本之间的数据一致性。</p>\n<p>ZAB协议包括两种基本模式，分别是崩溃恢复和消息广播。<br>当整个服务框架在启动过程中，或是当Leader服务器出现网络中断、崩溃退出与重启等异常情况是，ZAB协议就会进入恢复模式并选举出新的Leader服务器。<br>当选举产生的新的Leader服务器，同时集群中已经有过半的机器与新Leader服务器完成状态同步之后，ZAB协议就会退出恢复模式。其中，所谓的状态同步是指数据同步，也就是保证集群中过半的机器与该Leader服务器的数据状态一致。<br>当集群中已经有过半的Follower服务器完成与Leader服务器的状态同步，那么整个服务框架就可以进入消息广播模式了。<br>当一台同样遵守ZAB协议的服务器启动后加入到集群中时，如果此时集群中已经存在一个Leader服务器在负责消息广播，那么新加入的服务器就会自觉地进去数据恢复模式：找到Leader所在的服务器，并与其进行数据同步，然后一起参与到消息广播流程中去。</p>\n<p>正如上文所述，ZooKeeper被设计成只允许唯一的Leader服务器进行事务请求的处理，Leader服务器在接收到客户端的事务请求后，会生成对应的事务提案并发起一轮广播协议。如果集群中的其他机器接收到客户端事务请求，那么这些非Leader服务器会首先将这个事务转发给Leader服务器。</p>\n<h2 id=\"应用\"><a href=\"#应用\" class=\"headerlink\" title=\"应用\"></a>应用</h2><p>在我们的智慧教育示范应用中，主要是使用Kafka收集用户日志，而ZooKeeper就担任了服务生产者和消费者的注册中心。<br>服务生产者将自己提供的服务注册到ZooKeeper中心，服务消费者在进行服务调用的时候先到ZooKeeper中查找服务，获取到服务生产者的详细信息之后，再去调用服务生产者的内容和数据。</p>\n","site":{"data":{}},"excerpt":"<p><a href=\"http://developer.51cto.com/art/201809/583184.htm\" target=\"_blank\" rel=\"noopener\">参考链接</a></p>\n<h2 id=\"基本概念\"><a href=\"#基本概念\" class=\"headerlink\" title=\"基本概念\"></a>基本概念</h2><p>Apache ZooKeeper is an effort to develop and maintain an open-source server which enables highly reliable distributed coordination.</p>\n<p>Apache ZooKeeper致力于开发和维护一个支持高度可靠的分布式协调的开源服务器。<br></p>","more":"<br>Zookeeper是一个典型的分布式数据一致性解决方案，分布式应用程序可以基于Zookeeper实现诸如数据发布/订阅、负载均衡、命名服务、分布式协调/通知、集群管理、Master选举、分布式锁和分布式队列等功能。  <p></p>\n<h2 id=\"Znode\"><a href=\"#Znode\" class=\"headerlink\" title=\"Znode\"></a>Znode</h2><p>在ZooKeeper中，“节点”分为两种类型：</p>\n<ul>\n<li>第一类是指构成集群的机器，称之为机器节点；</li>\n<li>第二类则是指数据模型中的数据单元，我们称之为数据节点-Znode。</li>\n</ul>\n<p>ZooKeeper将所有的数据存储在内存中，数据模型是一棵树（Znode Tree）</p>\n<h2 id=\"ZooKeeper集群介绍介绍\"><a href=\"#ZooKeeper集群介绍介绍\" class=\"headerlink\" title=\"ZooKeeper集群介绍介绍\"></a>ZooKeeper集群介绍介绍</h2><p>ZooKeeper集群中的所有机器通过Leader选举过程来选定一台称为“Leader”的机器，Leader既可以为客户端提供写服务又能提供读服务。出Leader外，Follower和Observer只能提供读服务。</p>\n<p>Follower与Observer的唯一区别在于Observer机器不参与Leader的选举过程，也不参与写操作的“过半写成功”策略，因此Observer机器可以在不影响写性能的情况下提升集群的读性能。</p>\n<h2 id=\"ZAB协议\"><a href=\"#ZAB协议\" class=\"headerlink\" title=\"ZAB协议\"></a>ZAB协议</h2><p>ZAB（ZooKeeper Atomic Broadcast，ZooKeeper原子广播）协议是为分布式协调服务ZooKeeper专门设计的一种支持崩溃恢复的原子广播协议。</p>\n<p>在ZooKeeper中，主要依赖ZAB协议来实现分布式数据一致性，基于该协议ZooKeeper实现了一种主备模式的系统架构来保持集群中各个副本之间的数据一致性。</p>\n<p>ZAB协议包括两种基本模式，分别是崩溃恢复和消息广播。<br>当整个服务框架在启动过程中，或是当Leader服务器出现网络中断、崩溃退出与重启等异常情况是，ZAB协议就会进入恢复模式并选举出新的Leader服务器。<br>当选举产生的新的Leader服务器，同时集群中已经有过半的机器与新Leader服务器完成状态同步之后，ZAB协议就会退出恢复模式。其中，所谓的状态同步是指数据同步，也就是保证集群中过半的机器与该Leader服务器的数据状态一致。<br>当集群中已经有过半的Follower服务器完成与Leader服务器的状态同步，那么整个服务框架就可以进入消息广播模式了。<br>当一台同样遵守ZAB协议的服务器启动后加入到集群中时，如果此时集群中已经存在一个Leader服务器在负责消息广播，那么新加入的服务器就会自觉地进去数据恢复模式：找到Leader所在的服务器，并与其进行数据同步，然后一起参与到消息广播流程中去。</p>\n<p>正如上文所述，ZooKeeper被设计成只允许唯一的Leader服务器进行事务请求的处理，Leader服务器在接收到客户端的事务请求后，会生成对应的事务提案并发起一轮广播协议。如果集群中的其他机器接收到客户端事务请求，那么这些非Leader服务器会首先将这个事务转发给Leader服务器。</p>\n<h2 id=\"应用\"><a href=\"#应用\" class=\"headerlink\" title=\"应用\"></a>应用</h2><p>在我们的智慧教育示范应用中，主要是使用Kafka收集用户日志，而ZooKeeper就担任了服务生产者和消费者的注册中心。<br>服务生产者将自己提供的服务注册到ZooKeeper中心，服务消费者在进行服务调用的时候先到ZooKeeper中查找服务，获取到服务生产者的详细信息之后，再去调用服务生产者的内容和数据。</p>"},{"title":"Yotta系统错误记录及性能优化","date":"2019-01-07T03:28:21.000Z","_content":"\n## 错误记录\n1. 在日志系统运行期间，每隔几天kafka平台就会自动崩溃，控制台窗口关闭，并且重新启动kafka平台也会出现日志文件冲突问题，从而导致日志系统无法正常记录用户行为日志。\n<!-- more --> \n解决方法：\n- 首先，我们查阅了官网的各种文档，在全面了解kafka的实现原理与应用之后仍然没有找到解决问题的方法。然后我们在StackOverflow和Quora上进行了相关问题的查看，尝试后发现类似问题解决方法，将kafka平台对应的日志文件删除就可以正常启动kafka平台。虽然通过删除日志文件的方式使得日志记录正常进行，但是依旧没有解决每隔几天kafka平台就会自动崩溃的问题，频繁人工启动不稳定的服务耗费人力开销。\n- 为了彻底解决这个问题，我们维护人员仔细阅读kafka生成的日志文件，了解到崩溃的发生是因为日志文件大小达到阈值时kafka程序会对日志文件重命名，而此时日志文件又被自身所占用，就产生了程序异常，在Apache官网issues下发现这是此版本kafka在windows下的一个错误，所以我们将日志系统整体迁移到linux系统下，将问题完美解决。\n\n## 性能优化\n\n1. Optimizing MySQL LIKE '%string%' queries\n- 方法1：建立fulltext索引，全文索引只能用于数据库引擎为MYISAM的数据表，但是全文索引不支持中文；\n- 方法2：\n","source":"_posts/Yotta系统错误记录及性能优化.md","raw":"---\ntitle: Yotta系统错误记录及性能优化\ndate: 2019-01-07 11:28:21\ncategories: 工程\ntags: yotta系统\n---\n\n## 错误记录\n1. 在日志系统运行期间，每隔几天kafka平台就会自动崩溃，控制台窗口关闭，并且重新启动kafka平台也会出现日志文件冲突问题，从而导致日志系统无法正常记录用户行为日志。\n<!-- more --> \n解决方法：\n- 首先，我们查阅了官网的各种文档，在全面了解kafka的实现原理与应用之后仍然没有找到解决问题的方法。然后我们在StackOverflow和Quora上进行了相关问题的查看，尝试后发现类似问题解决方法，将kafka平台对应的日志文件删除就可以正常启动kafka平台。虽然通过删除日志文件的方式使得日志记录正常进行，但是依旧没有解决每隔几天kafka平台就会自动崩溃的问题，频繁人工启动不稳定的服务耗费人力开销。\n- 为了彻底解决这个问题，我们维护人员仔细阅读kafka生成的日志文件，了解到崩溃的发生是因为日志文件大小达到阈值时kafka程序会对日志文件重命名，而此时日志文件又被自身所占用，就产生了程序异常，在Apache官网issues下发现这是此版本kafka在windows下的一个错误，所以我们将日志系统整体迁移到linux系统下，将问题完美解决。\n\n## 性能优化\n\n1. Optimizing MySQL LIKE '%string%' queries\n- 方法1：建立fulltext索引，全文索引只能用于数据库引擎为MYISAM的数据表，但是全文索引不支持中文；\n- 方法2：\n","slug":"Yotta系统错误记录及性能优化","published":1,"updated":"2019-01-18T04:40:21.240Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck0ozhiwz000xgkuw86qw7ofn","content":"<h2 id=\"错误记录\"><a href=\"#错误记录\" class=\"headerlink\" title=\"错误记录\"></a>错误记录</h2><ol>\n<li>在日志系统运行期间，每隔几天kafka平台就会自动崩溃，控制台窗口关闭，并且重新启动kafka平台也会出现日志文件冲突问题，从而导致日志系统无法正常记录用户行为日志。<a id=\"more\"></a> \n解决方法：</li>\n</ol>\n<ul>\n<li>首先，我们查阅了官网的各种文档，在全面了解kafka的实现原理与应用之后仍然没有找到解决问题的方法。然后我们在StackOverflow和Quora上进行了相关问题的查看，尝试后发现类似问题解决方法，将kafka平台对应的日志文件删除就可以正常启动kafka平台。虽然通过删除日志文件的方式使得日志记录正常进行，但是依旧没有解决每隔几天kafka平台就会自动崩溃的问题，频繁人工启动不稳定的服务耗费人力开销。</li>\n<li>为了彻底解决这个问题，我们维护人员仔细阅读kafka生成的日志文件，了解到崩溃的发生是因为日志文件大小达到阈值时kafka程序会对日志文件重命名，而此时日志文件又被自身所占用，就产生了程序异常，在Apache官网issues下发现这是此版本kafka在windows下的一个错误，所以我们将日志系统整体迁移到linux系统下，将问题完美解决。</li>\n</ul>\n<h2 id=\"性能优化\"><a href=\"#性能优化\" class=\"headerlink\" title=\"性能优化\"></a>性能优化</h2><ol>\n<li>Optimizing MySQL LIKE ‘%string%’ queries</li>\n</ol>\n<ul>\n<li>方法1：建立fulltext索引，全文索引只能用于数据库引擎为MYISAM的数据表，但是全文索引不支持中文；</li>\n<li>方法2：</li>\n</ul>\n","site":{"data":{}},"excerpt":"<h2 id=\"错误记录\"><a href=\"#错误记录\" class=\"headerlink\" title=\"错误记录\"></a>错误记录</h2><ol>\n<li>在日志系统运行期间，每隔几天kafka平台就会自动崩溃，控制台窗口关闭，并且重新启动kafka平台也会出现日志文件冲突问题，从而导致日志系统无法正常记录用户行为日志。</li></ol>","more":"解决方法：\n\n<ul>\n<li>首先，我们查阅了官网的各种文档，在全面了解kafka的实现原理与应用之后仍然没有找到解决问题的方法。然后我们在StackOverflow和Quora上进行了相关问题的查看，尝试后发现类似问题解决方法，将kafka平台对应的日志文件删除就可以正常启动kafka平台。虽然通过删除日志文件的方式使得日志记录正常进行，但是依旧没有解决每隔几天kafka平台就会自动崩溃的问题，频繁人工启动不稳定的服务耗费人力开销。</li>\n<li>为了彻底解决这个问题，我们维护人员仔细阅读kafka生成的日志文件，了解到崩溃的发生是因为日志文件大小达到阈值时kafka程序会对日志文件重命名，而此时日志文件又被自身所占用，就产生了程序异常，在Apache官网issues下发现这是此版本kafka在windows下的一个错误，所以我们将日志系统整体迁移到linux系统下，将问题完美解决。</li>\n</ul>\n<h2 id=\"性能优化\"><a href=\"#性能优化\" class=\"headerlink\" title=\"性能优化\"></a>性能优化</h2><ol>\n<li>Optimizing MySQL LIKE ‘%string%’ queries</li>\n</ol>\n<ul>\n<li>方法1：建立fulltext索引，全文索引只能用于数据库引擎为MYISAM的数据表，但是全文索引不支持中文；</li>\n<li>方法2：</li>\n</ul>"},{"title":"cuda安装","date":"2019-01-08T13:38:04.000Z","_content":"\n# cuda安装\n## cuda和cudnn版本查看\n1. cuda版本\n\n```\ncat /usr/local/cuda/version.txt\n```\n<!-- more --> \n2. cudnn版本\n\n```\ncat /usr/local/cuda/include/cudnn.h | grep CUDNN_MAJOR -A 2\n```\n\n## cuda8.0卸载\n1. 卸载\n\n```\napt autoremove cuda\n```\n\n2. 清除残留文件\n\n```\ncd /usr/local/\nrm -rf cuda-8.0/\n```\n\n## cuda9.0及对应cudnn安装\n### cuda9.0安装\n[cuda9.0官方网站](https://developer.nvidia.com/cuda-90-download-archive)\n\n1. 运行压缩.run\n\n```\nsudo sh cuda_9.0.176_384.81_linux.run\n```\n- 一般在不需要图形驱动（Grphics Driver）和 样例（cuda samples）\n\n![image](cuda安装/cuda0.png)\n\n[cudnn官方网站](https://developer.nvidia.com/cudnn)\n\n2.~/.bashrc配置\n\n```\nexport CUDA_HOME=/usr/local/cuda\nexport LD_LIBRARY_PATH=${CUDA_HOME}/lib64\nexport PATH=${CUDA_HOME}/bin:${PATH}\n```\n3. 刷新使得配置生效\n\n```\nsource ~/.bashrc\n```\n\n\n### cudnn安装\n\n本次版本是**cuDNN v7.4.2 (Dec 14, 2018), for CUDA 9.0**，选择**cuDNN Library for Linux**。\n1. 解压cudnn-9.0-linux-x64-v7.4.2.24.tgz压缩包\n\n```\ntar -zxvf cudnn-9.0-linux-x64-v7.4.2.24.tgz\n```\n![image](cuda安装/cuda1.png)\n\n2. 复制文件到cuda库下\n\n```\ncp cuda/lib64/* /usr/local/cuda-9.0/lib64/\ncp cuda/include/* /usr/local/cuda-9.0/include/\n```\n\n3. 查看cudnn版本信息\n\n```\ncat /usr/local/cuda/include/cudnn.h | grep CUDNN_MAJOR -A 2\n```\n\n### cuda切换\n当一台服务器上既安装了cuda8.0和cuda9.0，使用ls命令查看/usr/local下的文件包含三个文件夹cuda、cuda8.0和cuda9.0。\n\n```\nls -l /usr/local/\n```\n![image](cuda安装/cuda3.png)\n\n1. 可以看到，当前cuda文件夹链接到cuda-9.0,当需要切换到cuda8.0时，使用以下命令：\n\n```\nrm -rf /usr/local/cuda #删除之前创建的软链接\nsudo ln -s /usr/local/cuda-8.0/ /usr/local/cuda\nnvcc --version #查看当前 cuda 版本\n```\n\n\n[参考博客：http://geyao1995.com/CUDA8_CUDA9/](http://geyao1995.com/CUDA8_CUDA9/)","source":"_posts/cuda安装.md","raw":"---\ntitle: cuda安装\ndate: 2019-01-08 21:38:04\ntags: \n    - 环境配置\n    - 软件安装\ncategories: 科研\n---\n\n# cuda安装\n## cuda和cudnn版本查看\n1. cuda版本\n\n```\ncat /usr/local/cuda/version.txt\n```\n<!-- more --> \n2. cudnn版本\n\n```\ncat /usr/local/cuda/include/cudnn.h | grep CUDNN_MAJOR -A 2\n```\n\n## cuda8.0卸载\n1. 卸载\n\n```\napt autoremove cuda\n```\n\n2. 清除残留文件\n\n```\ncd /usr/local/\nrm -rf cuda-8.0/\n```\n\n## cuda9.0及对应cudnn安装\n### cuda9.0安装\n[cuda9.0官方网站](https://developer.nvidia.com/cuda-90-download-archive)\n\n1. 运行压缩.run\n\n```\nsudo sh cuda_9.0.176_384.81_linux.run\n```\n- 一般在不需要图形驱动（Grphics Driver）和 样例（cuda samples）\n\n![image](cuda安装/cuda0.png)\n\n[cudnn官方网站](https://developer.nvidia.com/cudnn)\n\n2.~/.bashrc配置\n\n```\nexport CUDA_HOME=/usr/local/cuda\nexport LD_LIBRARY_PATH=${CUDA_HOME}/lib64\nexport PATH=${CUDA_HOME}/bin:${PATH}\n```\n3. 刷新使得配置生效\n\n```\nsource ~/.bashrc\n```\n\n\n### cudnn安装\n\n本次版本是**cuDNN v7.4.2 (Dec 14, 2018), for CUDA 9.0**，选择**cuDNN Library for Linux**。\n1. 解压cudnn-9.0-linux-x64-v7.4.2.24.tgz压缩包\n\n```\ntar -zxvf cudnn-9.0-linux-x64-v7.4.2.24.tgz\n```\n![image](cuda安装/cuda1.png)\n\n2. 复制文件到cuda库下\n\n```\ncp cuda/lib64/* /usr/local/cuda-9.0/lib64/\ncp cuda/include/* /usr/local/cuda-9.0/include/\n```\n\n3. 查看cudnn版本信息\n\n```\ncat /usr/local/cuda/include/cudnn.h | grep CUDNN_MAJOR -A 2\n```\n\n### cuda切换\n当一台服务器上既安装了cuda8.0和cuda9.0，使用ls命令查看/usr/local下的文件包含三个文件夹cuda、cuda8.0和cuda9.0。\n\n```\nls -l /usr/local/\n```\n![image](cuda安装/cuda3.png)\n\n1. 可以看到，当前cuda文件夹链接到cuda-9.0,当需要切换到cuda8.0时，使用以下命令：\n\n```\nrm -rf /usr/local/cuda #删除之前创建的软链接\nsudo ln -s /usr/local/cuda-8.0/ /usr/local/cuda\nnvcc --version #查看当前 cuda 版本\n```\n\n\n[参考博客：http://geyao1995.com/CUDA8_CUDA9/](http://geyao1995.com/CUDA8_CUDA9/)","slug":"cuda安装","published":1,"updated":"2019-01-18T04:39:56.815Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck0ozhix10011gkuw6bfqk5n7","content":"<h1 id=\"cuda安装\"><a href=\"#cuda安装\" class=\"headerlink\" title=\"cuda安装\"></a>cuda安装</h1><h2 id=\"cuda和cudnn版本查看\"><a href=\"#cuda和cudnn版本查看\" class=\"headerlink\" title=\"cuda和cudnn版本查看\"></a>cuda和cudnn版本查看</h2><ol>\n<li>cuda版本</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat /usr/local/cuda/version.txt</span><br></pre></td></tr></table></figure>\n<a id=\"more\"></a> \n<ol start=\"2\">\n<li>cudnn版本</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat /usr/local/cuda/include/cudnn.h | grep CUDNN_MAJOR -A 2</span><br></pre></td></tr></table></figure>\n<h2 id=\"cuda8-0卸载\"><a href=\"#cuda8-0卸载\" class=\"headerlink\" title=\"cuda8.0卸载\"></a>cuda8.0卸载</h2><ol>\n<li>卸载</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apt autoremove cuda</span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>清除残留文件</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd /usr/local/</span><br><span class=\"line\">rm -rf cuda-8.0/</span><br></pre></td></tr></table></figure>\n<h2 id=\"cuda9-0及对应cudnn安装\"><a href=\"#cuda9-0及对应cudnn安装\" class=\"headerlink\" title=\"cuda9.0及对应cudnn安装\"></a>cuda9.0及对应cudnn安装</h2><h3 id=\"cuda9-0安装\"><a href=\"#cuda9-0安装\" class=\"headerlink\" title=\"cuda9.0安装\"></a>cuda9.0安装</h3><p><a href=\"https://developer.nvidia.com/cuda-90-download-archive\" target=\"_blank\" rel=\"noopener\">cuda9.0官方网站</a></p>\n<ol>\n<li>运行压缩.run</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo sh cuda_9.0.176_384.81_linux.run</span><br></pre></td></tr></table></figure>\n<ul>\n<li>一般在不需要图形驱动（Grphics Driver）和 样例（cuda samples）</li>\n</ul>\n<p><img src=\"/2019/01/08/cuda安装/cuda0.png\" alt=\"image\"></p>\n<p><a href=\"https://developer.nvidia.com/cudnn\" target=\"_blank\" rel=\"noopener\">cudnn官方网站</a></p>\n<p>2.~/.bashrc配置</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">export CUDA_HOME=/usr/local/cuda</span><br><span class=\"line\">export LD_LIBRARY_PATH=$&#123;CUDA_HOME&#125;/lib64</span><br><span class=\"line\">export PATH=$&#123;CUDA_HOME&#125;/bin:$&#123;PATH&#125;</span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li>刷新使得配置生效</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">source ~/.bashrc</span><br></pre></td></tr></table></figure>\n<h3 id=\"cudnn安装\"><a href=\"#cudnn安装\" class=\"headerlink\" title=\"cudnn安装\"></a>cudnn安装</h3><p>本次版本是<strong>cuDNN v7.4.2 (Dec 14, 2018), for CUDA 9.0</strong>，选择<strong>cuDNN Library for Linux</strong>。</p>\n<ol>\n<li>解压cudnn-9.0-linux-x64-v7.4.2.24.tgz压缩包</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar -zxvf cudnn-9.0-linux-x64-v7.4.2.24.tgz</span><br></pre></td></tr></table></figure>\n<p><img src=\"/2019/01/08/cuda安装/cuda1.png\" alt=\"image\"></p>\n<ol start=\"2\">\n<li>复制文件到cuda库下</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cp cuda/lib64/* /usr/local/cuda-9.0/lib64/</span><br><span class=\"line\">cp cuda/include/* /usr/local/cuda-9.0/include/</span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li>查看cudnn版本信息</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat /usr/local/cuda/include/cudnn.h | grep CUDNN_MAJOR -A 2</span><br></pre></td></tr></table></figure>\n<h3 id=\"cuda切换\"><a href=\"#cuda切换\" class=\"headerlink\" title=\"cuda切换\"></a>cuda切换</h3><p>当一台服务器上既安装了cuda8.0和cuda9.0，使用ls命令查看/usr/local下的文件包含三个文件夹cuda、cuda8.0和cuda9.0。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ls -l /usr/local/</span><br></pre></td></tr></table></figure>\n<p><img src=\"/2019/01/08/cuda安装/cuda3.png\" alt=\"image\"></p>\n<ol>\n<li>可以看到，当前cuda文件夹链接到cuda-9.0,当需要切换到cuda8.0时，使用以下命令：</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rm -rf /usr/local/cuda #删除之前创建的软链接</span><br><span class=\"line\">sudo ln -s /usr/local/cuda-8.0/ /usr/local/cuda</span><br><span class=\"line\">nvcc --version #查看当前 cuda 版本</span><br></pre></td></tr></table></figure>\n<p><a href=\"http://geyao1995.com/CUDA8_CUDA9/\" target=\"_blank\" rel=\"noopener\">参考博客：http://geyao1995.com/CUDA8_CUDA9/</a></p>\n","site":{"data":{}},"excerpt":"<h1 id=\"cuda安装\"><a href=\"#cuda安装\" class=\"headerlink\" title=\"cuda安装\"></a>cuda安装</h1><h2 id=\"cuda和cudnn版本查看\"><a href=\"#cuda和cudnn版本查看\" class=\"headerlink\" title=\"cuda和cudnn版本查看\"></a>cuda和cudnn版本查看</h2><ol>\n<li>cuda版本</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat /usr/local/cuda/version.txt</span><br></pre></td></tr></table></figure>","more":"<ol start=\"2\">\n<li>cudnn版本</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat /usr/local/cuda/include/cudnn.h | grep CUDNN_MAJOR -A 2</span><br></pre></td></tr></table></figure>\n<h2 id=\"cuda8-0卸载\"><a href=\"#cuda8-0卸载\" class=\"headerlink\" title=\"cuda8.0卸载\"></a>cuda8.0卸载</h2><ol>\n<li>卸载</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apt autoremove cuda</span><br></pre></td></tr></table></figure>\n<ol start=\"2\">\n<li>清除残留文件</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd /usr/local/</span><br><span class=\"line\">rm -rf cuda-8.0/</span><br></pre></td></tr></table></figure>\n<h2 id=\"cuda9-0及对应cudnn安装\"><a href=\"#cuda9-0及对应cudnn安装\" class=\"headerlink\" title=\"cuda9.0及对应cudnn安装\"></a>cuda9.0及对应cudnn安装</h2><h3 id=\"cuda9-0安装\"><a href=\"#cuda9-0安装\" class=\"headerlink\" title=\"cuda9.0安装\"></a>cuda9.0安装</h3><p><a href=\"https://developer.nvidia.com/cuda-90-download-archive\" target=\"_blank\" rel=\"noopener\">cuda9.0官方网站</a></p>\n<ol>\n<li>运行压缩.run</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo sh cuda_9.0.176_384.81_linux.run</span><br></pre></td></tr></table></figure>\n<ul>\n<li>一般在不需要图形驱动（Grphics Driver）和 样例（cuda samples）</li>\n</ul>\n<p><img src=\"/2019/01/08/cuda安装/cuda0.png\" alt=\"image\"></p>\n<p><a href=\"https://developer.nvidia.com/cudnn\" target=\"_blank\" rel=\"noopener\">cudnn官方网站</a></p>\n<p>2.~/.bashrc配置</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">export CUDA_HOME=/usr/local/cuda</span><br><span class=\"line\">export LD_LIBRARY_PATH=$&#123;CUDA_HOME&#125;/lib64</span><br><span class=\"line\">export PATH=$&#123;CUDA_HOME&#125;/bin:$&#123;PATH&#125;</span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li>刷新使得配置生效</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">source ~/.bashrc</span><br></pre></td></tr></table></figure>\n<h3 id=\"cudnn安装\"><a href=\"#cudnn安装\" class=\"headerlink\" title=\"cudnn安装\"></a>cudnn安装</h3><p>本次版本是<strong>cuDNN v7.4.2 (Dec 14, 2018), for CUDA 9.0</strong>，选择<strong>cuDNN Library for Linux</strong>。</p>\n<ol>\n<li>解压cudnn-9.0-linux-x64-v7.4.2.24.tgz压缩包</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tar -zxvf cudnn-9.0-linux-x64-v7.4.2.24.tgz</span><br></pre></td></tr></table></figure>\n<p><img src=\"/2019/01/08/cuda安装/cuda1.png\" alt=\"image\"></p>\n<ol start=\"2\">\n<li>复制文件到cuda库下</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cp cuda/lib64/* /usr/local/cuda-9.0/lib64/</span><br><span class=\"line\">cp cuda/include/* /usr/local/cuda-9.0/include/</span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li>查看cudnn版本信息</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cat /usr/local/cuda/include/cudnn.h | grep CUDNN_MAJOR -A 2</span><br></pre></td></tr></table></figure>\n<h3 id=\"cuda切换\"><a href=\"#cuda切换\" class=\"headerlink\" title=\"cuda切换\"></a>cuda切换</h3><p>当一台服务器上既安装了cuda8.0和cuda9.0，使用ls命令查看/usr/local下的文件包含三个文件夹cuda、cuda8.0和cuda9.0。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ls -l /usr/local/</span><br></pre></td></tr></table></figure>\n<p><img src=\"/2019/01/08/cuda安装/cuda3.png\" alt=\"image\"></p>\n<ol>\n<li>可以看到，当前cuda文件夹链接到cuda-9.0,当需要切换到cuda8.0时，使用以下命令：</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">rm -rf /usr/local/cuda #删除之前创建的软链接</span><br><span class=\"line\">sudo ln -s /usr/local/cuda-8.0/ /usr/local/cuda</span><br><span class=\"line\">nvcc --version #查看当前 cuda 版本</span><br></pre></td></tr></table></figure>\n<p><a href=\"http://geyao1995.com/CUDA8_CUDA9/\" target=\"_blank\" rel=\"noopener\">参考博客：http://geyao1995.com/CUDA8_CUDA9/</a></p>"},{"title":"代理模式","date":"2019-04-08T08:01:31.000Z","_content":"\n代理是一种设计模式，提供了对目标对象的间接访问方式，即通过代理访问目标对象。代理模式的作用：控制和管理访问。\n<!-- more --> \n## 静态代理\n在程序运行前就已经存在对应的代理类，那么这种代理方式就称之为静态代理。由于这种代理方式下的代理类往往是程序员自己在Java代码中定义的，当我们需求发生变化的时候，代理类以及目标类都需要进行修改维护，不够灵活。但是静态代理也有优点，就是在不对目标对象进行修改的前提下就可以对目标对象进行功能扩展和拦截。\n下面举个简单的例子，在CS（客户端\\服务器）主从结构的网络架构中，一般服务器会对客户端发送而来的请求进行过滤和记录，这个时候就可以使用代理类来实现上述功能。\n1. 首先，我们定义服务端顶层接口：\n```\n /**\n  * 顶层接口，目标类和代理类都需要实现顶层接口\n  */\ninterface ServerInterface{\n    public void processRequest(String request);\n}\n```\n2. 其次，定义服务类：\n\n```\n /**\n  * 目标类\n  */\nclass Server implements ServerInterface{\n    @Override\n    public void processRequest(String request) {\n        System.out.println(\"process request\");\n    }\n}\n```\n3. 最后定义服务代理类，服务类和代理类都实现服务顶层接口：\n```\n/**\n * 代理类\n */\nclass ServerProxy implements ServerInterface{\n    ServerInterface serverInterface;\n\n    public ServerProxy(ServerInterface serverInterface) {\n        this.serverInterface = serverInterface;\n    }\n\n    /**\n        * 过滤来自客户端的不合理请求\n        * @param request\n        * @return\n        */\n    public boolean filter(String request){\n        System.out.println(\"filter request\");\n        return true;\n    }\n\n    /**\n        * 记录来自客户端的请求\n        */\n    public void logBefore(){\n        System.out.println(\"log before\");\n    }\n\n    /**\n        * 记录返回给客户端的结果\n        */\n    public void logReturn(){\n        System.out.println(\"log return\");\n    }\n\n    @Override\n    public void processRequest(String request) {\n        logBefore();\n        if(!filter(request)){\n            serverInterface.processRequest(request);\n        }\n        logReturn();\n    }\n}\n```\n从上面可以看出，当我们的需求改变的时候，比如说我们不仅需要过滤请求、日志记录，还需要进行客户端登录时，那么就需要在代理类中添加登录服务器的方法`logIn()`，并且给`processRequest`方法中添加登录方法，而实际情况中服务器中处理请求的方法`processRequest`成千上万，这个时候程序员就需要给一个个`processRequest`方法添加`logIn`操作，可以看到修改和维护代码代价过大，代码也不够简洁。\n\n## 动态代理\n### JDK原生动态代理\n动态代理中，代理类是在运行时通过Java中的反射机制动态生成的。有兴趣的可以去看看Java中`ProxyClassFactory`类以及`ProxyGenerator`类动态生成代理类的源码。\n\n对于应用程序员而言，主要使用`InvocationHandler`类以及`Proxy.newProxyInstance()`实现动态代理。我们还是以上述客户端/服务器网络架构为例。\n\n顶层的服务接口`ServerInterface`不变，目标类`Server`也不用改变，只用实现`InvocationHandler`接口如下：\n```\n/**\n * 日志记录类\n */\nclass Logger {\n    /**\n        * 记录来自客户端的请求\n        */\n    public void logBefore() {\n        System.out.println(\"log before\");\n    }\n\n    /**\n        * 记录返回给客户端的结果\n        */\n    public void logReturn() {\n        System.out.println(\"log return\");\n    }\n}\n\n/**\n * 动态代理\n */\nclass ServerDynamicProxy implements InvocationHandler {\n    Object target;\n    Object prozy;\n\n    public ServerDynamicProxy(Object target, Object prozy) {\n        this.target = target;\n        this.prozy = prozy;\n    }\n\n    /**\n    * 动态绑定，返回代理对象\n    *\n    * @return\n    */\n    public Object bind() {\n        return Proxy.newProxyInstance(target.getClass().getClassLoader()\n                , target.getClass().getInterfaces(), this);\n    }\n\n    @Override\n    public Object invoke(Object proxy, Method method, Object[] args) throws Throwable {\n        Class prozyClass = proxy.getClass();\n        Method beforeMethod = prozyClass.getMethod(\"logBefore\");\n        Method returnMethod = prozyClass.getMethod(\"logReturn\");\n\n        beforeMethod.invoke(prozy);\n        method.invoke(this.target, args);\n        returnMethod.invoke(prozy);\n\n        return null;\n    }\n}\n```\n以上就是动态代理的使用，当测试的时候只需要在主函数中调用`bind()`方法返回代理类就可以了，当然需要进行强制类型转换，从`Object`转换成目标类。  \n如果想看见动态代理生成的代理类，可以使用`System.getProperties().put(\"sun.misc.ProxyGenerator.saveGeneratedFiles\",\"true\"); `\n\n### CGLIB动态代理\nCGLIB(Code Generation Library)是一个基于ASM的字节码生成库，它允许在运行时对字节码进行修改和动态生成。CGLIB通过继承方式实现代理，所以当目标类没有实现接口时，就无法使用JDK代理，只能使用CGLIB实现动态代理。  \n示例代码如下：\n```\n/**\n * 目标类\n */\npublic class Server {\n\n    public void processRequest(String request) {\n        System.out.println(\"process request\");\n    }\n}\n\n/**\n * 代理类\n */\npublic class ServerMethodInterceptor implements MethodInterceptor {\n\n    private Object target;//业务类对象，供代理方法中进行真正的业务方法调用\n\n    public ServerMethodInterceptor(Object target) {\n        this.target = target;\n    }\n\n    //相当于JDK动态代理中的绑定\n    public Object getInstance() {\n        Enhancer enhancer = new Enhancer(); //创建加强器，用来创建动态代理类\n        enhancer.setSuperclass(this.target.getClass());  //为加强器指定要代理的业务类（即：为下面生成的代理类指定父类）\n        //设置回调：对于代理类上所有方法的调用，都会调用CallBack，而Callback则需要实现intercept()方法进行拦\n        enhancer.setCallback(this);\n        // 创建动态代理类对象并返回\n        return enhancer.create();\n    }\n\n    @Override\n    public Object intercept(Object o, Method method, Object[] objects, MethodProxy methodProxy) throws Throwable {\n        // log before\n        System.out.println(\"log before\");\n        Object result = methodProxy.invokeSuper(o,objects);\n        // log return\n        System.out.println(\"log return\");\n        return result;\n    }\n}\n\n```","source":"_posts/代理模式.md","raw":"---\ntitle: 代理模式\ndate: 2019-04-08 16:01:31\ntags: \n    - 动态代理\n    - 静态代理\n    - Java\ncategories: 设计模式\n---\n\n代理是一种设计模式，提供了对目标对象的间接访问方式，即通过代理访问目标对象。代理模式的作用：控制和管理访问。\n<!-- more --> \n## 静态代理\n在程序运行前就已经存在对应的代理类，那么这种代理方式就称之为静态代理。由于这种代理方式下的代理类往往是程序员自己在Java代码中定义的，当我们需求发生变化的时候，代理类以及目标类都需要进行修改维护，不够灵活。但是静态代理也有优点，就是在不对目标对象进行修改的前提下就可以对目标对象进行功能扩展和拦截。\n下面举个简单的例子，在CS（客户端\\服务器）主从结构的网络架构中，一般服务器会对客户端发送而来的请求进行过滤和记录，这个时候就可以使用代理类来实现上述功能。\n1. 首先，我们定义服务端顶层接口：\n```\n /**\n  * 顶层接口，目标类和代理类都需要实现顶层接口\n  */\ninterface ServerInterface{\n    public void processRequest(String request);\n}\n```\n2. 其次，定义服务类：\n\n```\n /**\n  * 目标类\n  */\nclass Server implements ServerInterface{\n    @Override\n    public void processRequest(String request) {\n        System.out.println(\"process request\");\n    }\n}\n```\n3. 最后定义服务代理类，服务类和代理类都实现服务顶层接口：\n```\n/**\n * 代理类\n */\nclass ServerProxy implements ServerInterface{\n    ServerInterface serverInterface;\n\n    public ServerProxy(ServerInterface serverInterface) {\n        this.serverInterface = serverInterface;\n    }\n\n    /**\n        * 过滤来自客户端的不合理请求\n        * @param request\n        * @return\n        */\n    public boolean filter(String request){\n        System.out.println(\"filter request\");\n        return true;\n    }\n\n    /**\n        * 记录来自客户端的请求\n        */\n    public void logBefore(){\n        System.out.println(\"log before\");\n    }\n\n    /**\n        * 记录返回给客户端的结果\n        */\n    public void logReturn(){\n        System.out.println(\"log return\");\n    }\n\n    @Override\n    public void processRequest(String request) {\n        logBefore();\n        if(!filter(request)){\n            serverInterface.processRequest(request);\n        }\n        logReturn();\n    }\n}\n```\n从上面可以看出，当我们的需求改变的时候，比如说我们不仅需要过滤请求、日志记录，还需要进行客户端登录时，那么就需要在代理类中添加登录服务器的方法`logIn()`，并且给`processRequest`方法中添加登录方法，而实际情况中服务器中处理请求的方法`processRequest`成千上万，这个时候程序员就需要给一个个`processRequest`方法添加`logIn`操作，可以看到修改和维护代码代价过大，代码也不够简洁。\n\n## 动态代理\n### JDK原生动态代理\n动态代理中，代理类是在运行时通过Java中的反射机制动态生成的。有兴趣的可以去看看Java中`ProxyClassFactory`类以及`ProxyGenerator`类动态生成代理类的源码。\n\n对于应用程序员而言，主要使用`InvocationHandler`类以及`Proxy.newProxyInstance()`实现动态代理。我们还是以上述客户端/服务器网络架构为例。\n\n顶层的服务接口`ServerInterface`不变，目标类`Server`也不用改变，只用实现`InvocationHandler`接口如下：\n```\n/**\n * 日志记录类\n */\nclass Logger {\n    /**\n        * 记录来自客户端的请求\n        */\n    public void logBefore() {\n        System.out.println(\"log before\");\n    }\n\n    /**\n        * 记录返回给客户端的结果\n        */\n    public void logReturn() {\n        System.out.println(\"log return\");\n    }\n}\n\n/**\n * 动态代理\n */\nclass ServerDynamicProxy implements InvocationHandler {\n    Object target;\n    Object prozy;\n\n    public ServerDynamicProxy(Object target, Object prozy) {\n        this.target = target;\n        this.prozy = prozy;\n    }\n\n    /**\n    * 动态绑定，返回代理对象\n    *\n    * @return\n    */\n    public Object bind() {\n        return Proxy.newProxyInstance(target.getClass().getClassLoader()\n                , target.getClass().getInterfaces(), this);\n    }\n\n    @Override\n    public Object invoke(Object proxy, Method method, Object[] args) throws Throwable {\n        Class prozyClass = proxy.getClass();\n        Method beforeMethod = prozyClass.getMethod(\"logBefore\");\n        Method returnMethod = prozyClass.getMethod(\"logReturn\");\n\n        beforeMethod.invoke(prozy);\n        method.invoke(this.target, args);\n        returnMethod.invoke(prozy);\n\n        return null;\n    }\n}\n```\n以上就是动态代理的使用，当测试的时候只需要在主函数中调用`bind()`方法返回代理类就可以了，当然需要进行强制类型转换，从`Object`转换成目标类。  \n如果想看见动态代理生成的代理类，可以使用`System.getProperties().put(\"sun.misc.ProxyGenerator.saveGeneratedFiles\",\"true\"); `\n\n### CGLIB动态代理\nCGLIB(Code Generation Library)是一个基于ASM的字节码生成库，它允许在运行时对字节码进行修改和动态生成。CGLIB通过继承方式实现代理，所以当目标类没有实现接口时，就无法使用JDK代理，只能使用CGLIB实现动态代理。  \n示例代码如下：\n```\n/**\n * 目标类\n */\npublic class Server {\n\n    public void processRequest(String request) {\n        System.out.println(\"process request\");\n    }\n}\n\n/**\n * 代理类\n */\npublic class ServerMethodInterceptor implements MethodInterceptor {\n\n    private Object target;//业务类对象，供代理方法中进行真正的业务方法调用\n\n    public ServerMethodInterceptor(Object target) {\n        this.target = target;\n    }\n\n    //相当于JDK动态代理中的绑定\n    public Object getInstance() {\n        Enhancer enhancer = new Enhancer(); //创建加强器，用来创建动态代理类\n        enhancer.setSuperclass(this.target.getClass());  //为加强器指定要代理的业务类（即：为下面生成的代理类指定父类）\n        //设置回调：对于代理类上所有方法的调用，都会调用CallBack，而Callback则需要实现intercept()方法进行拦\n        enhancer.setCallback(this);\n        // 创建动态代理类对象并返回\n        return enhancer.create();\n    }\n\n    @Override\n    public Object intercept(Object o, Method method, Object[] objects, MethodProxy methodProxy) throws Throwable {\n        // log before\n        System.out.println(\"log before\");\n        Object result = methodProxy.invokeSuper(o,objects);\n        // log return\n        System.out.println(\"log return\");\n        return result;\n    }\n}\n\n```","slug":"代理模式","published":1,"updated":"2019-04-08T10:55:16.262Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck0ozhix20015gkuw20epep3p","content":"<p>代理是一种设计模式，提供了对目标对象的间接访问方式，即通过代理访问目标对象。代理模式的作用：控制和管理访问。<br><a id=\"more\"></a> </p>\n<h2 id=\"静态代理\"><a href=\"#静态代理\" class=\"headerlink\" title=\"静态代理\"></a>静态代理</h2><p>在程序运行前就已经存在对应的代理类，那么这种代理方式就称之为静态代理。由于这种代理方式下的代理类往往是程序员自己在Java代码中定义的，当我们需求发生变化的时候，代理类以及目标类都需要进行修改维护，不够灵活。但是静态代理也有优点，就是在不对目标对象进行修改的前提下就可以对目标对象进行功能扩展和拦截。<br>下面举个简单的例子，在CS（客户端\\服务器）主从结构的网络架构中，一般服务器会对客户端发送而来的请求进行过滤和记录，这个时候就可以使用代理类来实现上述功能。</p>\n<ol>\n<li><p>首先，我们定义服务端顶层接口：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> /**</span><br><span class=\"line\">  * 顶层接口，目标类和代理类都需要实现顶层接口</span><br><span class=\"line\">  */</span><br><span class=\"line\">interface ServerInterface&#123;</span><br><span class=\"line\">    public void processRequest(String request);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>其次，定义服务类：</p>\n</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> /**</span><br><span class=\"line\">  * 目标类</span><br><span class=\"line\">  */</span><br><span class=\"line\">class Server implements ServerInterface&#123;</span><br><span class=\"line\">    @Override</span><br><span class=\"line\">    public void processRequest(String request) &#123;</span><br><span class=\"line\">        System.out.println(&quot;process request&quot;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li>最后定义服务代理类，服务类和代理类都实现服务顶层接口：<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/**</span><br><span class=\"line\"> * 代理类</span><br><span class=\"line\"> */</span><br><span class=\"line\">class ServerProxy implements ServerInterface&#123;</span><br><span class=\"line\">    ServerInterface serverInterface;</span><br><span class=\"line\"></span><br><span class=\"line\">    public ServerProxy(ServerInterface serverInterface) &#123;</span><br><span class=\"line\">        this.serverInterface = serverInterface;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    /**</span><br><span class=\"line\">        * 过滤来自客户端的不合理请求</span><br><span class=\"line\">        * @param request</span><br><span class=\"line\">        * @return</span><br><span class=\"line\">        */</span><br><span class=\"line\">    public boolean filter(String request)&#123;</span><br><span class=\"line\">        System.out.println(&quot;filter request&quot;);</span><br><span class=\"line\">        return true;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    /**</span><br><span class=\"line\">        * 记录来自客户端的请求</span><br><span class=\"line\">        */</span><br><span class=\"line\">    public void logBefore()&#123;</span><br><span class=\"line\">        System.out.println(&quot;log before&quot;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    /**</span><br><span class=\"line\">        * 记录返回给客户端的结果</span><br><span class=\"line\">        */</span><br><span class=\"line\">    public void logReturn()&#123;</span><br><span class=\"line\">        System.out.println(&quot;log return&quot;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    @Override</span><br><span class=\"line\">    public void processRequest(String request) &#123;</span><br><span class=\"line\">        logBefore();</span><br><span class=\"line\">        if(!filter(request))&#123;</span><br><span class=\"line\">            serverInterface.processRequest(request);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        logReturn();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>从上面可以看出，当我们的需求改变的时候，比如说我们不仅需要过滤请求、日志记录，还需要进行客户端登录时，那么就需要在代理类中添加登录服务器的方法<code>logIn()</code>，并且给<code>processRequest</code>方法中添加登录方法，而实际情况中服务器中处理请求的方法<code>processRequest</code>成千上万，这个时候程序员就需要给一个个<code>processRequest</code>方法添加<code>logIn</code>操作，可以看到修改和维护代码代价过大，代码也不够简洁。</p>\n<h2 id=\"动态代理\"><a href=\"#动态代理\" class=\"headerlink\" title=\"动态代理\"></a>动态代理</h2><h3 id=\"JDK原生动态代理\"><a href=\"#JDK原生动态代理\" class=\"headerlink\" title=\"JDK原生动态代理\"></a>JDK原生动态代理</h3><p>动态代理中，代理类是在运行时通过Java中的反射机制动态生成的。有兴趣的可以去看看Java中<code>ProxyClassFactory</code>类以及<code>ProxyGenerator</code>类动态生成代理类的源码。</p>\n<p>对于应用程序员而言，主要使用<code>InvocationHandler</code>类以及<code>Proxy.newProxyInstance()</code>实现动态代理。我们还是以上述客户端/服务器网络架构为例。</p>\n<p>顶层的服务接口<code>ServerInterface</code>不变，目标类<code>Server</code>也不用改变，只用实现<code>InvocationHandler</code>接口如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/**</span><br><span class=\"line\"> * 日志记录类</span><br><span class=\"line\"> */</span><br><span class=\"line\">class Logger &#123;</span><br><span class=\"line\">    /**</span><br><span class=\"line\">        * 记录来自客户端的请求</span><br><span class=\"line\">        */</span><br><span class=\"line\">    public void logBefore() &#123;</span><br><span class=\"line\">        System.out.println(&quot;log before&quot;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    /**</span><br><span class=\"line\">        * 记录返回给客户端的结果</span><br><span class=\"line\">        */</span><br><span class=\"line\">    public void logReturn() &#123;</span><br><span class=\"line\">        System.out.println(&quot;log return&quot;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">/**</span><br><span class=\"line\"> * 动态代理</span><br><span class=\"line\"> */</span><br><span class=\"line\">class ServerDynamicProxy implements InvocationHandler &#123;</span><br><span class=\"line\">    Object target;</span><br><span class=\"line\">    Object prozy;</span><br><span class=\"line\"></span><br><span class=\"line\">    public ServerDynamicProxy(Object target, Object prozy) &#123;</span><br><span class=\"line\">        this.target = target;</span><br><span class=\"line\">        this.prozy = prozy;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    /**</span><br><span class=\"line\">    * 动态绑定，返回代理对象</span><br><span class=\"line\">    *</span><br><span class=\"line\">    * @return</span><br><span class=\"line\">    */</span><br><span class=\"line\">    public Object bind() &#123;</span><br><span class=\"line\">        return Proxy.newProxyInstance(target.getClass().getClassLoader()</span><br><span class=\"line\">                , target.getClass().getInterfaces(), this);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    @Override</span><br><span class=\"line\">    public Object invoke(Object proxy, Method method, Object[] args) throws Throwable &#123;</span><br><span class=\"line\">        Class prozyClass = proxy.getClass();</span><br><span class=\"line\">        Method beforeMethod = prozyClass.getMethod(&quot;logBefore&quot;);</span><br><span class=\"line\">        Method returnMethod = prozyClass.getMethod(&quot;logReturn&quot;);</span><br><span class=\"line\"></span><br><span class=\"line\">        beforeMethod.invoke(prozy);</span><br><span class=\"line\">        method.invoke(this.target, args);</span><br><span class=\"line\">        returnMethod.invoke(prozy);</span><br><span class=\"line\"></span><br><span class=\"line\">        return null;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>以上就是动态代理的使用，当测试的时候只需要在主函数中调用<code>bind()</code>方法返回代理类就可以了，当然需要进行强制类型转换，从<code>Object</code>转换成目标类。<br>如果想看见动态代理生成的代理类，可以使用<code>System.getProperties().put(&quot;sun.misc.ProxyGenerator.saveGeneratedFiles&quot;,&quot;true&quot;);</code></p>\n<h3 id=\"CGLIB动态代理\"><a href=\"#CGLIB动态代理\" class=\"headerlink\" title=\"CGLIB动态代理\"></a>CGLIB动态代理</h3><p>CGLIB(Code Generation Library)是一个基于ASM的字节码生成库，它允许在运行时对字节码进行修改和动态生成。CGLIB通过继承方式实现代理，所以当目标类没有实现接口时，就无法使用JDK代理，只能使用CGLIB实现动态代理。<br>示例代码如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/**</span><br><span class=\"line\"> * 目标类</span><br><span class=\"line\"> */</span><br><span class=\"line\">public class Server &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    public void processRequest(String request) &#123;</span><br><span class=\"line\">        System.out.println(&quot;process request&quot;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">/**</span><br><span class=\"line\"> * 代理类</span><br><span class=\"line\"> */</span><br><span class=\"line\">public class ServerMethodInterceptor implements MethodInterceptor &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    private Object target;//业务类对象，供代理方法中进行真正的业务方法调用</span><br><span class=\"line\"></span><br><span class=\"line\">    public ServerMethodInterceptor(Object target) &#123;</span><br><span class=\"line\">        this.target = target;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    //相当于JDK动态代理中的绑定</span><br><span class=\"line\">    public Object getInstance() &#123;</span><br><span class=\"line\">        Enhancer enhancer = new Enhancer(); //创建加强器，用来创建动态代理类</span><br><span class=\"line\">        enhancer.setSuperclass(this.target.getClass());  //为加强器指定要代理的业务类（即：为下面生成的代理类指定父类）</span><br><span class=\"line\">        //设置回调：对于代理类上所有方法的调用，都会调用CallBack，而Callback则需要实现intercept()方法进行拦</span><br><span class=\"line\">        enhancer.setCallback(this);</span><br><span class=\"line\">        // 创建动态代理类对象并返回</span><br><span class=\"line\">        return enhancer.create();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    @Override</span><br><span class=\"line\">    public Object intercept(Object o, Method method, Object[] objects, MethodProxy methodProxy) throws Throwable &#123;</span><br><span class=\"line\">        // log before</span><br><span class=\"line\">        System.out.println(&quot;log before&quot;);</span><br><span class=\"line\">        Object result = methodProxy.invokeSuper(o,objects);</span><br><span class=\"line\">        // log return</span><br><span class=\"line\">        System.out.println(&quot;log return&quot;);</span><br><span class=\"line\">        return result;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n","site":{"data":{}},"excerpt":"<p>代理是一种设计模式，提供了对目标对象的间接访问方式，即通过代理访问目标对象。代理模式的作用：控制和管理访问。<br></p>","more":"<p></p>\n<h2 id=\"静态代理\"><a href=\"#静态代理\" class=\"headerlink\" title=\"静态代理\"></a>静态代理</h2><p>在程序运行前就已经存在对应的代理类，那么这种代理方式就称之为静态代理。由于这种代理方式下的代理类往往是程序员自己在Java代码中定义的，当我们需求发生变化的时候，代理类以及目标类都需要进行修改维护，不够灵活。但是静态代理也有优点，就是在不对目标对象进行修改的前提下就可以对目标对象进行功能扩展和拦截。<br>下面举个简单的例子，在CS（客户端\\服务器）主从结构的网络架构中，一般服务器会对客户端发送而来的请求进行过滤和记录，这个时候就可以使用代理类来实现上述功能。</p>\n<ol>\n<li><p>首先，我们定义服务端顶层接口：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> /**</span><br><span class=\"line\">  * 顶层接口，目标类和代理类都需要实现顶层接口</span><br><span class=\"line\">  */</span><br><span class=\"line\">interface ServerInterface&#123;</span><br><span class=\"line\">    public void processRequest(String request);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>其次，定义服务类：</p>\n</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> /**</span><br><span class=\"line\">  * 目标类</span><br><span class=\"line\">  */</span><br><span class=\"line\">class Server implements ServerInterface&#123;</span><br><span class=\"line\">    @Override</span><br><span class=\"line\">    public void processRequest(String request) &#123;</span><br><span class=\"line\">        System.out.println(&quot;process request&quot;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ol start=\"3\">\n<li>最后定义服务代理类，服务类和代理类都实现服务顶层接口：<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/**</span><br><span class=\"line\"> * 代理类</span><br><span class=\"line\"> */</span><br><span class=\"line\">class ServerProxy implements ServerInterface&#123;</span><br><span class=\"line\">    ServerInterface serverInterface;</span><br><span class=\"line\"></span><br><span class=\"line\">    public ServerProxy(ServerInterface serverInterface) &#123;</span><br><span class=\"line\">        this.serverInterface = serverInterface;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    /**</span><br><span class=\"line\">        * 过滤来自客户端的不合理请求</span><br><span class=\"line\">        * @param request</span><br><span class=\"line\">        * @return</span><br><span class=\"line\">        */</span><br><span class=\"line\">    public boolean filter(String request)&#123;</span><br><span class=\"line\">        System.out.println(&quot;filter request&quot;);</span><br><span class=\"line\">        return true;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    /**</span><br><span class=\"line\">        * 记录来自客户端的请求</span><br><span class=\"line\">        */</span><br><span class=\"line\">    public void logBefore()&#123;</span><br><span class=\"line\">        System.out.println(&quot;log before&quot;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    /**</span><br><span class=\"line\">        * 记录返回给客户端的结果</span><br><span class=\"line\">        */</span><br><span class=\"line\">    public void logReturn()&#123;</span><br><span class=\"line\">        System.out.println(&quot;log return&quot;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    @Override</span><br><span class=\"line\">    public void processRequest(String request) &#123;</span><br><span class=\"line\">        logBefore();</span><br><span class=\"line\">        if(!filter(request))&#123;</span><br><span class=\"line\">            serverInterface.processRequest(request);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        logReturn();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p>从上面可以看出，当我们的需求改变的时候，比如说我们不仅需要过滤请求、日志记录，还需要进行客户端登录时，那么就需要在代理类中添加登录服务器的方法<code>logIn()</code>，并且给<code>processRequest</code>方法中添加登录方法，而实际情况中服务器中处理请求的方法<code>processRequest</code>成千上万，这个时候程序员就需要给一个个<code>processRequest</code>方法添加<code>logIn</code>操作，可以看到修改和维护代码代价过大，代码也不够简洁。</p>\n<h2 id=\"动态代理\"><a href=\"#动态代理\" class=\"headerlink\" title=\"动态代理\"></a>动态代理</h2><h3 id=\"JDK原生动态代理\"><a href=\"#JDK原生动态代理\" class=\"headerlink\" title=\"JDK原生动态代理\"></a>JDK原生动态代理</h3><p>动态代理中，代理类是在运行时通过Java中的反射机制动态生成的。有兴趣的可以去看看Java中<code>ProxyClassFactory</code>类以及<code>ProxyGenerator</code>类动态生成代理类的源码。</p>\n<p>对于应用程序员而言，主要使用<code>InvocationHandler</code>类以及<code>Proxy.newProxyInstance()</code>实现动态代理。我们还是以上述客户端/服务器网络架构为例。</p>\n<p>顶层的服务接口<code>ServerInterface</code>不变，目标类<code>Server</code>也不用改变，只用实现<code>InvocationHandler</code>接口如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/**</span><br><span class=\"line\"> * 日志记录类</span><br><span class=\"line\"> */</span><br><span class=\"line\">class Logger &#123;</span><br><span class=\"line\">    /**</span><br><span class=\"line\">        * 记录来自客户端的请求</span><br><span class=\"line\">        */</span><br><span class=\"line\">    public void logBefore() &#123;</span><br><span class=\"line\">        System.out.println(&quot;log before&quot;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    /**</span><br><span class=\"line\">        * 记录返回给客户端的结果</span><br><span class=\"line\">        */</span><br><span class=\"line\">    public void logReturn() &#123;</span><br><span class=\"line\">        System.out.println(&quot;log return&quot;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">/**</span><br><span class=\"line\"> * 动态代理</span><br><span class=\"line\"> */</span><br><span class=\"line\">class ServerDynamicProxy implements InvocationHandler &#123;</span><br><span class=\"line\">    Object target;</span><br><span class=\"line\">    Object prozy;</span><br><span class=\"line\"></span><br><span class=\"line\">    public ServerDynamicProxy(Object target, Object prozy) &#123;</span><br><span class=\"line\">        this.target = target;</span><br><span class=\"line\">        this.prozy = prozy;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    /**</span><br><span class=\"line\">    * 动态绑定，返回代理对象</span><br><span class=\"line\">    *</span><br><span class=\"line\">    * @return</span><br><span class=\"line\">    */</span><br><span class=\"line\">    public Object bind() &#123;</span><br><span class=\"line\">        return Proxy.newProxyInstance(target.getClass().getClassLoader()</span><br><span class=\"line\">                , target.getClass().getInterfaces(), this);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    @Override</span><br><span class=\"line\">    public Object invoke(Object proxy, Method method, Object[] args) throws Throwable &#123;</span><br><span class=\"line\">        Class prozyClass = proxy.getClass();</span><br><span class=\"line\">        Method beforeMethod = prozyClass.getMethod(&quot;logBefore&quot;);</span><br><span class=\"line\">        Method returnMethod = prozyClass.getMethod(&quot;logReturn&quot;);</span><br><span class=\"line\"></span><br><span class=\"line\">        beforeMethod.invoke(prozy);</span><br><span class=\"line\">        method.invoke(this.target, args);</span><br><span class=\"line\">        returnMethod.invoke(prozy);</span><br><span class=\"line\"></span><br><span class=\"line\">        return null;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>以上就是动态代理的使用，当测试的时候只需要在主函数中调用<code>bind()</code>方法返回代理类就可以了，当然需要进行强制类型转换，从<code>Object</code>转换成目标类。<br>如果想看见动态代理生成的代理类，可以使用<code>System.getProperties().put(&quot;sun.misc.ProxyGenerator.saveGeneratedFiles&quot;,&quot;true&quot;);</code></p>\n<h3 id=\"CGLIB动态代理\"><a href=\"#CGLIB动态代理\" class=\"headerlink\" title=\"CGLIB动态代理\"></a>CGLIB动态代理</h3><p>CGLIB(Code Generation Library)是一个基于ASM的字节码生成库，它允许在运行时对字节码进行修改和动态生成。CGLIB通过继承方式实现代理，所以当目标类没有实现接口时，就无法使用JDK代理，只能使用CGLIB实现动态代理。<br>示例代码如下：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/**</span><br><span class=\"line\"> * 目标类</span><br><span class=\"line\"> */</span><br><span class=\"line\">public class Server &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    public void processRequest(String request) &#123;</span><br><span class=\"line\">        System.out.println(&quot;process request&quot;);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">/**</span><br><span class=\"line\"> * 代理类</span><br><span class=\"line\"> */</span><br><span class=\"line\">public class ServerMethodInterceptor implements MethodInterceptor &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    private Object target;//业务类对象，供代理方法中进行真正的业务方法调用</span><br><span class=\"line\"></span><br><span class=\"line\">    public ServerMethodInterceptor(Object target) &#123;</span><br><span class=\"line\">        this.target = target;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    //相当于JDK动态代理中的绑定</span><br><span class=\"line\">    public Object getInstance() &#123;</span><br><span class=\"line\">        Enhancer enhancer = new Enhancer(); //创建加强器，用来创建动态代理类</span><br><span class=\"line\">        enhancer.setSuperclass(this.target.getClass());  //为加强器指定要代理的业务类（即：为下面生成的代理类指定父类）</span><br><span class=\"line\">        //设置回调：对于代理类上所有方法的调用，都会调用CallBack，而Callback则需要实现intercept()方法进行拦</span><br><span class=\"line\">        enhancer.setCallback(this);</span><br><span class=\"line\">        // 创建动态代理类对象并返回</span><br><span class=\"line\">        return enhancer.create();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    @Override</span><br><span class=\"line\">    public Object intercept(Object o, Method method, Object[] objects, MethodProxy methodProxy) throws Throwable &#123;</span><br><span class=\"line\">        // log before</span><br><span class=\"line\">        System.out.println(&quot;log before&quot;);</span><br><span class=\"line\">        Object result = methodProxy.invokeSuper(o,objects);</span><br><span class=\"line\">        // log return</span><br><span class=\"line\">        System.out.println(&quot;log return&quot;);</span><br><span class=\"line\">        return result;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>"},{"title":"图片服务器搭建","date":"2019-01-14T09:17:23.000Z","_content":"\n# 图片服务器搭建\n\n**环境**：window server 2016 Datacenter\n\n1. 首先下载`nginx`软件包，我下在的版本是`nginx-1.15.8`，下载链接和英文安装教程如下:\n\n- [nginx下载地址](http://nginx.org/en/download.html) \n- [nginx英文安装教程](http://nginx.org/en/docs/windows.html) \n<!-- more --> \n2. 解压`nginx-1.15.8.zip`，目录结构如下图所示：  \n\n![image](图片服务器搭建/1.png)\n\n3. 运行`nginx.exe`,并查看通过命令查看运行状态，如下所示：  \n\n![image](图片服务器搭建/2.png)\n\n如果没有运行成功，可以通过打开`logs\\error.log`查看错误记录。\n\n4. 打开浏览器，输入`localhost`测试是否成功，如下图所示：\n\n![image](图片服务器搭建/3.png)\n\n5. 搭建图片服务器\n\n首先打开`conf`目录下的`nginx.conf`配置文件，修改如下：\n\n![image](图片服务器搭建/4.png)\n\n6. 重新启动`nginx`，一些命令如下：\n\n\n```\nnginx -s stop\t   fast shutdown\nnginx -s quit\t   graceful shutdown\nnginx -s reload\t   changing configuration, starting new worker processes with a new configuration, graceful shutdown of old worker processes\nnginx -s reopen\t   re-opening log files\n```\n\n7. 此时在`images`文件夹下放一张随意图片（我放了一张`nginx`网站的截图），打开浏览器，输入链接`http://47.95.145.72:8090/1.png`，就可以看到我们的图片，如下所示：\n\n![image](图片服务器搭建/5.png)\n\n**到这里，图片服务器就搭建完成了！**","source":"_posts/图片服务器搭建.md","raw":"---\ntitle: 图片服务器搭建\ndate: 2019-01-14 17:17:23\ntags: \n    - nginx\ncategories: 工程\n---\n\n# 图片服务器搭建\n\n**环境**：window server 2016 Datacenter\n\n1. 首先下载`nginx`软件包，我下在的版本是`nginx-1.15.8`，下载链接和英文安装教程如下:\n\n- [nginx下载地址](http://nginx.org/en/download.html) \n- [nginx英文安装教程](http://nginx.org/en/docs/windows.html) \n<!-- more --> \n2. 解压`nginx-1.15.8.zip`，目录结构如下图所示：  \n\n![image](图片服务器搭建/1.png)\n\n3. 运行`nginx.exe`,并查看通过命令查看运行状态，如下所示：  \n\n![image](图片服务器搭建/2.png)\n\n如果没有运行成功，可以通过打开`logs\\error.log`查看错误记录。\n\n4. 打开浏览器，输入`localhost`测试是否成功，如下图所示：\n\n![image](图片服务器搭建/3.png)\n\n5. 搭建图片服务器\n\n首先打开`conf`目录下的`nginx.conf`配置文件，修改如下：\n\n![image](图片服务器搭建/4.png)\n\n6. 重新启动`nginx`，一些命令如下：\n\n\n```\nnginx -s stop\t   fast shutdown\nnginx -s quit\t   graceful shutdown\nnginx -s reload\t   changing configuration, starting new worker processes with a new configuration, graceful shutdown of old worker processes\nnginx -s reopen\t   re-opening log files\n```\n\n7. 此时在`images`文件夹下放一张随意图片（我放了一张`nginx`网站的截图），打开浏览器，输入链接`http://47.95.145.72:8090/1.png`，就可以看到我们的图片，如下所示：\n\n![image](图片服务器搭建/5.png)\n\n**到这里，图片服务器就搭建完成了！**","slug":"图片服务器搭建","published":1,"updated":"2019-01-18T04:40:31.345Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck0ozhix50018gkuwlfy22wjo","content":"<h1 id=\"图片服务器搭建\"><a href=\"#图片服务器搭建\" class=\"headerlink\" title=\"图片服务器搭建\"></a>图片服务器搭建</h1><p><strong>环境</strong>：window server 2016 Datacenter</p>\n<ol>\n<li>首先下载<code>nginx</code>软件包，我下在的版本是<code>nginx-1.15.8</code>，下载链接和英文安装教程如下:</li>\n</ol>\n<ul>\n<li><a href=\"http://nginx.org/en/download.html\" target=\"_blank\" rel=\"noopener\">nginx下载地址</a> </li>\n<li><a href=\"http://nginx.org/en/docs/windows.html\" target=\"_blank\" rel=\"noopener\">nginx英文安装教程</a> <a id=\"more\"></a> </li>\n</ul>\n<ol start=\"2\">\n<li>解压<code>nginx-1.15.8.zip</code>，目录结构如下图所示：  </li>\n</ol>\n<p><img src=\"/2019/01/14/图片服务器搭建/1.png\" alt=\"image\"></p>\n<ol start=\"3\">\n<li>运行<code>nginx.exe</code>,并查看通过命令查看运行状态，如下所示：  </li>\n</ol>\n<p><img src=\"/2019/01/14/图片服务器搭建/2.png\" alt=\"image\"></p>\n<p>如果没有运行成功，可以通过打开<code>logs\\error.log</code>查看错误记录。</p>\n<ol start=\"4\">\n<li>打开浏览器，输入<code>localhost</code>测试是否成功，如下图所示：</li>\n</ol>\n<p><img src=\"/2019/01/14/图片服务器搭建/3.png\" alt=\"image\"></p>\n<ol start=\"5\">\n<li>搭建图片服务器</li>\n</ol>\n<p>首先打开<code>conf</code>目录下的<code>nginx.conf</code>配置文件，修改如下：</p>\n<p><img src=\"/2019/01/14/图片服务器搭建/4.png\" alt=\"image\"></p>\n<ol start=\"6\">\n<li>重新启动<code>nginx</code>，一些命令如下：</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nginx -s stop\t   fast shutdown</span><br><span class=\"line\">nginx -s quit\t   graceful shutdown</span><br><span class=\"line\">nginx -s reload\t   changing configuration, starting new worker processes with a new configuration, graceful shutdown of old worker processes</span><br><span class=\"line\">nginx -s reopen\t   re-opening log files</span><br></pre></td></tr></table></figure>\n<ol start=\"7\">\n<li>此时在<code>images</code>文件夹下放一张随意图片（我放了一张<code>nginx</code>网站的截图），打开浏览器，输入链接<code>http://47.95.145.72:8090/1.png</code>，就可以看到我们的图片，如下所示：</li>\n</ol>\n<p><img src=\"/2019/01/14/图片服务器搭建/5.png\" alt=\"image\"></p>\n<p><strong>到这里，图片服务器就搭建完成了！</strong></p>\n","site":{"data":{}},"excerpt":"<h1 id=\"图片服务器搭建\"><a href=\"#图片服务器搭建\" class=\"headerlink\" title=\"图片服务器搭建\"></a>图片服务器搭建</h1><p><strong>环境</strong>：window server 2016 Datacenter</p>\n<ol>\n<li>首先下载<code>nginx</code>软件包，我下在的版本是<code>nginx-1.15.8</code>，下载链接和英文安装教程如下:</li>\n</ol>\n<ul>\n<li><a href=\"http://nginx.org/en/download.html\" target=\"_blank\" rel=\"noopener\">nginx下载地址</a> </li>\n<li><a href=\"http://nginx.org/en/docs/windows.html\" target=\"_blank\" rel=\"noopener\">nginx英文安装教程</a></li></ul>","more":"\n\n<ol start=\"2\">\n<li>解压<code>nginx-1.15.8.zip</code>，目录结构如下图所示：  </li>\n</ol>\n<p><img src=\"/2019/01/14/图片服务器搭建/1.png\" alt=\"image\"></p>\n<ol start=\"3\">\n<li>运行<code>nginx.exe</code>,并查看通过命令查看运行状态，如下所示：  </li>\n</ol>\n<p><img src=\"/2019/01/14/图片服务器搭建/2.png\" alt=\"image\"></p>\n<p>如果没有运行成功，可以通过打开<code>logs\\error.log</code>查看错误记录。</p>\n<ol start=\"4\">\n<li>打开浏览器，输入<code>localhost</code>测试是否成功，如下图所示：</li>\n</ol>\n<p><img src=\"/2019/01/14/图片服务器搭建/3.png\" alt=\"image\"></p>\n<ol start=\"5\">\n<li>搭建图片服务器</li>\n</ol>\n<p>首先打开<code>conf</code>目录下的<code>nginx.conf</code>配置文件，修改如下：</p>\n<p><img src=\"/2019/01/14/图片服务器搭建/4.png\" alt=\"image\"></p>\n<ol start=\"6\">\n<li>重新启动<code>nginx</code>，一些命令如下：</li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nginx -s stop\t   fast shutdown</span><br><span class=\"line\">nginx -s quit\t   graceful shutdown</span><br><span class=\"line\">nginx -s reload\t   changing configuration, starting new worker processes with a new configuration, graceful shutdown of old worker processes</span><br><span class=\"line\">nginx -s reopen\t   re-opening log files</span><br></pre></td></tr></table></figure>\n<ol start=\"7\">\n<li>此时在<code>images</code>文件夹下放一张随意图片（我放了一张<code>nginx</code>网站的截图），打开浏览器，输入链接<code>http://47.95.145.72:8090/1.png</code>，就可以看到我们的图片，如下所示：</li>\n</ol>\n<p><img src=\"/2019/01/14/图片服务器搭建/5.png\" alt=\"image\"></p>\n<p><strong>到这里，图片服务器就搭建完成了！</strong></p>"},{"title":"句子分块","date":"2019-04-19T02:52:03.000Z","_content":"\n\n## 句子分块\n\n分块也称为浅层分析，它基本上是识别句子部分和短语(如名词短语)。 词性标注告诉你单词是名词，动词，形容词等，但它并没有给你任何关于句子中句子或短语结构的线索。有时除了单词的词性，自然语言处理任务需要获取更多信息，这是就需要对句子进行解析，从中获得完整的解析树。\n<!-- more --> \n[PyRATA](https://github.com/nicolashernandez/PyRATA)\n\n[Python nltk.RegexpParser() Examples](https://www.programcreek.com/python/example/91255/nltk.RegexpParser)\n\n```\ndef prepareForNLP(text):\n    sentences = nltk.sent_tokenize(text)\n    sentences = [nltk.word_tokenize(sent) for sent in sentences]\n    sentences = [nltk.pos_tag(sent) for sent in sentences]\n    return sentences\n\n\ndef chunk(sentence):\n    chunkToExtract = \"\"\"\n\tNP: {<NNP>*}\n\t\t{<DT>?<JJ>?<NNS>}\n\t\t{<NN><NN>}\"\"\"\n    grammar = r\"\"\"\n     NP: {<DT|JJ|NN.*>+}          # Chunk sequences of DT, JJ, NN\n     PP: {<IN><NP>}               # Chunk prepositions followed by NP\n     VP: {<VB.*><NP|PP|CLAUSE>+} # Chunk verbs and their arguments\n     CLAUSE: {<NP><VP>}           # Chunk NP, VP\n     }<[\\.VI].*>+{       # chink any verbs, prepositions or periods\n     \"\"\"\n    parser = nltk.RegexpParser(grammar)\n    result = parser.parse(sentence)\n    print \"result.label():\", result.label()\n    for subtree in result.subtrees():\n        t = subtree\n        t = ' '.join(word for word, pos in t.leaves())\n        print(t)\n\nif __name__ == '__main__':\n    example_sent = \"A man with a red helmet stands on a small moped on a dirt road .\".lower()\n    sentences = prepareForNLP(example_sent)\n    for sentence in sentences:\n        chunk(sentence)\n\n```\n\n输出：\n```\na man with a red helmet stands on a small moped on a dirt road .\na man\nwith a red helmet\na red helmet\nstands on a small moped on a dirt road\non a small moped\na small moped\non a dirt road\na dirt road\n```\n\n## 相关链接\n\n### 名词短语的分块：\n\n[NP Chunking (State of the art)](https://aclweb.org/aclwiki/NP_Chunking_(State_of_the_art))\n\n### 词性标记集\n\n\n[英语标记集](https://www.ibm.com/support/knowledgecenter/zh/SS5RWK_3.5.0/com.ibm.discovery.es.ta.doc/iiysspostagset.htm)","source":"_posts/句子分块.md","raw":"---\ntitle: 句子分块\ndate: 2019-04-19 10:52:03\ntags:\n    - 自然语言处理\n    - chunk\n    - NLTK\ncategories: 科研\n---\n\n\n## 句子分块\n\n分块也称为浅层分析，它基本上是识别句子部分和短语(如名词短语)。 词性标注告诉你单词是名词，动词，形容词等，但它并没有给你任何关于句子中句子或短语结构的线索。有时除了单词的词性，自然语言处理任务需要获取更多信息，这是就需要对句子进行解析，从中获得完整的解析树。\n<!-- more --> \n[PyRATA](https://github.com/nicolashernandez/PyRATA)\n\n[Python nltk.RegexpParser() Examples](https://www.programcreek.com/python/example/91255/nltk.RegexpParser)\n\n```\ndef prepareForNLP(text):\n    sentences = nltk.sent_tokenize(text)\n    sentences = [nltk.word_tokenize(sent) for sent in sentences]\n    sentences = [nltk.pos_tag(sent) for sent in sentences]\n    return sentences\n\n\ndef chunk(sentence):\n    chunkToExtract = \"\"\"\n\tNP: {<NNP>*}\n\t\t{<DT>?<JJ>?<NNS>}\n\t\t{<NN><NN>}\"\"\"\n    grammar = r\"\"\"\n     NP: {<DT|JJ|NN.*>+}          # Chunk sequences of DT, JJ, NN\n     PP: {<IN><NP>}               # Chunk prepositions followed by NP\n     VP: {<VB.*><NP|PP|CLAUSE>+} # Chunk verbs and their arguments\n     CLAUSE: {<NP><VP>}           # Chunk NP, VP\n     }<[\\.VI].*>+{       # chink any verbs, prepositions or periods\n     \"\"\"\n    parser = nltk.RegexpParser(grammar)\n    result = parser.parse(sentence)\n    print \"result.label():\", result.label()\n    for subtree in result.subtrees():\n        t = subtree\n        t = ' '.join(word for word, pos in t.leaves())\n        print(t)\n\nif __name__ == '__main__':\n    example_sent = \"A man with a red helmet stands on a small moped on a dirt road .\".lower()\n    sentences = prepareForNLP(example_sent)\n    for sentence in sentences:\n        chunk(sentence)\n\n```\n\n输出：\n```\na man with a red helmet stands on a small moped on a dirt road .\na man\nwith a red helmet\na red helmet\nstands on a small moped on a dirt road\non a small moped\na small moped\non a dirt road\na dirt road\n```\n\n## 相关链接\n\n### 名词短语的分块：\n\n[NP Chunking (State of the art)](https://aclweb.org/aclwiki/NP_Chunking_(State_of_the_art))\n\n### 词性标记集\n\n\n[英语标记集](https://www.ibm.com/support/knowledgecenter/zh/SS5RWK_3.5.0/com.ibm.discovery.es.ta.doc/iiysspostagset.htm)","slug":"句子分块","published":1,"updated":"2019-05-05T09:11:44.218Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck0ozhix6001bgkuwhsjmfdur","content":"<h2 id=\"句子分块\"><a href=\"#句子分块\" class=\"headerlink\" title=\"句子分块\"></a>句子分块</h2><p>分块也称为浅层分析，它基本上是识别句子部分和短语(如名词短语)。 词性标注告诉你单词是名词，动词，形容词等，但它并没有给你任何关于句子中句子或短语结构的线索。有时除了单词的词性，自然语言处理任务需要获取更多信息，这是就需要对句子进行解析，从中获得完整的解析树。<br><a id=\"more\"></a><br><a href=\"https://github.com/nicolashernandez/PyRATA\" target=\"_blank\" rel=\"noopener\">PyRATA</a></p>\n<p><a href=\"https://www.programcreek.com/python/example/91255/nltk.RegexpParser\" target=\"_blank\" rel=\"noopener\">Python nltk.RegexpParser() Examples</a></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">def prepareForNLP(text):</span><br><span class=\"line\">    sentences = nltk.sent_tokenize(text)</span><br><span class=\"line\">    sentences = [nltk.word_tokenize(sent) for sent in sentences]</span><br><span class=\"line\">    sentences = [nltk.pos_tag(sent) for sent in sentences]</span><br><span class=\"line\">    return sentences</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">def chunk(sentence):</span><br><span class=\"line\">    chunkToExtract = &quot;&quot;&quot;</span><br><span class=\"line\">\tNP: &#123;&lt;NNP&gt;*&#125;</span><br><span class=\"line\">\t\t&#123;&lt;DT&gt;?&lt;JJ&gt;?&lt;NNS&gt;&#125;</span><br><span class=\"line\">\t\t&#123;&lt;NN&gt;&lt;NN&gt;&#125;&quot;&quot;&quot;</span><br><span class=\"line\">    grammar = r&quot;&quot;&quot;</span><br><span class=\"line\">     NP: &#123;&lt;DT|JJ|NN.*&gt;+&#125;          # Chunk sequences of DT, JJ, NN</span><br><span class=\"line\">     PP: &#123;&lt;IN&gt;&lt;NP&gt;&#125;               # Chunk prepositions followed by NP</span><br><span class=\"line\">     VP: &#123;&lt;VB.*&gt;&lt;NP|PP|CLAUSE&gt;+&#125; # Chunk verbs and their arguments</span><br><span class=\"line\">     CLAUSE: &#123;&lt;NP&gt;&lt;VP&gt;&#125;           # Chunk NP, VP</span><br><span class=\"line\">     &#125;&lt;[\\.VI].*&gt;+&#123;       # chink any verbs, prepositions or periods</span><br><span class=\"line\">     &quot;&quot;&quot;</span><br><span class=\"line\">    parser = nltk.RegexpParser(grammar)</span><br><span class=\"line\">    result = parser.parse(sentence)</span><br><span class=\"line\">    print &quot;result.label():&quot;, result.label()</span><br><span class=\"line\">    for subtree in result.subtrees():</span><br><span class=\"line\">        t = subtree</span><br><span class=\"line\">        t = &apos; &apos;.join(word for word, pos in t.leaves())</span><br><span class=\"line\">        print(t)</span><br><span class=\"line\"></span><br><span class=\"line\">if __name__ == &apos;__main__&apos;:</span><br><span class=\"line\">    example_sent = &quot;A man with a red helmet stands on a small moped on a dirt road .&quot;.lower()</span><br><span class=\"line\">    sentences = prepareForNLP(example_sent)</span><br><span class=\"line\">    for sentence in sentences:</span><br><span class=\"line\">        chunk(sentence)</span><br></pre></td></tr></table></figure>\n<p>输出：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a man with a red helmet stands on a small moped on a dirt road .</span><br><span class=\"line\">a man</span><br><span class=\"line\">with a red helmet</span><br><span class=\"line\">a red helmet</span><br><span class=\"line\">stands on a small moped on a dirt road</span><br><span class=\"line\">on a small moped</span><br><span class=\"line\">a small moped</span><br><span class=\"line\">on a dirt road</span><br><span class=\"line\">a dirt road</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"相关链接\"><a href=\"#相关链接\" class=\"headerlink\" title=\"相关链接\"></a>相关链接</h2><h3 id=\"名词短语的分块：\"><a href=\"#名词短语的分块：\" class=\"headerlink\" title=\"名词短语的分块：\"></a>名词短语的分块：</h3><p><a href=\"https://aclweb.org/aclwiki/NP_Chunking_(State_of_the_art\" target=\"_blank\" rel=\"noopener\">NP Chunking (State of the art)</a>)</p>\n<h3 id=\"词性标记集\"><a href=\"#词性标记集\" class=\"headerlink\" title=\"词性标记集\"></a>词性标记集</h3><p><a href=\"https://www.ibm.com/support/knowledgecenter/zh/SS5RWK_3.5.0/com.ibm.discovery.es.ta.doc/iiysspostagset.htm\" target=\"_blank\" rel=\"noopener\">英语标记集</a></p>\n","site":{"data":{}},"excerpt":"<h2 id=\"句子分块\"><a href=\"#句子分块\" class=\"headerlink\" title=\"句子分块\"></a>句子分块</h2><p>分块也称为浅层分析，它基本上是识别句子部分和短语(如名词短语)。 词性标注告诉你单词是名词，动词，形容词等，但它并没有给你任何关于句子中句子或短语结构的线索。有时除了单词的词性，自然语言处理任务需要获取更多信息，这是就需要对句子进行解析，从中获得完整的解析树。<br></p>","more":"<br><a href=\"https://github.com/nicolashernandez/PyRATA\" target=\"_blank\" rel=\"noopener\">PyRATA</a><p></p>\n<p><a href=\"https://www.programcreek.com/python/example/91255/nltk.RegexpParser\" target=\"_blank\" rel=\"noopener\">Python nltk.RegexpParser() Examples</a></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">def prepareForNLP(text):</span><br><span class=\"line\">    sentences = nltk.sent_tokenize(text)</span><br><span class=\"line\">    sentences = [nltk.word_tokenize(sent) for sent in sentences]</span><br><span class=\"line\">    sentences = [nltk.pos_tag(sent) for sent in sentences]</span><br><span class=\"line\">    return sentences</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">def chunk(sentence):</span><br><span class=\"line\">    chunkToExtract = &quot;&quot;&quot;</span><br><span class=\"line\">\tNP: &#123;&lt;NNP&gt;*&#125;</span><br><span class=\"line\">\t\t&#123;&lt;DT&gt;?&lt;JJ&gt;?&lt;NNS&gt;&#125;</span><br><span class=\"line\">\t\t&#123;&lt;NN&gt;&lt;NN&gt;&#125;&quot;&quot;&quot;</span><br><span class=\"line\">    grammar = r&quot;&quot;&quot;</span><br><span class=\"line\">     NP: &#123;&lt;DT|JJ|NN.*&gt;+&#125;          # Chunk sequences of DT, JJ, NN</span><br><span class=\"line\">     PP: &#123;&lt;IN&gt;&lt;NP&gt;&#125;               # Chunk prepositions followed by NP</span><br><span class=\"line\">     VP: &#123;&lt;VB.*&gt;&lt;NP|PP|CLAUSE&gt;+&#125; # Chunk verbs and their arguments</span><br><span class=\"line\">     CLAUSE: &#123;&lt;NP&gt;&lt;VP&gt;&#125;           # Chunk NP, VP</span><br><span class=\"line\">     &#125;&lt;[\\.VI].*&gt;+&#123;       # chink any verbs, prepositions or periods</span><br><span class=\"line\">     &quot;&quot;&quot;</span><br><span class=\"line\">    parser = nltk.RegexpParser(grammar)</span><br><span class=\"line\">    result = parser.parse(sentence)</span><br><span class=\"line\">    print &quot;result.label():&quot;, result.label()</span><br><span class=\"line\">    for subtree in result.subtrees():</span><br><span class=\"line\">        t = subtree</span><br><span class=\"line\">        t = &apos; &apos;.join(word for word, pos in t.leaves())</span><br><span class=\"line\">        print(t)</span><br><span class=\"line\"></span><br><span class=\"line\">if __name__ == &apos;__main__&apos;:</span><br><span class=\"line\">    example_sent = &quot;A man with a red helmet stands on a small moped on a dirt road .&quot;.lower()</span><br><span class=\"line\">    sentences = prepareForNLP(example_sent)</span><br><span class=\"line\">    for sentence in sentences:</span><br><span class=\"line\">        chunk(sentence)</span><br></pre></td></tr></table></figure>\n<p>输出：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">a man with a red helmet stands on a small moped on a dirt road .</span><br><span class=\"line\">a man</span><br><span class=\"line\">with a red helmet</span><br><span class=\"line\">a red helmet</span><br><span class=\"line\">stands on a small moped on a dirt road</span><br><span class=\"line\">on a small moped</span><br><span class=\"line\">a small moped</span><br><span class=\"line\">on a dirt road</span><br><span class=\"line\">a dirt road</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"相关链接\"><a href=\"#相关链接\" class=\"headerlink\" title=\"相关链接\"></a>相关链接</h2><h3 id=\"名词短语的分块：\"><a href=\"#名词短语的分块：\" class=\"headerlink\" title=\"名词短语的分块：\"></a>名词短语的分块：</h3><p><a href=\"https://aclweb.org/aclwiki/NP_Chunking_(State_of_the_art\" target=\"_blank\" rel=\"noopener\">NP Chunking (State of the art)</a>)</p>\n<h3 id=\"词性标记集\"><a href=\"#词性标记集\" class=\"headerlink\" title=\"词性标记集\"></a>词性标记集</h3><p><a href=\"https://www.ibm.com/support/knowledgecenter/zh/SS5RWK_3.5.0/com.ibm.discovery.es.ta.doc/iiysspostagset.htm\" target=\"_blank\" rel=\"noopener\">英语标记集</a></p>"},{"title":"图像文本匹配相关工作","date":"2018-11-07T11:36:07.000Z","_content":"\n# 图像文本匹配相关工作\n\n## introduction\n1. 什么是图像文本匹配？\n计算机视觉任务逐渐不在满足于简单的图像分类、或者为图像分配一个或几个标签的任务，越来越多的研究者希望能够通过匹配图像和文本，为图像生成丰富的文本描述，从而更好地理解图像的语义。\n2. 已经有大量的研究工作，这些工作的方法怎么做的？\n3. 我的工作在别人的工作上有什么改进？有什么优点、贡献？\n- 通过生成网络生成更多的正例(positive fact), 从而扩充训练数据集;\n- 设计了一个高效的训练算法，交替优化生成网络和判别网络的参数，得到强判别器；\n- 在多个数据集上实现了与其他方法可比较甚至更优异的结果。\n<!-- more --> \n\n## related work\n\n#### 1. CCA\n- Canonical Correlation Analysis (CCA)\n- Kernel Canonical Correlation Analysis (KCCA)\n- deep CCA\n- Sparse Kernel CCA\n- Randomized CCA\n- Nonparametric CCA \n#### 2. ranking based method\n- Y. Verma and C. Jawahar, “Im2text and text2im: Associating images and texts for cross-modal retrieval,” in British Machine Vision Conference (BMVC), vol. 1, 2014, p. 2.\n- R. Socher, A. Karpathy, Q. V. Le, C. D. Manning, and A. Y. Ng, “Grounded compositional semantics for finding and describing images with sentences,” Transactions of the Association for Computational Linguistics, vol. 2, pp. 207–218, 2014.  ***OK***\n- A. Karpathy, A. Joulin, and F. F. F. Li, “Deep fragment embeddings for bidirectional image sentence mapping,” in Neural Information Processing Systems (NIPS), 2014, pp. 1889–1897. ***OK***\n- R. Kiros, R. Salakhutdinov, and R. S. Zemel, “Unifying visual-semantic embeddings with multimodal neural language models,” arXiv preprint arXiv:1411.2539, 2014. ***OK***\n- L. Wang, Y. Li, and S. Lazebnik, “Learning deep structure-preserving image-text embeddings,” in Computer Vision and Pattern Recognition (CVPR), 2016, pp. 5005–5013.\n- “Learning two-branch neural networks for image-text matching tasks,” arXiv preprint arXiv:1704.03470, 2017.\n- Huang Y, Wang W, Wang L. Instance-aware image and sentence matching with selective multimodal lstm[C]//The IEEE Conference on Computer Vision and Pattern Recognition (CVPR). 2017, 2(6): 7.\n- Huang Y, Wu Q, Wang L. Learning semantic concepts and order for image and sentence matching[C]//Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition. 2018: 6163-6171.\n\n#### 3.Generative Adversarial Networks(GANs)\n\n- @inproceedings{goodfellow2014generative,\n  title={Generative adversarial nets},\n  author={Goodfellow, Ian and Pouget-Abadie, Jean and Mirza, Mehdi and Xu, Bing and Warde-Farley, David and Ozair, Sherjil and Courville, Aaron and Bengio, Yoshua},\n  booktitle={Advances in neural information processing systems},\n  pages={2672--2680},\n  year={2014}\n}\n- @article{mirza2014conditional,\n  title={Conditional generative adversarial nets},\n  author={Mirza, Mehdi and Osindero, Simon},\n  journal={arXiv preprint arXiv:1411.1784},\n  year={2014}\n}\n- @article{radford2015unsupervised,\n  title={Unsupervised representation learning with deep convolutional generative adversarial networks},\n  author={Radford, Alec and Metz, Luke and Chintala, Soumith},\n  journal={arXiv preprint arXiv:1511.06434},\n  year={2015}\n}\n- @article{reed2016generative,\n  title={Generative adversarial text to image synthesis},\n  author={Reed, Scott and Akata, Zeynep and Yan, Xinchen and Logeswaran, Lajanugen and Schiele, Bernt and Lee, Honglak},\n  journal={arXiv preprint arXiv:1605.05396},\n  year={2016}\n}\n- @inproceedings{wang2017irgan,\n  title={Irgan: A minimax game for unifying generative and discriminative information retrieval models},\n  author={Wang, Jun and Yu, Lantao and Zhang, Weinan and Gong, Yu and Xu, Yinghui and Wang, Benyou and Zhang, Peng and Zhang, Dell},\n  booktitle={Proceedings of the 40th International ACM SIGIR conference on Research and Development in Information Retrieval},\n  pages={515--524},\n  year={2017},\n  organization={ACM}\n}\n- @article{cai2017kbgan,\n  title={Kbgan: Adversarial learning for knowledge graph embeddings},\n  author={Cai, Liwei and Wang, William Yang},\n  journal={arXiv preprint arXiv:1711.04071},\n  year={2017}\n}\n\n\n## experiment\n1. 数据集的扩充：\n对每一张图片进行裁剪，4个角以及中间，并将这5个裁剪的图翻转，一张图片扩充得到10张尺寸为`$128 \\times 128$`的图片。\n","source":"_posts/图像文本匹配相关工作.md","raw":"---\ntitle: 图像文本匹配相关工作\ndate: 2018-11-07 19:36:07\ntags: \n    - 图文匹配\n    - 典型相关分析\n    - 排序损失\n    - 数据集\ncategories: 科研\n---\n\n# 图像文本匹配相关工作\n\n## introduction\n1. 什么是图像文本匹配？\n计算机视觉任务逐渐不在满足于简单的图像分类、或者为图像分配一个或几个标签的任务，越来越多的研究者希望能够通过匹配图像和文本，为图像生成丰富的文本描述，从而更好地理解图像的语义。\n2. 已经有大量的研究工作，这些工作的方法怎么做的？\n3. 我的工作在别人的工作上有什么改进？有什么优点、贡献？\n- 通过生成网络生成更多的正例(positive fact), 从而扩充训练数据集;\n- 设计了一个高效的训练算法，交替优化生成网络和判别网络的参数，得到强判别器；\n- 在多个数据集上实现了与其他方法可比较甚至更优异的结果。\n<!-- more --> \n\n## related work\n\n#### 1. CCA\n- Canonical Correlation Analysis (CCA)\n- Kernel Canonical Correlation Analysis (KCCA)\n- deep CCA\n- Sparse Kernel CCA\n- Randomized CCA\n- Nonparametric CCA \n#### 2. ranking based method\n- Y. Verma and C. Jawahar, “Im2text and text2im: Associating images and texts for cross-modal retrieval,” in British Machine Vision Conference (BMVC), vol. 1, 2014, p. 2.\n- R. Socher, A. Karpathy, Q. V. Le, C. D. Manning, and A. Y. Ng, “Grounded compositional semantics for finding and describing images with sentences,” Transactions of the Association for Computational Linguistics, vol. 2, pp. 207–218, 2014.  ***OK***\n- A. Karpathy, A. Joulin, and F. F. F. Li, “Deep fragment embeddings for bidirectional image sentence mapping,” in Neural Information Processing Systems (NIPS), 2014, pp. 1889–1897. ***OK***\n- R. Kiros, R. Salakhutdinov, and R. S. Zemel, “Unifying visual-semantic embeddings with multimodal neural language models,” arXiv preprint arXiv:1411.2539, 2014. ***OK***\n- L. Wang, Y. Li, and S. Lazebnik, “Learning deep structure-preserving image-text embeddings,” in Computer Vision and Pattern Recognition (CVPR), 2016, pp. 5005–5013.\n- “Learning two-branch neural networks for image-text matching tasks,” arXiv preprint arXiv:1704.03470, 2017.\n- Huang Y, Wang W, Wang L. Instance-aware image and sentence matching with selective multimodal lstm[C]//The IEEE Conference on Computer Vision and Pattern Recognition (CVPR). 2017, 2(6): 7.\n- Huang Y, Wu Q, Wang L. Learning semantic concepts and order for image and sentence matching[C]//Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition. 2018: 6163-6171.\n\n#### 3.Generative Adversarial Networks(GANs)\n\n- @inproceedings{goodfellow2014generative,\n  title={Generative adversarial nets},\n  author={Goodfellow, Ian and Pouget-Abadie, Jean and Mirza, Mehdi and Xu, Bing and Warde-Farley, David and Ozair, Sherjil and Courville, Aaron and Bengio, Yoshua},\n  booktitle={Advances in neural information processing systems},\n  pages={2672--2680},\n  year={2014}\n}\n- @article{mirza2014conditional,\n  title={Conditional generative adversarial nets},\n  author={Mirza, Mehdi and Osindero, Simon},\n  journal={arXiv preprint arXiv:1411.1784},\n  year={2014}\n}\n- @article{radford2015unsupervised,\n  title={Unsupervised representation learning with deep convolutional generative adversarial networks},\n  author={Radford, Alec and Metz, Luke and Chintala, Soumith},\n  journal={arXiv preprint arXiv:1511.06434},\n  year={2015}\n}\n- @article{reed2016generative,\n  title={Generative adversarial text to image synthesis},\n  author={Reed, Scott and Akata, Zeynep and Yan, Xinchen and Logeswaran, Lajanugen and Schiele, Bernt and Lee, Honglak},\n  journal={arXiv preprint arXiv:1605.05396},\n  year={2016}\n}\n- @inproceedings{wang2017irgan,\n  title={Irgan: A minimax game for unifying generative and discriminative information retrieval models},\n  author={Wang, Jun and Yu, Lantao and Zhang, Weinan and Gong, Yu and Xu, Yinghui and Wang, Benyou and Zhang, Peng and Zhang, Dell},\n  booktitle={Proceedings of the 40th International ACM SIGIR conference on Research and Development in Information Retrieval},\n  pages={515--524},\n  year={2017},\n  organization={ACM}\n}\n- @article{cai2017kbgan,\n  title={Kbgan: Adversarial learning for knowledge graph embeddings},\n  author={Cai, Liwei and Wang, William Yang},\n  journal={arXiv preprint arXiv:1711.04071},\n  year={2017}\n}\n\n\n## experiment\n1. 数据集的扩充：\n对每一张图片进行裁剪，4个角以及中间，并将这5个裁剪的图翻转，一张图片扩充得到10张尺寸为`$128 \\times 128$`的图片。\n","slug":"图像文本匹配相关工作","published":1,"updated":"2019-01-18T04:40:24.712Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck0ozhix7001egkuw3fy3qdsm","content":"<h1 id=\"图像文本匹配相关工作\"><a href=\"#图像文本匹配相关工作\" class=\"headerlink\" title=\"图像文本匹配相关工作\"></a>图像文本匹配相关工作</h1><h2 id=\"introduction\"><a href=\"#introduction\" class=\"headerlink\" title=\"introduction\"></a>introduction</h2><ol>\n<li>什么是图像文本匹配？<br>计算机视觉任务逐渐不在满足于简单的图像分类、或者为图像分配一个或几个标签的任务，越来越多的研究者希望能够通过匹配图像和文本，为图像生成丰富的文本描述，从而更好地理解图像的语义。</li>\n<li>已经有大量的研究工作，这些工作的方法怎么做的？</li>\n<li>我的工作在别人的工作上有什么改进？有什么优点、贡献？</li>\n</ol>\n<ul>\n<li>通过生成网络生成更多的正例(positive fact), 从而扩充训练数据集;</li>\n<li>设计了一个高效的训练算法，交替优化生成网络和判别网络的参数，得到强判别器；</li>\n<li>在多个数据集上实现了与其他方法可比较甚至更优异的结果。<a id=\"more\"></a> \n</li>\n</ul>\n<h2 id=\"related-work\"><a href=\"#related-work\" class=\"headerlink\" title=\"related work\"></a>related work</h2><h4 id=\"1-CCA\"><a href=\"#1-CCA\" class=\"headerlink\" title=\"1. CCA\"></a>1. CCA</h4><ul>\n<li>Canonical Correlation Analysis (CCA)</li>\n<li>Kernel Canonical Correlation Analysis (KCCA)</li>\n<li>deep CCA</li>\n<li>Sparse Kernel CCA</li>\n<li>Randomized CCA</li>\n<li>Nonparametric CCA <h4 id=\"2-ranking-based-method\"><a href=\"#2-ranking-based-method\" class=\"headerlink\" title=\"2. ranking based method\"></a>2. ranking based method</h4></li>\n<li>Y. Verma and C. Jawahar, “Im2text and text2im: Associating images and texts for cross-modal retrieval,” in British Machine Vision Conference (BMVC), vol. 1, 2014, p. 2.</li>\n<li>R. Socher, A. Karpathy, Q. V. Le, C. D. Manning, and A. Y. Ng, “Grounded compositional semantics for finding and describing images with sentences,” Transactions of the Association for Computational Linguistics, vol. 2, pp. 207–218, 2014.  <strong><em>OK</em></strong></li>\n<li>A. Karpathy, A. Joulin, and F. F. F. Li, “Deep fragment embeddings for bidirectional image sentence mapping,” in Neural Information Processing Systems (NIPS), 2014, pp. 1889–1897. <strong><em>OK</em></strong></li>\n<li>R. Kiros, R. Salakhutdinov, and R. S. Zemel, “Unifying visual-semantic embeddings with multimodal neural language models,” arXiv preprint arXiv:1411.2539, 2014. <strong><em>OK</em></strong></li>\n<li>L. Wang, Y. Li, and S. Lazebnik, “Learning deep structure-preserving image-text embeddings,” in Computer Vision and Pattern Recognition (CVPR), 2016, pp. 5005–5013.</li>\n<li>“Learning two-branch neural networks for image-text matching tasks,” arXiv preprint arXiv:1704.03470, 2017.</li>\n<li>Huang Y, Wang W, Wang L. Instance-aware image and sentence matching with selective multimodal lstm[C]//The IEEE Conference on Computer Vision and Pattern Recognition (CVPR). 2017, 2(6): 7.</li>\n<li>Huang Y, Wu Q, Wang L. Learning semantic concepts and order for image and sentence matching[C]//Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition. 2018: 6163-6171.</li>\n</ul>\n<h4 id=\"3-Generative-Adversarial-Networks-GANs\"><a href=\"#3-Generative-Adversarial-Networks-GANs\" class=\"headerlink\" title=\"3.Generative Adversarial Networks(GANs)\"></a>3.Generative Adversarial Networks(GANs)</h4><ul>\n<li>@inproceedings{goodfellow2014generative,<br>title={Generative adversarial nets},<br>author={Goodfellow, Ian and Pouget-Abadie, Jean and Mirza, Mehdi and Xu, Bing and Warde-Farley, David and Ozair, Sherjil and Courville, Aaron and Bengio, Yoshua},<br>booktitle={Advances in neural information processing systems},<br>pages={2672–2680},<br>year={2014}<br>}</li>\n<li>@article{mirza2014conditional,<br>title={Conditional generative adversarial nets},<br>author={Mirza, Mehdi and Osindero, Simon},<br>journal={arXiv preprint arXiv:1411.1784},<br>year={2014}<br>}</li>\n<li>@article{radford2015unsupervised,<br>title={Unsupervised representation learning with deep convolutional generative adversarial networks},<br>author={Radford, Alec and Metz, Luke and Chintala, Soumith},<br>journal={arXiv preprint arXiv:1511.06434},<br>year={2015}<br>}</li>\n<li>@article{reed2016generative,<br>title={Generative adversarial text to image synthesis},<br>author={Reed, Scott and Akata, Zeynep and Yan, Xinchen and Logeswaran, Lajanugen and Schiele, Bernt and Lee, Honglak},<br>journal={arXiv preprint arXiv:1605.05396},<br>year={2016}<br>}</li>\n<li>@inproceedings{wang2017irgan,<br>title={Irgan: A minimax game for unifying generative and discriminative information retrieval models},<br>author={Wang, Jun and Yu, Lantao and Zhang, Weinan and Gong, Yu and Xu, Yinghui and Wang, Benyou and Zhang, Peng and Zhang, Dell},<br>booktitle={Proceedings of the 40th International ACM SIGIR conference on Research and Development in Information Retrieval},<br>pages={515–524},<br>year={2017},<br>organization={ACM}<br>}</li>\n<li>@article{cai2017kbgan,<br>title={Kbgan: Adversarial learning for knowledge graph embeddings},<br>author={Cai, Liwei and Wang, William Yang},<br>journal={arXiv preprint arXiv:1711.04071},<br>year={2017}<br>}</li>\n</ul>\n<h2 id=\"experiment\"><a href=\"#experiment\" class=\"headerlink\" title=\"experiment\"></a>experiment</h2><ol>\n<li>数据集的扩充：<br>对每一张图片进行裁剪，4个角以及中间，并将这5个裁剪的图翻转，一张图片扩充得到10张尺寸为<code>$128 \\times 128$</code>的图片。</li>\n</ol>\n","site":{"data":{}},"excerpt":"<h1 id=\"图像文本匹配相关工作\"><a href=\"#图像文本匹配相关工作\" class=\"headerlink\" title=\"图像文本匹配相关工作\"></a>图像文本匹配相关工作</h1><h2 id=\"introduction\"><a href=\"#introduction\" class=\"headerlink\" title=\"introduction\"></a>introduction</h2><ol>\n<li>什么是图像文本匹配？<br>计算机视觉任务逐渐不在满足于简单的图像分类、或者为图像分配一个或几个标签的任务，越来越多的研究者希望能够通过匹配图像和文本，为图像生成丰富的文本描述，从而更好地理解图像的语义。</li>\n<li>已经有大量的研究工作，这些工作的方法怎么做的？</li>\n<li>我的工作在别人的工作上有什么改进？有什么优点、贡献？</li>\n</ol>\n<ul>\n<li>通过生成网络生成更多的正例(positive fact), 从而扩充训练数据集;</li>\n<li>设计了一个高效的训练算法，交替优化生成网络和判别网络的参数，得到强判别器；</li>\n<li>在多个数据集上实现了与其他方法可比较甚至更优异的结果。</li></ul>","more":"\n\n<h2 id=\"related-work\"><a href=\"#related-work\" class=\"headerlink\" title=\"related work\"></a>related work</h2><h4 id=\"1-CCA\"><a href=\"#1-CCA\" class=\"headerlink\" title=\"1. CCA\"></a>1. CCA</h4><ul>\n<li>Canonical Correlation Analysis (CCA)</li>\n<li>Kernel Canonical Correlation Analysis (KCCA)</li>\n<li>deep CCA</li>\n<li>Sparse Kernel CCA</li>\n<li>Randomized CCA</li>\n<li>Nonparametric CCA <h4 id=\"2-ranking-based-method\"><a href=\"#2-ranking-based-method\" class=\"headerlink\" title=\"2. ranking based method\"></a>2. ranking based method</h4></li>\n<li>Y. Verma and C. Jawahar, “Im2text and text2im: Associating images and texts for cross-modal retrieval,” in British Machine Vision Conference (BMVC), vol. 1, 2014, p. 2.</li>\n<li>R. Socher, A. Karpathy, Q. V. Le, C. D. Manning, and A. Y. Ng, “Grounded compositional semantics for finding and describing images with sentences,” Transactions of the Association for Computational Linguistics, vol. 2, pp. 207–218, 2014.  <strong><em>OK</em></strong></li>\n<li>A. Karpathy, A. Joulin, and F. F. F. Li, “Deep fragment embeddings for bidirectional image sentence mapping,” in Neural Information Processing Systems (NIPS), 2014, pp. 1889–1897. <strong><em>OK</em></strong></li>\n<li>R. Kiros, R. Salakhutdinov, and R. S. Zemel, “Unifying visual-semantic embeddings with multimodal neural language models,” arXiv preprint arXiv:1411.2539, 2014. <strong><em>OK</em></strong></li>\n<li>L. Wang, Y. Li, and S. Lazebnik, “Learning deep structure-preserving image-text embeddings,” in Computer Vision and Pattern Recognition (CVPR), 2016, pp. 5005–5013.</li>\n<li>“Learning two-branch neural networks for image-text matching tasks,” arXiv preprint arXiv:1704.03470, 2017.</li>\n<li>Huang Y, Wang W, Wang L. Instance-aware image and sentence matching with selective multimodal lstm[C]//The IEEE Conference on Computer Vision and Pattern Recognition (CVPR). 2017, 2(6): 7.</li>\n<li>Huang Y, Wu Q, Wang L. Learning semantic concepts and order for image and sentence matching[C]//Proceedings of the IEEE Conference on Computer Vision and Pattern Recognition. 2018: 6163-6171.</li>\n</ul>\n<h4 id=\"3-Generative-Adversarial-Networks-GANs\"><a href=\"#3-Generative-Adversarial-Networks-GANs\" class=\"headerlink\" title=\"3.Generative Adversarial Networks(GANs)\"></a>3.Generative Adversarial Networks(GANs)</h4><ul>\n<li>@inproceedings{goodfellow2014generative,<br>title={Generative adversarial nets},<br>author={Goodfellow, Ian and Pouget-Abadie, Jean and Mirza, Mehdi and Xu, Bing and Warde-Farley, David and Ozair, Sherjil and Courville, Aaron and Bengio, Yoshua},<br>booktitle={Advances in neural information processing systems},<br>pages={2672–2680},<br>year={2014}<br>}</li>\n<li>@article{mirza2014conditional,<br>title={Conditional generative adversarial nets},<br>author={Mirza, Mehdi and Osindero, Simon},<br>journal={arXiv preprint arXiv:1411.1784},<br>year={2014}<br>}</li>\n<li>@article{radford2015unsupervised,<br>title={Unsupervised representation learning with deep convolutional generative adversarial networks},<br>author={Radford, Alec and Metz, Luke and Chintala, Soumith},<br>journal={arXiv preprint arXiv:1511.06434},<br>year={2015}<br>}</li>\n<li>@article{reed2016generative,<br>title={Generative adversarial text to image synthesis},<br>author={Reed, Scott and Akata, Zeynep and Yan, Xinchen and Logeswaran, Lajanugen and Schiele, Bernt and Lee, Honglak},<br>journal={arXiv preprint arXiv:1605.05396},<br>year={2016}<br>}</li>\n<li>@inproceedings{wang2017irgan,<br>title={Irgan: A minimax game for unifying generative and discriminative information retrieval models},<br>author={Wang, Jun and Yu, Lantao and Zhang, Weinan and Gong, Yu and Xu, Yinghui and Wang, Benyou and Zhang, Peng and Zhang, Dell},<br>booktitle={Proceedings of the 40th International ACM SIGIR conference on Research and Development in Information Retrieval},<br>pages={515–524},<br>year={2017},<br>organization={ACM}<br>}</li>\n<li>@article{cai2017kbgan,<br>title={Kbgan: Adversarial learning for knowledge graph embeddings},<br>author={Cai, Liwei and Wang, William Yang},<br>journal={arXiv preprint arXiv:1711.04071},<br>year={2017}<br>}</li>\n</ul>\n<h2 id=\"experiment\"><a href=\"#experiment\" class=\"headerlink\" title=\"experiment\"></a>experiment</h2><ol>\n<li>数据集的扩充：<br>对每一张图片进行裁剪，4个角以及中间，并将这5个裁剪的图翻转，一张图片扩充得到10张尺寸为<code>$128 \\times 128$</code>的图片。</li>\n</ol>"},{"title":"垃圾收集(一)","date":"2019-01-12T03:50:08.000Z","_content":"\n# 垃圾收集\n垃圾回收需要关注的事情：  \n1. 哪些内存需要回收？ Java堆和方法区\n2. 什么时候回收？\n3. 如何回收？  \n<!-- more --> \njava内存运行时各个区域，其中程序计数器、java虚拟机栈、本地方法栈3个区域随线程而生，随线程而灭；栈中的栈帧随着方法的进入和退出而有条不紊地进行出栈和入栈操作。而Java堆和方法区则不一样，一个接口中的多个实现类需要的内存可能不一样，一个方法中的多个分支需要的内存也可能不一样，我们只有在程序处于运行期间时才能知道会创建哪些对象，这部分内存的分配和回收都是动态的，垃圾回收器所关注的就是这部分内存。\n\n## 对象存活判断\n\n### 引用计数法（Reference Counting）\n算法描述：给对象中添加一个引用计数器，每当有一个引用指向这个对象，计数器值就加1；当引用失效时，计数器值就减1；任何时刻计数器值为0的对象就不可能再被使用。  \n引用计数法存在一个问题：它很难解决对象之间的相互循环引用问题，举个例子，示例代码如下。对象```objA```和```objB```都有字段```instance```，赋值```objA.instance = objB```及```objB.instance = objA```，除此之外，这两个对象再无任何引用，实际上这两个对象已经不可能再被访问，但是它们因为互相引用着对方，导致引用计数器值都不为0，于是引用计数算法无法通知GC收集器回收它们。\n```\n/**\n * 对象objA和objB存在相互引用\n * @author yangkuan\n */\npublic class ReferenceCounteringGC {\n    public Object instance = null;\n\n    private static final int _1MB = 1024 * 1024;\n    /**\n     * 这个成员变量的意义是通过其占用的内存，通过GC日志查看对象是否被回收\n     */\n    private byte[] bigSize = new byte[2 * _1MB];\n\n    public static void testGC(){\n        ReferenceCounteringGC objA = new ReferenceCounteringGC();\n        ReferenceCounteringGC objB = new ReferenceCounteringGC();\n        objA.instance = objB;\n        objB.instance = objA;\n\n        objA = null;\n        objB = null;\n\n        // 假设此处发生垃圾回收，如果回收算法是引用计数法，那么objA和objB将不会被回收\n        System.gc();\n    }\n}\n```\n\n### 可达性分析算法（Reachability Analysis）\n\n#### 算法描述\n这个算法的基本思想就是通过一系列的称为“GC Roots”的对象作为起始点，从这些节点开始向下搜索，搜索所走过的路径称为引用链（Reference Chain），当一个对象到GC Roots没有任何引用链相连（即该对象到GC Roots不可达）时，则证明这个对象不可用。那这些不可达的对象就可以判定为可回收对象。\n可作为GC Roots的对象包括以下几种：  \n- 虚拟机栈（栈帧中的本地变量表）中引用的对象；\n- 方法区中类静态属性引用的对象；\n- 方法区中常量引用的对象；\n- 本地方法栈中JNI（即Native方法）引用的对象。\n\n#### 引用类型\n1. **强引用（Strong Reference）**  \n强引用就是指在程序代码之中普遍存在的，类似```Object obj = new Object()```这类的引用，只要强引用还存在，垃圾收集器永远不会回收掉被引用的对象。\n2. **软引用（Soft Reference）**  \n软引用是用来描述一些还有用但并非必须的对象。对于软引用关联着的对象，在系统将要发生内存溢出异常之前，将会把这些对象列进回收范围之中进行第二次回收。如果这次回收之后还没有足够的内存，那么程序就会抛出内存溢出异常。\n3. **弱引用（Weak Reference）**  \n弱引用也是用来描述非必须对象的，但是它的强度比软引用还要更弱一些，被弱引用关联的对象只能生存到下一次垃圾回收之前。当垃圾收集器工作时，无论当内存是否足够，都会回收掉只被弱引用关联的对象。\n4. **虚引用（Phantom Reference）**  \n虚引用也被称为幽灵引用或者幻影引用，它是最弱的一种引用关系。一个对象是否有虚引用的存在，完全不会对其生存时间构成威胁，也无法通过虚引用来取得一个对象实例。为一个对象设置虚引用关联的唯一目的就是能在这个对象被收集器回收时收到一个系统通知。\n\n\n#### 对象的两次标记过程\n1. 如果对象再进行可达性分析的时候发现其与```GC Roots```之间不可达，那么它将会被第一次标记并进行下一次筛选，筛选的条件是此对象是否有必要执行```finalize()```方法。当对象没有覆盖```finalize()```方法或者```finalize()```方法已经被虚拟机执行过，都会被认为没有必要执行。\n2. 如果这个对象被虚拟机认为有必要执行```finalize()```方法，那么这个对象将会放置在一个叫```F-Queue```的队列中，并在稍后由一个由虚拟机自动建立的、低优先级的```Finalizer```线程去执行它。如果对象想要拯救自己，那么覆盖```finalize()```方法在方法中重新将自身与引用链上的任意一个对象关联起来就可以避免自己被回收。\n\n### 回收方法区\n\n方法区（永久代）的垃圾回收主要包括两个部分：废弃常量和无用的类。\n- 废弃常量指的是没有任何地方引用这个常量，这个常量会被系统清理出常量池；\n- 无用的类需要同时满足以下三个条件：\n> 1. 该类的所有实例都已经被回收，也就是```Java```堆中不存在该类的任何实例；\n> 2. 加载该类的```ClassLoader```已经被回收；\n> 3. 该类对应的```java.lang.Class```对象没有在任何地方被引用，无法再任何地方通过反射访问该类的方法。\n\n\n","source":"_posts/垃圾收集.md","raw":"---\ntitle: 垃圾收集(一)\ndate: 2019-01-12 11:50:08\ntags:\n    - 内存分配策略\n    - 引用计数法\n    - 可达性算法\ncategories: 深入理解Java虚拟机\n---\n\n# 垃圾收集\n垃圾回收需要关注的事情：  \n1. 哪些内存需要回收？ Java堆和方法区\n2. 什么时候回收？\n3. 如何回收？  \n<!-- more --> \njava内存运行时各个区域，其中程序计数器、java虚拟机栈、本地方法栈3个区域随线程而生，随线程而灭；栈中的栈帧随着方法的进入和退出而有条不紊地进行出栈和入栈操作。而Java堆和方法区则不一样，一个接口中的多个实现类需要的内存可能不一样，一个方法中的多个分支需要的内存也可能不一样，我们只有在程序处于运行期间时才能知道会创建哪些对象，这部分内存的分配和回收都是动态的，垃圾回收器所关注的就是这部分内存。\n\n## 对象存活判断\n\n### 引用计数法（Reference Counting）\n算法描述：给对象中添加一个引用计数器，每当有一个引用指向这个对象，计数器值就加1；当引用失效时，计数器值就减1；任何时刻计数器值为0的对象就不可能再被使用。  \n引用计数法存在一个问题：它很难解决对象之间的相互循环引用问题，举个例子，示例代码如下。对象```objA```和```objB```都有字段```instance```，赋值```objA.instance = objB```及```objB.instance = objA```，除此之外，这两个对象再无任何引用，实际上这两个对象已经不可能再被访问，但是它们因为互相引用着对方，导致引用计数器值都不为0，于是引用计数算法无法通知GC收集器回收它们。\n```\n/**\n * 对象objA和objB存在相互引用\n * @author yangkuan\n */\npublic class ReferenceCounteringGC {\n    public Object instance = null;\n\n    private static final int _1MB = 1024 * 1024;\n    /**\n     * 这个成员变量的意义是通过其占用的内存，通过GC日志查看对象是否被回收\n     */\n    private byte[] bigSize = new byte[2 * _1MB];\n\n    public static void testGC(){\n        ReferenceCounteringGC objA = new ReferenceCounteringGC();\n        ReferenceCounteringGC objB = new ReferenceCounteringGC();\n        objA.instance = objB;\n        objB.instance = objA;\n\n        objA = null;\n        objB = null;\n\n        // 假设此处发生垃圾回收，如果回收算法是引用计数法，那么objA和objB将不会被回收\n        System.gc();\n    }\n}\n```\n\n### 可达性分析算法（Reachability Analysis）\n\n#### 算法描述\n这个算法的基本思想就是通过一系列的称为“GC Roots”的对象作为起始点，从这些节点开始向下搜索，搜索所走过的路径称为引用链（Reference Chain），当一个对象到GC Roots没有任何引用链相连（即该对象到GC Roots不可达）时，则证明这个对象不可用。那这些不可达的对象就可以判定为可回收对象。\n可作为GC Roots的对象包括以下几种：  \n- 虚拟机栈（栈帧中的本地变量表）中引用的对象；\n- 方法区中类静态属性引用的对象；\n- 方法区中常量引用的对象；\n- 本地方法栈中JNI（即Native方法）引用的对象。\n\n#### 引用类型\n1. **强引用（Strong Reference）**  \n强引用就是指在程序代码之中普遍存在的，类似```Object obj = new Object()```这类的引用，只要强引用还存在，垃圾收集器永远不会回收掉被引用的对象。\n2. **软引用（Soft Reference）**  \n软引用是用来描述一些还有用但并非必须的对象。对于软引用关联着的对象，在系统将要发生内存溢出异常之前，将会把这些对象列进回收范围之中进行第二次回收。如果这次回收之后还没有足够的内存，那么程序就会抛出内存溢出异常。\n3. **弱引用（Weak Reference）**  \n弱引用也是用来描述非必须对象的，但是它的强度比软引用还要更弱一些，被弱引用关联的对象只能生存到下一次垃圾回收之前。当垃圾收集器工作时，无论当内存是否足够，都会回收掉只被弱引用关联的对象。\n4. **虚引用（Phantom Reference）**  \n虚引用也被称为幽灵引用或者幻影引用，它是最弱的一种引用关系。一个对象是否有虚引用的存在，完全不会对其生存时间构成威胁，也无法通过虚引用来取得一个对象实例。为一个对象设置虚引用关联的唯一目的就是能在这个对象被收集器回收时收到一个系统通知。\n\n\n#### 对象的两次标记过程\n1. 如果对象再进行可达性分析的时候发现其与```GC Roots```之间不可达，那么它将会被第一次标记并进行下一次筛选，筛选的条件是此对象是否有必要执行```finalize()```方法。当对象没有覆盖```finalize()```方法或者```finalize()```方法已经被虚拟机执行过，都会被认为没有必要执行。\n2. 如果这个对象被虚拟机认为有必要执行```finalize()```方法，那么这个对象将会放置在一个叫```F-Queue```的队列中，并在稍后由一个由虚拟机自动建立的、低优先级的```Finalizer```线程去执行它。如果对象想要拯救自己，那么覆盖```finalize()```方法在方法中重新将自身与引用链上的任意一个对象关联起来就可以避免自己被回收。\n\n### 回收方法区\n\n方法区（永久代）的垃圾回收主要包括两个部分：废弃常量和无用的类。\n- 废弃常量指的是没有任何地方引用这个常量，这个常量会被系统清理出常量池；\n- 无用的类需要同时满足以下三个条件：\n> 1. 该类的所有实例都已经被回收，也就是```Java```堆中不存在该类的任何实例；\n> 2. 加载该类的```ClassLoader```已经被回收；\n> 3. 该类对应的```java.lang.Class```对象没有在任何地方被引用，无法再任何地方通过反射访问该类的方法。\n\n\n","slug":"垃圾收集","published":1,"updated":"2019-01-18T04:40:35.523Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck0ozhix8001hgkuwrlk3flpb","content":"<h1 id=\"垃圾收集\"><a href=\"#垃圾收集\" class=\"headerlink\" title=\"垃圾收集\"></a>垃圾收集</h1><p>垃圾回收需要关注的事情：  </p>\n<ol>\n<li>哪些内存需要回收？ Java堆和方法区</li>\n<li>什么时候回收？</li>\n<li>如何回收？  <a id=\"more\"></a> \njava内存运行时各个区域，其中程序计数器、java虚拟机栈、本地方法栈3个区域随线程而生，随线程而灭；栈中的栈帧随着方法的进入和退出而有条不紊地进行出栈和入栈操作。而Java堆和方法区则不一样，一个接口中的多个实现类需要的内存可能不一样，一个方法中的多个分支需要的内存也可能不一样，我们只有在程序处于运行期间时才能知道会创建哪些对象，这部分内存的分配和回收都是动态的，垃圾回收器所关注的就是这部分内存。</li>\n</ol>\n<h2 id=\"对象存活判断\"><a href=\"#对象存活判断\" class=\"headerlink\" title=\"对象存活判断\"></a>对象存活判断</h2><h3 id=\"引用计数法（Reference-Counting）\"><a href=\"#引用计数法（Reference-Counting）\" class=\"headerlink\" title=\"引用计数法（Reference Counting）\"></a>引用计数法（Reference Counting）</h3><p>算法描述：给对象中添加一个引用计数器，每当有一个引用指向这个对象，计数器值就加1；当引用失效时，计数器值就减1；任何时刻计数器值为0的对象就不可能再被使用。<br>引用计数法存在一个问题：它很难解决对象之间的相互循环引用问题，举个例子，示例代码如下。对象<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">```</span><br><span class=\"line\">/**</span><br><span class=\"line\"> * 对象objA和objB存在相互引用</span><br><span class=\"line\"> * @author yangkuan</span><br><span class=\"line\"> */</span><br><span class=\"line\">public class ReferenceCounteringGC &#123;</span><br><span class=\"line\">    public Object instance = null;</span><br><span class=\"line\"></span><br><span class=\"line\">    private static final int _1MB = 1024 * 1024;</span><br><span class=\"line\">    /**</span><br><span class=\"line\">     * 这个成员变量的意义是通过其占用的内存，通过GC日志查看对象是否被回收</span><br><span class=\"line\">     */</span><br><span class=\"line\">    private byte[] bigSize = new byte[2 * _1MB];</span><br><span class=\"line\"></span><br><span class=\"line\">    public static void testGC()&#123;</span><br><span class=\"line\">        ReferenceCounteringGC objA = new ReferenceCounteringGC();</span><br><span class=\"line\">        ReferenceCounteringGC objB = new ReferenceCounteringGC();</span><br><span class=\"line\">        objA.instance = objB;</span><br><span class=\"line\">        objB.instance = objA;</span><br><span class=\"line\"></span><br><span class=\"line\">        objA = null;</span><br><span class=\"line\">        objB = null;</span><br><span class=\"line\"></span><br><span class=\"line\">        // 假设此处发生垃圾回收，如果回收算法是引用计数法，那么objA和objB将不会被回收</span><br><span class=\"line\">        System.gc();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"可达性分析算法（Reachability-Analysis）\"><a href=\"#可达性分析算法（Reachability-Analysis）\" class=\"headerlink\" title=\"可达性分析算法（Reachability Analysis）\"></a>可达性分析算法（Reachability Analysis）</h3><h4 id=\"算法描述\"><a href=\"#算法描述\" class=\"headerlink\" title=\"算法描述\"></a>算法描述</h4><p>这个算法的基本思想就是通过一系列的称为“GC Roots”的对象作为起始点，从这些节点开始向下搜索，搜索所走过的路径称为引用链（Reference Chain），当一个对象到GC Roots没有任何引用链相连（即该对象到GC Roots不可达）时，则证明这个对象不可用。那这些不可达的对象就可以判定为可回收对象。<br>可作为GC Roots的对象包括以下几种：  </p>\n<ul>\n<li>虚拟机栈（栈帧中的本地变量表）中引用的对象；</li>\n<li>方法区中类静态属性引用的对象；</li>\n<li>方法区中常量引用的对象；</li>\n<li>本地方法栈中JNI（即Native方法）引用的对象。</li>\n</ul>\n<h4 id=\"引用类型\"><a href=\"#引用类型\" class=\"headerlink\" title=\"引用类型\"></a>引用类型</h4><ol>\n<li><strong>强引用（Strong Reference）</strong><br>强引用就是指在程序代码之中普遍存在的，类似<code>Object obj = new Object()</code>这类的引用，只要强引用还存在，垃圾收集器永远不会回收掉被引用的对象。</li>\n<li><strong>软引用（Soft Reference）</strong><br>软引用是用来描述一些还有用但并非必须的对象。对于软引用关联着的对象，在系统将要发生内存溢出异常之前，将会把这些对象列进回收范围之中进行第二次回收。如果这次回收之后还没有足够的内存，那么程序就会抛出内存溢出异常。</li>\n<li><strong>弱引用（Weak Reference）</strong><br>弱引用也是用来描述非必须对象的，但是它的强度比软引用还要更弱一些，被弱引用关联的对象只能生存到下一次垃圾回收之前。当垃圾收集器工作时，无论当内存是否足够，都会回收掉只被弱引用关联的对象。</li>\n<li><strong>虚引用（Phantom Reference）</strong><br>虚引用也被称为幽灵引用或者幻影引用，它是最弱的一种引用关系。一个对象是否有虚引用的存在，完全不会对其生存时间构成威胁，也无法通过虚引用来取得一个对象实例。为一个对象设置虚引用关联的唯一目的就是能在这个对象被收集器回收时收到一个系统通知。</li>\n</ol>\n<h4 id=\"对象的两次标记过程\"><a href=\"#对象的两次标记过程\" class=\"headerlink\" title=\"对象的两次标记过程\"></a>对象的两次标记过程</h4><ol>\n<li>如果对象再进行可达性分析的时候发现其与<code>GC Roots</code>之间不可达，那么它将会被第一次标记并进行下一次筛选，筛选的条件是此对象是否有必要执行<code>finalize()</code>方法。当对象没有覆盖<code>finalize()</code>方法或者<code>finalize()</code>方法已经被虚拟机执行过，都会被认为没有必要执行。</li>\n<li>如果这个对象被虚拟机认为有必要执行<code>finalize()</code>方法，那么这个对象将会放置在一个叫<code>F-Queue</code>的队列中，并在稍后由一个由虚拟机自动建立的、低优先级的<code>Finalizer</code>线程去执行它。如果对象想要拯救自己，那么覆盖<code>finalize()</code>方法在方法中重新将自身与引用链上的任意一个对象关联起来就可以避免自己被回收。</li>\n</ol>\n<h3 id=\"回收方法区\"><a href=\"#回收方法区\" class=\"headerlink\" title=\"回收方法区\"></a>回收方法区</h3><p>方法区（永久代）的垃圾回收主要包括两个部分：废弃常量和无用的类。</p>\n<ul>\n<li>废弃常量指的是没有任何地方引用这个常量，这个常量会被系统清理出常量池；</li>\n<li>无用的类需要同时满足以下三个条件：<blockquote>\n<ol>\n<li>该类的所有实例都已经被回收，也就是<code>Java</code>堆中不存在该类的任何实例；</li>\n<li>加载该类的<code>ClassLoader</code>已经被回收；</li>\n<li>该类对应的<code>java.lang.Class</code>对象没有在任何地方被引用，无法再任何地方通过反射访问该类的方法。</li>\n</ol>\n</blockquote>\n</li>\n</ul>\n","site":{"data":{}},"excerpt":"<h1 id=\"垃圾收集\"><a href=\"#垃圾收集\" class=\"headerlink\" title=\"垃圾收集\"></a>垃圾收集</h1><p>垃圾回收需要关注的事情：  </p>\n<ol>\n<li>哪些内存需要回收？ Java堆和方法区</li>\n<li>什么时候回收？</li>\n<li>如何回收？</li></ol>","more":"java内存运行时各个区域，其中程序计数器、java虚拟机栈、本地方法栈3个区域随线程而生，随线程而灭；栈中的栈帧随着方法的进入和退出而有条不紊地进行出栈和入栈操作。而Java堆和方法区则不一样，一个接口中的多个实现类需要的内存可能不一样，一个方法中的多个分支需要的内存也可能不一样，我们只有在程序处于运行期间时才能知道会创建哪些对象，这部分内存的分配和回收都是动态的，垃圾回收器所关注的就是这部分内存。\n\n<h2 id=\"对象存活判断\"><a href=\"#对象存活判断\" class=\"headerlink\" title=\"对象存活判断\"></a>对象存活判断</h2><h3 id=\"引用计数法（Reference-Counting）\"><a href=\"#引用计数法（Reference-Counting）\" class=\"headerlink\" title=\"引用计数法（Reference Counting）\"></a>引用计数法（Reference Counting）</h3><p>算法描述：给对象中添加一个引用计数器，每当有一个引用指向这个对象，计数器值就加1；当引用失效时，计数器值就减1；任何时刻计数器值为0的对象就不可能再被使用。<br>引用计数法存在一个问题：它很难解决对象之间的相互循环引用问题，举个例子，示例代码如下。对象<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">```</span><br><span class=\"line\">/**</span><br><span class=\"line\"> * 对象objA和objB存在相互引用</span><br><span class=\"line\"> * @author yangkuan</span><br><span class=\"line\"> */</span><br><span class=\"line\">public class ReferenceCounteringGC &#123;</span><br><span class=\"line\">    public Object instance = null;</span><br><span class=\"line\"></span><br><span class=\"line\">    private static final int _1MB = 1024 * 1024;</span><br><span class=\"line\">    /**</span><br><span class=\"line\">     * 这个成员变量的意义是通过其占用的内存，通过GC日志查看对象是否被回收</span><br><span class=\"line\">     */</span><br><span class=\"line\">    private byte[] bigSize = new byte[2 * _1MB];</span><br><span class=\"line\"></span><br><span class=\"line\">    public static void testGC()&#123;</span><br><span class=\"line\">        ReferenceCounteringGC objA = new ReferenceCounteringGC();</span><br><span class=\"line\">        ReferenceCounteringGC objB = new ReferenceCounteringGC();</span><br><span class=\"line\">        objA.instance = objB;</span><br><span class=\"line\">        objB.instance = objA;</span><br><span class=\"line\"></span><br><span class=\"line\">        objA = null;</span><br><span class=\"line\">        objB = null;</span><br><span class=\"line\"></span><br><span class=\"line\">        // 假设此处发生垃圾回收，如果回收算法是引用计数法，那么objA和objB将不会被回收</span><br><span class=\"line\">        System.gc();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"可达性分析算法（Reachability-Analysis）\"><a href=\"#可达性分析算法（Reachability-Analysis）\" class=\"headerlink\" title=\"可达性分析算法（Reachability Analysis）\"></a>可达性分析算法（Reachability Analysis）</h3><h4 id=\"算法描述\"><a href=\"#算法描述\" class=\"headerlink\" title=\"算法描述\"></a>算法描述</h4><p>这个算法的基本思想就是通过一系列的称为“GC Roots”的对象作为起始点，从这些节点开始向下搜索，搜索所走过的路径称为引用链（Reference Chain），当一个对象到GC Roots没有任何引用链相连（即该对象到GC Roots不可达）时，则证明这个对象不可用。那这些不可达的对象就可以判定为可回收对象。<br>可作为GC Roots的对象包括以下几种：  </p>\n<ul>\n<li>虚拟机栈（栈帧中的本地变量表）中引用的对象；</li>\n<li>方法区中类静态属性引用的对象；</li>\n<li>方法区中常量引用的对象；</li>\n<li>本地方法栈中JNI（即Native方法）引用的对象。</li>\n</ul>\n<h4 id=\"引用类型\"><a href=\"#引用类型\" class=\"headerlink\" title=\"引用类型\"></a>引用类型</h4><ol>\n<li><strong>强引用（Strong Reference）</strong><br>强引用就是指在程序代码之中普遍存在的，类似<code>Object obj = new Object()</code>这类的引用，只要强引用还存在，垃圾收集器永远不会回收掉被引用的对象。</li>\n<li><strong>软引用（Soft Reference）</strong><br>软引用是用来描述一些还有用但并非必须的对象。对于软引用关联着的对象，在系统将要发生内存溢出异常之前，将会把这些对象列进回收范围之中进行第二次回收。如果这次回收之后还没有足够的内存，那么程序就会抛出内存溢出异常。</li>\n<li><strong>弱引用（Weak Reference）</strong><br>弱引用也是用来描述非必须对象的，但是它的强度比软引用还要更弱一些，被弱引用关联的对象只能生存到下一次垃圾回收之前。当垃圾收集器工作时，无论当内存是否足够，都会回收掉只被弱引用关联的对象。</li>\n<li><strong>虚引用（Phantom Reference）</strong><br>虚引用也被称为幽灵引用或者幻影引用，它是最弱的一种引用关系。一个对象是否有虚引用的存在，完全不会对其生存时间构成威胁，也无法通过虚引用来取得一个对象实例。为一个对象设置虚引用关联的唯一目的就是能在这个对象被收集器回收时收到一个系统通知。</li>\n</ol>\n<h4 id=\"对象的两次标记过程\"><a href=\"#对象的两次标记过程\" class=\"headerlink\" title=\"对象的两次标记过程\"></a>对象的两次标记过程</h4><ol>\n<li>如果对象再进行可达性分析的时候发现其与<code>GC Roots</code>之间不可达，那么它将会被第一次标记并进行下一次筛选，筛选的条件是此对象是否有必要执行<code>finalize()</code>方法。当对象没有覆盖<code>finalize()</code>方法或者<code>finalize()</code>方法已经被虚拟机执行过，都会被认为没有必要执行。</li>\n<li>如果这个对象被虚拟机认为有必要执行<code>finalize()</code>方法，那么这个对象将会放置在一个叫<code>F-Queue</code>的队列中，并在稍后由一个由虚拟机自动建立的、低优先级的<code>Finalizer</code>线程去执行它。如果对象想要拯救自己，那么覆盖<code>finalize()</code>方法在方法中重新将自身与引用链上的任意一个对象关联起来就可以避免自己被回收。</li>\n</ol>\n<h3 id=\"回收方法区\"><a href=\"#回收方法区\" class=\"headerlink\" title=\"回收方法区\"></a>回收方法区</h3><p>方法区（永久代）的垃圾回收主要包括两个部分：废弃常量和无用的类。</p>\n<ul>\n<li>废弃常量指的是没有任何地方引用这个常量，这个常量会被系统清理出常量池；</li>\n<li>无用的类需要同时满足以下三个条件：<blockquote>\n<ol>\n<li>该类的所有实例都已经被回收，也就是<code>Java</code>堆中不存在该类的任何实例；</li>\n<li>加载该类的<code>ClassLoader</code>已经被回收；</li>\n<li>该类对应的<code>java.lang.Class</code>对象没有在任何地方被引用，无法再任何地方通过反射访问该类的方法。</li>\n</ol>\n</blockquote>\n</li>\n</ul>"},{"title":"字节跳动实习生面试","date":"2019-03-30T13:20:08.000Z","_content":"\n## 一面\n1. 垃圾回收讲一下；\n2. java内存模型；\n> - 垃圾回收算法（如何确定回收对象（引用计数法、可达性算法）、回收算法（标记回收、标记整理、复制））；\n> - 垃圾收集器；\n> - MySQL数据库讲一下；数据引擎、索引类型、索引方法（B+树、Hash）\n<!-- more --> \n3. 手写代码：根据前序遍历和中序遍历还原二叉树，根据获得的前序遍历和中序遍历结果输出一颗二叉树（输出后续遍历）（我问可以IDE吗？尽量别用）\n## 二面\n1. 手写代码： \n```\n单链表操作：   \n 输入：奇数位升序，偶数位降序  \n 1 -> 80 -> 4 -> 60 -> 6 -> 40 -> 7 -> 2    \n输出：升序单链表  \n 1 -> 2 -> 4 -> 6-> 7 -> 40 -> 60 -> 80  \n不允许使用其他数据结构。\n```\n2. 进程和线程的区别\n3. HashMap\n4. TCP/UDP\n## 三面-两道编程题：\n 1. 假定一张表的数据格式为 id,name,parentId，表的数据不大，1000条以内，得到这些数据的树型结构\t输入：List<User> ， 输出：Node（手写代码）\n2. 有2个文件，分别是A(3t大小)，B(2t)大小，A文件的组织形式为 uid, username,B文件的组织形式为 uid, age,找出A、B文件交集的数据放入一个文件，文件的数据格式为uid,username,age（讲讲思路）","source":"_posts/字节跳动实习生面试.md","raw":"---\ntitle: 字节跳动实习生面试\ndate: 2019-03-30 21:20:08\ntags: \n    - 实习\n    - 字节跳动\n    - 面试\ncategories: 工作\n---\n\n## 一面\n1. 垃圾回收讲一下；\n2. java内存模型；\n> - 垃圾回收算法（如何确定回收对象（引用计数法、可达性算法）、回收算法（标记回收、标记整理、复制））；\n> - 垃圾收集器；\n> - MySQL数据库讲一下；数据引擎、索引类型、索引方法（B+树、Hash）\n<!-- more --> \n3. 手写代码：根据前序遍历和中序遍历还原二叉树，根据获得的前序遍历和中序遍历结果输出一颗二叉树（输出后续遍历）（我问可以IDE吗？尽量别用）\n## 二面\n1. 手写代码： \n```\n单链表操作：   \n 输入：奇数位升序，偶数位降序  \n 1 -> 80 -> 4 -> 60 -> 6 -> 40 -> 7 -> 2    \n输出：升序单链表  \n 1 -> 2 -> 4 -> 6-> 7 -> 40 -> 60 -> 80  \n不允许使用其他数据结构。\n```\n2. 进程和线程的区别\n3. HashMap\n4. TCP/UDP\n## 三面-两道编程题：\n 1. 假定一张表的数据格式为 id,name,parentId，表的数据不大，1000条以内，得到这些数据的树型结构\t输入：List<User> ， 输出：Node（手写代码）\n2. 有2个文件，分别是A(3t大小)，B(2t)大小，A文件的组织形式为 uid, username,B文件的组织形式为 uid, age,找出A、B文件交集的数据放入一个文件，文件的数据格式为uid,username,age（讲讲思路）","slug":"字节跳动实习生面试","published":1,"updated":"2019-03-30T13:33:43.966Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck0ozhix9001lgkuwciojiwmy","content":"<h2 id=\"一面\"><a href=\"#一面\" class=\"headerlink\" title=\"一面\"></a>一面</h2><ol>\n<li>垃圾回收讲一下；</li>\n<li>java内存模型；<blockquote>\n<ul>\n<li>垃圾回收算法（如何确定回收对象（引用计数法、可达性算法）、回收算法（标记回收、标记整理、复制））；</li>\n<li>垃圾收集器；</li>\n<li>MySQL数据库讲一下；数据引擎、索引类型、索引方法（B+树、Hash）<a id=\"more\"></a> </li>\n</ul>\n</blockquote>\n</li>\n<li>手写代码：根据前序遍历和中序遍历还原二叉树，根据获得的前序遍历和中序遍历结果输出一颗二叉树（输出后续遍历）（我问可以IDE吗？尽量别用）<h2 id=\"二面\"><a href=\"#二面\" class=\"headerlink\" title=\"二面\"></a>二面</h2></li>\n<li><p>手写代码： </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">单链表操作：   </span><br><span class=\"line\"> 输入：奇数位升序，偶数位降序  </span><br><span class=\"line\"> 1 -&gt; 80 -&gt; 4 -&gt; 60 -&gt; 6 -&gt; 40 -&gt; 7 -&gt; 2    </span><br><span class=\"line\">输出：升序单链表  </span><br><span class=\"line\"> 1 -&gt; 2 -&gt; 4 -&gt; 6-&gt; 7 -&gt; 40 -&gt; 60 -&gt; 80  </span><br><span class=\"line\">不允许使用其他数据结构。</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>进程和线程的区别</p>\n</li>\n<li>HashMap</li>\n<li>TCP/UDP<h2 id=\"三面-两道编程题：\"><a href=\"#三面-两道编程题：\" class=\"headerlink\" title=\"三面-两道编程题：\"></a>三面-两道编程题：</h2><ol>\n<li>假定一张表的数据格式为 id,name,parentId，表的数据不大，1000条以内，得到这些数据的树型结构    输入：List<user> ， 输出：Node（手写代码）</user></li>\n</ol>\n</li>\n<li>有2个文件，分别是A(3t大小)，B(2t)大小，A文件的组织形式为 uid, username,B文件的组织形式为 uid, age,找出A、B文件交集的数据放入一个文件，文件的数据格式为uid,username,age（讲讲思路）</li>\n</ol>\n","site":{"data":{}},"excerpt":"<h2 id=\"一面\"><a href=\"#一面\" class=\"headerlink\" title=\"一面\"></a>一面</h2><ol>\n<li>垃圾回收讲一下；</li>\n<li>java内存模型；<blockquote>\n<ul>\n<li>垃圾回收算法（如何确定回收对象（引用计数法、可达性算法）、回收算法（标记回收、标记整理、复制））；</li>\n<li>垃圾收集器；</li>\n<li>MySQL数据库讲一下；数据引擎、索引类型、索引方法（B+树、Hash）</li></ul></blockquote></li></ol>","more":"\n\n\n\n<li>手写代码：根据前序遍历和中序遍历还原二叉树，根据获得的前序遍历和中序遍历结果输出一颗二叉树（输出后续遍历）（我问可以IDE吗？尽量别用）<h2 id=\"二面\"><a href=\"#二面\" class=\"headerlink\" title=\"二面\"></a>二面</h2></li>\n<li><p>手写代码： </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">单链表操作：   </span><br><span class=\"line\"> 输入：奇数位升序，偶数位降序  </span><br><span class=\"line\"> 1 -&gt; 80 -&gt; 4 -&gt; 60 -&gt; 6 -&gt; 40 -&gt; 7 -&gt; 2    </span><br><span class=\"line\">输出：升序单链表  </span><br><span class=\"line\"> 1 -&gt; 2 -&gt; 4 -&gt; 6-&gt; 7 -&gt; 40 -&gt; 60 -&gt; 80  </span><br><span class=\"line\">不允许使用其他数据结构。</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>进程和线程的区别</p>\n</li>\n<li>HashMap</li>\n<li>TCP/UDP<h2 id=\"三面-两道编程题：\"><a href=\"#三面-两道编程题：\" class=\"headerlink\" title=\"三面-两道编程题：\"></a>三面-两道编程题：</h2><ol>\n<li>假定一张表的数据格式为 id,name,parentId，表的数据不大，1000条以内，得到这些数据的树型结构    输入：List<user> ， 输出：Node（手写代码）</user></li>\n</ol>\n</li>\n<li>有2个文件，分别是A(3t大小)，B(2t)大小，A文件的组织形式为 uid, username,B文件的组织形式为 uid, age,找出A、B文件交集的数据放入一个文件，文件的数据格式为uid,username,age（讲讲思路）</li>\n"},{"title":"并发机制的底层实现原理","date":"2019-01-21T02:22:24.000Z","_content":"# 并发机制的底层实现原理\n## volatile\n在多线程并发编程中synchronized和volatile关键字都扮演着重要角色，volatile是轻量级的synchronized，它在多处理器开发中保证了共享变量的“可见性”。可见性的意思是当一个线程修改一个共享变量时，另外的线程可以读到修改后的值。volatile的恰当使用能比synchronized关键字的使用和执行成本更低，因为它不会引起线程上下文的切换和调度。  \n<!-- more --> \n**定义**：Java编程语言允许线程访问共享变量，为了确保共享变量能被准确和一致地更新，线程应该确保通过排他锁单独获得这个变量。  \nJava语言提供了volatile，在某些情况下比锁要更加方便。如果一个字段被声明为volatile，Java线程内存模型确保所有线程看到这个变量的值是一致的。  \n在X86处理器下通过工具获取JIT编译器生成的汇编指令，查看对volatile变量进行写操作时，对应CPU的操作，例子如下：\n- Java代码如下：  \n```\ninstance = new Singleton();    //instance是volatile变量\n```\n- 转化为汇编代码，如下：  \n```\n0x01a3de1d: movb $0x0,ox1104800(%esi);0x01a3de24: lock addl $0x0,(%esp); \n```\n有volatile变量修饰的共享变量进行写操作时会多出两行汇编代码，通过查看IA-32架构软件开发者手册可知，Lock前缀的指令在多核处理器中会发生以下两件事情。  \n1. 将当前处理器的缓存行的数据写回到系统内存；\n2. 这个写回内存的操作会是其他CPU里缓存了该内存地址的数据无效。\n\n## synchronized\n在多线程并发编程中synchronized一直是元老级角色，很多人称呼它为重量级锁。Java SE1.6对synchronized进行了各种优化，为减少获得锁和释放锁带来的性能消耗而引入的偏向锁和轻量级锁。  \nsynchronized实现同步的基础：Java中的每一个对象都可以作为锁，具体表现为一些3种形式：  \n- 对于普通同步方法，锁是当前实例对象；\n- 对于静态同步方法，锁是当前类的Class对象；\n- 对于同步代码块，锁是Synchronized括号里配置的对象。  \n\n当一个线程师徒访问同步代码块时，它首先必须得到锁，退出或者抛出异常时必须释放锁。  \n从JVM规范中可以看到Synchronized在JVM里实现的原理，JVM基于进入和退出Monitor对象来实现方法同步和代码块同步，但两者实现细节不同。代码块同步用monitorenter和monitorexit指令实现，而方法同步是使用另一种方式实现的，细节没有在JVM规范中提及。但方法的同步同样可以使用上述两个指令实现。  \nmonitorenter指令是在编译后插入到同步代码块的开始位置，而monitorexit是插入到方法结束处和异常处，JVM要保证每个monitorenter必须有对应的monitorexit与之配对。任何对象都有一个monitor与之关联，当且一个monitor被持有之后，它将处于被锁状态。线程执行到monitor指令时，将尝试获取对象所对应的monitor的所有权，即尝试获得对象的锁。  \n### 锁的升级\n\nJava SE 1.6为了减少获得锁和释放锁带来的性能消耗，引入了偏向锁和轻量级锁，在Java SE 1.6中，锁一共有4个状态，级别从低到高依次是：无锁状态、偏向锁状态、轻量级锁状态和重量级锁状态，这几个状态随着竞争情况逐渐升级。锁可以升级但不可以降级，意味着偏向锁升级为轻量级锁后不能降级为偏向锁。这种锁只能升级不能降级的策略是为了提高获得锁和释放锁的效率。\n\n## 原子操作\n\n原子操作（atomic operation）指的是不可被中断的一个或者一系列操作。  \n处理器保证从系统内存中读取或写入一个字节是原子的，意思是当一个处理器读取一个字节时，其他处理器不能访问这个字节的内存地址。但是负责的内存操作处理器是不能自动保证原子性的，比如跨总线宽度、跨多个缓存行和跨页表的访问。但是，处理器提供**总线锁定**和**缓存锁定**两个机制来保证复杂内存操作的原子性。\n- 总线锁是指使用处理器提供的一个LOCK#信号，当一个处理器在总线上输出此信号时，其他处理器的请求将被阻塞住，那么该处理器就可以独占共享内存。但是总线锁定把CPU和内存之间的通信锁定了，这使得锁定期间，其他处理器不能操作其他内存地址的数据，所以总线锁定开销比较大。\n- 缓存锁定是指内存区域如果被缓存在处理器的缓存行中，并且在LOCK操作期间被锁定，那么当它执行写操作回写到内存时，处理器不在总线上声言LOCK#信号，而是修改内部的内存地址，并允许它的缓存一致性机制来保证操作的原子性，因为缓存一致性机制会阻止同时修改由两个以上处理器缓存的内存区域数据，当其他处理器回写已被锁定的缓存行的数据时，会使缓存行无效  \n \nCAS实现原子操作的三大问题：\n1. ABA问题；\n2. 循环时间长开销大；\n3. 只能保证一个共享变量的原子操作。","source":"_posts/并发机制的底层实现原理.md","raw":"---\ntitle: 并发机制的底层实现原理\ndate: 2019-01-21 10:22:24\ntags: \n    - volatile\n    - synchronized\n    - 原子操作\ncategories: Java并发编程\n---\n# 并发机制的底层实现原理\n## volatile\n在多线程并发编程中synchronized和volatile关键字都扮演着重要角色，volatile是轻量级的synchronized，它在多处理器开发中保证了共享变量的“可见性”。可见性的意思是当一个线程修改一个共享变量时，另外的线程可以读到修改后的值。volatile的恰当使用能比synchronized关键字的使用和执行成本更低，因为它不会引起线程上下文的切换和调度。  \n<!-- more --> \n**定义**：Java编程语言允许线程访问共享变量，为了确保共享变量能被准确和一致地更新，线程应该确保通过排他锁单独获得这个变量。  \nJava语言提供了volatile，在某些情况下比锁要更加方便。如果一个字段被声明为volatile，Java线程内存模型确保所有线程看到这个变量的值是一致的。  \n在X86处理器下通过工具获取JIT编译器生成的汇编指令，查看对volatile变量进行写操作时，对应CPU的操作，例子如下：\n- Java代码如下：  \n```\ninstance = new Singleton();    //instance是volatile变量\n```\n- 转化为汇编代码，如下：  \n```\n0x01a3de1d: movb $0x0,ox1104800(%esi);0x01a3de24: lock addl $0x0,(%esp); \n```\n有volatile变量修饰的共享变量进行写操作时会多出两行汇编代码，通过查看IA-32架构软件开发者手册可知，Lock前缀的指令在多核处理器中会发生以下两件事情。  \n1. 将当前处理器的缓存行的数据写回到系统内存；\n2. 这个写回内存的操作会是其他CPU里缓存了该内存地址的数据无效。\n\n## synchronized\n在多线程并发编程中synchronized一直是元老级角色，很多人称呼它为重量级锁。Java SE1.6对synchronized进行了各种优化，为减少获得锁和释放锁带来的性能消耗而引入的偏向锁和轻量级锁。  \nsynchronized实现同步的基础：Java中的每一个对象都可以作为锁，具体表现为一些3种形式：  \n- 对于普通同步方法，锁是当前实例对象；\n- 对于静态同步方法，锁是当前类的Class对象；\n- 对于同步代码块，锁是Synchronized括号里配置的对象。  \n\n当一个线程师徒访问同步代码块时，它首先必须得到锁，退出或者抛出异常时必须释放锁。  \n从JVM规范中可以看到Synchronized在JVM里实现的原理，JVM基于进入和退出Monitor对象来实现方法同步和代码块同步，但两者实现细节不同。代码块同步用monitorenter和monitorexit指令实现，而方法同步是使用另一种方式实现的，细节没有在JVM规范中提及。但方法的同步同样可以使用上述两个指令实现。  \nmonitorenter指令是在编译后插入到同步代码块的开始位置，而monitorexit是插入到方法结束处和异常处，JVM要保证每个monitorenter必须有对应的monitorexit与之配对。任何对象都有一个monitor与之关联，当且一个monitor被持有之后，它将处于被锁状态。线程执行到monitor指令时，将尝试获取对象所对应的monitor的所有权，即尝试获得对象的锁。  \n### 锁的升级\n\nJava SE 1.6为了减少获得锁和释放锁带来的性能消耗，引入了偏向锁和轻量级锁，在Java SE 1.6中，锁一共有4个状态，级别从低到高依次是：无锁状态、偏向锁状态、轻量级锁状态和重量级锁状态，这几个状态随着竞争情况逐渐升级。锁可以升级但不可以降级，意味着偏向锁升级为轻量级锁后不能降级为偏向锁。这种锁只能升级不能降级的策略是为了提高获得锁和释放锁的效率。\n\n## 原子操作\n\n原子操作（atomic operation）指的是不可被中断的一个或者一系列操作。  \n处理器保证从系统内存中读取或写入一个字节是原子的，意思是当一个处理器读取一个字节时，其他处理器不能访问这个字节的内存地址。但是负责的内存操作处理器是不能自动保证原子性的，比如跨总线宽度、跨多个缓存行和跨页表的访问。但是，处理器提供**总线锁定**和**缓存锁定**两个机制来保证复杂内存操作的原子性。\n- 总线锁是指使用处理器提供的一个LOCK#信号，当一个处理器在总线上输出此信号时，其他处理器的请求将被阻塞住，那么该处理器就可以独占共享内存。但是总线锁定把CPU和内存之间的通信锁定了，这使得锁定期间，其他处理器不能操作其他内存地址的数据，所以总线锁定开销比较大。\n- 缓存锁定是指内存区域如果被缓存在处理器的缓存行中，并且在LOCK操作期间被锁定，那么当它执行写操作回写到内存时，处理器不在总线上声言LOCK#信号，而是修改内部的内存地址，并允许它的缓存一致性机制来保证操作的原子性，因为缓存一致性机制会阻止同时修改由两个以上处理器缓存的内存区域数据，当其他处理器回写已被锁定的缓存行的数据时，会使缓存行无效  \n \nCAS实现原子操作的三大问题：\n1. ABA问题；\n2. 循环时间长开销大；\n3. 只能保证一个共享变量的原子操作。","slug":"并发机制的底层实现原理","published":1,"updated":"2019-01-21T13:02:52.104Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck0ozhixb001ogkuwrtx4bzek","content":"<h1 id=\"并发机制的底层实现原理\"><a href=\"#并发机制的底层实现原理\" class=\"headerlink\" title=\"并发机制的底层实现原理\"></a>并发机制的底层实现原理</h1><h2 id=\"volatile\"><a href=\"#volatile\" class=\"headerlink\" title=\"volatile\"></a>volatile</h2><p>在多线程并发编程中synchronized和volatile关键字都扮演着重要角色，volatile是轻量级的synchronized，它在多处理器开发中保证了共享变量的“可见性”。可见性的意思是当一个线程修改一个共享变量时，另外的线程可以读到修改后的值。volatile的恰当使用能比synchronized关键字的使用和执行成本更低，因为它不会引起线程上下文的切换和调度。<br><a id=\"more\"></a><br><strong>定义</strong>：Java编程语言允许线程访问共享变量，为了确保共享变量能被准确和一致地更新，线程应该确保通过排他锁单独获得这个变量。<br>Java语言提供了volatile，在某些情况下比锁要更加方便。如果一个字段被声明为volatile，Java线程内存模型确保所有线程看到这个变量的值是一致的。<br>在X86处理器下通过工具获取JIT编译器生成的汇编指令，查看对volatile变量进行写操作时，对应CPU的操作，例子如下：</p>\n<ul>\n<li><p>Java代码如下：  </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">instance = new Singleton();    //instance是volatile变量</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>转化为汇编代码，如下：  </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">0x01a3de1d: movb $0x0,ox1104800(%esi);0x01a3de24: lock addl $0x0,(%esp);</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>有volatile变量修饰的共享变量进行写操作时会多出两行汇编代码，通过查看IA-32架构软件开发者手册可知，Lock前缀的指令在多核处理器中会发生以下两件事情。  </p>\n<ol>\n<li>将当前处理器的缓存行的数据写回到系统内存；</li>\n<li>这个写回内存的操作会是其他CPU里缓存了该内存地址的数据无效。</li>\n</ol>\n<h2 id=\"synchronized\"><a href=\"#synchronized\" class=\"headerlink\" title=\"synchronized\"></a>synchronized</h2><p>在多线程并发编程中synchronized一直是元老级角色，很多人称呼它为重量级锁。Java SE1.6对synchronized进行了各种优化，为减少获得锁和释放锁带来的性能消耗而引入的偏向锁和轻量级锁。<br>synchronized实现同步的基础：Java中的每一个对象都可以作为锁，具体表现为一些3种形式：  </p>\n<ul>\n<li>对于普通同步方法，锁是当前实例对象；</li>\n<li>对于静态同步方法，锁是当前类的Class对象；</li>\n<li>对于同步代码块，锁是Synchronized括号里配置的对象。  </li>\n</ul>\n<p>当一个线程师徒访问同步代码块时，它首先必须得到锁，退出或者抛出异常时必须释放锁。<br>从JVM规范中可以看到Synchronized在JVM里实现的原理，JVM基于进入和退出Monitor对象来实现方法同步和代码块同步，但两者实现细节不同。代码块同步用monitorenter和monitorexit指令实现，而方法同步是使用另一种方式实现的，细节没有在JVM规范中提及。但方法的同步同样可以使用上述两个指令实现。<br>monitorenter指令是在编译后插入到同步代码块的开始位置，而monitorexit是插入到方法结束处和异常处，JVM要保证每个monitorenter必须有对应的monitorexit与之配对。任何对象都有一个monitor与之关联，当且一个monitor被持有之后，它将处于被锁状态。线程执行到monitor指令时，将尝试获取对象所对应的monitor的所有权，即尝试获得对象的锁。  </p>\n<h3 id=\"锁的升级\"><a href=\"#锁的升级\" class=\"headerlink\" title=\"锁的升级\"></a>锁的升级</h3><p>Java SE 1.6为了减少获得锁和释放锁带来的性能消耗，引入了偏向锁和轻量级锁，在Java SE 1.6中，锁一共有4个状态，级别从低到高依次是：无锁状态、偏向锁状态、轻量级锁状态和重量级锁状态，这几个状态随着竞争情况逐渐升级。锁可以升级但不可以降级，意味着偏向锁升级为轻量级锁后不能降级为偏向锁。这种锁只能升级不能降级的策略是为了提高获得锁和释放锁的效率。</p>\n<h2 id=\"原子操作\"><a href=\"#原子操作\" class=\"headerlink\" title=\"原子操作\"></a>原子操作</h2><p>原子操作（atomic operation）指的是不可被中断的一个或者一系列操作。<br>处理器保证从系统内存中读取或写入一个字节是原子的，意思是当一个处理器读取一个字节时，其他处理器不能访问这个字节的内存地址。但是负责的内存操作处理器是不能自动保证原子性的，比如跨总线宽度、跨多个缓存行和跨页表的访问。但是，处理器提供<strong>总线锁定</strong>和<strong>缓存锁定</strong>两个机制来保证复杂内存操作的原子性。</p>\n<ul>\n<li>总线锁是指使用处理器提供的一个LOCK#信号，当一个处理器在总线上输出此信号时，其他处理器的请求将被阻塞住，那么该处理器就可以独占共享内存。但是总线锁定把CPU和内存之间的通信锁定了，这使得锁定期间，其他处理器不能操作其他内存地址的数据，所以总线锁定开销比较大。</li>\n<li>缓存锁定是指内存区域如果被缓存在处理器的缓存行中，并且在LOCK操作期间被锁定，那么当它执行写操作回写到内存时，处理器不在总线上声言LOCK#信号，而是修改内部的内存地址，并允许它的缓存一致性机制来保证操作的原子性，因为缓存一致性机制会阻止同时修改由两个以上处理器缓存的内存区域数据，当其他处理器回写已被锁定的缓存行的数据时，会使缓存行无效  </li>\n</ul>\n<p>CAS实现原子操作的三大问题：</p>\n<ol>\n<li>ABA问题；</li>\n<li>循环时间长开销大；</li>\n<li>只能保证一个共享变量的原子操作。</li>\n</ol>\n","site":{"data":{}},"excerpt":"<h1 id=\"并发机制的底层实现原理\"><a href=\"#并发机制的底层实现原理\" class=\"headerlink\" title=\"并发机制的底层实现原理\"></a>并发机制的底层实现原理</h1><h2 id=\"volatile\"><a href=\"#volatile\" class=\"headerlink\" title=\"volatile\"></a>volatile</h2><p>在多线程并发编程中synchronized和volatile关键字都扮演着重要角色，volatile是轻量级的synchronized，它在多处理器开发中保证了共享变量的“可见性”。可见性的意思是当一个线程修改一个共享变量时，另外的线程可以读到修改后的值。volatile的恰当使用能比synchronized关键字的使用和执行成本更低，因为它不会引起线程上下文的切换和调度。<br></p>","more":"<br><strong>定义</strong>：Java编程语言允许线程访问共享变量，为了确保共享变量能被准确和一致地更新，线程应该确保通过排他锁单独获得这个变量。<br>Java语言提供了volatile，在某些情况下比锁要更加方便。如果一个字段被声明为volatile，Java线程内存模型确保所有线程看到这个变量的值是一致的。<br>在X86处理器下通过工具获取JIT编译器生成的汇编指令，查看对volatile变量进行写操作时，对应CPU的操作，例子如下：<p></p>\n<ul>\n<li><p>Java代码如下：  </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">instance = new Singleton();    //instance是volatile变量</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>转化为汇编代码，如下：  </p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">0x01a3de1d: movb $0x0,ox1104800(%esi);0x01a3de24: lock addl $0x0,(%esp);</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<p>有volatile变量修饰的共享变量进行写操作时会多出两行汇编代码，通过查看IA-32架构软件开发者手册可知，Lock前缀的指令在多核处理器中会发生以下两件事情。  </p>\n<ol>\n<li>将当前处理器的缓存行的数据写回到系统内存；</li>\n<li>这个写回内存的操作会是其他CPU里缓存了该内存地址的数据无效。</li>\n</ol>\n<h2 id=\"synchronized\"><a href=\"#synchronized\" class=\"headerlink\" title=\"synchronized\"></a>synchronized</h2><p>在多线程并发编程中synchronized一直是元老级角色，很多人称呼它为重量级锁。Java SE1.6对synchronized进行了各种优化，为减少获得锁和释放锁带来的性能消耗而引入的偏向锁和轻量级锁。<br>synchronized实现同步的基础：Java中的每一个对象都可以作为锁，具体表现为一些3种形式：  </p>\n<ul>\n<li>对于普通同步方法，锁是当前实例对象；</li>\n<li>对于静态同步方法，锁是当前类的Class对象；</li>\n<li>对于同步代码块，锁是Synchronized括号里配置的对象。  </li>\n</ul>\n<p>当一个线程师徒访问同步代码块时，它首先必须得到锁，退出或者抛出异常时必须释放锁。<br>从JVM规范中可以看到Synchronized在JVM里实现的原理，JVM基于进入和退出Monitor对象来实现方法同步和代码块同步，但两者实现细节不同。代码块同步用monitorenter和monitorexit指令实现，而方法同步是使用另一种方式实现的，细节没有在JVM规范中提及。但方法的同步同样可以使用上述两个指令实现。<br>monitorenter指令是在编译后插入到同步代码块的开始位置，而monitorexit是插入到方法结束处和异常处，JVM要保证每个monitorenter必须有对应的monitorexit与之配对。任何对象都有一个monitor与之关联，当且一个monitor被持有之后，它将处于被锁状态。线程执行到monitor指令时，将尝试获取对象所对应的monitor的所有权，即尝试获得对象的锁。  </p>\n<h3 id=\"锁的升级\"><a href=\"#锁的升级\" class=\"headerlink\" title=\"锁的升级\"></a>锁的升级</h3><p>Java SE 1.6为了减少获得锁和释放锁带来的性能消耗，引入了偏向锁和轻量级锁，在Java SE 1.6中，锁一共有4个状态，级别从低到高依次是：无锁状态、偏向锁状态、轻量级锁状态和重量级锁状态，这几个状态随着竞争情况逐渐升级。锁可以升级但不可以降级，意味着偏向锁升级为轻量级锁后不能降级为偏向锁。这种锁只能升级不能降级的策略是为了提高获得锁和释放锁的效率。</p>\n<h2 id=\"原子操作\"><a href=\"#原子操作\" class=\"headerlink\" title=\"原子操作\"></a>原子操作</h2><p>原子操作（atomic operation）指的是不可被中断的一个或者一系列操作。<br>处理器保证从系统内存中读取或写入一个字节是原子的，意思是当一个处理器读取一个字节时，其他处理器不能访问这个字节的内存地址。但是负责的内存操作处理器是不能自动保证原子性的，比如跨总线宽度、跨多个缓存行和跨页表的访问。但是，处理器提供<strong>总线锁定</strong>和<strong>缓存锁定</strong>两个机制来保证复杂内存操作的原子性。</p>\n<ul>\n<li>总线锁是指使用处理器提供的一个LOCK#信号，当一个处理器在总线上输出此信号时，其他处理器的请求将被阻塞住，那么该处理器就可以独占共享内存。但是总线锁定把CPU和内存之间的通信锁定了，这使得锁定期间，其他处理器不能操作其他内存地址的数据，所以总线锁定开销比较大。</li>\n<li>缓存锁定是指内存区域如果被缓存在处理器的缓存行中，并且在LOCK操作期间被锁定，那么当它执行写操作回写到内存时，处理器不在总线上声言LOCK#信号，而是修改内部的内存地址，并允许它的缓存一致性机制来保证操作的原子性，因为缓存一致性机制会阻止同时修改由两个以上处理器缓存的内存区域数据，当其他处理器回写已被锁定的缓存行的数据时，会使缓存行无效  </li>\n</ul>\n<p>CAS实现原子操作的三大问题：</p>\n<ol>\n<li>ABA问题；</li>\n<li>循环时间长开销大；</li>\n<li>只能保证一个共享变量的原子操作。</li>\n</ol>"},{"title":"并发编程的挑战","date":"2019-01-20T12:06:28.000Z","_content":"\n# 并发编程的挑战\n\n## 上下文切换\n在多线程执行代码的过程中，CPU为每个线程分配CPU时间片保证线程的执行，时间片很短，一般是几十毫秒（ms）。CPU通过时间片分配算法来循环执行任务，当前任务执行一个时间片后会切换到下一个任务。但是，在切换前会保存前一个任务的状态，以便下次切换回这个任务的时候可以再加载这个任务。任务从保存到再加载的过程就是一次上下文切换。  \n<!-- more --> \n多线程由于上下文切换的存在使得其不一定比单线程快，一般减少上下文切换的方法有无锁并发编程、CAS算法、使用最少线程和使用协程。  \n- **无锁并发编程**：多线程竞争锁时，会引起上下文切换，所以多线程处理数据时，可以用一些方法来避免使用锁，如将数据的ID按照Hash算法取模分段，不同线程处理不同段的数据；\n- **CAS算法**：Java的Atomic包使用CAS算法来更新数据，而不需要加锁；\n- **使用最少线程**：避免创建不需要的线程，比如任务少时，创建很多线程会造成大量线程都处于等待状态；\n- **使用协程**：在单线程中实现多任务的调度，并在单线程里维持多个任务间的切换。\n## 死锁\n死锁是指由于两个或者多个任务互相持有对方所需要的资源，导致这些线程处于等待状态，无法前往执行。\n\n### 线程死锁产生的四个必要条件\n1. **互斥条件**：某种资源一次只允许一个线程访问，即该资源一旦分配给某个线程，其他线程就不能再访问，直到该进程访问结束并释放；\n2. **请求和保持条件**：指线程已经保持至少一个资源，但又提出了新的资源请求，而该资源已被其它线程占有，此时请求进程阻塞，但又对自己已获得的其它资源保持不放；\n3. **不剥夺条件**：指线程已获得的资源，在未使用完之前，不能被剥夺，只能在使用完时由自己释放；\n4. **环路(循环)等待条件**：指在发生死锁时，必然存在一个线程——资源的环形链，即线程集合`{t0，t1，t2，···，tn}`中的t0正在等待一个t1占用的资源；t1正在等待t2占用的资源，……，tn正在等待已被t0占用的资源。\n\n### 避免死锁的几个常用方法\n- 避免一个线程同时获得多个锁；\n- 避免一个线程在锁内同时占用多个资源，尽量保证每个锁只占用一个资源；\n- 尝试使用定时锁，使用`lock。tryLock(timeout)`来替代使用内部锁机制；\n- 对于数据库锁，加锁和解锁必须在一个数据库连接里，否则会出现解锁失败的情况。\n\n## 资源限制的挑战\n\n资源限制是指在进行并发编程时，程序的执行速度受限于计算机硬件资源或软件资源。例如，网络带宽的限制、硬盘读写速度的限制、CPU计算速度的限制、数据库的连接数和socket连接数限制等。\n### 资源限制引发的问题\n在并发编程中，将代码执行速度加快的原则是将代码中串行执行的部分变为并发执行，但如果将某段串行代码并发执行，因为资源受限，仍然在串行执行，这时候程序不仅不会加快执行，反而会更慢，因为增加了上下文切换和资源调度的时间。\n### 资源限制的解决\n对应硬件资源限制，可以考虑使用集群并行执行程序。既然单机的资源有限制，那么就让程序在多机上运行。比如用`ODPS`、`Hadoop`或者自己搭建服务器集群，不同的机器处理不同的数据。  \n对于软件资源限制，可以考虑使用资源池复用资源。比如使用连接池将数据库和Socket连接复用，或者在调用对方webservice接口获取数据时，只建立一个连接。\n### 资源限制下的并发编程\n根据不同的资源限制调整程序的并发度，比如下载文件程序依赖于两个资源——带宽和硬盘读写速度。有数据库操作时，涉及数据库连接数，如果SQL语句执行非常快，而线程的数量比数据库连接数大很多，就会导致某些线程被阻塞，等待数据库连接，因此这个时候就应该降低线程数量。\n","source":"_posts/并发编程的挑战.md","raw":"---\ntitle: 并发编程的挑战\ndate: 2019-01-20 20:06:28\ntags: \n    - 上下文切换\n    - 死锁\ncategories: Java并发编程\n---\n\n# 并发编程的挑战\n\n## 上下文切换\n在多线程执行代码的过程中，CPU为每个线程分配CPU时间片保证线程的执行，时间片很短，一般是几十毫秒（ms）。CPU通过时间片分配算法来循环执行任务，当前任务执行一个时间片后会切换到下一个任务。但是，在切换前会保存前一个任务的状态，以便下次切换回这个任务的时候可以再加载这个任务。任务从保存到再加载的过程就是一次上下文切换。  \n<!-- more --> \n多线程由于上下文切换的存在使得其不一定比单线程快，一般减少上下文切换的方法有无锁并发编程、CAS算法、使用最少线程和使用协程。  \n- **无锁并发编程**：多线程竞争锁时，会引起上下文切换，所以多线程处理数据时，可以用一些方法来避免使用锁，如将数据的ID按照Hash算法取模分段，不同线程处理不同段的数据；\n- **CAS算法**：Java的Atomic包使用CAS算法来更新数据，而不需要加锁；\n- **使用最少线程**：避免创建不需要的线程，比如任务少时，创建很多线程会造成大量线程都处于等待状态；\n- **使用协程**：在单线程中实现多任务的调度，并在单线程里维持多个任务间的切换。\n## 死锁\n死锁是指由于两个或者多个任务互相持有对方所需要的资源，导致这些线程处于等待状态，无法前往执行。\n\n### 线程死锁产生的四个必要条件\n1. **互斥条件**：某种资源一次只允许一个线程访问，即该资源一旦分配给某个线程，其他线程就不能再访问，直到该进程访问结束并释放；\n2. **请求和保持条件**：指线程已经保持至少一个资源，但又提出了新的资源请求，而该资源已被其它线程占有，此时请求进程阻塞，但又对自己已获得的其它资源保持不放；\n3. **不剥夺条件**：指线程已获得的资源，在未使用完之前，不能被剥夺，只能在使用完时由自己释放；\n4. **环路(循环)等待条件**：指在发生死锁时，必然存在一个线程——资源的环形链，即线程集合`{t0，t1，t2，···，tn}`中的t0正在等待一个t1占用的资源；t1正在等待t2占用的资源，……，tn正在等待已被t0占用的资源。\n\n### 避免死锁的几个常用方法\n- 避免一个线程同时获得多个锁；\n- 避免一个线程在锁内同时占用多个资源，尽量保证每个锁只占用一个资源；\n- 尝试使用定时锁，使用`lock。tryLock(timeout)`来替代使用内部锁机制；\n- 对于数据库锁，加锁和解锁必须在一个数据库连接里，否则会出现解锁失败的情况。\n\n## 资源限制的挑战\n\n资源限制是指在进行并发编程时，程序的执行速度受限于计算机硬件资源或软件资源。例如，网络带宽的限制、硬盘读写速度的限制、CPU计算速度的限制、数据库的连接数和socket连接数限制等。\n### 资源限制引发的问题\n在并发编程中，将代码执行速度加快的原则是将代码中串行执行的部分变为并发执行，但如果将某段串行代码并发执行，因为资源受限，仍然在串行执行，这时候程序不仅不会加快执行，反而会更慢，因为增加了上下文切换和资源调度的时间。\n### 资源限制的解决\n对应硬件资源限制，可以考虑使用集群并行执行程序。既然单机的资源有限制，那么就让程序在多机上运行。比如用`ODPS`、`Hadoop`或者自己搭建服务器集群，不同的机器处理不同的数据。  \n对于软件资源限制，可以考虑使用资源池复用资源。比如使用连接池将数据库和Socket连接复用，或者在调用对方webservice接口获取数据时，只建立一个连接。\n### 资源限制下的并发编程\n根据不同的资源限制调整程序的并发度，比如下载文件程序依赖于两个资源——带宽和硬盘读写速度。有数据库操作时，涉及数据库连接数，如果SQL语句执行非常快，而线程的数量比数据库连接数大很多，就会导致某些线程被阻塞，等待数据库连接，因此这个时候就应该降低线程数量。\n","slug":"并发编程的挑战","published":1,"updated":"2019-01-21T02:25:24.579Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck0ozhixc001sgkuwp49thp7j","content":"<h1 id=\"并发编程的挑战\"><a href=\"#并发编程的挑战\" class=\"headerlink\" title=\"并发编程的挑战\"></a>并发编程的挑战</h1><h2 id=\"上下文切换\"><a href=\"#上下文切换\" class=\"headerlink\" title=\"上下文切换\"></a>上下文切换</h2><p>在多线程执行代码的过程中，CPU为每个线程分配CPU时间片保证线程的执行，时间片很短，一般是几十毫秒（ms）。CPU通过时间片分配算法来循环执行任务，当前任务执行一个时间片后会切换到下一个任务。但是，在切换前会保存前一个任务的状态，以便下次切换回这个任务的时候可以再加载这个任务。任务从保存到再加载的过程就是一次上下文切换。<br><a id=\"more\"></a><br>多线程由于上下文切换的存在使得其不一定比单线程快，一般减少上下文切换的方法有无锁并发编程、CAS算法、使用最少线程和使用协程。  </p>\n<ul>\n<li><strong>无锁并发编程</strong>：多线程竞争锁时，会引起上下文切换，所以多线程处理数据时，可以用一些方法来避免使用锁，如将数据的ID按照Hash算法取模分段，不同线程处理不同段的数据；</li>\n<li><strong>CAS算法</strong>：Java的Atomic包使用CAS算法来更新数据，而不需要加锁；</li>\n<li><strong>使用最少线程</strong>：避免创建不需要的线程，比如任务少时，创建很多线程会造成大量线程都处于等待状态；</li>\n<li><strong>使用协程</strong>：在单线程中实现多任务的调度，并在单线程里维持多个任务间的切换。<h2 id=\"死锁\"><a href=\"#死锁\" class=\"headerlink\" title=\"死锁\"></a>死锁</h2>死锁是指由于两个或者多个任务互相持有对方所需要的资源，导致这些线程处于等待状态，无法前往执行。</li>\n</ul>\n<h3 id=\"线程死锁产生的四个必要条件\"><a href=\"#线程死锁产生的四个必要条件\" class=\"headerlink\" title=\"线程死锁产生的四个必要条件\"></a>线程死锁产生的四个必要条件</h3><ol>\n<li><strong>互斥条件</strong>：某种资源一次只允许一个线程访问，即该资源一旦分配给某个线程，其他线程就不能再访问，直到该进程访问结束并释放；</li>\n<li><strong>请求和保持条件</strong>：指线程已经保持至少一个资源，但又提出了新的资源请求，而该资源已被其它线程占有，此时请求进程阻塞，但又对自己已获得的其它资源保持不放；</li>\n<li><strong>不剥夺条件</strong>：指线程已获得的资源，在未使用完之前，不能被剥夺，只能在使用完时由自己释放；</li>\n<li><strong>环路(循环)等待条件</strong>：指在发生死锁时，必然存在一个线程——资源的环形链，即线程集合<code>{t0，t1，t2，···，tn}</code>中的t0正在等待一个t1占用的资源；t1正在等待t2占用的资源，……，tn正在等待已被t0占用的资源。</li>\n</ol>\n<h3 id=\"避免死锁的几个常用方法\"><a href=\"#避免死锁的几个常用方法\" class=\"headerlink\" title=\"避免死锁的几个常用方法\"></a>避免死锁的几个常用方法</h3><ul>\n<li>避免一个线程同时获得多个锁；</li>\n<li>避免一个线程在锁内同时占用多个资源，尽量保证每个锁只占用一个资源；</li>\n<li>尝试使用定时锁，使用<code>lock。tryLock(timeout)</code>来替代使用内部锁机制；</li>\n<li>对于数据库锁，加锁和解锁必须在一个数据库连接里，否则会出现解锁失败的情况。</li>\n</ul>\n<h2 id=\"资源限制的挑战\"><a href=\"#资源限制的挑战\" class=\"headerlink\" title=\"资源限制的挑战\"></a>资源限制的挑战</h2><p>资源限制是指在进行并发编程时，程序的执行速度受限于计算机硬件资源或软件资源。例如，网络带宽的限制、硬盘读写速度的限制、CPU计算速度的限制、数据库的连接数和socket连接数限制等。</p>\n<h3 id=\"资源限制引发的问题\"><a href=\"#资源限制引发的问题\" class=\"headerlink\" title=\"资源限制引发的问题\"></a>资源限制引发的问题</h3><p>在并发编程中，将代码执行速度加快的原则是将代码中串行执行的部分变为并发执行，但如果将某段串行代码并发执行，因为资源受限，仍然在串行执行，这时候程序不仅不会加快执行，反而会更慢，因为增加了上下文切换和资源调度的时间。</p>\n<h3 id=\"资源限制的解决\"><a href=\"#资源限制的解决\" class=\"headerlink\" title=\"资源限制的解决\"></a>资源限制的解决</h3><p>对应硬件资源限制，可以考虑使用集群并行执行程序。既然单机的资源有限制，那么就让程序在多机上运行。比如用<code>ODPS</code>、<code>Hadoop</code>或者自己搭建服务器集群，不同的机器处理不同的数据。<br>对于软件资源限制，可以考虑使用资源池复用资源。比如使用连接池将数据库和Socket连接复用，或者在调用对方webservice接口获取数据时，只建立一个连接。</p>\n<h3 id=\"资源限制下的并发编程\"><a href=\"#资源限制下的并发编程\" class=\"headerlink\" title=\"资源限制下的并发编程\"></a>资源限制下的并发编程</h3><p>根据不同的资源限制调整程序的并发度，比如下载文件程序依赖于两个资源——带宽和硬盘读写速度。有数据库操作时，涉及数据库连接数，如果SQL语句执行非常快，而线程的数量比数据库连接数大很多，就会导致某些线程被阻塞，等待数据库连接，因此这个时候就应该降低线程数量。</p>\n","site":{"data":{}},"excerpt":"<h1 id=\"并发编程的挑战\"><a href=\"#并发编程的挑战\" class=\"headerlink\" title=\"并发编程的挑战\"></a>并发编程的挑战</h1><h2 id=\"上下文切换\"><a href=\"#上下文切换\" class=\"headerlink\" title=\"上下文切换\"></a>上下文切换</h2><p>在多线程执行代码的过程中，CPU为每个线程分配CPU时间片保证线程的执行，时间片很短，一般是几十毫秒（ms）。CPU通过时间片分配算法来循环执行任务，当前任务执行一个时间片后会切换到下一个任务。但是，在切换前会保存前一个任务的状态，以便下次切换回这个任务的时候可以再加载这个任务。任务从保存到再加载的过程就是一次上下文切换。<br></p>","more":"<br>多线程由于上下文切换的存在使得其不一定比单线程快，一般减少上下文切换的方法有无锁并发编程、CAS算法、使用最少线程和使用协程。  <p></p>\n<ul>\n<li><strong>无锁并发编程</strong>：多线程竞争锁时，会引起上下文切换，所以多线程处理数据时，可以用一些方法来避免使用锁，如将数据的ID按照Hash算法取模分段，不同线程处理不同段的数据；</li>\n<li><strong>CAS算法</strong>：Java的Atomic包使用CAS算法来更新数据，而不需要加锁；</li>\n<li><strong>使用最少线程</strong>：避免创建不需要的线程，比如任务少时，创建很多线程会造成大量线程都处于等待状态；</li>\n<li><strong>使用协程</strong>：在单线程中实现多任务的调度，并在单线程里维持多个任务间的切换。<h2 id=\"死锁\"><a href=\"#死锁\" class=\"headerlink\" title=\"死锁\"></a>死锁</h2>死锁是指由于两个或者多个任务互相持有对方所需要的资源，导致这些线程处于等待状态，无法前往执行。</li>\n</ul>\n<h3 id=\"线程死锁产生的四个必要条件\"><a href=\"#线程死锁产生的四个必要条件\" class=\"headerlink\" title=\"线程死锁产生的四个必要条件\"></a>线程死锁产生的四个必要条件</h3><ol>\n<li><strong>互斥条件</strong>：某种资源一次只允许一个线程访问，即该资源一旦分配给某个线程，其他线程就不能再访问，直到该进程访问结束并释放；</li>\n<li><strong>请求和保持条件</strong>：指线程已经保持至少一个资源，但又提出了新的资源请求，而该资源已被其它线程占有，此时请求进程阻塞，但又对自己已获得的其它资源保持不放；</li>\n<li><strong>不剥夺条件</strong>：指线程已获得的资源，在未使用完之前，不能被剥夺，只能在使用完时由自己释放；</li>\n<li><strong>环路(循环)等待条件</strong>：指在发生死锁时，必然存在一个线程——资源的环形链，即线程集合<code>{t0，t1，t2，···，tn}</code>中的t0正在等待一个t1占用的资源；t1正在等待t2占用的资源，……，tn正在等待已被t0占用的资源。</li>\n</ol>\n<h3 id=\"避免死锁的几个常用方法\"><a href=\"#避免死锁的几个常用方法\" class=\"headerlink\" title=\"避免死锁的几个常用方法\"></a>避免死锁的几个常用方法</h3><ul>\n<li>避免一个线程同时获得多个锁；</li>\n<li>避免一个线程在锁内同时占用多个资源，尽量保证每个锁只占用一个资源；</li>\n<li>尝试使用定时锁，使用<code>lock。tryLock(timeout)</code>来替代使用内部锁机制；</li>\n<li>对于数据库锁，加锁和解锁必须在一个数据库连接里，否则会出现解锁失败的情况。</li>\n</ul>\n<h2 id=\"资源限制的挑战\"><a href=\"#资源限制的挑战\" class=\"headerlink\" title=\"资源限制的挑战\"></a>资源限制的挑战</h2><p>资源限制是指在进行并发编程时，程序的执行速度受限于计算机硬件资源或软件资源。例如，网络带宽的限制、硬盘读写速度的限制、CPU计算速度的限制、数据库的连接数和socket连接数限制等。</p>\n<h3 id=\"资源限制引发的问题\"><a href=\"#资源限制引发的问题\" class=\"headerlink\" title=\"资源限制引发的问题\"></a>资源限制引发的问题</h3><p>在并发编程中，将代码执行速度加快的原则是将代码中串行执行的部分变为并发执行，但如果将某段串行代码并发执行，因为资源受限，仍然在串行执行，这时候程序不仅不会加快执行，反而会更慢，因为增加了上下文切换和资源调度的时间。</p>\n<h3 id=\"资源限制的解决\"><a href=\"#资源限制的解决\" class=\"headerlink\" title=\"资源限制的解决\"></a>资源限制的解决</h3><p>对应硬件资源限制，可以考虑使用集群并行执行程序。既然单机的资源有限制，那么就让程序在多机上运行。比如用<code>ODPS</code>、<code>Hadoop</code>或者自己搭建服务器集群，不同的机器处理不同的数据。<br>对于软件资源限制，可以考虑使用资源池复用资源。比如使用连接池将数据库和Socket连接复用，或者在调用对方webservice接口获取数据时，只建立一个连接。</p>\n<h3 id=\"资源限制下的并发编程\"><a href=\"#资源限制下的并发编程\" class=\"headerlink\" title=\"资源限制下的并发编程\"></a>资源限制下的并发编程</h3><p>根据不同的资源限制调整程序的并发度，比如下载文件程序依赖于两个资源——带宽和硬盘读写速度。有数据库操作时，涉及数据库连接数，如果SQL语句执行非常快，而线程的数量比数据库连接数大很多，就会导致某些线程被阻塞，等待数据库连接，因此这个时候就应该降低线程数量。</p>"},{"title":"感知机","date":"2019-09-17T13:21:02.000Z","_content":"\n感知机（`perceptron`）是二类分类的线性分类模型，其输入为实例的特征向量，输出为实例的类别，取$+1$和$-1$二值。感知机对应于输入空间（特征空间）中将实例划分为正负两类的分离超平面，属于判别模型。\n<!-- more --> \n\n# 感知机模型\n\n## 定义\n假设输入空间（特征空间）是$X\\in{R^n}$，输出空间是$Y={+1,-1}$。输入$x\\in{X}$表示实例的特征向量，对应于输入空间（特征空间）的点；输出$y\\in{Y}$表示实例的类别。由输入空间到输出空间的如下函数  \n\n$$\nf(x)=sign(w\\cdot{x}+b)\n$$\n\n称为感知机。其中，$w$和$b$为感知机模型的参数，$w\\in{R^n}$叫作权值（weight）或权值向量（weight vector），$b\\in{R}$叫作偏置（bias），$w\\cdot{x}$表示$w$和$x$的内积。$sign$是符号函数，即  \n\n$$\nsign(x)= \\begin{cases}  \n+1, & x \\geq 0 \\\\\n-1, & x < 0\n\\end{cases}\n$$\n\n感知机是一种线性分类模型，属于判别模型。感知机模型的空间假设是定义在特征空间中的所有线性分类模型（linear classification model）或线性分类器（linear classifier），即函数集合$f|f(x)=w\\cdot{x}+b$。\n\n感知机其实就是寻找一个超平面$w\\cdot{x}+b=0$将特征空间划分成为两个部分。位于超平面两侧的点分别被分为正负两类。\n\n# 感知机学习策略\n\n## 数据集的线性可分性定义\n\n给定一个数据集   \n\n$$\nT={(x_1,y_1),(x_2,y_2),\\cdots,(x_N,y_N)},\n$$\n\n其中，$x_i\\in{X}=R^n, y_i\\in{Y}={+1,-1}, i=1,2,\\cdots,N$，如果存在某个超平面能够将数据集的正实例点和负实例点完全正确地划分到超平面的两侧，即对所有$y_i=+1$的实例$i$，有$w\\cdot{x}+b>0$；对所有$y_i=-1$的实例$i$，有$w\\cdot{x}+b<0$，则称数据集$T$是线性可分数据集(linear separable data set)；否则称数据集$T$线性不可分。\n\n## 学习策略\n\n损失函数是误分类点到超平面$S$的总距离，首先写出输入空间$R^n$中任一点$x_0$到超平面$S$的距离：\n\n$$\n\\frac{1}{||w||}|w\\cdot{x_0}+b|\n$$\n\n其中，$||w||$是$w$的$L_2$范数。  \n其次，对于误分类的数据$(x_i,y_i)$来说，有$-y_i(w\\cdot{x}+b)>0$成立。因此误分类点$x_i$到超平面$S$的距离也可以表示成：\n\n$$\n-\\frac{1}{||w||}y_i(w\\cdot{x_i}+b)\n$$\n\n假设超平面$S$对应的误分类点集合为$M$，那么所有误分类点到超平面$S$的总距离为\n\n$$\n-\\frac{1}{||w||}\\sum_{x_i\\in{M}}y_i(w\\cdot{x_i}+b)\n$$\n\n不考虑$\\frac{1}{||w||}$就得到了感知机学习的损失函数。  \n\n给定训练数据集\n\n$$\nT={(x_1,y_1),(x_2,y_2),\\cdots,(x_N,y_N)},\n$$\n其中，$x_i\\in{X}=R^n, y_i\\in{Y}={+1,-1}, i=1,2,\\cdots,N$。感知机$sign(w\\cdot{x}+b)$学习的损失函数定义为\n\n$$\nL(w,b)=-\\sum_{x_i\\in{M}}y_i(w\\cdot{x_i}+b)\n$$\n其中，$M$是误分类点的集合。\n\n# 感知机学习算法\n\n感知机学习算法有原始形式和对偶形式两种。\n\n## 原始形式\n\n感知机学习算法是对以下最优化问题的算法。给定一个训练数据集\n\n$$\nT={(x_1,y_1),(x_2,y_2),\\cdots,(x_N,y_N)},\n$$\n其中，$x_i\\in{X}=R^n, y_i\\in{Y}={+1,-1}, i=1,2,\\cdots,N$，求解参数$w,b$，使其为以下损失函数最小化问题的解  \n\n$$\nmin_{w,b}L(w,b)=min_{w,b}-\\sum_{x_i\\in{M}}y_i(w\\cdot{x_i}+b)\n$$\n\n其中，$M$是误分类点的集合。\n\n感知机学习算法是误分类驱动的，具体采用随机梯度下降法（stochastic gradient descent）。\n\n**感知机学习算法的原始形式**\n\n**输入**：训练数据集$T={(x_1,y_1),(x_2,y_2),\\cdots,(x_N,y_N)}$，\n其中，$x_i\\in{X}=R^n, y_i\\in{Y}={+1,-1}, i=1,2,\\cdots,N$；学习率$\\eta(0<\\eta\\le{1})$；  \n**输出**：$w,b$；感知机模型$f(x)=sign(w\\cdot{x}+b)$。   \n（1） 选取初值$w_0,b_0$；  \n（2） 在训练集中选取数据$(x_i,y_i)$；  \n（3） 如果$y_i(w\\cdot{x}+b)\\le{0}$，即$x_i$是误分类的点，那么  \n\n$$\nw\\leftarrow{w+\\eta{y_ix_i}}\\\\ \nb\\leftarrow{b+\\eta{y_i}} \n$$\n\n（4） 转至(2)，直至训练集中没有误分类点\n\n## 算法收敛性\n\n证明对于线性可分的数据集感知机学习算法原始形式收敛，即经过有限次迭代可以得到一个将训练数据集完全正确划分的分离超平面及感知机模型。\n\n**定理** 设训练数据集$T={(x_1,y_1),(x_2,y_2),\\cdots,(x_N,y_N)}$是线性可分的，其中存在$x_i\\in{X}=R^n, y_i\\in{Y}={+1,-1}, i=1,2,\\cdots,N$，则  \n（1）存在满足条件$||\\hat{w}_{opt}||=1$的超平面$\\hat{w}_{opt}\\cdot{\\hat{x}}=\\hat{w}_{opt}\\cdot{x}+b_{opt}$将训练数据集完全正确分开；且存在$\\gamma>0$，对所有$i=1,2,\\cdots,N$  \n\n$$\ny_i(\\hat{w}_{opt}\\cdot{\\hat{x_i}})=y_i(\\hat{w}_{opt}\\cdot{x}+b_{opt})\\geq\\gamma\n$$\n\n（2）令$R=max_{1\\le{i}\\le{N}}$，则感知机算法的原始形式在训练集上的误分类次数$k$满足不等式  \n\n$$\nk\\le(\\frac{R}{\\gamma})^2\n$$\n\n即表示训练次数有上届，能够在有限次训练中找到将数据集完全正确划分的超平面。详细证明可以阅读《统计学习方法》。\n\n# 感知机学习算法的对偶形式\n\n对偶形式的基本思想是将$w$和$b$表示成实例$x_i$和标记$y_i$的线性组合的形式，通过求解其系数而求得$w$和$b$。  \n对于误分类点，更新$w$和$b$如下：\n\n$$\nw\\leftarrow{w+\\eta{y_ix_i}}\\\\ \nb\\leftarrow{b+\\eta{y_i}} \n$$\n\n逐步更新$w,b$，假设更新$n$次，则$w,b$关于$(x_i,y_i)$的增量分别是$\\alpha_iy_ix_i$和$\\alpha{y_i}$，这个$\\alpha_i=n_i\\eta$。这样从学习过程不难看出，最后学习到的$w,b$可以分别表示为\n\n$$\nw=\\sum_{i=1}^N{\\alpha_iy_ix_i}\\\\\nb=\\sum_{i=1}^N{\\alpha_iy_i}\n$$\n\n这里，$a_i\\ge0,i=1,2,\\cdots,N$，当$\\eta=1$时，表示第$i$个实例点由于误分而进行更新的次数。实例点更新次数越多，意味着它距离分离超平面越近，也越难正确分类。\n\n**感知机学习算法的对偶形式**\n\n**输入**：训练数据集$T={(x_1,y_1),(x_2,y_2),\\cdots,(x_N,y_N)}$，\n其中，$x_i\\in{X}=R^n, y_i\\in{Y}={+1,-1}, i=1,2,\\cdots,N$；学习率$\\eta(0<\\eta\\le{1})$；  \n**输出**：$\\alpha,b$；感知机模型$f(x)=sign({\\sum_{j=1}^N{\\alpha_jy_jx_j}}\\cdot{x}+b)$。其中，$\\alpha=(\\alpha_1,\\alpha_2,\\cdots,\\alpha_N)^T$。  \n（1）$\\alpha\\leftarrow0,b\\leftarrow0$  \n（2）在训练集中选取数据$(x_i,y_i)$  \n（3）如果$y_i({\\sum_{j=1}^N{\\alpha_jy_jx_j}}\\cdot{x}+b)\\le0$  \n\n$$\n\\alpha_i\\leftarrow\\alpha_i+\\eta \\\\\nb\\leftarrow{b+\\eta{y_i}}\n$$\n\n（4）转至（2）直到没有误分类数据。\n\n\n\n","source":"_posts/感知机.md","raw":"---\ntitle: 感知机\ndate: 2019-09-17 21:21:02\ntags:\ncategories: 统计学习\n---\n\n感知机（`perceptron`）是二类分类的线性分类模型，其输入为实例的特征向量，输出为实例的类别，取$+1$和$-1$二值。感知机对应于输入空间（特征空间）中将实例划分为正负两类的分离超平面，属于判别模型。\n<!-- more --> \n\n# 感知机模型\n\n## 定义\n假设输入空间（特征空间）是$X\\in{R^n}$，输出空间是$Y={+1,-1}$。输入$x\\in{X}$表示实例的特征向量，对应于输入空间（特征空间）的点；输出$y\\in{Y}$表示实例的类别。由输入空间到输出空间的如下函数  \n\n$$\nf(x)=sign(w\\cdot{x}+b)\n$$\n\n称为感知机。其中，$w$和$b$为感知机模型的参数，$w\\in{R^n}$叫作权值（weight）或权值向量（weight vector），$b\\in{R}$叫作偏置（bias），$w\\cdot{x}$表示$w$和$x$的内积。$sign$是符号函数，即  \n\n$$\nsign(x)= \\begin{cases}  \n+1, & x \\geq 0 \\\\\n-1, & x < 0\n\\end{cases}\n$$\n\n感知机是一种线性分类模型，属于判别模型。感知机模型的空间假设是定义在特征空间中的所有线性分类模型（linear classification model）或线性分类器（linear classifier），即函数集合$f|f(x)=w\\cdot{x}+b$。\n\n感知机其实就是寻找一个超平面$w\\cdot{x}+b=0$将特征空间划分成为两个部分。位于超平面两侧的点分别被分为正负两类。\n\n# 感知机学习策略\n\n## 数据集的线性可分性定义\n\n给定一个数据集   \n\n$$\nT={(x_1,y_1),(x_2,y_2),\\cdots,(x_N,y_N)},\n$$\n\n其中，$x_i\\in{X}=R^n, y_i\\in{Y}={+1,-1}, i=1,2,\\cdots,N$，如果存在某个超平面能够将数据集的正实例点和负实例点完全正确地划分到超平面的两侧，即对所有$y_i=+1$的实例$i$，有$w\\cdot{x}+b>0$；对所有$y_i=-1$的实例$i$，有$w\\cdot{x}+b<0$，则称数据集$T$是线性可分数据集(linear separable data set)；否则称数据集$T$线性不可分。\n\n## 学习策略\n\n损失函数是误分类点到超平面$S$的总距离，首先写出输入空间$R^n$中任一点$x_0$到超平面$S$的距离：\n\n$$\n\\frac{1}{||w||}|w\\cdot{x_0}+b|\n$$\n\n其中，$||w||$是$w$的$L_2$范数。  \n其次，对于误分类的数据$(x_i,y_i)$来说，有$-y_i(w\\cdot{x}+b)>0$成立。因此误分类点$x_i$到超平面$S$的距离也可以表示成：\n\n$$\n-\\frac{1}{||w||}y_i(w\\cdot{x_i}+b)\n$$\n\n假设超平面$S$对应的误分类点集合为$M$，那么所有误分类点到超平面$S$的总距离为\n\n$$\n-\\frac{1}{||w||}\\sum_{x_i\\in{M}}y_i(w\\cdot{x_i}+b)\n$$\n\n不考虑$\\frac{1}{||w||}$就得到了感知机学习的损失函数。  \n\n给定训练数据集\n\n$$\nT={(x_1,y_1),(x_2,y_2),\\cdots,(x_N,y_N)},\n$$\n其中，$x_i\\in{X}=R^n, y_i\\in{Y}={+1,-1}, i=1,2,\\cdots,N$。感知机$sign(w\\cdot{x}+b)$学习的损失函数定义为\n\n$$\nL(w,b)=-\\sum_{x_i\\in{M}}y_i(w\\cdot{x_i}+b)\n$$\n其中，$M$是误分类点的集合。\n\n# 感知机学习算法\n\n感知机学习算法有原始形式和对偶形式两种。\n\n## 原始形式\n\n感知机学习算法是对以下最优化问题的算法。给定一个训练数据集\n\n$$\nT={(x_1,y_1),(x_2,y_2),\\cdots,(x_N,y_N)},\n$$\n其中，$x_i\\in{X}=R^n, y_i\\in{Y}={+1,-1}, i=1,2,\\cdots,N$，求解参数$w,b$，使其为以下损失函数最小化问题的解  \n\n$$\nmin_{w,b}L(w,b)=min_{w,b}-\\sum_{x_i\\in{M}}y_i(w\\cdot{x_i}+b)\n$$\n\n其中，$M$是误分类点的集合。\n\n感知机学习算法是误分类驱动的，具体采用随机梯度下降法（stochastic gradient descent）。\n\n**感知机学习算法的原始形式**\n\n**输入**：训练数据集$T={(x_1,y_1),(x_2,y_2),\\cdots,(x_N,y_N)}$，\n其中，$x_i\\in{X}=R^n, y_i\\in{Y}={+1,-1}, i=1,2,\\cdots,N$；学习率$\\eta(0<\\eta\\le{1})$；  \n**输出**：$w,b$；感知机模型$f(x)=sign(w\\cdot{x}+b)$。   \n（1） 选取初值$w_0,b_0$；  \n（2） 在训练集中选取数据$(x_i,y_i)$；  \n（3） 如果$y_i(w\\cdot{x}+b)\\le{0}$，即$x_i$是误分类的点，那么  \n\n$$\nw\\leftarrow{w+\\eta{y_ix_i}}\\\\ \nb\\leftarrow{b+\\eta{y_i}} \n$$\n\n（4） 转至(2)，直至训练集中没有误分类点\n\n## 算法收敛性\n\n证明对于线性可分的数据集感知机学习算法原始形式收敛，即经过有限次迭代可以得到一个将训练数据集完全正确划分的分离超平面及感知机模型。\n\n**定理** 设训练数据集$T={(x_1,y_1),(x_2,y_2),\\cdots,(x_N,y_N)}$是线性可分的，其中存在$x_i\\in{X}=R^n, y_i\\in{Y}={+1,-1}, i=1,2,\\cdots,N$，则  \n（1）存在满足条件$||\\hat{w}_{opt}||=1$的超平面$\\hat{w}_{opt}\\cdot{\\hat{x}}=\\hat{w}_{opt}\\cdot{x}+b_{opt}$将训练数据集完全正确分开；且存在$\\gamma>0$，对所有$i=1,2,\\cdots,N$  \n\n$$\ny_i(\\hat{w}_{opt}\\cdot{\\hat{x_i}})=y_i(\\hat{w}_{opt}\\cdot{x}+b_{opt})\\geq\\gamma\n$$\n\n（2）令$R=max_{1\\le{i}\\le{N}}$，则感知机算法的原始形式在训练集上的误分类次数$k$满足不等式  \n\n$$\nk\\le(\\frac{R}{\\gamma})^2\n$$\n\n即表示训练次数有上届，能够在有限次训练中找到将数据集完全正确划分的超平面。详细证明可以阅读《统计学习方法》。\n\n# 感知机学习算法的对偶形式\n\n对偶形式的基本思想是将$w$和$b$表示成实例$x_i$和标记$y_i$的线性组合的形式，通过求解其系数而求得$w$和$b$。  \n对于误分类点，更新$w$和$b$如下：\n\n$$\nw\\leftarrow{w+\\eta{y_ix_i}}\\\\ \nb\\leftarrow{b+\\eta{y_i}} \n$$\n\n逐步更新$w,b$，假设更新$n$次，则$w,b$关于$(x_i,y_i)$的增量分别是$\\alpha_iy_ix_i$和$\\alpha{y_i}$，这个$\\alpha_i=n_i\\eta$。这样从学习过程不难看出，最后学习到的$w,b$可以分别表示为\n\n$$\nw=\\sum_{i=1}^N{\\alpha_iy_ix_i}\\\\\nb=\\sum_{i=1}^N{\\alpha_iy_i}\n$$\n\n这里，$a_i\\ge0,i=1,2,\\cdots,N$，当$\\eta=1$时，表示第$i$个实例点由于误分而进行更新的次数。实例点更新次数越多，意味着它距离分离超平面越近，也越难正确分类。\n\n**感知机学习算法的对偶形式**\n\n**输入**：训练数据集$T={(x_1,y_1),(x_2,y_2),\\cdots,(x_N,y_N)}$，\n其中，$x_i\\in{X}=R^n, y_i\\in{Y}={+1,-1}, i=1,2,\\cdots,N$；学习率$\\eta(0<\\eta\\le{1})$；  \n**输出**：$\\alpha,b$；感知机模型$f(x)=sign({\\sum_{j=1}^N{\\alpha_jy_jx_j}}\\cdot{x}+b)$。其中，$\\alpha=(\\alpha_1,\\alpha_2,\\cdots,\\alpha_N)^T$。  \n（1）$\\alpha\\leftarrow0,b\\leftarrow0$  \n（2）在训练集中选取数据$(x_i,y_i)$  \n（3）如果$y_i({\\sum_{j=1}^N{\\alpha_jy_jx_j}}\\cdot{x}+b)\\le0$  \n\n$$\n\\alpha_i\\leftarrow\\alpha_i+\\eta \\\\\nb\\leftarrow{b+\\eta{y_i}}\n$$\n\n（4）转至（2）直到没有误分类数据。\n\n\n\n","slug":"感知机","published":1,"updated":"2019-09-18T08:05:42.326Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck0ozhixd001ugkuwmtjwsbjf","content":"<p>感知机（<code>perceptron</code>）是二类分类的线性分类模型，其输入为实例的特征向量，输出为实例的类别，取$+1$和$-1$二值。感知机对应于输入空间（特征空间）中将实例划分为正负两类的分离超平面，属于判别模型。<br><a id=\"more\"></a> </p>\n<h1 id=\"感知机模型\"><a href=\"#感知机模型\" class=\"headerlink\" title=\"感知机模型\"></a>感知机模型</h1><h2 id=\"定义\"><a href=\"#定义\" class=\"headerlink\" title=\"定义\"></a>定义</h2><p>假设输入空间（特征空间）是$X\\in{R^n}$，输出空间是$Y={+1,-1}$。输入$x\\in{X}$表示实例的特征向量，对应于输入空间（特征空间）的点；输出$y\\in{Y}$表示实例的类别。由输入空间到输出空间的如下函数  </p>\n<p>$$<br>f(x)=sign(w\\cdot{x}+b)<br>$$</p>\n<p>称为感知机。其中，$w$和$b$为感知机模型的参数，$w\\in{R^n}$叫作权值（weight）或权值向量（weight vector），$b\\in{R}$叫作偏置（bias），$w\\cdot{x}$表示$w$和$x$的内积。$sign$是符号函数，即  </p>\n<p>$$<br>sign(x)= \\begin{cases}<br>+1, &amp; x \\geq 0 \\<br>-1, &amp; x &lt; 0<br>\\end{cases}<br>$$</p>\n<p>感知机是一种线性分类模型，属于判别模型。感知机模型的空间假设是定义在特征空间中的所有线性分类模型（linear classification model）或线性分类器（linear classifier），即函数集合$f|f(x)=w\\cdot{x}+b$。</p>\n<p>感知机其实就是寻找一个超平面$w\\cdot{x}+b=0$将特征空间划分成为两个部分。位于超平面两侧的点分别被分为正负两类。</p>\n<h1 id=\"感知机学习策略\"><a href=\"#感知机学习策略\" class=\"headerlink\" title=\"感知机学习策略\"></a>感知机学习策略</h1><h2 id=\"数据集的线性可分性定义\"><a href=\"#数据集的线性可分性定义\" class=\"headerlink\" title=\"数据集的线性可分性定义\"></a>数据集的线性可分性定义</h2><p>给定一个数据集   </p>\n<p>$$<br>T={(x_1,y_1),(x_2,y_2),\\cdots,(x_N,y_N)},<br>$$</p>\n<p>其中，$x_i\\in{X}=R^n, y_i\\in{Y}={+1,-1}, i=1,2,\\cdots,N$，如果存在某个超平面能够将数据集的正实例点和负实例点完全正确地划分到超平面的两侧，即对所有$y_i=+1$的实例$i$，有$w\\cdot{x}+b&gt;0$；对所有$y_i=-1$的实例$i$，有$w\\cdot{x}+b&lt;0$，则称数据集$T$是线性可分数据集(linear separable data set)；否则称数据集$T$线性不可分。</p>\n<h2 id=\"学习策略\"><a href=\"#学习策略\" class=\"headerlink\" title=\"学习策略\"></a>学习策略</h2><p>损失函数是误分类点到超平面$S$的总距离，首先写出输入空间$R^n$中任一点$x_0$到超平面$S$的距离：</p>\n<p>$$<br>\\frac{1}{||w||}|w\\cdot{x_0}+b|<br>$$</p>\n<p>其中，$||w||$是$w$的$L_2$范数。<br>其次，对于误分类的数据$(x_i,y_i)$来说，有$-y_i(w\\cdot{x}+b)&gt;0$成立。因此误分类点$x_i$到超平面$S$的距离也可以表示成：</p>\n<p>$$<br>-\\frac{1}{||w||}y_i(w\\cdot{x_i}+b)<br>$$</p>\n<p>假设超平面$S$对应的误分类点集合为$M$，那么所有误分类点到超平面$S$的总距离为</p>\n<p>$$<br>-\\frac{1}{||w||}\\sum_{x_i\\in{M}}y_i(w\\cdot{x_i}+b)<br>$$</p>\n<p>不考虑$\\frac{1}{||w||}$就得到了感知机学习的损失函数。  </p>\n<p>给定训练数据集</p>\n<p>$$<br>T={(x_1,y_1),(x_2,y_2),\\cdots,(x_N,y_N)},<br>$$<br>其中，$x_i\\in{X}=R^n, y_i\\in{Y}={+1,-1}, i=1,2,\\cdots,N$。感知机$sign(w\\cdot{x}+b)$学习的损失函数定义为</p>\n<p>$$<br>L(w,b)=-\\sum_{x_i\\in{M}}y_i(w\\cdot{x_i}+b)<br>$$<br>其中，$M$是误分类点的集合。</p>\n<h1 id=\"感知机学习算法\"><a href=\"#感知机学习算法\" class=\"headerlink\" title=\"感知机学习算法\"></a>感知机学习算法</h1><p>感知机学习算法有原始形式和对偶形式两种。</p>\n<h2 id=\"原始形式\"><a href=\"#原始形式\" class=\"headerlink\" title=\"原始形式\"></a>原始形式</h2><p>感知机学习算法是对以下最优化问题的算法。给定一个训练数据集</p>\n<p>$$<br>T={(x_1,y_1),(x_2,y_2),\\cdots,(x_N,y_N)},<br>$$<br>其中，$x_i\\in{X}=R^n, y_i\\in{Y}={+1,-1}, i=1,2,\\cdots,N$，求解参数$w,b$，使其为以下损失函数最小化问题的解  </p>\n<p>$$<br>min_{w,b}L(w,b)=min_{w,b}-\\sum_{x_i\\in{M}}y_i(w\\cdot{x_i}+b)<br>$$</p>\n<p>其中，$M$是误分类点的集合。</p>\n<p>感知机学习算法是误分类驱动的，具体采用随机梯度下降法（stochastic gradient descent）。</p>\n<p><strong>感知机学习算法的原始形式</strong></p>\n<p><strong>输入</strong>：训练数据集$T={(x_1,y_1),(x_2,y_2),\\cdots,(x_N,y_N)}$，<br>其中，$x_i\\in{X}=R^n, y_i\\in{Y}={+1,-1}, i=1,2,\\cdots,N$；学习率$\\eta(0&lt;\\eta\\le{1})$；<br><strong>输出</strong>：$w,b$；感知机模型$f(x)=sign(w\\cdot{x}+b)$。<br>（1） 选取初值$w_0,b_0$；<br>（2） 在训练集中选取数据$(x_i,y_i)$；<br>（3） 如果$y_i(w\\cdot{x}+b)\\le{0}$，即$x_i$是误分类的点，那么  </p>\n<p>$$<br>w\\leftarrow{w+\\eta{y_ix_i}}\\<br>b\\leftarrow{b+\\eta{y_i}}<br>$$</p>\n<p>（4） 转至(2)，直至训练集中没有误分类点</p>\n<h2 id=\"算法收敛性\"><a href=\"#算法收敛性\" class=\"headerlink\" title=\"算法收敛性\"></a>算法收敛性</h2><p>证明对于线性可分的数据集感知机学习算法原始形式收敛，即经过有限次迭代可以得到一个将训练数据集完全正确划分的分离超平面及感知机模型。</p>\n<p><strong>定理</strong> 设训练数据集$T={(x_1,y_1),(x_2,y_2),\\cdots,(x_N,y_N)}$是线性可分的，其中存在$x_i\\in{X}=R^n, y_i\\in{Y}={+1,-1}, i=1,2,\\cdots,N$，则<br>（1）存在满足条件$||\\hat{w}<em>{opt}||=1$的超平面$\\hat{w}</em>{opt}\\cdot{\\hat{x}}=\\hat{w}<em>{opt}\\cdot{x}+b</em>{opt}$将训练数据集完全正确分开；且存在$\\gamma&gt;0$，对所有$i=1,2,\\cdots,N$  </p>\n<p>$$<br>y_i(\\hat{w}_{opt}\\cdot{\\hat{x_i}})=y_i(\\hat{w}<em>{opt}\\cdot{x}+b</em>{opt})\\geq\\gamma<br>$$</p>\n<p>（2）令$R=max_{1\\le{i}\\le{N}}$，则感知机算法的原始形式在训练集上的误分类次数$k$满足不等式  </p>\n<p>$$<br>k\\le(\\frac{R}{\\gamma})^2<br>$$</p>\n<p>即表示训练次数有上届，能够在有限次训练中找到将数据集完全正确划分的超平面。详细证明可以阅读《统计学习方法》。</p>\n<h1 id=\"感知机学习算法的对偶形式\"><a href=\"#感知机学习算法的对偶形式\" class=\"headerlink\" title=\"感知机学习算法的对偶形式\"></a>感知机学习算法的对偶形式</h1><p>对偶形式的基本思想是将$w$和$b$表示成实例$x_i$和标记$y_i$的线性组合的形式，通过求解其系数而求得$w$和$b$。<br>对于误分类点，更新$w$和$b$如下：</p>\n<p>$$<br>w\\leftarrow{w+\\eta{y_ix_i}}\\<br>b\\leftarrow{b+\\eta{y_i}}<br>$$</p>\n<p>逐步更新$w,b$，假设更新$n$次，则$w,b$关于$(x_i,y_i)$的增量分别是$\\alpha_iy_ix_i$和$\\alpha{y_i}$，这个$\\alpha_i=n_i\\eta$。这样从学习过程不难看出，最后学习到的$w,b$可以分别表示为</p>\n<p>$$<br>w=\\sum_{i=1}^N{\\alpha_iy_ix_i}\\<br>b=\\sum_{i=1}^N{\\alpha_iy_i}<br>$$</p>\n<p>这里，$a_i\\ge0,i=1,2,\\cdots,N$，当$\\eta=1$时，表示第$i$个实例点由于误分而进行更新的次数。实例点更新次数越多，意味着它距离分离超平面越近，也越难正确分类。</p>\n<p><strong>感知机学习算法的对偶形式</strong></p>\n<p><strong>输入</strong>：训练数据集$T={(x_1,y_1),(x_2,y_2),\\cdots,(x_N,y_N)}$，<br>其中，$x_i\\in{X}=R^n, y_i\\in{Y}={+1,-1}, i=1,2,\\cdots,N$；学习率$\\eta(0&lt;\\eta\\le{1})$；<br><strong>输出</strong>：$\\alpha,b$；感知机模型$f(x)=sign({\\sum_{j=1}^N{\\alpha_jy_jx_j}}\\cdot{x}+b)$。其中，$\\alpha=(\\alpha_1,\\alpha_2,\\cdots,\\alpha_N)^T$。<br>（1）$\\alpha\\leftarrow0,b\\leftarrow0$<br>（2）在训练集中选取数据$(x_i,y_i)$<br>（3）如果$y_i({\\sum_{j=1}^N{\\alpha_jy_jx_j}}\\cdot{x}+b)\\le0$  </p>\n<p>$$<br>\\alpha_i\\leftarrow\\alpha_i+\\eta \\<br>b\\leftarrow{b+\\eta{y_i}}<br>$$</p>\n<p>（4）转至（2）直到没有误分类数据。</p>\n","site":{"data":{}},"excerpt":"<p>感知机（<code>perceptron</code>）是二类分类的线性分类模型，其输入为实例的特征向量，输出为实例的类别，取$+1$和$-1$二值。感知机对应于输入空间（特征空间）中将实例划分为正负两类的分离超平面，属于判别模型。<br></p>","more":"<p></p>\n<h1 id=\"感知机模型\"><a href=\"#感知机模型\" class=\"headerlink\" title=\"感知机模型\"></a>感知机模型</h1><h2 id=\"定义\"><a href=\"#定义\" class=\"headerlink\" title=\"定义\"></a>定义</h2><p>假设输入空间（特征空间）是$X\\in{R^n}$，输出空间是$Y={+1,-1}$。输入$x\\in{X}$表示实例的特征向量，对应于输入空间（特征空间）的点；输出$y\\in{Y}$表示实例的类别。由输入空间到输出空间的如下函数  </p>\n<p>$$<br>f(x)=sign(w\\cdot{x}+b)<br>$$</p>\n<p>称为感知机。其中，$w$和$b$为感知机模型的参数，$w\\in{R^n}$叫作权值（weight）或权值向量（weight vector），$b\\in{R}$叫作偏置（bias），$w\\cdot{x}$表示$w$和$x$的内积。$sign$是符号函数，即  </p>\n<p>$$<br>sign(x)= \\begin{cases}<br>+1, &amp; x \\geq 0 \\<br>-1, &amp; x &lt; 0<br>\\end{cases}<br>$$</p>\n<p>感知机是一种线性分类模型，属于判别模型。感知机模型的空间假设是定义在特征空间中的所有线性分类模型（linear classification model）或线性分类器（linear classifier），即函数集合$f|f(x)=w\\cdot{x}+b$。</p>\n<p>感知机其实就是寻找一个超平面$w\\cdot{x}+b=0$将特征空间划分成为两个部分。位于超平面两侧的点分别被分为正负两类。</p>\n<h1 id=\"感知机学习策略\"><a href=\"#感知机学习策略\" class=\"headerlink\" title=\"感知机学习策略\"></a>感知机学习策略</h1><h2 id=\"数据集的线性可分性定义\"><a href=\"#数据集的线性可分性定义\" class=\"headerlink\" title=\"数据集的线性可分性定义\"></a>数据集的线性可分性定义</h2><p>给定一个数据集   </p>\n<p>$$<br>T={(x_1,y_1),(x_2,y_2),\\cdots,(x_N,y_N)},<br>$$</p>\n<p>其中，$x_i\\in{X}=R^n, y_i\\in{Y}={+1,-1}, i=1,2,\\cdots,N$，如果存在某个超平面能够将数据集的正实例点和负实例点完全正确地划分到超平面的两侧，即对所有$y_i=+1$的实例$i$，有$w\\cdot{x}+b&gt;0$；对所有$y_i=-1$的实例$i$，有$w\\cdot{x}+b&lt;0$，则称数据集$T$是线性可分数据集(linear separable data set)；否则称数据集$T$线性不可分。</p>\n<h2 id=\"学习策略\"><a href=\"#学习策略\" class=\"headerlink\" title=\"学习策略\"></a>学习策略</h2><p>损失函数是误分类点到超平面$S$的总距离，首先写出输入空间$R^n$中任一点$x_0$到超平面$S$的距离：</p>\n<p>$$<br>\\frac{1}{||w||}|w\\cdot{x_0}+b|<br>$$</p>\n<p>其中，$||w||$是$w$的$L_2$范数。<br>其次，对于误分类的数据$(x_i,y_i)$来说，有$-y_i(w\\cdot{x}+b)&gt;0$成立。因此误分类点$x_i$到超平面$S$的距离也可以表示成：</p>\n<p>$$<br>-\\frac{1}{||w||}y_i(w\\cdot{x_i}+b)<br>$$</p>\n<p>假设超平面$S$对应的误分类点集合为$M$，那么所有误分类点到超平面$S$的总距离为</p>\n<p>$$<br>-\\frac{1}{||w||}\\sum_{x_i\\in{M}}y_i(w\\cdot{x_i}+b)<br>$$</p>\n<p>不考虑$\\frac{1}{||w||}$就得到了感知机学习的损失函数。  </p>\n<p>给定训练数据集</p>\n<p>$$<br>T={(x_1,y_1),(x_2,y_2),\\cdots,(x_N,y_N)},<br>$$<br>其中，$x_i\\in{X}=R^n, y_i\\in{Y}={+1,-1}, i=1,2,\\cdots,N$。感知机$sign(w\\cdot{x}+b)$学习的损失函数定义为</p>\n<p>$$<br>L(w,b)=-\\sum_{x_i\\in{M}}y_i(w\\cdot{x_i}+b)<br>$$<br>其中，$M$是误分类点的集合。</p>\n<h1 id=\"感知机学习算法\"><a href=\"#感知机学习算法\" class=\"headerlink\" title=\"感知机学习算法\"></a>感知机学习算法</h1><p>感知机学习算法有原始形式和对偶形式两种。</p>\n<h2 id=\"原始形式\"><a href=\"#原始形式\" class=\"headerlink\" title=\"原始形式\"></a>原始形式</h2><p>感知机学习算法是对以下最优化问题的算法。给定一个训练数据集</p>\n<p>$$<br>T={(x_1,y_1),(x_2,y_2),\\cdots,(x_N,y_N)},<br>$$<br>其中，$x_i\\in{X}=R^n, y_i\\in{Y}={+1,-1}, i=1,2,\\cdots,N$，求解参数$w,b$，使其为以下损失函数最小化问题的解  </p>\n<p>$$<br>min_{w,b}L(w,b)=min_{w,b}-\\sum_{x_i\\in{M}}y_i(w\\cdot{x_i}+b)<br>$$</p>\n<p>其中，$M$是误分类点的集合。</p>\n<p>感知机学习算法是误分类驱动的，具体采用随机梯度下降法（stochastic gradient descent）。</p>\n<p><strong>感知机学习算法的原始形式</strong></p>\n<p><strong>输入</strong>：训练数据集$T={(x_1,y_1),(x_2,y_2),\\cdots,(x_N,y_N)}$，<br>其中，$x_i\\in{X}=R^n, y_i\\in{Y}={+1,-1}, i=1,2,\\cdots,N$；学习率$\\eta(0&lt;\\eta\\le{1})$；<br><strong>输出</strong>：$w,b$；感知机模型$f(x)=sign(w\\cdot{x}+b)$。<br>（1） 选取初值$w_0,b_0$；<br>（2） 在训练集中选取数据$(x_i,y_i)$；<br>（3） 如果$y_i(w\\cdot{x}+b)\\le{0}$，即$x_i$是误分类的点，那么  </p>\n<p>$$<br>w\\leftarrow{w+\\eta{y_ix_i}}\\<br>b\\leftarrow{b+\\eta{y_i}}<br>$$</p>\n<p>（4） 转至(2)，直至训练集中没有误分类点</p>\n<h2 id=\"算法收敛性\"><a href=\"#算法收敛性\" class=\"headerlink\" title=\"算法收敛性\"></a>算法收敛性</h2><p>证明对于线性可分的数据集感知机学习算法原始形式收敛，即经过有限次迭代可以得到一个将训练数据集完全正确划分的分离超平面及感知机模型。</p>\n<p><strong>定理</strong> 设训练数据集$T={(x_1,y_1),(x_2,y_2),\\cdots,(x_N,y_N)}$是线性可分的，其中存在$x_i\\in{X}=R^n, y_i\\in{Y}={+1,-1}, i=1,2,\\cdots,N$，则<br>（1）存在满足条件$||\\hat{w}<em>{opt}||=1$的超平面$\\hat{w}</em>{opt}\\cdot{\\hat{x}}=\\hat{w}<em>{opt}\\cdot{x}+b</em>{opt}$将训练数据集完全正确分开；且存在$\\gamma&gt;0$，对所有$i=1,2,\\cdots,N$  </p>\n<p>$$<br>y_i(\\hat{w}_{opt}\\cdot{\\hat{x_i}})=y_i(\\hat{w}<em>{opt}\\cdot{x}+b</em>{opt})\\geq\\gamma<br>$$</p>\n<p>（2）令$R=max_{1\\le{i}\\le{N}}$，则感知机算法的原始形式在训练集上的误分类次数$k$满足不等式  </p>\n<p>$$<br>k\\le(\\frac{R}{\\gamma})^2<br>$$</p>\n<p>即表示训练次数有上届，能够在有限次训练中找到将数据集完全正确划分的超平面。详细证明可以阅读《统计学习方法》。</p>\n<h1 id=\"感知机学习算法的对偶形式\"><a href=\"#感知机学习算法的对偶形式\" class=\"headerlink\" title=\"感知机学习算法的对偶形式\"></a>感知机学习算法的对偶形式</h1><p>对偶形式的基本思想是将$w$和$b$表示成实例$x_i$和标记$y_i$的线性组合的形式，通过求解其系数而求得$w$和$b$。<br>对于误分类点，更新$w$和$b$如下：</p>\n<p>$$<br>w\\leftarrow{w+\\eta{y_ix_i}}\\<br>b\\leftarrow{b+\\eta{y_i}}<br>$$</p>\n<p>逐步更新$w,b$，假设更新$n$次，则$w,b$关于$(x_i,y_i)$的增量分别是$\\alpha_iy_ix_i$和$\\alpha{y_i}$，这个$\\alpha_i=n_i\\eta$。这样从学习过程不难看出，最后学习到的$w,b$可以分别表示为</p>\n<p>$$<br>w=\\sum_{i=1}^N{\\alpha_iy_ix_i}\\<br>b=\\sum_{i=1}^N{\\alpha_iy_i}<br>$$</p>\n<p>这里，$a_i\\ge0,i=1,2,\\cdots,N$，当$\\eta=1$时，表示第$i$个实例点由于误分而进行更新的次数。实例点更新次数越多，意味着它距离分离超平面越近，也越难正确分类。</p>\n<p><strong>感知机学习算法的对偶形式</strong></p>\n<p><strong>输入</strong>：训练数据集$T={(x_1,y_1),(x_2,y_2),\\cdots,(x_N,y_N)}$，<br>其中，$x_i\\in{X}=R^n, y_i\\in{Y}={+1,-1}, i=1,2,\\cdots,N$；学习率$\\eta(0&lt;\\eta\\le{1})$；<br><strong>输出</strong>：$\\alpha,b$；感知机模型$f(x)=sign({\\sum_{j=1}^N{\\alpha_jy_jx_j}}\\cdot{x}+b)$。其中，$\\alpha=(\\alpha_1,\\alpha_2,\\cdots,\\alpha_N)^T$。<br>（1）$\\alpha\\leftarrow0,b\\leftarrow0$<br>（2）在训练集中选取数据$(x_i,y_i)$<br>（3）如果$y_i({\\sum_{j=1}^N{\\alpha_jy_jx_j}}\\cdot{x}+b)\\le0$  </p>\n<p>$$<br>\\alpha_i\\leftarrow\\alpha_i+\\eta \\<br>b\\leftarrow{b+\\eta{y_i}}<br>$$</p>\n<p>（4）转至（2）直到没有误分类数据。</p>"},{"title":"数据库范式","date":"2019-03-04T13:36:33.000Z","_content":"\n## 第一范式（1NF）\n\n关系模型中实体的每个属性都是原子属性，即元组在每个属性上的取值是不可分的。也就是说这些属性的取值是单一的，不是集合、数组等非原子数据。当实体中的某个属性都多个值时，必须将该属性拆分为多个原子属性。\n\n<!-- more --> \n\n## 第二范式（2NF）\n\n**关系模型中的所有非主属性都完全依赖于所有的候选键**。2NF其实就是在1NF的基础上消除那些非主属性对所有候选键的部分函数依赖。  \n例如，关系（学号，课程号，教师，成绩，学院）中，教师部分依赖于课程号，因此这个关系不满足第二范式，所以需要把上述关系拆分成（学号，课程号，成绩）和（课程号，教师，学院）。\n\n## 第三范式（3NF）\n\n**关系模型中的非主属性既不部分函数依赖也不传递函数依赖于关系中的所有候选键**。也就是说3NF是在2NF的基础上消除了非主属性对候选键的传递依赖关系。\n\n还是上面的例子，关系（课程号，教师，学院）中存在传递依赖关系课程号->教师，以及教师->学院，因此不满足3NF。所以将其分解为（课程号，教师）和（教师，学院）。\n\n## 巴斯-科德范式（BCNF）\n\n**对于关系R上的任何非平凡函数依赖X->Y都有X必包含R的某个候选键**，那么就称关系R满足BCNF。BCNF是在第三范式的基础上继续消除主属性对于键的部分依赖和传递依赖。  \n\n举个例子来说，关系（课程名，班级，教师）中假定多名教师承担多个班级的教学任务，每个教师仅承担一个课程的教学任务，同时可以给多个班级上课，那么可以知道有函数依赖\n\n```\n(课程名，班级)->(教师)\n(教师)->(课程名)\n```\n然而，上述关系中的主键是(课程名，班级)或者(教师，班级)。所以`(教师)->(课程名)`就是主属性对候选键的部分依赖，不满足BCNF。\n\n\n## 第四范式（4NF）\n\n对于关系R中的非平凡多值依赖X->->Y，X必包含R的某个候选键，则称满足4NF。","source":"_posts/数据库范式.md","raw":"---\ntitle: 数据库范式\ndate: 2019-03-04 21:36:33\ntags: \n    - 数据库\n    - MySQL\n    - 范式\ncategories: 数据库\n---\n\n## 第一范式（1NF）\n\n关系模型中实体的每个属性都是原子属性，即元组在每个属性上的取值是不可分的。也就是说这些属性的取值是单一的，不是集合、数组等非原子数据。当实体中的某个属性都多个值时，必须将该属性拆分为多个原子属性。\n\n<!-- more --> \n\n## 第二范式（2NF）\n\n**关系模型中的所有非主属性都完全依赖于所有的候选键**。2NF其实就是在1NF的基础上消除那些非主属性对所有候选键的部分函数依赖。  \n例如，关系（学号，课程号，教师，成绩，学院）中，教师部分依赖于课程号，因此这个关系不满足第二范式，所以需要把上述关系拆分成（学号，课程号，成绩）和（课程号，教师，学院）。\n\n## 第三范式（3NF）\n\n**关系模型中的非主属性既不部分函数依赖也不传递函数依赖于关系中的所有候选键**。也就是说3NF是在2NF的基础上消除了非主属性对候选键的传递依赖关系。\n\n还是上面的例子，关系（课程号，教师，学院）中存在传递依赖关系课程号->教师，以及教师->学院，因此不满足3NF。所以将其分解为（课程号，教师）和（教师，学院）。\n\n## 巴斯-科德范式（BCNF）\n\n**对于关系R上的任何非平凡函数依赖X->Y都有X必包含R的某个候选键**，那么就称关系R满足BCNF。BCNF是在第三范式的基础上继续消除主属性对于键的部分依赖和传递依赖。  \n\n举个例子来说，关系（课程名，班级，教师）中假定多名教师承担多个班级的教学任务，每个教师仅承担一个课程的教学任务，同时可以给多个班级上课，那么可以知道有函数依赖\n\n```\n(课程名，班级)->(教师)\n(教师)->(课程名)\n```\n然而，上述关系中的主键是(课程名，班级)或者(教师，班级)。所以`(教师)->(课程名)`就是主属性对候选键的部分依赖，不满足BCNF。\n\n\n## 第四范式（4NF）\n\n对于关系R中的非平凡多值依赖X->->Y，X必包含R的某个候选键，则称满足4NF。","slug":"数据库范式","published":1,"updated":"2019-04-10T02:19:30.952Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck0ozhixe001ygkuw52xp0l8q","content":"<h2 id=\"第一范式（1NF）\"><a href=\"#第一范式（1NF）\" class=\"headerlink\" title=\"第一范式（1NF）\"></a>第一范式（1NF）</h2><p>关系模型中实体的每个属性都是原子属性，即元组在每个属性上的取值是不可分的。也就是说这些属性的取值是单一的，不是集合、数组等非原子数据。当实体中的某个属性都多个值时，必须将该属性拆分为多个原子属性。</p>\n<a id=\"more\"></a> \n<h2 id=\"第二范式（2NF）\"><a href=\"#第二范式（2NF）\" class=\"headerlink\" title=\"第二范式（2NF）\"></a>第二范式（2NF）</h2><p><strong>关系模型中的所有非主属性都完全依赖于所有的候选键</strong>。2NF其实就是在1NF的基础上消除那些非主属性对所有候选键的部分函数依赖。<br>例如，关系（学号，课程号，教师，成绩，学院）中，教师部分依赖于课程号，因此这个关系不满足第二范式，所以需要把上述关系拆分成（学号，课程号，成绩）和（课程号，教师，学院）。</p>\n<h2 id=\"第三范式（3NF）\"><a href=\"#第三范式（3NF）\" class=\"headerlink\" title=\"第三范式（3NF）\"></a>第三范式（3NF）</h2><p><strong>关系模型中的非主属性既不部分函数依赖也不传递函数依赖于关系中的所有候选键</strong>。也就是说3NF是在2NF的基础上消除了非主属性对候选键的传递依赖关系。</p>\n<p>还是上面的例子，关系（课程号，教师，学院）中存在传递依赖关系课程号-&gt;教师，以及教师-&gt;学院，因此不满足3NF。所以将其分解为（课程号，教师）和（教师，学院）。</p>\n<h2 id=\"巴斯-科德范式（BCNF）\"><a href=\"#巴斯-科德范式（BCNF）\" class=\"headerlink\" title=\"巴斯-科德范式（BCNF）\"></a>巴斯-科德范式（BCNF）</h2><p><strong>对于关系R上的任何非平凡函数依赖X-&gt;Y都有X必包含R的某个候选键</strong>，那么就称关系R满足BCNF。BCNF是在第三范式的基础上继续消除主属性对于键的部分依赖和传递依赖。  </p>\n<p>举个例子来说，关系（课程名，班级，教师）中假定多名教师承担多个班级的教学任务，每个教师仅承担一个课程的教学任务，同时可以给多个班级上课，那么可以知道有函数依赖</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(课程名，班级)-&gt;(教师)</span><br><span class=\"line\">(教师)-&gt;(课程名)</span><br></pre></td></tr></table></figure>\n<p>然而，上述关系中的主键是(课程名，班级)或者(教师，班级)。所以<code>(教师)-&gt;(课程名)</code>就是主属性对候选键的部分依赖，不满足BCNF。</p>\n<h2 id=\"第四范式（4NF）\"><a href=\"#第四范式（4NF）\" class=\"headerlink\" title=\"第四范式（4NF）\"></a>第四范式（4NF）</h2><p>对于关系R中的非平凡多值依赖X-&gt;-&gt;Y，X必包含R的某个候选键，则称满足4NF。</p>\n","site":{"data":{}},"excerpt":"<h2 id=\"第一范式（1NF）\"><a href=\"#第一范式（1NF）\" class=\"headerlink\" title=\"第一范式（1NF）\"></a>第一范式（1NF）</h2><p>关系模型中实体的每个属性都是原子属性，即元组在每个属性上的取值是不可分的。也就是说这些属性的取值是单一的，不是集合、数组等非原子数据。当实体中的某个属性都多个值时，必须将该属性拆分为多个原子属性。</p>","more":"<h2 id=\"第二范式（2NF）\"><a href=\"#第二范式（2NF）\" class=\"headerlink\" title=\"第二范式（2NF）\"></a>第二范式（2NF）</h2><p><strong>关系模型中的所有非主属性都完全依赖于所有的候选键</strong>。2NF其实就是在1NF的基础上消除那些非主属性对所有候选键的部分函数依赖。<br>例如，关系（学号，课程号，教师，成绩，学院）中，教师部分依赖于课程号，因此这个关系不满足第二范式，所以需要把上述关系拆分成（学号，课程号，成绩）和（课程号，教师，学院）。</p>\n<h2 id=\"第三范式（3NF）\"><a href=\"#第三范式（3NF）\" class=\"headerlink\" title=\"第三范式（3NF）\"></a>第三范式（3NF）</h2><p><strong>关系模型中的非主属性既不部分函数依赖也不传递函数依赖于关系中的所有候选键</strong>。也就是说3NF是在2NF的基础上消除了非主属性对候选键的传递依赖关系。</p>\n<p>还是上面的例子，关系（课程号，教师，学院）中存在传递依赖关系课程号-&gt;教师，以及教师-&gt;学院，因此不满足3NF。所以将其分解为（课程号，教师）和（教师，学院）。</p>\n<h2 id=\"巴斯-科德范式（BCNF）\"><a href=\"#巴斯-科德范式（BCNF）\" class=\"headerlink\" title=\"巴斯-科德范式（BCNF）\"></a>巴斯-科德范式（BCNF）</h2><p><strong>对于关系R上的任何非平凡函数依赖X-&gt;Y都有X必包含R的某个候选键</strong>，那么就称关系R满足BCNF。BCNF是在第三范式的基础上继续消除主属性对于键的部分依赖和传递依赖。  </p>\n<p>举个例子来说，关系（课程名，班级，教师）中假定多名教师承担多个班级的教学任务，每个教师仅承担一个课程的教学任务，同时可以给多个班级上课，那么可以知道有函数依赖</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(课程名，班级)-&gt;(教师)</span><br><span class=\"line\">(教师)-&gt;(课程名)</span><br></pre></td></tr></table></figure>\n<p>然而，上述关系中的主键是(课程名，班级)或者(教师，班级)。所以<code>(教师)-&gt;(课程名)</code>就是主属性对候选键的部分依赖，不满足BCNF。</p>\n<h2 id=\"第四范式（4NF）\"><a href=\"#第四范式（4NF）\" class=\"headerlink\" title=\"第四范式（4NF）\"></a>第四范式（4NF）</h2><p>对于关系R中的非平凡多值依赖X-&gt;-&gt;Y，X必包含R的某个候选键，则称满足4NF。</p>"},{"title":"智慧教育师范应用表格接口规范","date":"2018-07-10T09:33:01.000Z","_content":"# 智慧教育-网络学院示范应用\n\n\n## 后端数据访问接口\n\n### 主题状态\n\n##### 1. **主题状态表**\n\n列名 | 类型 | 长度\n---|---|---\nstate_id | bigint(long) | 20\ndomain_id | bigint(long) | 20\nstates | varchar(string) | 255\nuser_id | bigint(long) | 20\ncreated_time | datetime | 1\nmodified_time | datetime | 1\n<!-- more --> \n\n> 说明：\n\n> - （1）\t学习状态：0表示未学习，1表示正在学习，2表示已学习；\n\n> - （2）\tstates（主题状态列表）形式：学习状态1，学习状态2，学习状态3，……\n\n>       举例： 1， 0， 1， 2，……\n\n---\n\n##### 2.  **主题状态接口**  \n\n> - （1）\t/topicState/getByDomainIdAndUserId\n\n> 查询主题状态，参数\n\nlong domainId | long userId\n---|---\n课程id | 用户id\n\n\n\n> - （2）\t/topicState/saveStateByDomainIdAndUserId\n\n> 保存主题状态，参数\n\nlong domainId | String states | long userId\n---|---|---\n课程id | 主题状态列表 | 用户id\n> - （3）\t/topicState/saveStateByDomainNameAndUserId\n\n> 保存主题状态，参数\n\nlong domainName | String states | long userId\n---|---|---\n课程名 | 主题状态列表 | 用户id\n\n---\n\n### 分面状态\n\n##### 1. **分面状态表**\n\n列名 | 类型 | 长度\n---|---|---\nstate_id | bigint(long) | 20\ndomain_id | bigint(long) | 20\ntopic_id | bigint(long) | 20\nstates | varchar(string) | 255\nuser_id | bigint(long) | 20\ncreated_time | datetime | 1\nmodified_time | datetime | 1\n\n> 说明：\n\n> - （1）\t学习状态：0表示未学习，1表示已在学习；\n\n> - （2）\tstates（分面状态列表）形式：学习状态1，学习状态2，学习状态3，……\n\n>       举例： 1， 0， 1， 0，……\n\n##### 2.  **分面状态接口**  \n\n> - （1）/facetState/getByDomainIdAndTopicIdAndUserId\n\n> 查询分面状态，参数\n\nlong domainId | long userId | long topicId\n---|--- |---\n课程id | 用户id | 主题id\n> - （2）/facetState/saveStateByDomainIdAndTopicIdAndUserId\n\n> 保存分面状态，参数\n\nlong domainId | long topicId | String states | long userId\n---|---|---|---\n课程id |主题id | 分面状态列表 | 用户id\n> - （3）/facetState/saveStateByDomainNameAndTopicNameAndUserId\n\n> 保存分面状态，参数\n\nstring domainName | string topicName | String states | long userId\n---|---|---|---\n课程名 |主题名 | 分面状态列表 | 用户id\n> - （4）/facetState/saveStateByDomainIdAndUserId\n\n> 保存分面状态，参数\n\nlong domainId | String states | long userId\n---|---|---\n课程id | 分面状态列表 | 用户id\n> - （5）/facetState/saveStateByDomainNameAndUserId\n\n> 保存主题状态，参数\n\nlong domainName | String states | long userId\n---|---|---\n课程名 | 分面状态列表 | 用户id\n\n***注***：states：分面状态的矩阵（行（主题）之间以分号隔开，行内以逗号隔开）\n例如：0,0,1,0;0,0,1;1,1,0;1,0,1,1,1;……\n---\n\n### 推荐主题\n\n##### 1. **推荐主题表**\n\n列名 | 类型 | 长度\n---|---|---\nrecommendation_id | bigint(long) | 20\ndomain_id | bigint(long) | 20\nrecommendation_topics | varchar(string) | 255\nuser_id | bigint(long) | 20\ncreated_time | datetime | 1\nmodified_time | datetime | 1\n\n> 说明：\n\n> - （1）recommendation_topics（推荐主题列表）形式：：推荐主题1 id，推荐主题2 id，推荐主题3 id；推荐主题3 id，推荐主题1 id，推荐主题4 id；……  \n>  即，不同推荐方式之间以分号隔开，同一推荐方式内的主题id以逗号分隔开\n\n##### 2.  **2.\t推荐主题接口**  \n\n> - （1）\trecommendation/getByDomainIdAndUserId\n\n> 查询推荐主题，参数\n\nlong domainId | long userId \n---|--- |---\n课程id | 用户id\n> - （2）\trecommendation/saveRecommendationByDomainIdAndUserId\n\n> 保存推荐主题，参数\n\nlong domainId | String recommendationTopics | long userId\n---|---|---\n课程id | 推荐主题列表 | 用户id\n> - （3）\trecommendation/saveRecommendationByDomainNameAndUserId\n\n> 保存推荐主题，参数\n\nlong domainName | String recommendationTopics | long userId\n---|---|---\n课程名 | 推荐主题列表 | 用户id\n\n---\n","source":"_posts/智慧教育师范应用表格接口规范.md","raw":"---\ntitle: 智慧教育师范应用表格接口规范\ndate: 2018-07-10 17:33:01\ncategories: 数据库\ntags: \n    - 数据库\n    - 智慧教育系统\n---\n# 智慧教育-网络学院示范应用\n\n\n## 后端数据访问接口\n\n### 主题状态\n\n##### 1. **主题状态表**\n\n列名 | 类型 | 长度\n---|---|---\nstate_id | bigint(long) | 20\ndomain_id | bigint(long) | 20\nstates | varchar(string) | 255\nuser_id | bigint(long) | 20\ncreated_time | datetime | 1\nmodified_time | datetime | 1\n<!-- more --> \n\n> 说明：\n\n> - （1）\t学习状态：0表示未学习，1表示正在学习，2表示已学习；\n\n> - （2）\tstates（主题状态列表）形式：学习状态1，学习状态2，学习状态3，……\n\n>       举例： 1， 0， 1， 2，……\n\n---\n\n##### 2.  **主题状态接口**  \n\n> - （1）\t/topicState/getByDomainIdAndUserId\n\n> 查询主题状态，参数\n\nlong domainId | long userId\n---|---\n课程id | 用户id\n\n\n\n> - （2）\t/topicState/saveStateByDomainIdAndUserId\n\n> 保存主题状态，参数\n\nlong domainId | String states | long userId\n---|---|---\n课程id | 主题状态列表 | 用户id\n> - （3）\t/topicState/saveStateByDomainNameAndUserId\n\n> 保存主题状态，参数\n\nlong domainName | String states | long userId\n---|---|---\n课程名 | 主题状态列表 | 用户id\n\n---\n\n### 分面状态\n\n##### 1. **分面状态表**\n\n列名 | 类型 | 长度\n---|---|---\nstate_id | bigint(long) | 20\ndomain_id | bigint(long) | 20\ntopic_id | bigint(long) | 20\nstates | varchar(string) | 255\nuser_id | bigint(long) | 20\ncreated_time | datetime | 1\nmodified_time | datetime | 1\n\n> 说明：\n\n> - （1）\t学习状态：0表示未学习，1表示已在学习；\n\n> - （2）\tstates（分面状态列表）形式：学习状态1，学习状态2，学习状态3，……\n\n>       举例： 1， 0， 1， 0，……\n\n##### 2.  **分面状态接口**  \n\n> - （1）/facetState/getByDomainIdAndTopicIdAndUserId\n\n> 查询分面状态，参数\n\nlong domainId | long userId | long topicId\n---|--- |---\n课程id | 用户id | 主题id\n> - （2）/facetState/saveStateByDomainIdAndTopicIdAndUserId\n\n> 保存分面状态，参数\n\nlong domainId | long topicId | String states | long userId\n---|---|---|---\n课程id |主题id | 分面状态列表 | 用户id\n> - （3）/facetState/saveStateByDomainNameAndTopicNameAndUserId\n\n> 保存分面状态，参数\n\nstring domainName | string topicName | String states | long userId\n---|---|---|---\n课程名 |主题名 | 分面状态列表 | 用户id\n> - （4）/facetState/saveStateByDomainIdAndUserId\n\n> 保存分面状态，参数\n\nlong domainId | String states | long userId\n---|---|---\n课程id | 分面状态列表 | 用户id\n> - （5）/facetState/saveStateByDomainNameAndUserId\n\n> 保存主题状态，参数\n\nlong domainName | String states | long userId\n---|---|---\n课程名 | 分面状态列表 | 用户id\n\n***注***：states：分面状态的矩阵（行（主题）之间以分号隔开，行内以逗号隔开）\n例如：0,0,1,0;0,0,1;1,1,0;1,0,1,1,1;……\n---\n\n### 推荐主题\n\n##### 1. **推荐主题表**\n\n列名 | 类型 | 长度\n---|---|---\nrecommendation_id | bigint(long) | 20\ndomain_id | bigint(long) | 20\nrecommendation_topics | varchar(string) | 255\nuser_id | bigint(long) | 20\ncreated_time | datetime | 1\nmodified_time | datetime | 1\n\n> 说明：\n\n> - （1）recommendation_topics（推荐主题列表）形式：：推荐主题1 id，推荐主题2 id，推荐主题3 id；推荐主题3 id，推荐主题1 id，推荐主题4 id；……  \n>  即，不同推荐方式之间以分号隔开，同一推荐方式内的主题id以逗号分隔开\n\n##### 2.  **2.\t推荐主题接口**  \n\n> - （1）\trecommendation/getByDomainIdAndUserId\n\n> 查询推荐主题，参数\n\nlong domainId | long userId \n---|--- |---\n课程id | 用户id\n> - （2）\trecommendation/saveRecommendationByDomainIdAndUserId\n\n> 保存推荐主题，参数\n\nlong domainId | String recommendationTopics | long userId\n---|---|---\n课程id | 推荐主题列表 | 用户id\n> - （3）\trecommendation/saveRecommendationByDomainNameAndUserId\n\n> 保存推荐主题，参数\n\nlong domainName | String recommendationTopics | long userId\n---|---|---\n课程名 | 推荐主题列表 | 用户id\n\n---\n","slug":"智慧教育师范应用表格接口规范","published":1,"updated":"2019-04-10T02:19:24.270Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck0ozhixf0020gkuw17ggrx1w","content":"<h1 id=\"智慧教育-网络学院示范应用\"><a href=\"#智慧教育-网络学院示范应用\" class=\"headerlink\" title=\"智慧教育-网络学院示范应用\"></a>智慧教育-网络学院示范应用</h1><h2 id=\"后端数据访问接口\"><a href=\"#后端数据访问接口\" class=\"headerlink\" title=\"后端数据访问接口\"></a>后端数据访问接口</h2><h3 id=\"主题状态\"><a href=\"#主题状态\" class=\"headerlink\" title=\"主题状态\"></a>主题状态</h3><h5 id=\"1-主题状态表\"><a href=\"#1-主题状态表\" class=\"headerlink\" title=\"1. 主题状态表\"></a>1. <strong>主题状态表</strong></h5><table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>长度</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>state_id</td>\n<td>bigint(long)</td>\n<td>20</td>\n</tr>\n<tr>\n<td>domain_id</td>\n<td>bigint(long)</td>\n<td>20</td>\n</tr>\n<tr>\n<td>states</td>\n<td>varchar(string)</td>\n<td>255</td>\n</tr>\n<tr>\n<td>user_id</td>\n<td>bigint(long)</td>\n<td>20</td>\n</tr>\n<tr>\n<td>created_time</td>\n<td>datetime</td>\n<td>1</td>\n</tr>\n<tr>\n<td>modified_time</td>\n<td>datetime</td>\n<td>1</td>\n</tr>\n</tbody>\n</table>\n<a id=\"more\"></a> \n<blockquote>\n<p>说明：</p>\n</blockquote>\n<blockquote>\n<ul>\n<li>（1）    学习状态：0表示未学习，1表示正在学习，2表示已学习；</li>\n</ul>\n</blockquote>\n<blockquote>\n<ul>\n<li>（2）    states（主题状态列表）形式：学习状态1，学习状态2，学习状态3，……</li>\n</ul>\n</blockquote>\n<blockquote>\n<pre><code>举例： 1， 0， 1， 2，……\n</code></pre></blockquote>\n<hr>\n<h5 id=\"2-主题状态接口\"><a href=\"#2-主题状态接口\" class=\"headerlink\" title=\"2.  主题状态接口\"></a>2.  <strong>主题状态接口</strong></h5><blockquote>\n<ul>\n<li>（1）    /topicState/getByDomainIdAndUserId</li>\n</ul>\n</blockquote>\n<blockquote>\n<p>查询主题状态，参数</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th>long domainId</th>\n<th>long userId</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>课程id</td>\n<td>用户id</td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<ul>\n<li>（2）    /topicState/saveStateByDomainIdAndUserId</li>\n</ul>\n</blockquote>\n<blockquote>\n<p>保存主题状态，参数</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th>long domainId</th>\n<th>String states</th>\n<th>long userId</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>课程id</td>\n<td>主题状态列表</td>\n<td>用户id</td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<ul>\n<li>（3）    /topicState/saveStateByDomainNameAndUserId</li>\n</ul>\n</blockquote>\n<blockquote>\n<p>保存主题状态，参数</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th>long domainName</th>\n<th>String states</th>\n<th>long userId</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>课程名</td>\n<td>主题状态列表</td>\n<td>用户id</td>\n</tr>\n</tbody>\n</table>\n<hr>\n<h3 id=\"分面状态\"><a href=\"#分面状态\" class=\"headerlink\" title=\"分面状态\"></a>分面状态</h3><h5 id=\"1-分面状态表\"><a href=\"#1-分面状态表\" class=\"headerlink\" title=\"1. 分面状态表\"></a>1. <strong>分面状态表</strong></h5><table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>长度</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>state_id</td>\n<td>bigint(long)</td>\n<td>20</td>\n</tr>\n<tr>\n<td>domain_id</td>\n<td>bigint(long)</td>\n<td>20</td>\n</tr>\n<tr>\n<td>topic_id</td>\n<td>bigint(long)</td>\n<td>20</td>\n</tr>\n<tr>\n<td>states</td>\n<td>varchar(string)</td>\n<td>255</td>\n</tr>\n<tr>\n<td>user_id</td>\n<td>bigint(long)</td>\n<td>20</td>\n</tr>\n<tr>\n<td>created_time</td>\n<td>datetime</td>\n<td>1</td>\n</tr>\n<tr>\n<td>modified_time</td>\n<td>datetime</td>\n<td>1</td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<p>说明：</p>\n</blockquote>\n<blockquote>\n<ul>\n<li>（1）    学习状态：0表示未学习，1表示已在学习；</li>\n</ul>\n</blockquote>\n<blockquote>\n<ul>\n<li>（2）    states（分面状态列表）形式：学习状态1，学习状态2，学习状态3，……</li>\n</ul>\n</blockquote>\n<blockquote>\n<pre><code>举例： 1， 0， 1， 0，……\n</code></pre></blockquote>\n<h5 id=\"2-分面状态接口\"><a href=\"#2-分面状态接口\" class=\"headerlink\" title=\"2.  分面状态接口\"></a>2.  <strong>分面状态接口</strong></h5><blockquote>\n<ul>\n<li>（1）/facetState/getByDomainIdAndTopicIdAndUserId</li>\n</ul>\n</blockquote>\n<blockquote>\n<p>查询分面状态，参数</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th>long domainId</th>\n<th>long userId</th>\n<th>long topicId</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>课程id</td>\n<td>用户id</td>\n<td>主题id</td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<ul>\n<li>（2）/facetState/saveStateByDomainIdAndTopicIdAndUserId</li>\n</ul>\n</blockquote>\n<blockquote>\n<p>保存分面状态，参数</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th>long domainId</th>\n<th>long topicId</th>\n<th>String states</th>\n<th>long userId</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>课程id</td>\n<td>主题id</td>\n<td>分面状态列表</td>\n<td>用户id</td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<ul>\n<li>（3）/facetState/saveStateByDomainNameAndTopicNameAndUserId</li>\n</ul>\n</blockquote>\n<blockquote>\n<p>保存分面状态，参数</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th>string domainName</th>\n<th>string topicName</th>\n<th>String states</th>\n<th>long userId</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>课程名</td>\n<td>主题名</td>\n<td>分面状态列表</td>\n<td>用户id</td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<ul>\n<li>（4）/facetState/saveStateByDomainIdAndUserId</li>\n</ul>\n</blockquote>\n<blockquote>\n<p>保存分面状态，参数</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th>long domainId</th>\n<th>String states</th>\n<th>long userId</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>课程id</td>\n<td>分面状态列表</td>\n<td>用户id</td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<ul>\n<li>（5）/facetState/saveStateByDomainNameAndUserId</li>\n</ul>\n</blockquote>\n<blockquote>\n<p>保存主题状态，参数</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th>long domainName</th>\n<th>String states</th>\n<th>long userId</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>课程名</td>\n<td>分面状态列表</td>\n<td>用户id</td>\n</tr>\n</tbody>\n</table>\n<p><strong><em>注</em></strong>：states：分面状态的矩阵（行（主题）之间以分号隔开，行内以逗号隔开）</p>\n<h2 id=\"例如：0-0-1-0-0-0-1-1-1-0-1-0-1-1-1-……\"><a href=\"#例如：0-0-1-0-0-0-1-1-1-0-1-0-1-1-1-……\" class=\"headerlink\" title=\"例如：0,0,1,0;0,0,1;1,1,0;1,0,1,1,1;……\"></a>例如：0,0,1,0;0,0,1;1,1,0;1,0,1,1,1;……</h2><h3 id=\"推荐主题\"><a href=\"#推荐主题\" class=\"headerlink\" title=\"推荐主题\"></a>推荐主题</h3><h5 id=\"1-推荐主题表\"><a href=\"#1-推荐主题表\" class=\"headerlink\" title=\"1. 推荐主题表\"></a>1. <strong>推荐主题表</strong></h5><table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>长度</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>recommendation_id</td>\n<td>bigint(long)</td>\n<td>20</td>\n</tr>\n<tr>\n<td>domain_id</td>\n<td>bigint(long)</td>\n<td>20</td>\n</tr>\n<tr>\n<td>recommendation_topics</td>\n<td>varchar(string)</td>\n<td>255</td>\n</tr>\n<tr>\n<td>user_id</td>\n<td>bigint(long)</td>\n<td>20</td>\n</tr>\n<tr>\n<td>created_time</td>\n<td>datetime</td>\n<td>1</td>\n</tr>\n<tr>\n<td>modified_time</td>\n<td>datetime</td>\n<td>1</td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<p>说明：</p>\n</blockquote>\n<blockquote>\n<ul>\n<li>（1）recommendation_topics（推荐主题列表）形式：：推荐主题1 id，推荐主题2 id，推荐主题3 id；推荐主题3 id，推荐主题1 id，推荐主题4 id；……<br>即，不同推荐方式之间以分号隔开，同一推荐方式内的主题id以逗号分隔开</li>\n</ul>\n</blockquote>\n<h5 id=\"2-2-推荐主题接口\"><a href=\"#2-2-推荐主题接口\" class=\"headerlink\" title=\"2.  2.    推荐主题接口\"></a>2.  <strong>2.    推荐主题接口</strong></h5><blockquote>\n<ul>\n<li>（1）    recommendation/getByDomainIdAndUserId</li>\n</ul>\n</blockquote>\n<blockquote>\n<p>查询推荐主题，参数</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th>long domainId</th>\n<th>long userId </th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>课程id</td>\n<td>用户id</td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<ul>\n<li>（2）    recommendation/saveRecommendationByDomainIdAndUserId</li>\n</ul>\n</blockquote>\n<blockquote>\n<p>保存推荐主题，参数</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th>long domainId</th>\n<th>String recommendationTopics</th>\n<th>long userId</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>课程id</td>\n<td>推荐主题列表</td>\n<td>用户id</td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<ul>\n<li>（3）    recommendation/saveRecommendationByDomainNameAndUserId</li>\n</ul>\n</blockquote>\n<blockquote>\n<p>保存推荐主题，参数</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th>long domainName</th>\n<th>String recommendationTopics</th>\n<th>long userId</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>课程名</td>\n<td>推荐主题列表</td>\n<td>用户id</td>\n</tr>\n</tbody>\n</table>\n<hr>\n","site":{"data":{}},"excerpt":"<h1 id=\"智慧教育-网络学院示范应用\"><a href=\"#智慧教育-网络学院示范应用\" class=\"headerlink\" title=\"智慧教育-网络学院示范应用\"></a>智慧教育-网络学院示范应用</h1><h2 id=\"后端数据访问接口\"><a href=\"#后端数据访问接口\" class=\"headerlink\" title=\"后端数据访问接口\"></a>后端数据访问接口</h2><h3 id=\"主题状态\"><a href=\"#主题状态\" class=\"headerlink\" title=\"主题状态\"></a>主题状态</h3><h5 id=\"1-主题状态表\"><a href=\"#1-主题状态表\" class=\"headerlink\" title=\"1. 主题状态表\"></a>1. <strong>主题状态表</strong></h5><table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>长度</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>state_id</td>\n<td>bigint(long)</td>\n<td>20</td>\n</tr>\n<tr>\n<td>domain_id</td>\n<td>bigint(long)</td>\n<td>20</td>\n</tr>\n<tr>\n<td>states</td>\n<td>varchar(string)</td>\n<td>255</td>\n</tr>\n<tr>\n<td>user_id</td>\n<td>bigint(long)</td>\n<td>20</td>\n</tr>\n<tr>\n<td>created_time</td>\n<td>datetime</td>\n<td>1</td>\n</tr>\n<tr>\n<td>modified_time</td>\n<td>datetime</td>\n<td>1</td>\n</tr>\n</tbody>\n</table>","more":"<blockquote>\n<p>说明：</p>\n</blockquote>\n<blockquote>\n<ul>\n<li>（1）    学习状态：0表示未学习，1表示正在学习，2表示已学习；</li>\n</ul>\n</blockquote>\n<blockquote>\n<ul>\n<li>（2）    states（主题状态列表）形式：学习状态1，学习状态2，学习状态3，……</li>\n</ul>\n</blockquote>\n<blockquote>\n<pre><code>举例： 1， 0， 1， 2，……\n</code></pre></blockquote>\n<hr>\n<h5 id=\"2-主题状态接口\"><a href=\"#2-主题状态接口\" class=\"headerlink\" title=\"2.  主题状态接口\"></a>2.  <strong>主题状态接口</strong></h5><blockquote>\n<ul>\n<li>（1）    /topicState/getByDomainIdAndUserId</li>\n</ul>\n</blockquote>\n<blockquote>\n<p>查询主题状态，参数</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th>long domainId</th>\n<th>long userId</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>课程id</td>\n<td>用户id</td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<ul>\n<li>（2）    /topicState/saveStateByDomainIdAndUserId</li>\n</ul>\n</blockquote>\n<blockquote>\n<p>保存主题状态，参数</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th>long domainId</th>\n<th>String states</th>\n<th>long userId</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>课程id</td>\n<td>主题状态列表</td>\n<td>用户id</td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<ul>\n<li>（3）    /topicState/saveStateByDomainNameAndUserId</li>\n</ul>\n</blockquote>\n<blockquote>\n<p>保存主题状态，参数</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th>long domainName</th>\n<th>String states</th>\n<th>long userId</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>课程名</td>\n<td>主题状态列表</td>\n<td>用户id</td>\n</tr>\n</tbody>\n</table>\n<hr>\n<h3 id=\"分面状态\"><a href=\"#分面状态\" class=\"headerlink\" title=\"分面状态\"></a>分面状态</h3><h5 id=\"1-分面状态表\"><a href=\"#1-分面状态表\" class=\"headerlink\" title=\"1. 分面状态表\"></a>1. <strong>分面状态表</strong></h5><table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>长度</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>state_id</td>\n<td>bigint(long)</td>\n<td>20</td>\n</tr>\n<tr>\n<td>domain_id</td>\n<td>bigint(long)</td>\n<td>20</td>\n</tr>\n<tr>\n<td>topic_id</td>\n<td>bigint(long)</td>\n<td>20</td>\n</tr>\n<tr>\n<td>states</td>\n<td>varchar(string)</td>\n<td>255</td>\n</tr>\n<tr>\n<td>user_id</td>\n<td>bigint(long)</td>\n<td>20</td>\n</tr>\n<tr>\n<td>created_time</td>\n<td>datetime</td>\n<td>1</td>\n</tr>\n<tr>\n<td>modified_time</td>\n<td>datetime</td>\n<td>1</td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<p>说明：</p>\n</blockquote>\n<blockquote>\n<ul>\n<li>（1）    学习状态：0表示未学习，1表示已在学习；</li>\n</ul>\n</blockquote>\n<blockquote>\n<ul>\n<li>（2）    states（分面状态列表）形式：学习状态1，学习状态2，学习状态3，……</li>\n</ul>\n</blockquote>\n<blockquote>\n<pre><code>举例： 1， 0， 1， 0，……\n</code></pre></blockquote>\n<h5 id=\"2-分面状态接口\"><a href=\"#2-分面状态接口\" class=\"headerlink\" title=\"2.  分面状态接口\"></a>2.  <strong>分面状态接口</strong></h5><blockquote>\n<ul>\n<li>（1）/facetState/getByDomainIdAndTopicIdAndUserId</li>\n</ul>\n</blockquote>\n<blockquote>\n<p>查询分面状态，参数</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th>long domainId</th>\n<th>long userId</th>\n<th>long topicId</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>课程id</td>\n<td>用户id</td>\n<td>主题id</td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<ul>\n<li>（2）/facetState/saveStateByDomainIdAndTopicIdAndUserId</li>\n</ul>\n</blockquote>\n<blockquote>\n<p>保存分面状态，参数</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th>long domainId</th>\n<th>long topicId</th>\n<th>String states</th>\n<th>long userId</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>课程id</td>\n<td>主题id</td>\n<td>分面状态列表</td>\n<td>用户id</td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<ul>\n<li>（3）/facetState/saveStateByDomainNameAndTopicNameAndUserId</li>\n</ul>\n</blockquote>\n<blockquote>\n<p>保存分面状态，参数</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th>string domainName</th>\n<th>string topicName</th>\n<th>String states</th>\n<th>long userId</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>课程名</td>\n<td>主题名</td>\n<td>分面状态列表</td>\n<td>用户id</td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<ul>\n<li>（4）/facetState/saveStateByDomainIdAndUserId</li>\n</ul>\n</blockquote>\n<blockquote>\n<p>保存分面状态，参数</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th>long domainId</th>\n<th>String states</th>\n<th>long userId</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>课程id</td>\n<td>分面状态列表</td>\n<td>用户id</td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<ul>\n<li>（5）/facetState/saveStateByDomainNameAndUserId</li>\n</ul>\n</blockquote>\n<blockquote>\n<p>保存主题状态，参数</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th>long domainName</th>\n<th>String states</th>\n<th>long userId</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>课程名</td>\n<td>分面状态列表</td>\n<td>用户id</td>\n</tr>\n</tbody>\n</table>\n<p><strong><em>注</em></strong>：states：分面状态的矩阵（行（主题）之间以分号隔开，行内以逗号隔开）</p>\n<h2 id=\"例如：0-0-1-0-0-0-1-1-1-0-1-0-1-1-1-……\"><a href=\"#例如：0-0-1-0-0-0-1-1-1-0-1-0-1-1-1-……\" class=\"headerlink\" title=\"例如：0,0,1,0;0,0,1;1,1,0;1,0,1,1,1;……\"></a>例如：0,0,1,0;0,0,1;1,1,0;1,0,1,1,1;……</h2><h3 id=\"推荐主题\"><a href=\"#推荐主题\" class=\"headerlink\" title=\"推荐主题\"></a>推荐主题</h3><h5 id=\"1-推荐主题表\"><a href=\"#1-推荐主题表\" class=\"headerlink\" title=\"1. 推荐主题表\"></a>1. <strong>推荐主题表</strong></h5><table>\n<thead>\n<tr>\n<th>列名</th>\n<th>类型</th>\n<th>长度</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>recommendation_id</td>\n<td>bigint(long)</td>\n<td>20</td>\n</tr>\n<tr>\n<td>domain_id</td>\n<td>bigint(long)</td>\n<td>20</td>\n</tr>\n<tr>\n<td>recommendation_topics</td>\n<td>varchar(string)</td>\n<td>255</td>\n</tr>\n<tr>\n<td>user_id</td>\n<td>bigint(long)</td>\n<td>20</td>\n</tr>\n<tr>\n<td>created_time</td>\n<td>datetime</td>\n<td>1</td>\n</tr>\n<tr>\n<td>modified_time</td>\n<td>datetime</td>\n<td>1</td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<p>说明：</p>\n</blockquote>\n<blockquote>\n<ul>\n<li>（1）recommendation_topics（推荐主题列表）形式：：推荐主题1 id，推荐主题2 id，推荐主题3 id；推荐主题3 id，推荐主题1 id，推荐主题4 id；……<br>即，不同推荐方式之间以分号隔开，同一推荐方式内的主题id以逗号分隔开</li>\n</ul>\n</blockquote>\n<h5 id=\"2-2-推荐主题接口\"><a href=\"#2-2-推荐主题接口\" class=\"headerlink\" title=\"2.  2.    推荐主题接口\"></a>2.  <strong>2.    推荐主题接口</strong></h5><blockquote>\n<ul>\n<li>（1）    recommendation/getByDomainIdAndUserId</li>\n</ul>\n</blockquote>\n<blockquote>\n<p>查询推荐主题，参数</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th>long domainId</th>\n<th>long userId </th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>课程id</td>\n<td>用户id</td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<ul>\n<li>（2）    recommendation/saveRecommendationByDomainIdAndUserId</li>\n</ul>\n</blockquote>\n<blockquote>\n<p>保存推荐主题，参数</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th>long domainId</th>\n<th>String recommendationTopics</th>\n<th>long userId</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>课程id</td>\n<td>推荐主题列表</td>\n<td>用户id</td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<ul>\n<li>（3）    recommendation/saveRecommendationByDomainNameAndUserId</li>\n</ul>\n</blockquote>\n<blockquote>\n<p>保存推荐主题，参数</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th>long domainName</th>\n<th>String recommendationTopics</th>\n<th>long userId</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>课程名</td>\n<td>推荐主题列表</td>\n<td>用户id</td>\n</tr>\n</tbody>\n</table>\n<hr>"},{"title":"条件生成对抗网络的一系列问题","date":"2019-03-05T13:30:04.000Z","_content":"\n## 条件生成对抗网络中生成器的输入随机噪声`z`，文本特征$\\phi(t)$作为条件，噪声输入有什么用？\n\n[参考链接：https://github.com/junyanz/pytorch-CycleGAN-and-pix2pix/issues/152](https://github.com/junyanz/pytorch-CycleGAN-and-pix2pix/issues/152)\n\n其实没有噪声输入也可以，但是有时候需要同一个文本输入需要生成的样本更加多样，这时候随机噪声就有用了。\n<!-- more --> ","source":"_posts/条件生成对抗网络的一系列问题.md","raw":"---\ntitle: 条件生成对抗网络的一系列问题\ndate: 2019-03-05 21:30:04\ntags:\n    - 论文阅读\n    - 生成对抗网络\n    - 问题\ncategories: 科研\n---\n\n## 条件生成对抗网络中生成器的输入随机噪声`z`，文本特征$\\phi(t)$作为条件，噪声输入有什么用？\n\n[参考链接：https://github.com/junyanz/pytorch-CycleGAN-and-pix2pix/issues/152](https://github.com/junyanz/pytorch-CycleGAN-and-pix2pix/issues/152)\n\n其实没有噪声输入也可以，但是有时候需要同一个文本输入需要生成的样本更加多样，这时候随机噪声就有用了。\n<!-- more --> ","slug":"条件生成对抗网络的一系列问题","published":1,"updated":"2019-03-06T05:18:26.081Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck0ozhixg0024gkuwzxmm0e8b","content":"<h2 id=\"条件生成对抗网络中生成器的输入随机噪声z，文本特征-phi-t-作为条件，噪声输入有什么用？\"><a href=\"#条件生成对抗网络中生成器的输入随机噪声z，文本特征-phi-t-作为条件，噪声输入有什么用？\" class=\"headerlink\" title=\"条件生成对抗网络中生成器的输入随机噪声z，文本特征$\\phi(t)$作为条件，噪声输入有什么用？\"></a>条件生成对抗网络中生成器的输入随机噪声<code>z</code>，文本特征$\\phi(t)$作为条件，噪声输入有什么用？</h2><p><a href=\"https://github.com/junyanz/pytorch-CycleGAN-and-pix2pix/issues/152\" target=\"_blank\" rel=\"noopener\">参考链接：https://github.com/junyanz/pytorch-CycleGAN-and-pix2pix/issues/152</a></p>\n<p>其实没有噪声输入也可以，但是有时候需要同一个文本输入需要生成的样本更加多样，这时候随机噪声就有用了。<br><a id=\"more\"></a> </p>\n","site":{"data":{}},"excerpt":"<h2 id=\"条件生成对抗网络中生成器的输入随机噪声z，文本特征-phi-t-作为条件，噪声输入有什么用？\"><a href=\"#条件生成对抗网络中生成器的输入随机噪声z，文本特征-phi-t-作为条件，噪声输入有什么用？\" class=\"headerlink\" title=\"条件生成对抗网络中生成器的输入随机噪声z，文本特征$\\phi(t)$作为条件，噪声输入有什么用？\"></a>条件生成对抗网络中生成器的输入随机噪声<code>z</code>，文本特征$\\phi(t)$作为条件，噪声输入有什么用？</h2><p><a href=\"https://github.com/junyanz/pytorch-CycleGAN-and-pix2pix/issues/152\" target=\"_blank\" rel=\"noopener\">参考链接：https://github.com/junyanz/pytorch-CycleGAN-and-pix2pix/issues/152</a></p>\n<p>其实没有噪声输入也可以，但是有时候需要同一个文本输入需要生成的样本更加多样，这时候随机噪声就有用了。<br></p>","more":"<p></p>"},{"title":"统计学习方法概论","date":"2019-09-09T02:21:21.000Z","_content":"\n# 1. 统计学习\n统计学习（statistical learning）是关于计算机基于数据构建概率统计模型并运用模型对数据进行预测人与分析的一门学科。\n\n$$\n已有数据\\xrightarrow{构建}模型\\xrightarrow{预测分析}数据\n$$\n<!-- more --> \n## 主要特点\n\n- 统计学习以计算机与网络为平台，是构建在计算机及网络之上的；\n- 统计学习以数据为研究对象，是数据驱动的学科；\n- 统计学习的目的是对数据进行预测与分析；\n- 统计学习以方法为中心，统计学习方法构建模型并应用模型进行预测与分析；\n- 统计学习是概率论、统计学、信息论、计算理论、最优化理论及计算机科学等多个领域的交叉学科，并且在发展中逐步形成独自的理论体系与方法论。\n\n统计学习的对象是数据，统计学习从数据出发，提取数据的特征，抽取出数据的模型，发现数据中的知识，又回到对数据的分析与预测中。数据形式多样，包括存在于计算机及网络上的各种数字、文字、图像、音频、视频数据以及它们的组合。\n\n## 统计学习的前提\n\n统计学习关于数据的基本假设是同类数据具有一定的统计规律性。这里的同类数据指的是具有某种共同性质的数据。由于它们具有统计规律性，所以可以用概率统计方法来加以处理。\n\n## 统计学习的目的\n\n统计学习用于对数据进行预测和分析，特别是对未知新数据进行预测与分析。对数据的预测可以使计算机更加智能化，或者说使计算机的某些性能得到提升；对数据的分析可以让人们获得新的知识，给人们带来新的发现。\n\n统计学习总的目标就是考虑学习什么样的模型和如何学习模型，以使模型能对数据进行准确的预测与分析，同时也要考虑尽可能地提升学习效率。\n\n**统计学习与机器学习的异同**\n\n统计学习和机器学习的界限一直很模糊，有人认为统计学习偏向于理论上的完善，机器学习基于统计学习，并将其延伸到实践中。\n机器学习旨在于使最准确的预测成为可能，统计学习模型是为推断变量之间的关系而设计的。  \n我认为，统计学习与机器学习主要就是理论与实践的区别。\n\n## 统计学习的方法\n\n统计学习的方法时基于数据构建统计模型从而对数据进行预测与分析。统计学习由监督学习（supervised learning）、非监督学习（unsupervised learning）、半监督学习（semi-supervised learning）和强化学习（reinforcement learning）等组成。\n\n**监督学习**是从给定的、有限的、用于学习的训练模型（training data）集合出发，假设数据是独立同分布产生的；并且假设要学习的模型属于某个函数的集合，称为假设空间（hypothesis space）；应用某个评价准则（evaluation criterion），从假设空间中选取一个最优的模型，使它对已知训练数据集未知测试数据（test data）在给定的评价准则下有最优的预测；最优模型的选取由算法实现。\n\n统计学习方法包括模型的假设空间、模型选择的准则以及模型学习的算法，称其为统计学习方法的三要素，简称为模型（model）、策略（stratage）和算法（algorithm）。\n\n实现统计学习方法的步骤如下：  \n（1）得到一个有限的训练数据集合；  \n（2）确定包含多有可能的模型的假设空间，即学习模型的集合；  \n（3）确定模型选择的准则，即学习的策略；  \n（4）实现求解最优模型的算法，即学习的算法；  \n（5）通过学习方法选择最优模型；  \n（6）利用学习的最优模型对新数据进行预测或分析。\n\n统计学习研究一般包括统计学习方法（statistical learning method）、统计学习理论（statistical learning theory）以及统计学习应用三个方面。\n\n# 2. 监督学习\n\n**监督学习**（supervised learning）的任务是学习一个模型，是模型能够对任意给定的输入，对其相应的输出做出一个好的预测。\n\n## 基本概率\n### 输入空间、特征空间与输出空间\n\n在监督学习中，将输入与输出所有可能取值的集合分别称为输入空间与输出空间。输入与输出空间可以是有限元素的集合，也可以是整个欧氏空间。输入和输出空间可以是同一空间，也可以不是同一空间；通常输出空间小于输入空间。  \n每一个具体的输入都是一个实例（instance），通常由特征向量（feature vector）表示。所有的特征向量存在的空间称为特征空间（feature space）。\n\n### 联合概率分布\n\n监督学习假设输入与输出的随机变量$X$和$Y$遵循联合概率分布$P(X,Y)$。$P(X,Y)$表示分布函数，或分布密度函数。\n\n### 假设空间\n监督学习的目的在于学习一个由输入到输出的映射，这一映射由模型来表示。换句话说，学习的目的就是找到最满足映射关系的模型。模型属于由输入空间到输出空间的映射的集合，这个集合就是假设空间（hypothesis space）。监督学习的模型可以是概率模型或非概率模型，由条件概率分布$P(Y/X)$或决策函数（decision function）$Y=f(X)$表示。\n\n## 问题的形式化\n监督学习利用训练数据集学习一个模型，再用模型对测试样本集进行预测（prediction）。由于在这个过程中需要训练数据集，而训练数据集往往是通过人工标注的，所以统称为监督学习。监督学习分为学习和预测两个过程，由学习系统和预测系统完成。\n\n首先给定一个训练数据集：\n\n$$\nT={(x_1,y_1),(x_2,y_2),\\cdots,(x_N,y_N)}\n$$\n\n其中$(x_i,y_i),i=1,2,\\cdots,N$，称为样本或样本点。$x_i\\in\\chi\\subseteqq{R^n}$是输入的观测值，也称为输入或实例，$y_i\\subseteqq\\LARGE{y}$是输出的观测值，也称为输出。  \n\n监督学习中，假设训练数据和测试数据都是依联合概率分布$P(X,Y)$独立同分布产生的。  \n在学习过程中，学习系统利用给定的训练数据集，通过学习（或训练）得到一个模型，表示为条件概率分布$\\hat{P}(Y/X)$或决策函数$Y=\\hat{f}(X)$。条件概率分布$\\hat{P}(Y/X)$或决策函数$Y=\\hat{f}(X)$描述输入与输出随机变量之间的映射关系。  \n在预测过程中，预测系统对于给定的测试样本集合中的输入$x_{N+1}$，由模型$y_{N+1}=argmax_{y_{N+1}}\\hat{P}(y_{N+1}/x_{N+1})$或$y_{N+1}=\\hat{f}(x_{N+1})$给出相应的输出$y_{N+1}$。其中$y_{N+1}=argmax_{y_{N+1}}\\hat{P}(y_{N+1}/x_{N+1})$表示的是对于给定的$x_{N+1}$使得$\\hat{P}(y_{N+1}/x_{N+1})$最大时对应的$y_{N+1}$的取值。  \n在学习的过程中，学习系统（也就是学习算法）试图通过训练数据集中的样本$(x_i,y_i)$带来的信息学习模型。具体来说，对于输入$x_i$，一个具体的模型$y=f(x)$可以产生一个输出$f(x_i)$，而训练数据集中对应的输出是$y_i$，如果这个模型有很好的预测能力，那么训练样本输出$y_i$就应该和模型的输出$f(x_i)$尽可能接近。","source":"_posts/统计学习方法概论.md","raw":"---\ntitle: 统计学习方法概论\ndate: 2019-09-09 10:21:21\ntags: \ncategories: 统计学习\n---\n\n# 1. 统计学习\n统计学习（statistical learning）是关于计算机基于数据构建概率统计模型并运用模型对数据进行预测人与分析的一门学科。\n\n$$\n已有数据\\xrightarrow{构建}模型\\xrightarrow{预测分析}数据\n$$\n<!-- more --> \n## 主要特点\n\n- 统计学习以计算机与网络为平台，是构建在计算机及网络之上的；\n- 统计学习以数据为研究对象，是数据驱动的学科；\n- 统计学习的目的是对数据进行预测与分析；\n- 统计学习以方法为中心，统计学习方法构建模型并应用模型进行预测与分析；\n- 统计学习是概率论、统计学、信息论、计算理论、最优化理论及计算机科学等多个领域的交叉学科，并且在发展中逐步形成独自的理论体系与方法论。\n\n统计学习的对象是数据，统计学习从数据出发，提取数据的特征，抽取出数据的模型，发现数据中的知识，又回到对数据的分析与预测中。数据形式多样，包括存在于计算机及网络上的各种数字、文字、图像、音频、视频数据以及它们的组合。\n\n## 统计学习的前提\n\n统计学习关于数据的基本假设是同类数据具有一定的统计规律性。这里的同类数据指的是具有某种共同性质的数据。由于它们具有统计规律性，所以可以用概率统计方法来加以处理。\n\n## 统计学习的目的\n\n统计学习用于对数据进行预测和分析，特别是对未知新数据进行预测与分析。对数据的预测可以使计算机更加智能化，或者说使计算机的某些性能得到提升；对数据的分析可以让人们获得新的知识，给人们带来新的发现。\n\n统计学习总的目标就是考虑学习什么样的模型和如何学习模型，以使模型能对数据进行准确的预测与分析，同时也要考虑尽可能地提升学习效率。\n\n**统计学习与机器学习的异同**\n\n统计学习和机器学习的界限一直很模糊，有人认为统计学习偏向于理论上的完善，机器学习基于统计学习，并将其延伸到实践中。\n机器学习旨在于使最准确的预测成为可能，统计学习模型是为推断变量之间的关系而设计的。  \n我认为，统计学习与机器学习主要就是理论与实践的区别。\n\n## 统计学习的方法\n\n统计学习的方法时基于数据构建统计模型从而对数据进行预测与分析。统计学习由监督学习（supervised learning）、非监督学习（unsupervised learning）、半监督学习（semi-supervised learning）和强化学习（reinforcement learning）等组成。\n\n**监督学习**是从给定的、有限的、用于学习的训练模型（training data）集合出发，假设数据是独立同分布产生的；并且假设要学习的模型属于某个函数的集合，称为假设空间（hypothesis space）；应用某个评价准则（evaluation criterion），从假设空间中选取一个最优的模型，使它对已知训练数据集未知测试数据（test data）在给定的评价准则下有最优的预测；最优模型的选取由算法实现。\n\n统计学习方法包括模型的假设空间、模型选择的准则以及模型学习的算法，称其为统计学习方法的三要素，简称为模型（model）、策略（stratage）和算法（algorithm）。\n\n实现统计学习方法的步骤如下：  \n（1）得到一个有限的训练数据集合；  \n（2）确定包含多有可能的模型的假设空间，即学习模型的集合；  \n（3）确定模型选择的准则，即学习的策略；  \n（4）实现求解最优模型的算法，即学习的算法；  \n（5）通过学习方法选择最优模型；  \n（6）利用学习的最优模型对新数据进行预测或分析。\n\n统计学习研究一般包括统计学习方法（statistical learning method）、统计学习理论（statistical learning theory）以及统计学习应用三个方面。\n\n# 2. 监督学习\n\n**监督学习**（supervised learning）的任务是学习一个模型，是模型能够对任意给定的输入，对其相应的输出做出一个好的预测。\n\n## 基本概率\n### 输入空间、特征空间与输出空间\n\n在监督学习中，将输入与输出所有可能取值的集合分别称为输入空间与输出空间。输入与输出空间可以是有限元素的集合，也可以是整个欧氏空间。输入和输出空间可以是同一空间，也可以不是同一空间；通常输出空间小于输入空间。  \n每一个具体的输入都是一个实例（instance），通常由特征向量（feature vector）表示。所有的特征向量存在的空间称为特征空间（feature space）。\n\n### 联合概率分布\n\n监督学习假设输入与输出的随机变量$X$和$Y$遵循联合概率分布$P(X,Y)$。$P(X,Y)$表示分布函数，或分布密度函数。\n\n### 假设空间\n监督学习的目的在于学习一个由输入到输出的映射，这一映射由模型来表示。换句话说，学习的目的就是找到最满足映射关系的模型。模型属于由输入空间到输出空间的映射的集合，这个集合就是假设空间（hypothesis space）。监督学习的模型可以是概率模型或非概率模型，由条件概率分布$P(Y/X)$或决策函数（decision function）$Y=f(X)$表示。\n\n## 问题的形式化\n监督学习利用训练数据集学习一个模型，再用模型对测试样本集进行预测（prediction）。由于在这个过程中需要训练数据集，而训练数据集往往是通过人工标注的，所以统称为监督学习。监督学习分为学习和预测两个过程，由学习系统和预测系统完成。\n\n首先给定一个训练数据集：\n\n$$\nT={(x_1,y_1),(x_2,y_2),\\cdots,(x_N,y_N)}\n$$\n\n其中$(x_i,y_i),i=1,2,\\cdots,N$，称为样本或样本点。$x_i\\in\\chi\\subseteqq{R^n}$是输入的观测值，也称为输入或实例，$y_i\\subseteqq\\LARGE{y}$是输出的观测值，也称为输出。  \n\n监督学习中，假设训练数据和测试数据都是依联合概率分布$P(X,Y)$独立同分布产生的。  \n在学习过程中，学习系统利用给定的训练数据集，通过学习（或训练）得到一个模型，表示为条件概率分布$\\hat{P}(Y/X)$或决策函数$Y=\\hat{f}(X)$。条件概率分布$\\hat{P}(Y/X)$或决策函数$Y=\\hat{f}(X)$描述输入与输出随机变量之间的映射关系。  \n在预测过程中，预测系统对于给定的测试样本集合中的输入$x_{N+1}$，由模型$y_{N+1}=argmax_{y_{N+1}}\\hat{P}(y_{N+1}/x_{N+1})$或$y_{N+1}=\\hat{f}(x_{N+1})$给出相应的输出$y_{N+1}$。其中$y_{N+1}=argmax_{y_{N+1}}\\hat{P}(y_{N+1}/x_{N+1})$表示的是对于给定的$x_{N+1}$使得$\\hat{P}(y_{N+1}/x_{N+1})$最大时对应的$y_{N+1}$的取值。  \n在学习的过程中，学习系统（也就是学习算法）试图通过训练数据集中的样本$(x_i,y_i)$带来的信息学习模型。具体来说，对于输入$x_i$，一个具体的模型$y=f(x)$可以产生一个输出$f(x_i)$，而训练数据集中对应的输出是$y_i$，如果这个模型有很好的预测能力，那么训练样本输出$y_i$就应该和模型的输出$f(x_i)$尽可能接近。","slug":"统计学习方法概论","published":1,"updated":"2019-09-10T02:37:38.839Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck0ozhixh0027gkuwybrmnara","content":"<h1 id=\"1-统计学习\"><a href=\"#1-统计学习\" class=\"headerlink\" title=\"1. 统计学习\"></a>1. 统计学习</h1><p>统计学习（statistical learning）是关于计算机基于数据构建概率统计模型并运用模型对数据进行预测人与分析的一门学科。</p>\n<p>$$<br>已有数据\\xrightarrow{构建}模型\\xrightarrow{预测分析}数据<br>$$<br><a id=\"more\"></a> </p>\n<h2 id=\"主要特点\"><a href=\"#主要特点\" class=\"headerlink\" title=\"主要特点\"></a>主要特点</h2><ul>\n<li>统计学习以计算机与网络为平台，是构建在计算机及网络之上的；</li>\n<li>统计学习以数据为研究对象，是数据驱动的学科；</li>\n<li>统计学习的目的是对数据进行预测与分析；</li>\n<li>统计学习以方法为中心，统计学习方法构建模型并应用模型进行预测与分析；</li>\n<li>统计学习是概率论、统计学、信息论、计算理论、最优化理论及计算机科学等多个领域的交叉学科，并且在发展中逐步形成独自的理论体系与方法论。</li>\n</ul>\n<p>统计学习的对象是数据，统计学习从数据出发，提取数据的特征，抽取出数据的模型，发现数据中的知识，又回到对数据的分析与预测中。数据形式多样，包括存在于计算机及网络上的各种数字、文字、图像、音频、视频数据以及它们的组合。</p>\n<h2 id=\"统计学习的前提\"><a href=\"#统计学习的前提\" class=\"headerlink\" title=\"统计学习的前提\"></a>统计学习的前提</h2><p>统计学习关于数据的基本假设是同类数据具有一定的统计规律性。这里的同类数据指的是具有某种共同性质的数据。由于它们具有统计规律性，所以可以用概率统计方法来加以处理。</p>\n<h2 id=\"统计学习的目的\"><a href=\"#统计学习的目的\" class=\"headerlink\" title=\"统计学习的目的\"></a>统计学习的目的</h2><p>统计学习用于对数据进行预测和分析，特别是对未知新数据进行预测与分析。对数据的预测可以使计算机更加智能化，或者说使计算机的某些性能得到提升；对数据的分析可以让人们获得新的知识，给人们带来新的发现。</p>\n<p>统计学习总的目标就是考虑学习什么样的模型和如何学习模型，以使模型能对数据进行准确的预测与分析，同时也要考虑尽可能地提升学习效率。</p>\n<p><strong>统计学习与机器学习的异同</strong></p>\n<p>统计学习和机器学习的界限一直很模糊，有人认为统计学习偏向于理论上的完善，机器学习基于统计学习，并将其延伸到实践中。<br>机器学习旨在于使最准确的预测成为可能，统计学习模型是为推断变量之间的关系而设计的。<br>我认为，统计学习与机器学习主要就是理论与实践的区别。</p>\n<h2 id=\"统计学习的方法\"><a href=\"#统计学习的方法\" class=\"headerlink\" title=\"统计学习的方法\"></a>统计学习的方法</h2><p>统计学习的方法时基于数据构建统计模型从而对数据进行预测与分析。统计学习由监督学习（supervised learning）、非监督学习（unsupervised learning）、半监督学习（semi-supervised learning）和强化学习（reinforcement learning）等组成。</p>\n<p><strong>监督学习</strong>是从给定的、有限的、用于学习的训练模型（training data）集合出发，假设数据是独立同分布产生的；并且假设要学习的模型属于某个函数的集合，称为假设空间（hypothesis space）；应用某个评价准则（evaluation criterion），从假设空间中选取一个最优的模型，使它对已知训练数据集未知测试数据（test data）在给定的评价准则下有最优的预测；最优模型的选取由算法实现。</p>\n<p>统计学习方法包括模型的假设空间、模型选择的准则以及模型学习的算法，称其为统计学习方法的三要素，简称为模型（model）、策略（stratage）和算法（algorithm）。</p>\n<p>实现统计学习方法的步骤如下：<br>（1）得到一个有限的训练数据集合；<br>（2）确定包含多有可能的模型的假设空间，即学习模型的集合；<br>（3）确定模型选择的准则，即学习的策略；<br>（4）实现求解最优模型的算法，即学习的算法；<br>（5）通过学习方法选择最优模型；<br>（6）利用学习的最优模型对新数据进行预测或分析。</p>\n<p>统计学习研究一般包括统计学习方法（statistical learning method）、统计学习理论（statistical learning theory）以及统计学习应用三个方面。</p>\n<h1 id=\"2-监督学习\"><a href=\"#2-监督学习\" class=\"headerlink\" title=\"2. 监督学习\"></a>2. 监督学习</h1><p><strong>监督学习</strong>（supervised learning）的任务是学习一个模型，是模型能够对任意给定的输入，对其相应的输出做出一个好的预测。</p>\n<h2 id=\"基本概率\"><a href=\"#基本概率\" class=\"headerlink\" title=\"基本概率\"></a>基本概率</h2><h3 id=\"输入空间、特征空间与输出空间\"><a href=\"#输入空间、特征空间与输出空间\" class=\"headerlink\" title=\"输入空间、特征空间与输出空间\"></a>输入空间、特征空间与输出空间</h3><p>在监督学习中，将输入与输出所有可能取值的集合分别称为输入空间与输出空间。输入与输出空间可以是有限元素的集合，也可以是整个欧氏空间。输入和输出空间可以是同一空间，也可以不是同一空间；通常输出空间小于输入空间。<br>每一个具体的输入都是一个实例（instance），通常由特征向量（feature vector）表示。所有的特征向量存在的空间称为特征空间（feature space）。</p>\n<h3 id=\"联合概率分布\"><a href=\"#联合概率分布\" class=\"headerlink\" title=\"联合概率分布\"></a>联合概率分布</h3><p>监督学习假设输入与输出的随机变量$X$和$Y$遵循联合概率分布$P(X,Y)$。$P(X,Y)$表示分布函数，或分布密度函数。</p>\n<h3 id=\"假设空间\"><a href=\"#假设空间\" class=\"headerlink\" title=\"假设空间\"></a>假设空间</h3><p>监督学习的目的在于学习一个由输入到输出的映射，这一映射由模型来表示。换句话说，学习的目的就是找到最满足映射关系的模型。模型属于由输入空间到输出空间的映射的集合，这个集合就是假设空间（hypothesis space）。监督学习的模型可以是概率模型或非概率模型，由条件概率分布$P(Y/X)$或决策函数（decision function）$Y=f(X)$表示。</p>\n<h2 id=\"问题的形式化\"><a href=\"#问题的形式化\" class=\"headerlink\" title=\"问题的形式化\"></a>问题的形式化</h2><p>监督学习利用训练数据集学习一个模型，再用模型对测试样本集进行预测（prediction）。由于在这个过程中需要训练数据集，而训练数据集往往是通过人工标注的，所以统称为监督学习。监督学习分为学习和预测两个过程，由学习系统和预测系统完成。</p>\n<p>首先给定一个训练数据集：</p>\n<p>$$<br>T={(x_1,y_1),(x_2,y_2),\\cdots,(x_N,y_N)}<br>$$</p>\n<p>其中$(x_i,y_i),i=1,2,\\cdots,N$，称为样本或样本点。$x_i\\in\\chi\\subseteqq{R^n}$是输入的观测值，也称为输入或实例，$y_i\\subseteqq\\LARGE{y}$是输出的观测值，也称为输出。  </p>\n<p>监督学习中，假设训练数据和测试数据都是依联合概率分布$P(X,Y)$独立同分布产生的。<br>在学习过程中，学习系统利用给定的训练数据集，通过学习（或训练）得到一个模型，表示为条件概率分布$\\hat{P}(Y/X)$或决策函数$Y=\\hat{f}(X)$。条件概率分布$\\hat{P}(Y/X)$或决策函数$Y=\\hat{f}(X)$描述输入与输出随机变量之间的映射关系。<br>在预测过程中，预测系统对于给定的测试样本集合中的输入$x_{N+1}$，由模型$y_{N+1}=argmax_{y_{N+1}}\\hat{P}(y_{N+1}/x_{N+1})$或$y_{N+1}=\\hat{f}(x_{N+1})$给出相应的输出$y_{N+1}$。其中$y_{N+1}=argmax_{y_{N+1}}\\hat{P}(y_{N+1}/x_{N+1})$表示的是对于给定的$x_{N+1}$使得$\\hat{P}(y_{N+1}/x_{N+1})$最大时对应的$y_{N+1}$的取值。<br>在学习的过程中，学习系统（也就是学习算法）试图通过训练数据集中的样本$(x_i,y_i)$带来的信息学习模型。具体来说，对于输入$x_i$，一个具体的模型$y=f(x)$可以产生一个输出$f(x_i)$，而训练数据集中对应的输出是$y_i$，如果这个模型有很好的预测能力，那么训练样本输出$y_i$就应该和模型的输出$f(x_i)$尽可能接近。</p>\n","site":{"data":{}},"excerpt":"<h1 id=\"1-统计学习\"><a href=\"#1-统计学习\" class=\"headerlink\" title=\"1. 统计学习\"></a>1. 统计学习</h1><p>统计学习（statistical learning）是关于计算机基于数据构建概率统计模型并运用模型对数据进行预测人与分析的一门学科。</p>\n<p>$$<br>已有数据\\xrightarrow{构建}模型\\xrightarrow{预测分析}数据<br>$$<br></p>","more":"<p></p>\n<h2 id=\"主要特点\"><a href=\"#主要特点\" class=\"headerlink\" title=\"主要特点\"></a>主要特点</h2><ul>\n<li>统计学习以计算机与网络为平台，是构建在计算机及网络之上的；</li>\n<li>统计学习以数据为研究对象，是数据驱动的学科；</li>\n<li>统计学习的目的是对数据进行预测与分析；</li>\n<li>统计学习以方法为中心，统计学习方法构建模型并应用模型进行预测与分析；</li>\n<li>统计学习是概率论、统计学、信息论、计算理论、最优化理论及计算机科学等多个领域的交叉学科，并且在发展中逐步形成独自的理论体系与方法论。</li>\n</ul>\n<p>统计学习的对象是数据，统计学习从数据出发，提取数据的特征，抽取出数据的模型，发现数据中的知识，又回到对数据的分析与预测中。数据形式多样，包括存在于计算机及网络上的各种数字、文字、图像、音频、视频数据以及它们的组合。</p>\n<h2 id=\"统计学习的前提\"><a href=\"#统计学习的前提\" class=\"headerlink\" title=\"统计学习的前提\"></a>统计学习的前提</h2><p>统计学习关于数据的基本假设是同类数据具有一定的统计规律性。这里的同类数据指的是具有某种共同性质的数据。由于它们具有统计规律性，所以可以用概率统计方法来加以处理。</p>\n<h2 id=\"统计学习的目的\"><a href=\"#统计学习的目的\" class=\"headerlink\" title=\"统计学习的目的\"></a>统计学习的目的</h2><p>统计学习用于对数据进行预测和分析，特别是对未知新数据进行预测与分析。对数据的预测可以使计算机更加智能化，或者说使计算机的某些性能得到提升；对数据的分析可以让人们获得新的知识，给人们带来新的发现。</p>\n<p>统计学习总的目标就是考虑学习什么样的模型和如何学习模型，以使模型能对数据进行准确的预测与分析，同时也要考虑尽可能地提升学习效率。</p>\n<p><strong>统计学习与机器学习的异同</strong></p>\n<p>统计学习和机器学习的界限一直很模糊，有人认为统计学习偏向于理论上的完善，机器学习基于统计学习，并将其延伸到实践中。<br>机器学习旨在于使最准确的预测成为可能，统计学习模型是为推断变量之间的关系而设计的。<br>我认为，统计学习与机器学习主要就是理论与实践的区别。</p>\n<h2 id=\"统计学习的方法\"><a href=\"#统计学习的方法\" class=\"headerlink\" title=\"统计学习的方法\"></a>统计学习的方法</h2><p>统计学习的方法时基于数据构建统计模型从而对数据进行预测与分析。统计学习由监督学习（supervised learning）、非监督学习（unsupervised learning）、半监督学习（semi-supervised learning）和强化学习（reinforcement learning）等组成。</p>\n<p><strong>监督学习</strong>是从给定的、有限的、用于学习的训练模型（training data）集合出发，假设数据是独立同分布产生的；并且假设要学习的模型属于某个函数的集合，称为假设空间（hypothesis space）；应用某个评价准则（evaluation criterion），从假设空间中选取一个最优的模型，使它对已知训练数据集未知测试数据（test data）在给定的评价准则下有最优的预测；最优模型的选取由算法实现。</p>\n<p>统计学习方法包括模型的假设空间、模型选择的准则以及模型学习的算法，称其为统计学习方法的三要素，简称为模型（model）、策略（stratage）和算法（algorithm）。</p>\n<p>实现统计学习方法的步骤如下：<br>（1）得到一个有限的训练数据集合；<br>（2）确定包含多有可能的模型的假设空间，即学习模型的集合；<br>（3）确定模型选择的准则，即学习的策略；<br>（4）实现求解最优模型的算法，即学习的算法；<br>（5）通过学习方法选择最优模型；<br>（6）利用学习的最优模型对新数据进行预测或分析。</p>\n<p>统计学习研究一般包括统计学习方法（statistical learning method）、统计学习理论（statistical learning theory）以及统计学习应用三个方面。</p>\n<h1 id=\"2-监督学习\"><a href=\"#2-监督学习\" class=\"headerlink\" title=\"2. 监督学习\"></a>2. 监督学习</h1><p><strong>监督学习</strong>（supervised learning）的任务是学习一个模型，是模型能够对任意给定的输入，对其相应的输出做出一个好的预测。</p>\n<h2 id=\"基本概率\"><a href=\"#基本概率\" class=\"headerlink\" title=\"基本概率\"></a>基本概率</h2><h3 id=\"输入空间、特征空间与输出空间\"><a href=\"#输入空间、特征空间与输出空间\" class=\"headerlink\" title=\"输入空间、特征空间与输出空间\"></a>输入空间、特征空间与输出空间</h3><p>在监督学习中，将输入与输出所有可能取值的集合分别称为输入空间与输出空间。输入与输出空间可以是有限元素的集合，也可以是整个欧氏空间。输入和输出空间可以是同一空间，也可以不是同一空间；通常输出空间小于输入空间。<br>每一个具体的输入都是一个实例（instance），通常由特征向量（feature vector）表示。所有的特征向量存在的空间称为特征空间（feature space）。</p>\n<h3 id=\"联合概率分布\"><a href=\"#联合概率分布\" class=\"headerlink\" title=\"联合概率分布\"></a>联合概率分布</h3><p>监督学习假设输入与输出的随机变量$X$和$Y$遵循联合概率分布$P(X,Y)$。$P(X,Y)$表示分布函数，或分布密度函数。</p>\n<h3 id=\"假设空间\"><a href=\"#假设空间\" class=\"headerlink\" title=\"假设空间\"></a>假设空间</h3><p>监督学习的目的在于学习一个由输入到输出的映射，这一映射由模型来表示。换句话说，学习的目的就是找到最满足映射关系的模型。模型属于由输入空间到输出空间的映射的集合，这个集合就是假设空间（hypothesis space）。监督学习的模型可以是概率模型或非概率模型，由条件概率分布$P(Y/X)$或决策函数（decision function）$Y=f(X)$表示。</p>\n<h2 id=\"问题的形式化\"><a href=\"#问题的形式化\" class=\"headerlink\" title=\"问题的形式化\"></a>问题的形式化</h2><p>监督学习利用训练数据集学习一个模型，再用模型对测试样本集进行预测（prediction）。由于在这个过程中需要训练数据集，而训练数据集往往是通过人工标注的，所以统称为监督学习。监督学习分为学习和预测两个过程，由学习系统和预测系统完成。</p>\n<p>首先给定一个训练数据集：</p>\n<p>$$<br>T={(x_1,y_1),(x_2,y_2),\\cdots,(x_N,y_N)}<br>$$</p>\n<p>其中$(x_i,y_i),i=1,2,\\cdots,N$，称为样本或样本点。$x_i\\in\\chi\\subseteqq{R^n}$是输入的观测值，也称为输入或实例，$y_i\\subseteqq\\LARGE{y}$是输出的观测值，也称为输出。  </p>\n<p>监督学习中，假设训练数据和测试数据都是依联合概率分布$P(X,Y)$独立同分布产生的。<br>在学习过程中，学习系统利用给定的训练数据集，通过学习（或训练）得到一个模型，表示为条件概率分布$\\hat{P}(Y/X)$或决策函数$Y=\\hat{f}(X)$。条件概率分布$\\hat{P}(Y/X)$或决策函数$Y=\\hat{f}(X)$描述输入与输出随机变量之间的映射关系。<br>在预测过程中，预测系统对于给定的测试样本集合中的输入$x_{N+1}$，由模型$y_{N+1}=argmax_{y_{N+1}}\\hat{P}(y_{N+1}/x_{N+1})$或$y_{N+1}=\\hat{f}(x_{N+1})$给出相应的输出$y_{N+1}$。其中$y_{N+1}=argmax_{y_{N+1}}\\hat{P}(y_{N+1}/x_{N+1})$表示的是对于给定的$x_{N+1}$使得$\\hat{P}(y_{N+1}/x_{N+1})$最大时对应的$y_{N+1}$的取值。<br>在学习的过程中，学习系统（也就是学习算法）试图通过训练数据集中的样本$(x_i,y_i)$带来的信息学习模型。具体来说，对于输入$x_i$，一个具体的模型$y=f(x)$可以产生一个输出$f(x_i)$，而训练数据集中对应的输出是$y_i$，如果这个模型有很好的预测能力，那么训练样本输出$y_i$就应该和模型的输出$f(x_i)$尽可能接近。</p>"},{"title":"研究生数学建模：恐怖袭击事件分级","date":"2018-09-15T13:21:13.000Z","_content":"\n\n# 研究生数学建模：恐怖袭击事件分级\n\n**特征：人员伤亡、经济损失、时间、地点（人口容量、GDP）等**\n\n### 财产损失\n#### **特征：**\n攻击类型、武器类型、受害子类型、国家、地区、入选标准（1、2、3、doubtterr）\n<!-- more --> \n\n###### **攻击类型**\n\n1. 暗杀（1/0）\n2. 武装袭击（1/0）\n3. 轰炸爆炸（1/0）\n4. 劫持（1/0）\n5. 设施攻击（1/0）\n6. 徒手攻击（1/0）\n7. 未知（1/0）\n\n\n8. 攻击成功（1/0）\n9. 自杀式袭击（suicide）\n###### **武器类型**\n\n\n9. 生化武器、放射性武器（1/0）\n10. 核武器\n11. 轻武器\n12. 炸弹\n13. 燃烧武器\n14. 治乱武器\n15. 交通工具\n16. 破坏设备\n17. 未知\n\n\n###### **受害者类型**\n\n18. 商业\n19. 政府\n20. 警察\n21. 军事\n22. 流产有关\n23. 运输（机场（飞机）或巴士、火车、高铁运输）\n24. 教育机构\n25. 食物或水供应\n26. 媒体设施\n27. 海事\n28. 非政府组织\n29. 其他\n\n###### **地区**\n\n30. 北美\n31. 南美\n32. 东亚\n33. 东南亚\n34. 南亚\n35. 中亚\n36. 西欧\n37. 东欧\n38. 中东和北非\n39. 撒哈拉以南非洲\n40. 澳大利亚\n\n\n###### **入选标准**\n41. 标准1\n42. 标准2\n43. 标准3\n\n\n--\n\n44. 疑似恐怖主义\n\n\n#### **输出：**\n1. 灾难性的\n2. 重大的\n3. 较小的\n4. 无损失\n5. 未知\n\n\n1. 设置propextent中为空的部分为0，这样就可以去除property\n\n#### **K-means聚类结果分析**\n> 样本数\n```math\n10953\\times 17\n```\n> 聚类结果（5类）\n\n  统计 | 类1 | 类2 | 类3 | 类4 | 类5\n---|---|---|---|---|---\n数量 |2497| 4645| 134| 1854| 1823\n\n\n#### **Spectral Clustering聚类结果分析**\n> 样本数\n```math\n10953\\times 17\n```\n> 聚类结果（5类）\n\n  统计 | 类1 | 类2 | 类3 | 类4 | 类5\n---|---|---|---|---|---\n数量 |10883| 1| 15| 1| 53\n\n\n#### **分段后K-means聚类结果分析**\n> 样本数\n```math\n10953\\times 36\n```\n> 聚类结果（5类）\n\n  统计 | 类1 | 类2 | 类3 | 类4 | 类5\n---|---|---|---|---|---\n数量 |6339| 1541| 1474| 725| 874\n\n\n#### **分段后Spectral Clustering聚类结果分析**\n> 样本数\n```math\n10953\\times 36\n```\n> 聚类结果（5类）\n\n  统计 | 类1 | 类2 | 类3 | 类4 | 类5\n---|---|---|---|---|---\n数量 |9472| 26| 1343| 93| 19\n\n\n#### **增大死亡数以及财产损失权重，分段后K-means聚类结果分析**\n> 样本数\n```math\n10953\\times 36\n```\n> 聚类结果（5类）\n\n  统计 | 类1 | 类2 | 类3 | 类4 | 类5\n---|---|---|---|---|---\n数量 |1541| 735| 7203| 1474| 0\n\n#### **增大死亡数以及财产损失权重，分段后Spectral Clustering聚类结果分析**\n> 样本数\n```math\n10953\\times 36\n```\n> 聚类结果（5类）\n\n  统计 | 类1 | 类2 | 类3 | 类4 | 类5\n---|---|---|---|---|---\n数量 |9471| 1| 1349| 39| 93\n\n\n\n\n\n\n\n","source":"_posts/研究生数学建模：恐怖袭击事件分级.md","raw":"---\ntitle: 研究生数学建模：恐怖袭击事件分级\ndate: 2018-09-15 21:21:13\ntags: \n    - 编程\ncategories: 竞赛\n---\n\n\n# 研究生数学建模：恐怖袭击事件分级\n\n**特征：人员伤亡、经济损失、时间、地点（人口容量、GDP）等**\n\n### 财产损失\n#### **特征：**\n攻击类型、武器类型、受害子类型、国家、地区、入选标准（1、2、3、doubtterr）\n<!-- more --> \n\n###### **攻击类型**\n\n1. 暗杀（1/0）\n2. 武装袭击（1/0）\n3. 轰炸爆炸（1/0）\n4. 劫持（1/0）\n5. 设施攻击（1/0）\n6. 徒手攻击（1/0）\n7. 未知（1/0）\n\n\n8. 攻击成功（1/0）\n9. 自杀式袭击（suicide）\n###### **武器类型**\n\n\n9. 生化武器、放射性武器（1/0）\n10. 核武器\n11. 轻武器\n12. 炸弹\n13. 燃烧武器\n14. 治乱武器\n15. 交通工具\n16. 破坏设备\n17. 未知\n\n\n###### **受害者类型**\n\n18. 商业\n19. 政府\n20. 警察\n21. 军事\n22. 流产有关\n23. 运输（机场（飞机）或巴士、火车、高铁运输）\n24. 教育机构\n25. 食物或水供应\n26. 媒体设施\n27. 海事\n28. 非政府组织\n29. 其他\n\n###### **地区**\n\n30. 北美\n31. 南美\n32. 东亚\n33. 东南亚\n34. 南亚\n35. 中亚\n36. 西欧\n37. 东欧\n38. 中东和北非\n39. 撒哈拉以南非洲\n40. 澳大利亚\n\n\n###### **入选标准**\n41. 标准1\n42. 标准2\n43. 标准3\n\n\n--\n\n44. 疑似恐怖主义\n\n\n#### **输出：**\n1. 灾难性的\n2. 重大的\n3. 较小的\n4. 无损失\n5. 未知\n\n\n1. 设置propextent中为空的部分为0，这样就可以去除property\n\n#### **K-means聚类结果分析**\n> 样本数\n```math\n10953\\times 17\n```\n> 聚类结果（5类）\n\n  统计 | 类1 | 类2 | 类3 | 类4 | 类5\n---|---|---|---|---|---\n数量 |2497| 4645| 134| 1854| 1823\n\n\n#### **Spectral Clustering聚类结果分析**\n> 样本数\n```math\n10953\\times 17\n```\n> 聚类结果（5类）\n\n  统计 | 类1 | 类2 | 类3 | 类4 | 类5\n---|---|---|---|---|---\n数量 |10883| 1| 15| 1| 53\n\n\n#### **分段后K-means聚类结果分析**\n> 样本数\n```math\n10953\\times 36\n```\n> 聚类结果（5类）\n\n  统计 | 类1 | 类2 | 类3 | 类4 | 类5\n---|---|---|---|---|---\n数量 |6339| 1541| 1474| 725| 874\n\n\n#### **分段后Spectral Clustering聚类结果分析**\n> 样本数\n```math\n10953\\times 36\n```\n> 聚类结果（5类）\n\n  统计 | 类1 | 类2 | 类3 | 类4 | 类5\n---|---|---|---|---|---\n数量 |9472| 26| 1343| 93| 19\n\n\n#### **增大死亡数以及财产损失权重，分段后K-means聚类结果分析**\n> 样本数\n```math\n10953\\times 36\n```\n> 聚类结果（5类）\n\n  统计 | 类1 | 类2 | 类3 | 类4 | 类5\n---|---|---|---|---|---\n数量 |1541| 735| 7203| 1474| 0\n\n#### **增大死亡数以及财产损失权重，分段后Spectral Clustering聚类结果分析**\n> 样本数\n```math\n10953\\times 36\n```\n> 聚类结果（5类）\n\n  统计 | 类1 | 类2 | 类3 | 类4 | 类5\n---|---|---|---|---|---\n数量 |9471| 1| 1349| 39| 93\n\n\n\n\n\n\n\n","slug":"研究生数学建模：恐怖袭击事件分级","published":1,"updated":"2019-01-18T04:40:55.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck0ozhixk002bgkuwpg4viguc","content":"<h1 id=\"研究生数学建模：恐怖袭击事件分级\"><a href=\"#研究生数学建模：恐怖袭击事件分级\" class=\"headerlink\" title=\"研究生数学建模：恐怖袭击事件分级\"></a>研究生数学建模：恐怖袭击事件分级</h1><p><strong>特征：人员伤亡、经济损失、时间、地点（人口容量、GDP）等</strong></p>\n<h3 id=\"财产损失\"><a href=\"#财产损失\" class=\"headerlink\" title=\"财产损失\"></a>财产损失</h3><h4 id=\"特征：\"><a href=\"#特征：\" class=\"headerlink\" title=\"特征：\"></a><strong>特征：</strong></h4><p>攻击类型、武器类型、受害子类型、国家、地区、入选标准（1、2、3、doubtterr）<br><a id=\"more\"></a> </p>\n<h6 id=\"攻击类型\"><a href=\"#攻击类型\" class=\"headerlink\" title=\"攻击类型\"></a><strong>攻击类型</strong></h6><ol>\n<li>暗杀（1/0）</li>\n<li>武装袭击（1/0）</li>\n<li>轰炸爆炸（1/0）</li>\n<li>劫持（1/0）</li>\n<li>设施攻击（1/0）</li>\n<li>徒手攻击（1/0）</li>\n<li>未知（1/0）</li>\n</ol>\n<ol start=\"8\">\n<li>攻击成功（1/0）</li>\n<li>自杀式袭击（suicide）<h6 id=\"武器类型\"><a href=\"#武器类型\" class=\"headerlink\" title=\"武器类型\"></a><strong>武器类型</strong></h6></li>\n</ol>\n<ol start=\"9\">\n<li>生化武器、放射性武器（1/0）</li>\n<li>核武器</li>\n<li>轻武器</li>\n<li>炸弹</li>\n<li>燃烧武器</li>\n<li>治乱武器</li>\n<li>交通工具</li>\n<li>破坏设备</li>\n<li>未知</li>\n</ol>\n<h6 id=\"受害者类型\"><a href=\"#受害者类型\" class=\"headerlink\" title=\"受害者类型\"></a><strong>受害者类型</strong></h6><ol start=\"18\">\n<li>商业</li>\n<li>政府</li>\n<li>警察</li>\n<li>军事</li>\n<li>流产有关</li>\n<li>运输（机场（飞机）或巴士、火车、高铁运输）</li>\n<li>教育机构</li>\n<li>食物或水供应</li>\n<li>媒体设施</li>\n<li>海事</li>\n<li>非政府组织</li>\n<li>其他</li>\n</ol>\n<h6 id=\"地区\"><a href=\"#地区\" class=\"headerlink\" title=\"地区\"></a><strong>地区</strong></h6><ol start=\"30\">\n<li>北美</li>\n<li>南美</li>\n<li>东亚</li>\n<li>东南亚</li>\n<li>南亚</li>\n<li>中亚</li>\n<li>西欧</li>\n<li>东欧</li>\n<li>中东和北非</li>\n<li>撒哈拉以南非洲</li>\n<li>澳大利亚</li>\n</ol>\n<h6 id=\"入选标准\"><a href=\"#入选标准\" class=\"headerlink\" title=\"入选标准\"></a><strong>入选标准</strong></h6><ol start=\"41\">\n<li>标准1</li>\n<li>标准2</li>\n<li>标准3</li>\n</ol>\n<p>–</p>\n<ol start=\"44\">\n<li>疑似恐怖主义</li>\n</ol>\n<h4 id=\"输出：\"><a href=\"#输出：\" class=\"headerlink\" title=\"输出：\"></a><strong>输出：</strong></h4><ol>\n<li>灾难性的</li>\n<li>重大的</li>\n<li>较小的</li>\n<li>无损失</li>\n<li>未知</li>\n</ol>\n<ol>\n<li>设置propextent中为空的部分为0，这样就可以去除property</li>\n</ol>\n<h4 id=\"K-means聚类结果分析\"><a href=\"#K-means聚类结果分析\" class=\"headerlink\" title=\"K-means聚类结果分析\"></a><strong>K-means聚类结果分析</strong></h4><blockquote>\n<p>样本数<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">10953\\times 17</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<blockquote>\n<p>聚类结果（5类）</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th>统计</th>\n<th>类1</th>\n<th>类2</th>\n<th>类3</th>\n<th>类4</th>\n<th>类5</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>数量</td>\n<td>2497</td>\n<td>4645</td>\n<td>134</td>\n<td>1854</td>\n<td>1823</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"Spectral-Clustering聚类结果分析\"><a href=\"#Spectral-Clustering聚类结果分析\" class=\"headerlink\" title=\"Spectral Clustering聚类结果分析\"></a><strong>Spectral Clustering聚类结果分析</strong></h4><blockquote>\n<p>样本数<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">10953\\times 17</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<blockquote>\n<p>聚类结果（5类）</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th>统计</th>\n<th>类1</th>\n<th>类2</th>\n<th>类3</th>\n<th>类4</th>\n<th>类5</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>数量</td>\n<td>10883</td>\n<td>1</td>\n<td>15</td>\n<td>1</td>\n<td>53</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"分段后K-means聚类结果分析\"><a href=\"#分段后K-means聚类结果分析\" class=\"headerlink\" title=\"分段后K-means聚类结果分析\"></a><strong>分段后K-means聚类结果分析</strong></h4><blockquote>\n<p>样本数<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">10953\\times 36</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<blockquote>\n<p>聚类结果（5类）</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th>统计</th>\n<th>类1</th>\n<th>类2</th>\n<th>类3</th>\n<th>类4</th>\n<th>类5</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>数量</td>\n<td>6339</td>\n<td>1541</td>\n<td>1474</td>\n<td>725</td>\n<td>874</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"分段后Spectral-Clustering聚类结果分析\"><a href=\"#分段后Spectral-Clustering聚类结果分析\" class=\"headerlink\" title=\"分段后Spectral Clustering聚类结果分析\"></a><strong>分段后Spectral Clustering聚类结果分析</strong></h4><blockquote>\n<p>样本数<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">10953\\times 36</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<blockquote>\n<p>聚类结果（5类）</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th>统计</th>\n<th>类1</th>\n<th>类2</th>\n<th>类3</th>\n<th>类4</th>\n<th>类5</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>数量</td>\n<td>9472</td>\n<td>26</td>\n<td>1343</td>\n<td>93</td>\n<td>19</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"增大死亡数以及财产损失权重，分段后K-means聚类结果分析\"><a href=\"#增大死亡数以及财产损失权重，分段后K-means聚类结果分析\" class=\"headerlink\" title=\"增大死亡数以及财产损失权重，分段后K-means聚类结果分析\"></a><strong>增大死亡数以及财产损失权重，分段后K-means聚类结果分析</strong></h4><blockquote>\n<p>样本数<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">10953\\times 36</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<blockquote>\n<p>聚类结果（5类）</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th>统计</th>\n<th>类1</th>\n<th>类2</th>\n<th>类3</th>\n<th>类4</th>\n<th>类5</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>数量</td>\n<td>1541</td>\n<td>735</td>\n<td>7203</td>\n<td>1474</td>\n<td>0</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"增大死亡数以及财产损失权重，分段后Spectral-Clustering聚类结果分析\"><a href=\"#增大死亡数以及财产损失权重，分段后Spectral-Clustering聚类结果分析\" class=\"headerlink\" title=\"增大死亡数以及财产损失权重，分段后Spectral Clustering聚类结果分析\"></a><strong>增大死亡数以及财产损失权重，分段后Spectral Clustering聚类结果分析</strong></h4><blockquote>\n<p>样本数<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">10953\\times 36</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<blockquote>\n<p>聚类结果（5类）</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th>统计</th>\n<th>类1</th>\n<th>类2</th>\n<th>类3</th>\n<th>类4</th>\n<th>类5</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>数量</td>\n<td>9471</td>\n<td>1</td>\n<td>1349</td>\n<td>39</td>\n<td>93</td>\n</tr>\n</tbody>\n</table>\n","site":{"data":{}},"excerpt":"<h1 id=\"研究生数学建模：恐怖袭击事件分级\"><a href=\"#研究生数学建模：恐怖袭击事件分级\" class=\"headerlink\" title=\"研究生数学建模：恐怖袭击事件分级\"></a>研究生数学建模：恐怖袭击事件分级</h1><p><strong>特征：人员伤亡、经济损失、时间、地点（人口容量、GDP）等</strong></p>\n<h3 id=\"财产损失\"><a href=\"#财产损失\" class=\"headerlink\" title=\"财产损失\"></a>财产损失</h3><h4 id=\"特征：\"><a href=\"#特征：\" class=\"headerlink\" title=\"特征：\"></a><strong>特征：</strong></h4><p>攻击类型、武器类型、受害子类型、国家、地区、入选标准（1、2、3、doubtterr）<br></p>","more":"<p></p>\n<h6 id=\"攻击类型\"><a href=\"#攻击类型\" class=\"headerlink\" title=\"攻击类型\"></a><strong>攻击类型</strong></h6><ol>\n<li>暗杀（1/0）</li>\n<li>武装袭击（1/0）</li>\n<li>轰炸爆炸（1/0）</li>\n<li>劫持（1/0）</li>\n<li>设施攻击（1/0）</li>\n<li>徒手攻击（1/0）</li>\n<li>未知（1/0）</li>\n</ol>\n<ol start=\"8\">\n<li>攻击成功（1/0）</li>\n<li>自杀式袭击（suicide）<h6 id=\"武器类型\"><a href=\"#武器类型\" class=\"headerlink\" title=\"武器类型\"></a><strong>武器类型</strong></h6></li>\n</ol>\n<ol start=\"9\">\n<li>生化武器、放射性武器（1/0）</li>\n<li>核武器</li>\n<li>轻武器</li>\n<li>炸弹</li>\n<li>燃烧武器</li>\n<li>治乱武器</li>\n<li>交通工具</li>\n<li>破坏设备</li>\n<li>未知</li>\n</ol>\n<h6 id=\"受害者类型\"><a href=\"#受害者类型\" class=\"headerlink\" title=\"受害者类型\"></a><strong>受害者类型</strong></h6><ol start=\"18\">\n<li>商业</li>\n<li>政府</li>\n<li>警察</li>\n<li>军事</li>\n<li>流产有关</li>\n<li>运输（机场（飞机）或巴士、火车、高铁运输）</li>\n<li>教育机构</li>\n<li>食物或水供应</li>\n<li>媒体设施</li>\n<li>海事</li>\n<li>非政府组织</li>\n<li>其他</li>\n</ol>\n<h6 id=\"地区\"><a href=\"#地区\" class=\"headerlink\" title=\"地区\"></a><strong>地区</strong></h6><ol start=\"30\">\n<li>北美</li>\n<li>南美</li>\n<li>东亚</li>\n<li>东南亚</li>\n<li>南亚</li>\n<li>中亚</li>\n<li>西欧</li>\n<li>东欧</li>\n<li>中东和北非</li>\n<li>撒哈拉以南非洲</li>\n<li>澳大利亚</li>\n</ol>\n<h6 id=\"入选标准\"><a href=\"#入选标准\" class=\"headerlink\" title=\"入选标准\"></a><strong>入选标准</strong></h6><ol start=\"41\">\n<li>标准1</li>\n<li>标准2</li>\n<li>标准3</li>\n</ol>\n<p>–</p>\n<ol start=\"44\">\n<li>疑似恐怖主义</li>\n</ol>\n<h4 id=\"输出：\"><a href=\"#输出：\" class=\"headerlink\" title=\"输出：\"></a><strong>输出：</strong></h4><ol>\n<li>灾难性的</li>\n<li>重大的</li>\n<li>较小的</li>\n<li>无损失</li>\n<li>未知</li>\n</ol>\n<ol>\n<li>设置propextent中为空的部分为0，这样就可以去除property</li>\n</ol>\n<h4 id=\"K-means聚类结果分析\"><a href=\"#K-means聚类结果分析\" class=\"headerlink\" title=\"K-means聚类结果分析\"></a><strong>K-means聚类结果分析</strong></h4><blockquote>\n<p>样本数<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">10953\\times 17</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<blockquote>\n<p>聚类结果（5类）</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th>统计</th>\n<th>类1</th>\n<th>类2</th>\n<th>类3</th>\n<th>类4</th>\n<th>类5</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>数量</td>\n<td>2497</td>\n<td>4645</td>\n<td>134</td>\n<td>1854</td>\n<td>1823</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"Spectral-Clustering聚类结果分析\"><a href=\"#Spectral-Clustering聚类结果分析\" class=\"headerlink\" title=\"Spectral Clustering聚类结果分析\"></a><strong>Spectral Clustering聚类结果分析</strong></h4><blockquote>\n<p>样本数<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">10953\\times 17</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<blockquote>\n<p>聚类结果（5类）</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th>统计</th>\n<th>类1</th>\n<th>类2</th>\n<th>类3</th>\n<th>类4</th>\n<th>类5</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>数量</td>\n<td>10883</td>\n<td>1</td>\n<td>15</td>\n<td>1</td>\n<td>53</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"分段后K-means聚类结果分析\"><a href=\"#分段后K-means聚类结果分析\" class=\"headerlink\" title=\"分段后K-means聚类结果分析\"></a><strong>分段后K-means聚类结果分析</strong></h4><blockquote>\n<p>样本数<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">10953\\times 36</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<blockquote>\n<p>聚类结果（5类）</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th>统计</th>\n<th>类1</th>\n<th>类2</th>\n<th>类3</th>\n<th>类4</th>\n<th>类5</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>数量</td>\n<td>6339</td>\n<td>1541</td>\n<td>1474</td>\n<td>725</td>\n<td>874</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"分段后Spectral-Clustering聚类结果分析\"><a href=\"#分段后Spectral-Clustering聚类结果分析\" class=\"headerlink\" title=\"分段后Spectral Clustering聚类结果分析\"></a><strong>分段后Spectral Clustering聚类结果分析</strong></h4><blockquote>\n<p>样本数<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">10953\\times 36</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<blockquote>\n<p>聚类结果（5类）</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th>统计</th>\n<th>类1</th>\n<th>类2</th>\n<th>类3</th>\n<th>类4</th>\n<th>类5</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>数量</td>\n<td>9472</td>\n<td>26</td>\n<td>1343</td>\n<td>93</td>\n<td>19</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"增大死亡数以及财产损失权重，分段后K-means聚类结果分析\"><a href=\"#增大死亡数以及财产损失权重，分段后K-means聚类结果分析\" class=\"headerlink\" title=\"增大死亡数以及财产损失权重，分段后K-means聚类结果分析\"></a><strong>增大死亡数以及财产损失权重，分段后K-means聚类结果分析</strong></h4><blockquote>\n<p>样本数<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">10953\\times 36</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<blockquote>\n<p>聚类结果（5类）</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th>统计</th>\n<th>类1</th>\n<th>类2</th>\n<th>类3</th>\n<th>类4</th>\n<th>类5</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>数量</td>\n<td>1541</td>\n<td>735</td>\n<td>7203</td>\n<td>1474</td>\n<td>0</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"增大死亡数以及财产损失权重，分段后Spectral-Clustering聚类结果分析\"><a href=\"#增大死亡数以及财产损失权重，分段后Spectral-Clustering聚类结果分析\" class=\"headerlink\" title=\"增大死亡数以及财产损失权重，分段后Spectral Clustering聚类结果分析\"></a><strong>增大死亡数以及财产损失权重，分段后Spectral Clustering聚类结果分析</strong></h4><blockquote>\n<p>样本数<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">10953\\times 36</span><br></pre></td></tr></table></figure></p>\n</blockquote>\n<blockquote>\n<p>聚类结果（5类）</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th>统计</th>\n<th>类1</th>\n<th>类2</th>\n<th>类3</th>\n<th>类4</th>\n<th>类5</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>数量</td>\n<td>9471</td>\n<td>1</td>\n<td>1349</td>\n<td>39</td>\n<td>93</td>\n</tr>\n</tbody>\n</table>"},{"title":"统计学习三要素","date":"2019-09-10T02:37:22.000Z","_content":"\n统计学习方法是由模型、策略和算法构成的，即统计学习方法由三要素构成，可以简单表示为：\n\n$$\n方法=模型+策略+算法\n$$\n<!-- more --> \n## 模型\n统计学习首先要考虑的问题是学习什么样的模型。在监督学习过程中，模型就是所要学习的条件概率分布$P(Y/X)$或者决策函数$Y=f(X)$。模型的假设空间包含所有可能的条件概率分布或决策函数。  \n\n对于决策函数是输入变量的线性函数的情况，模型的假设空间就是所有线性函数构成的函数集合。假设空间用$F$表示。假设空间可以定义为决策函数的集合\n\n$$\nF=\\{f|Y=f(X)\\}\n$$\n\n其中，$X$和$Y$是定义在输入空间$\\LARGE{x}$和输出空间$\\LARGE{y}$上的变量。这时$F$通常是由一个参数向量决定的函数族：\n\n$$\nF=\\{f|Y=f_\\theta(X),\\theta\\in{R^n}\\}\n$$\n参数向量$\\theta$取值于$n$维欧氏空间$R^n$，称为参数空间。\n\n假设空间也可以定义为条件概率的集合\n\n$$\nF=\\{P|P(Y/X)\\}\n$$\n其中，$X$和$Y$是定义在输入空间$\\LARGE{x}$和输出空间$\\LARGE{y}$上的随机变量。这时$F$通常是由一个参数向量决定的条件概率分布族：\n\n$$\nF=\\{P|P_\\theta(Y/X)\\}\n$$\n\n参数向量$\\theta$取值于$n$维欧氏空间$R^n$，也称为参数空间。\n\n## 策略\n有了模型的假设空间，统计学习接着需要考虑使用什么样的策略从假设空间中选取出最优的模型。  \n\n首先引入损失函数与风险函数的概念，损失函数模型一次预测的好坏，风险函数度量平均意义下模型预测的好坏。\n\n### 损失函数\n监督学习问题是在假设空间$F$中选取模型$f$作为决策函数，对于给定的输入$X$，由$f(X)$给出相应的输出$Y$，这个输出的预测值$f(X)$与真实值$Y$可能一致也可能不一致，用一个损失函数(loss function)与代价函数(cost function)来度量错误的程度。损失函数是$f(X)$与$Y$的非负实值函数，记作$L(Y,f(X))$。\n\n统计学习常用的损失函数有以下几种：\n（1）0-1损失函数(0-1 loss function)  \n\n$$\nL(Y,f(X)) = \\begin{cases}  \n1, & Y \\neq f(X) \\\\\n0, & Y = f(X)\n\\end{cases}\n$$\n\n（2）平方损失函数(quadratic loss function)\n\n$$\nL(Y,f(X)) = (Y-f(X))^2\n$$\n\n（3）绝对损失函数(absolute loss function)\n\n$$\nL(Y,f(X)) = |Y-f(X)|\n$$\n\n（4）对数损失函数(logarithmic loss function)或者对数似然损失函数(log-likelihood loss function)\n\n$$\nL(Y,P(Y/X)) = -log{P(Y/X)}\n$$\n\n### 风险函数\n\n损失函数值越小，模型就越好。由于模型的输入、输出$(X,Y)$是随机变量，遵循联合分布$P(X,Y)$，所以损失函数的期望是\n\n$$\nR_{exp}(f)=E_p[L(Y,f(X))]=\\int_{\\LARGE{x}\\times\\Large{y}}L(y,f(x))P(x,y)dxdy\n$$\n\n这是理论上$f(X)$关于联合分布$P(X,Y)$的平均意义下的损失，称为风险函数（risk function）或期望损失（expected loss）。学习的目标就是选择期望风险最小的模型。\n\n给定一个训练数据集\n\n$$\nT={(x_1,y_1),(x_2,y_2),\\cdots,(x_N,y_N)}\n$$\n\n模型$f(X)$关于训练数据集的平均损失称为经验风险(empirical risk)或经验损失(empirical loss)，记作$R_{emp}$:\n\n$$\nR_{emp}(f)=\\frac{1}{N}\\sum_{i=1}^N{L(y_i,f(x_i))}\n$$\n\n期望风险$R_{exp}(f)$是模型关于联合分布的期望损失，经验风险$R_{emp}(f)$是模型关于训练样本集的平均损失。根据大数定律，当样本容量$N$趋于无穷时，经验风险$R_{emp}(f)$趋于期望风险$R_{exp}(f)$。但是现实中训练样本数目有限，甚至很小，所以用经验风险估计期望风险常常并不理想，需要对经验风险进行一定的矫正。\n\n### 经验风险最小化与结构风险最小化\n\n在假设空间、损失函数以及训练数据集确定的情况下，经验风险函数式就可以确定。通过最小化经验风险就可以得到最优的模型。根据这一策略，按照经验风险最小化求最优模型就是求解最优化问题：\n\n$$\nmin_{f\\in{F}}\\frac{1}{N}\\sum_{i=1}^N{L(y_i,f(x_i))}\n$$\n\n其中，$F$是假设空间。\n\n当样本容量足够大时，经验风险最小化能保证有很好的学习效果，在现实中被广泛采用。当样本容量很小的时候，经验风险最小化学习的效果就不一定很好，会产生过拟合现象。  \n\n结构风险最小化(structural risk minimization,SRM)是为了防止过拟合而提出的策略。结构风险最小化等价于正则化(regularization)。结构风险在经验风险上加上表示模型复杂度的正则项(regularizer)或惩罚项(penalty term)。在假设空间、损失函数以及训练数据集确定的情况下，结构风险的定义是：\n\n$$\nR_{srm}(f)=\\frac{1}{N}\\sum_{i=1}^N{L(y_i,f(x_i))}+\\lambda{J(f)}\n$$\n\n其中$J(f)$为模型的复杂度，是定义在假设空间$F$上的泛函。模型$f$越复杂，复杂度$J(f)$就越大。也就是说，复杂度表示了对复杂模型的惩罚。$\\lambda\\geq{0}$是系数，用以权衡经验风险和模型复杂度。结构风险小需要经验风险和模型复杂度同时小。\n\n结构风险最小化的策略认为结构风险最小的模型就是最优的模型。所以求最优模型，就是求解以下问题：\n\n$$\nmin_{f\\in{F}}R_{srm}(f)=min_{f\\in{F}}\\{\\frac{1}{N}\\sum_{i=1}^N{L(y_i,f(x_i))}+\\lambda{J(f)}\\}\n$$\n\n## 算法\n\n算法是指学习模型的具体计算方法。统计学习基于训练数据集，根据学习策略，从假设空间中选择最优模型，最后考虑用什么样的计算方法求解最优模型。\n\n这时，统计学习问题归结为最优化问题，统计学习的算法称为求解最优化问题的算法。统计学习方法之间的不同，主要来自其模型、策略、算法的不同。确定里模型、策略、算法，统计学习的方法也就确定了。\n","source":"_posts/统计学习三要素.md","raw":"---\ntitle: 统计学习三要素\ndate: 2019-09-10 10:37:22\ntags:\ncategories: 统计学习\n---\n\n统计学习方法是由模型、策略和算法构成的，即统计学习方法由三要素构成，可以简单表示为：\n\n$$\n方法=模型+策略+算法\n$$\n<!-- more --> \n## 模型\n统计学习首先要考虑的问题是学习什么样的模型。在监督学习过程中，模型就是所要学习的条件概率分布$P(Y/X)$或者决策函数$Y=f(X)$。模型的假设空间包含所有可能的条件概率分布或决策函数。  \n\n对于决策函数是输入变量的线性函数的情况，模型的假设空间就是所有线性函数构成的函数集合。假设空间用$F$表示。假设空间可以定义为决策函数的集合\n\n$$\nF=\\{f|Y=f(X)\\}\n$$\n\n其中，$X$和$Y$是定义在输入空间$\\LARGE{x}$和输出空间$\\LARGE{y}$上的变量。这时$F$通常是由一个参数向量决定的函数族：\n\n$$\nF=\\{f|Y=f_\\theta(X),\\theta\\in{R^n}\\}\n$$\n参数向量$\\theta$取值于$n$维欧氏空间$R^n$，称为参数空间。\n\n假设空间也可以定义为条件概率的集合\n\n$$\nF=\\{P|P(Y/X)\\}\n$$\n其中，$X$和$Y$是定义在输入空间$\\LARGE{x}$和输出空间$\\LARGE{y}$上的随机变量。这时$F$通常是由一个参数向量决定的条件概率分布族：\n\n$$\nF=\\{P|P_\\theta(Y/X)\\}\n$$\n\n参数向量$\\theta$取值于$n$维欧氏空间$R^n$，也称为参数空间。\n\n## 策略\n有了模型的假设空间，统计学习接着需要考虑使用什么样的策略从假设空间中选取出最优的模型。  \n\n首先引入损失函数与风险函数的概念，损失函数模型一次预测的好坏，风险函数度量平均意义下模型预测的好坏。\n\n### 损失函数\n监督学习问题是在假设空间$F$中选取模型$f$作为决策函数，对于给定的输入$X$，由$f(X)$给出相应的输出$Y$，这个输出的预测值$f(X)$与真实值$Y$可能一致也可能不一致，用一个损失函数(loss function)与代价函数(cost function)来度量错误的程度。损失函数是$f(X)$与$Y$的非负实值函数，记作$L(Y,f(X))$。\n\n统计学习常用的损失函数有以下几种：\n（1）0-1损失函数(0-1 loss function)  \n\n$$\nL(Y,f(X)) = \\begin{cases}  \n1, & Y \\neq f(X) \\\\\n0, & Y = f(X)\n\\end{cases}\n$$\n\n（2）平方损失函数(quadratic loss function)\n\n$$\nL(Y,f(X)) = (Y-f(X))^2\n$$\n\n（3）绝对损失函数(absolute loss function)\n\n$$\nL(Y,f(X)) = |Y-f(X)|\n$$\n\n（4）对数损失函数(logarithmic loss function)或者对数似然损失函数(log-likelihood loss function)\n\n$$\nL(Y,P(Y/X)) = -log{P(Y/X)}\n$$\n\n### 风险函数\n\n损失函数值越小，模型就越好。由于模型的输入、输出$(X,Y)$是随机变量，遵循联合分布$P(X,Y)$，所以损失函数的期望是\n\n$$\nR_{exp}(f)=E_p[L(Y,f(X))]=\\int_{\\LARGE{x}\\times\\Large{y}}L(y,f(x))P(x,y)dxdy\n$$\n\n这是理论上$f(X)$关于联合分布$P(X,Y)$的平均意义下的损失，称为风险函数（risk function）或期望损失（expected loss）。学习的目标就是选择期望风险最小的模型。\n\n给定一个训练数据集\n\n$$\nT={(x_1,y_1),(x_2,y_2),\\cdots,(x_N,y_N)}\n$$\n\n模型$f(X)$关于训练数据集的平均损失称为经验风险(empirical risk)或经验损失(empirical loss)，记作$R_{emp}$:\n\n$$\nR_{emp}(f)=\\frac{1}{N}\\sum_{i=1}^N{L(y_i,f(x_i))}\n$$\n\n期望风险$R_{exp}(f)$是模型关于联合分布的期望损失，经验风险$R_{emp}(f)$是模型关于训练样本集的平均损失。根据大数定律，当样本容量$N$趋于无穷时，经验风险$R_{emp}(f)$趋于期望风险$R_{exp}(f)$。但是现实中训练样本数目有限，甚至很小，所以用经验风险估计期望风险常常并不理想，需要对经验风险进行一定的矫正。\n\n### 经验风险最小化与结构风险最小化\n\n在假设空间、损失函数以及训练数据集确定的情况下，经验风险函数式就可以确定。通过最小化经验风险就可以得到最优的模型。根据这一策略，按照经验风险最小化求最优模型就是求解最优化问题：\n\n$$\nmin_{f\\in{F}}\\frac{1}{N}\\sum_{i=1}^N{L(y_i,f(x_i))}\n$$\n\n其中，$F$是假设空间。\n\n当样本容量足够大时，经验风险最小化能保证有很好的学习效果，在现实中被广泛采用。当样本容量很小的时候，经验风险最小化学习的效果就不一定很好，会产生过拟合现象。  \n\n结构风险最小化(structural risk minimization,SRM)是为了防止过拟合而提出的策略。结构风险最小化等价于正则化(regularization)。结构风险在经验风险上加上表示模型复杂度的正则项(regularizer)或惩罚项(penalty term)。在假设空间、损失函数以及训练数据集确定的情况下，结构风险的定义是：\n\n$$\nR_{srm}(f)=\\frac{1}{N}\\sum_{i=1}^N{L(y_i,f(x_i))}+\\lambda{J(f)}\n$$\n\n其中$J(f)$为模型的复杂度，是定义在假设空间$F$上的泛函。模型$f$越复杂，复杂度$J(f)$就越大。也就是说，复杂度表示了对复杂模型的惩罚。$\\lambda\\geq{0}$是系数，用以权衡经验风险和模型复杂度。结构风险小需要经验风险和模型复杂度同时小。\n\n结构风险最小化的策略认为结构风险最小的模型就是最优的模型。所以求最优模型，就是求解以下问题：\n\n$$\nmin_{f\\in{F}}R_{srm}(f)=min_{f\\in{F}}\\{\\frac{1}{N}\\sum_{i=1}^N{L(y_i,f(x_i))}+\\lambda{J(f)}\\}\n$$\n\n## 算法\n\n算法是指学习模型的具体计算方法。统计学习基于训练数据集，根据学习策略，从假设空间中选择最优模型，最后考虑用什么样的计算方法求解最优模型。\n\n这时，统计学习问题归结为最优化问题，统计学习的算法称为求解最优化问题的算法。统计学习方法之间的不同，主要来自其模型、策略、算法的不同。确定里模型、策略、算法，统计学习的方法也就确定了。\n","slug":"统计学习三要素","published":1,"updated":"2019-09-10T05:23:20.318Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck0ozhixm002fgkuwyy6z887v","content":"<p>统计学习方法是由模型、策略和算法构成的，即统计学习方法由三要素构成，可以简单表示为：</p>\n<p>$$<br>方法=模型+策略+算法<br>$$<br><a id=\"more\"></a> </p>\n<h2 id=\"模型\"><a href=\"#模型\" class=\"headerlink\" title=\"模型\"></a>模型</h2><p>统计学习首先要考虑的问题是学习什么样的模型。在监督学习过程中，模型就是所要学习的条件概率分布$P(Y/X)$或者决策函数$Y=f(X)$。模型的假设空间包含所有可能的条件概率分布或决策函数。  </p>\n<p>对于决策函数是输入变量的线性函数的情况，模型的假设空间就是所有线性函数构成的函数集合。假设空间用$F$表示。假设空间可以定义为决策函数的集合</p>\n<p>$$<br>F={f|Y=f(X)}<br>$$</p>\n<p>其中，$X$和$Y$是定义在输入空间$\\LARGE{x}$和输出空间$\\LARGE{y}$上的变量。这时$F$通常是由一个参数向量决定的函数族：</p>\n<p>$$<br>F={f|Y=f_\\theta(X),\\theta\\in{R^n}}<br>$$<br>参数向量$\\theta$取值于$n$维欧氏空间$R^n$，称为参数空间。</p>\n<p>假设空间也可以定义为条件概率的集合</p>\n<p>$$<br>F={P|P(Y/X)}<br>$$<br>其中，$X$和$Y$是定义在输入空间$\\LARGE{x}$和输出空间$\\LARGE{y}$上的随机变量。这时$F$通常是由一个参数向量决定的条件概率分布族：</p>\n<p>$$<br>F={P|P_\\theta(Y/X)}<br>$$</p>\n<p>参数向量$\\theta$取值于$n$维欧氏空间$R^n$，也称为参数空间。</p>\n<h2 id=\"策略\"><a href=\"#策略\" class=\"headerlink\" title=\"策略\"></a>策略</h2><p>有了模型的假设空间，统计学习接着需要考虑使用什么样的策略从假设空间中选取出最优的模型。  </p>\n<p>首先引入损失函数与风险函数的概念，损失函数模型一次预测的好坏，风险函数度量平均意义下模型预测的好坏。</p>\n<h3 id=\"损失函数\"><a href=\"#损失函数\" class=\"headerlink\" title=\"损失函数\"></a>损失函数</h3><p>监督学习问题是在假设空间$F$中选取模型$f$作为决策函数，对于给定的输入$X$，由$f(X)$给出相应的输出$Y$，这个输出的预测值$f(X)$与真实值$Y$可能一致也可能不一致，用一个损失函数(loss function)与代价函数(cost function)来度量错误的程度。损失函数是$f(X)$与$Y$的非负实值函数，记作$L(Y,f(X))$。</p>\n<p>统计学习常用的损失函数有以下几种：<br>（1）0-1损失函数(0-1 loss function)  </p>\n<p>$$<br>L(Y,f(X)) = \\begin{cases}<br>1, &amp; Y \\neq f(X) \\<br>0, &amp; Y = f(X)<br>\\end{cases}<br>$$</p>\n<p>（2）平方损失函数(quadratic loss function)</p>\n<p>$$<br>L(Y,f(X)) = (Y-f(X))^2<br>$$</p>\n<p>（3）绝对损失函数(absolute loss function)</p>\n<p>$$<br>L(Y,f(X)) = |Y-f(X)|<br>$$</p>\n<p>（4）对数损失函数(logarithmic loss function)或者对数似然损失函数(log-likelihood loss function)</p>\n<p>$$<br>L(Y,P(Y/X)) = -log{P(Y/X)}<br>$$</p>\n<h3 id=\"风险函数\"><a href=\"#风险函数\" class=\"headerlink\" title=\"风险函数\"></a>风险函数</h3><p>损失函数值越小，模型就越好。由于模型的输入、输出$(X,Y)$是随机变量，遵循联合分布$P(X,Y)$，所以损失函数的期望是</p>\n<p>$$<br>R_{exp}(f)=E_p[L(Y,f(X))]=\\int_{\\LARGE{x}\\times\\Large{y}}L(y,f(x))P(x,y)dxdy<br>$$</p>\n<p>这是理论上$f(X)$关于联合分布$P(X,Y)$的平均意义下的损失，称为风险函数（risk function）或期望损失（expected loss）。学习的目标就是选择期望风险最小的模型。</p>\n<p>给定一个训练数据集</p>\n<p>$$<br>T={(x_1,y_1),(x_2,y_2),\\cdots,(x_N,y_N)}<br>$$</p>\n<p>模型$f(X)$关于训练数据集的平均损失称为经验风险(empirical risk)或经验损失(empirical loss)，记作$R_{emp}$:</p>\n<p>$$<br>R_{emp}(f)=\\frac{1}{N}\\sum_{i=1}^N{L(y_i,f(x_i))}<br>$$</p>\n<p>期望风险$R_{exp}(f)$是模型关于联合分布的期望损失，经验风险$R_{emp}(f)$是模型关于训练样本集的平均损失。根据大数定律，当样本容量$N$趋于无穷时，经验风险$R_{emp}(f)$趋于期望风险$R_{exp}(f)$。但是现实中训练样本数目有限，甚至很小，所以用经验风险估计期望风险常常并不理想，需要对经验风险进行一定的矫正。</p>\n<h3 id=\"经验风险最小化与结构风险最小化\"><a href=\"#经验风险最小化与结构风险最小化\" class=\"headerlink\" title=\"经验风险最小化与结构风险最小化\"></a>经验风险最小化与结构风险最小化</h3><p>在假设空间、损失函数以及训练数据集确定的情况下，经验风险函数式就可以确定。通过最小化经验风险就可以得到最优的模型。根据这一策略，按照经验风险最小化求最优模型就是求解最优化问题：</p>\n<p>$$<br>min_{f\\in{F}}\\frac{1}{N}\\sum_{i=1}^N{L(y_i,f(x_i))}<br>$$</p>\n<p>其中，$F$是假设空间。</p>\n<p>当样本容量足够大时，经验风险最小化能保证有很好的学习效果，在现实中被广泛采用。当样本容量很小的时候，经验风险最小化学习的效果就不一定很好，会产生过拟合现象。  </p>\n<p>结构风险最小化(structural risk minimization,SRM)是为了防止过拟合而提出的策略。结构风险最小化等价于正则化(regularization)。结构风险在经验风险上加上表示模型复杂度的正则项(regularizer)或惩罚项(penalty term)。在假设空间、损失函数以及训练数据集确定的情况下，结构风险的定义是：</p>\n<p>$$<br>R_{srm}(f)=\\frac{1}{N}\\sum_{i=1}^N{L(y_i,f(x_i))}+\\lambda{J(f)}<br>$$</p>\n<p>其中$J(f)$为模型的复杂度，是定义在假设空间$F$上的泛函。模型$f$越复杂，复杂度$J(f)$就越大。也就是说，复杂度表示了对复杂模型的惩罚。$\\lambda\\geq{0}$是系数，用以权衡经验风险和模型复杂度。结构风险小需要经验风险和模型复杂度同时小。</p>\n<p>结构风险最小化的策略认为结构风险最小的模型就是最优的模型。所以求最优模型，就是求解以下问题：</p>\n<p>$$<br>min_{f\\in{F}}R_{srm}(f)=min_{f\\in{F}}{\\frac{1}{N}\\sum_{i=1}^N{L(y_i,f(x_i))}+\\lambda{J(f)}}<br>$$</p>\n<h2 id=\"算法\"><a href=\"#算法\" class=\"headerlink\" title=\"算法\"></a>算法</h2><p>算法是指学习模型的具体计算方法。统计学习基于训练数据集，根据学习策略，从假设空间中选择最优模型，最后考虑用什么样的计算方法求解最优模型。</p>\n<p>这时，统计学习问题归结为最优化问题，统计学习的算法称为求解最优化问题的算法。统计学习方法之间的不同，主要来自其模型、策略、算法的不同。确定里模型、策略、算法，统计学习的方法也就确定了。</p>\n","site":{"data":{}},"excerpt":"<p>统计学习方法是由模型、策略和算法构成的，即统计学习方法由三要素构成，可以简单表示为：</p>\n<p>$$<br>方法=模型+策略+算法<br>$$<br></p>","more":"<p></p>\n<h2 id=\"模型\"><a href=\"#模型\" class=\"headerlink\" title=\"模型\"></a>模型</h2><p>统计学习首先要考虑的问题是学习什么样的模型。在监督学习过程中，模型就是所要学习的条件概率分布$P(Y/X)$或者决策函数$Y=f(X)$。模型的假设空间包含所有可能的条件概率分布或决策函数。  </p>\n<p>对于决策函数是输入变量的线性函数的情况，模型的假设空间就是所有线性函数构成的函数集合。假设空间用$F$表示。假设空间可以定义为决策函数的集合</p>\n<p>$$<br>F={f|Y=f(X)}<br>$$</p>\n<p>其中，$X$和$Y$是定义在输入空间$\\LARGE{x}$和输出空间$\\LARGE{y}$上的变量。这时$F$通常是由一个参数向量决定的函数族：</p>\n<p>$$<br>F={f|Y=f_\\theta(X),\\theta\\in{R^n}}<br>$$<br>参数向量$\\theta$取值于$n$维欧氏空间$R^n$，称为参数空间。</p>\n<p>假设空间也可以定义为条件概率的集合</p>\n<p>$$<br>F={P|P(Y/X)}<br>$$<br>其中，$X$和$Y$是定义在输入空间$\\LARGE{x}$和输出空间$\\LARGE{y}$上的随机变量。这时$F$通常是由一个参数向量决定的条件概率分布族：</p>\n<p>$$<br>F={P|P_\\theta(Y/X)}<br>$$</p>\n<p>参数向量$\\theta$取值于$n$维欧氏空间$R^n$，也称为参数空间。</p>\n<h2 id=\"策略\"><a href=\"#策略\" class=\"headerlink\" title=\"策略\"></a>策略</h2><p>有了模型的假设空间，统计学习接着需要考虑使用什么样的策略从假设空间中选取出最优的模型。  </p>\n<p>首先引入损失函数与风险函数的概念，损失函数模型一次预测的好坏，风险函数度量平均意义下模型预测的好坏。</p>\n<h3 id=\"损失函数\"><a href=\"#损失函数\" class=\"headerlink\" title=\"损失函数\"></a>损失函数</h3><p>监督学习问题是在假设空间$F$中选取模型$f$作为决策函数，对于给定的输入$X$，由$f(X)$给出相应的输出$Y$，这个输出的预测值$f(X)$与真实值$Y$可能一致也可能不一致，用一个损失函数(loss function)与代价函数(cost function)来度量错误的程度。损失函数是$f(X)$与$Y$的非负实值函数，记作$L(Y,f(X))$。</p>\n<p>统计学习常用的损失函数有以下几种：<br>（1）0-1损失函数(0-1 loss function)  </p>\n<p>$$<br>L(Y,f(X)) = \\begin{cases}<br>1, &amp; Y \\neq f(X) \\<br>0, &amp; Y = f(X)<br>\\end{cases}<br>$$</p>\n<p>（2）平方损失函数(quadratic loss function)</p>\n<p>$$<br>L(Y,f(X)) = (Y-f(X))^2<br>$$</p>\n<p>（3）绝对损失函数(absolute loss function)</p>\n<p>$$<br>L(Y,f(X)) = |Y-f(X)|<br>$$</p>\n<p>（4）对数损失函数(logarithmic loss function)或者对数似然损失函数(log-likelihood loss function)</p>\n<p>$$<br>L(Y,P(Y/X)) = -log{P(Y/X)}<br>$$</p>\n<h3 id=\"风险函数\"><a href=\"#风险函数\" class=\"headerlink\" title=\"风险函数\"></a>风险函数</h3><p>损失函数值越小，模型就越好。由于模型的输入、输出$(X,Y)$是随机变量，遵循联合分布$P(X,Y)$，所以损失函数的期望是</p>\n<p>$$<br>R_{exp}(f)=E_p[L(Y,f(X))]=\\int_{\\LARGE{x}\\times\\Large{y}}L(y,f(x))P(x,y)dxdy<br>$$</p>\n<p>这是理论上$f(X)$关于联合分布$P(X,Y)$的平均意义下的损失，称为风险函数（risk function）或期望损失（expected loss）。学习的目标就是选择期望风险最小的模型。</p>\n<p>给定一个训练数据集</p>\n<p>$$<br>T={(x_1,y_1),(x_2,y_2),\\cdots,(x_N,y_N)}<br>$$</p>\n<p>模型$f(X)$关于训练数据集的平均损失称为经验风险(empirical risk)或经验损失(empirical loss)，记作$R_{emp}$:</p>\n<p>$$<br>R_{emp}(f)=\\frac{1}{N}\\sum_{i=1}^N{L(y_i,f(x_i))}<br>$$</p>\n<p>期望风险$R_{exp}(f)$是模型关于联合分布的期望损失，经验风险$R_{emp}(f)$是模型关于训练样本集的平均损失。根据大数定律，当样本容量$N$趋于无穷时，经验风险$R_{emp}(f)$趋于期望风险$R_{exp}(f)$。但是现实中训练样本数目有限，甚至很小，所以用经验风险估计期望风险常常并不理想，需要对经验风险进行一定的矫正。</p>\n<h3 id=\"经验风险最小化与结构风险最小化\"><a href=\"#经验风险最小化与结构风险最小化\" class=\"headerlink\" title=\"经验风险最小化与结构风险最小化\"></a>经验风险最小化与结构风险最小化</h3><p>在假设空间、损失函数以及训练数据集确定的情况下，经验风险函数式就可以确定。通过最小化经验风险就可以得到最优的模型。根据这一策略，按照经验风险最小化求最优模型就是求解最优化问题：</p>\n<p>$$<br>min_{f\\in{F}}\\frac{1}{N}\\sum_{i=1}^N{L(y_i,f(x_i))}<br>$$</p>\n<p>其中，$F$是假设空间。</p>\n<p>当样本容量足够大时，经验风险最小化能保证有很好的学习效果，在现实中被广泛采用。当样本容量很小的时候，经验风险最小化学习的效果就不一定很好，会产生过拟合现象。  </p>\n<p>结构风险最小化(structural risk minimization,SRM)是为了防止过拟合而提出的策略。结构风险最小化等价于正则化(regularization)。结构风险在经验风险上加上表示模型复杂度的正则项(regularizer)或惩罚项(penalty term)。在假设空间、损失函数以及训练数据集确定的情况下，结构风险的定义是：</p>\n<p>$$<br>R_{srm}(f)=\\frac{1}{N}\\sum_{i=1}^N{L(y_i,f(x_i))}+\\lambda{J(f)}<br>$$</p>\n<p>其中$J(f)$为模型的复杂度，是定义在假设空间$F$上的泛函。模型$f$越复杂，复杂度$J(f)$就越大。也就是说，复杂度表示了对复杂模型的惩罚。$\\lambda\\geq{0}$是系数，用以权衡经验风险和模型复杂度。结构风险小需要经验风险和模型复杂度同时小。</p>\n<p>结构风险最小化的策略认为结构风险最小的模型就是最优的模型。所以求最优模型，就是求解以下问题：</p>\n<p>$$<br>min_{f\\in{F}}R_{srm}(f)=min_{f\\in{F}}{\\frac{1}{N}\\sum_{i=1}^N{L(y_i,f(x_i))}+\\lambda{J(f)}}<br>$$</p>\n<h2 id=\"算法\"><a href=\"#算法\" class=\"headerlink\" title=\"算法\"></a>算法</h2><p>算法是指学习模型的具体计算方法。统计学习基于训练数据集，根据学习策略，从假设空间中选择最优模型，最后考虑用什么样的计算方法求解最优模型。</p>\n<p>这时，统计学习问题归结为最优化问题，统计学习的算法称为求解最优化问题的算法。统计学习方法之间的不同，主要来自其模型、策略、算法的不同。确定里模型、策略、算法，统计学习的方法也就确定了。</p>"},{"title":"阿里巴巴实习生面试","date":"2019-04-17T14:50:46.000Z","_content":"\n阿里巴巴暑期实习，官网内推投的成都蚂蚁金服，经过漫长等待和催促终于等来了面试。\n<!-- more --> \n\n## 一面（48min）\n\n### 自我介绍\n\n### Java并发\n- 一个之前没注意的问题：synchronized关键字可以修饰类吗？\n\n### Spring bean的生命周期和作用域\n\n\n### IOC有什么用\n解耦\n\n### MySQL数据库\n- 索引\n- 索引的优缺点\n- 锁\n\n### 蚂蚁金服干啥了解吗\n安全\n\n### 蚂蚁金服的对手有哪些\n微信支付、京东金融\n\n\n### 蚂蚁金服和对手的优势和劣势\n\n### 幂等律\n一个请求与多个请求等效\n\n### 一个用户的同一请求（比如充值操作）由于网络问题等多次发送给服务端，怎么实现幂等？\n","source":"_posts/阿里巴巴实习生面试.md","raw":"---\ntitle: 阿里巴巴实习生面试\ndate: 2019-04-17 22:50:46\ntags:\n    - 实习\n    - 阿里巴巴\n    - 面试\n    - 蚂蚁金服\ncategories: 工作\n---\n\n阿里巴巴暑期实习，官网内推投的成都蚂蚁金服，经过漫长等待和催促终于等来了面试。\n<!-- more --> \n\n## 一面（48min）\n\n### 自我介绍\n\n### Java并发\n- 一个之前没注意的问题：synchronized关键字可以修饰类吗？\n\n### Spring bean的生命周期和作用域\n\n\n### IOC有什么用\n解耦\n\n### MySQL数据库\n- 索引\n- 索引的优缺点\n- 锁\n\n### 蚂蚁金服干啥了解吗\n安全\n\n### 蚂蚁金服的对手有哪些\n微信支付、京东金融\n\n\n### 蚂蚁金服和对手的优势和劣势\n\n### 幂等律\n一个请求与多个请求等效\n\n### 一个用户的同一请求（比如充值操作）由于网络问题等多次发送给服务端，怎么实现幂等？\n","slug":"阿里巴巴实习生面试","published":1,"updated":"2019-04-17T15:10:07.275Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck0ozhixo002igkuw5meon86a","content":"<p>阿里巴巴暑期实习，官网内推投的成都蚂蚁金服，经过漫长等待和催促终于等来了面试。<br><a id=\"more\"></a> </p>\n<h2 id=\"一面（48min）\"><a href=\"#一面（48min）\" class=\"headerlink\" title=\"一面（48min）\"></a>一面（48min）</h2><h3 id=\"自我介绍\"><a href=\"#自我介绍\" class=\"headerlink\" title=\"自我介绍\"></a>自我介绍</h3><h3 id=\"Java并发\"><a href=\"#Java并发\" class=\"headerlink\" title=\"Java并发\"></a>Java并发</h3><ul>\n<li>一个之前没注意的问题：synchronized关键字可以修饰类吗？</li>\n</ul>\n<h3 id=\"Spring-bean的生命周期和作用域\"><a href=\"#Spring-bean的生命周期和作用域\" class=\"headerlink\" title=\"Spring bean的生命周期和作用域\"></a>Spring bean的生命周期和作用域</h3><h3 id=\"IOC有什么用\"><a href=\"#IOC有什么用\" class=\"headerlink\" title=\"IOC有什么用\"></a>IOC有什么用</h3><p>解耦</p>\n<h3 id=\"MySQL数据库\"><a href=\"#MySQL数据库\" class=\"headerlink\" title=\"MySQL数据库\"></a>MySQL数据库</h3><ul>\n<li>索引</li>\n<li>索引的优缺点</li>\n<li>锁</li>\n</ul>\n<h3 id=\"蚂蚁金服干啥了解吗\"><a href=\"#蚂蚁金服干啥了解吗\" class=\"headerlink\" title=\"蚂蚁金服干啥了解吗\"></a>蚂蚁金服干啥了解吗</h3><p>安全</p>\n<h3 id=\"蚂蚁金服的对手有哪些\"><a href=\"#蚂蚁金服的对手有哪些\" class=\"headerlink\" title=\"蚂蚁金服的对手有哪些\"></a>蚂蚁金服的对手有哪些</h3><p>微信支付、京东金融</p>\n<h3 id=\"蚂蚁金服和对手的优势和劣势\"><a href=\"#蚂蚁金服和对手的优势和劣势\" class=\"headerlink\" title=\"蚂蚁金服和对手的优势和劣势\"></a>蚂蚁金服和对手的优势和劣势</h3><h3 id=\"幂等律\"><a href=\"#幂等律\" class=\"headerlink\" title=\"幂等律\"></a>幂等律</h3><p>一个请求与多个请求等效</p>\n<h3 id=\"一个用户的同一请求（比如充值操作）由于网络问题等多次发送给服务端，怎么实现幂等？\"><a href=\"#一个用户的同一请求（比如充值操作）由于网络问题等多次发送给服务端，怎么实现幂等？\" class=\"headerlink\" title=\"一个用户的同一请求（比如充值操作）由于网络问题等多次发送给服务端，怎么实现幂等？\"></a>一个用户的同一请求（比如充值操作）由于网络问题等多次发送给服务端，怎么实现幂等？</h3>","site":{"data":{}},"excerpt":"<p>阿里巴巴暑期实习，官网内推投的成都蚂蚁金服，经过漫长等待和催促终于等来了面试。<br></p>","more":"<p></p>\n<h2 id=\"一面（48min）\"><a href=\"#一面（48min）\" class=\"headerlink\" title=\"一面（48min）\"></a>一面（48min）</h2><h3 id=\"自我介绍\"><a href=\"#自我介绍\" class=\"headerlink\" title=\"自我介绍\"></a>自我介绍</h3><h3 id=\"Java并发\"><a href=\"#Java并发\" class=\"headerlink\" title=\"Java并发\"></a>Java并发</h3><ul>\n<li>一个之前没注意的问题：synchronized关键字可以修饰类吗？</li>\n</ul>\n<h3 id=\"Spring-bean的生命周期和作用域\"><a href=\"#Spring-bean的生命周期和作用域\" class=\"headerlink\" title=\"Spring bean的生命周期和作用域\"></a>Spring bean的生命周期和作用域</h3><h3 id=\"IOC有什么用\"><a href=\"#IOC有什么用\" class=\"headerlink\" title=\"IOC有什么用\"></a>IOC有什么用</h3><p>解耦</p>\n<h3 id=\"MySQL数据库\"><a href=\"#MySQL数据库\" class=\"headerlink\" title=\"MySQL数据库\"></a>MySQL数据库</h3><ul>\n<li>索引</li>\n<li>索引的优缺点</li>\n<li>锁</li>\n</ul>\n<h3 id=\"蚂蚁金服干啥了解吗\"><a href=\"#蚂蚁金服干啥了解吗\" class=\"headerlink\" title=\"蚂蚁金服干啥了解吗\"></a>蚂蚁金服干啥了解吗</h3><p>安全</p>\n<h3 id=\"蚂蚁金服的对手有哪些\"><a href=\"#蚂蚁金服的对手有哪些\" class=\"headerlink\" title=\"蚂蚁金服的对手有哪些\"></a>蚂蚁金服的对手有哪些</h3><p>微信支付、京东金融</p>\n<h3 id=\"蚂蚁金服和对手的优势和劣势\"><a href=\"#蚂蚁金服和对手的优势和劣势\" class=\"headerlink\" title=\"蚂蚁金服和对手的优势和劣势\"></a>蚂蚁金服和对手的优势和劣势</h3><h3 id=\"幂等律\"><a href=\"#幂等律\" class=\"headerlink\" title=\"幂等律\"></a>幂等律</h3><p>一个请求与多个请求等效</p>\n<h3 id=\"一个用户的同一请求（比如充值操作）由于网络问题等多次发送给服务端，怎么实现幂等？\"><a href=\"#一个用户的同一请求（比如充值操作）由于网络问题等多次发送给服务端，怎么实现幂等？\" class=\"headerlink\" title=\"一个用户的同一请求（比如充值操作）由于网络问题等多次发送给服务端，怎么实现幂等？\"></a>一个用户的同一请求（比如充值操作）由于网络问题等多次发送给服务端，怎么实现幂等？</h3>"},{"title":"面向切面编程","date":"2019-02-21T09:08:56.000Z","_content":"\n## 面向切面编程（Aspect Oriented Programming，AOP）是什么？\n\n1. AOP是一种编程范式，不是编程语言；\n2. AOP解决特定问题，但不能解决所有问题；\n3. OOP的补充，而不是其替代。\n<!-- more --> \n\n## AOP为什么出现？\n1. 提高代码重用性；\n2. 概念分离：分离功能性需求和非功能性需求。将功能性需求从非功能性需求中分离出来。\n\n\n## 应用场景\n\n1. 权限控制\n2. 缓存控制\n3. 事务控制\n4. 审计日志\n5. 性能监控\n6. 分布式追踪\n7. 异常处理\n\n## Spring AOP的通过代理实现\n\n通过DefaultAopProxyFactory.java源码可以看到AOP由jdk和cglib两种方式实现。\n```\npublic AopProxy createAopProxy(AdvisedSupport config) throws AopConfigException {\n    if (config.isOptimize() || config.isProxyTargetClass() || hasNoUserSuppliedProxyInterfaces(config)) {\n        Class<?> targetClass = config.getTargetClass();\n        if (targetClass == null) {\n            throw new AopConfigException(\"TargetSource cannot determine target class: \" +\n                    \"Either an interface or a target is required for proxy creation.\");\n        }\n        if (targetClass.isInterface() || Proxy.isProxyClass(targetClass)) {\n            return new JdkDynamicAopProxy(config);\n        }\n        return new ObjenesisCglibAopProxy(config);\n    }\n    else {\n        return new JdkDynamicAopProxy(config);\n    }\n}\n```\n\n## Spring AOP的使用\n\n在Spring中主要使用注解@Aspect、@Pointcut、@Before、@After、@AfterReturning、@AfterThrowing以及@Around进行面向切面编程。\n\n\n```\n@Retention(RetentionPolicy.RUNTIME)\n@Target(ElementType.TYPE)\npublic @interface Aspect {\n\n    /**\n     * Per clause expression, defaults to singleton aspect\n     * <p/>\n     * Valid values are \"\" (singleton), \"perthis(...)\", etc\n     */\n    public String value() default \"\";\n}\n```\n\n如上代码是@Aspect注解的定义，ElementType.TYPE可以看出该注解作用目标是接口、类、枚举、注解，@Aspect注解，Spring通过@Aspect注解切面并把它应用到目标对象上。\n\n```\n@Retention(RetentionPolicy.RUNTIME)\n@Target(ElementType.METHOD)\npublic @interface Pointcut {\n\n    /**\n     * The pointcut expression\n     * We allow \"\" as default for abstract pointcut\n     */\n    String value() default \"\";\n    \n    /**\n     * When compiling without debug info, or when interpreting pointcuts at runtime,\n     * the names of any arguments used in the pointcut are not available.\n     * Under these circumstances only, it is necessary to provide the arg names in \n     * the annotation - these MUST duplicate the names used in the annotated method.\n     * Format is a simple comma-separated list.\n     */\n    String argNames() default \"\";\n}\n\n```\n如上代码是@Pointcut注解的定义，value()用来定义切面所在的位置，定义方式有以下几种方式：\n```\n    // execution定义切面，匹配符合表达式的所有方法\n    @Pointcut(\"execution(* com.xjtu.springbootstudy.aop.bymyself.service.ProgrammerService.work())\")\n    // within用于匹配类，对应类下的所有方法都执行切面方法；\n    @Pointcut(\"within(com.xjtu.springbootstudy.aop.bymyself.service.*)\")\n    // @annotation用于匹配自定义注解，如下面的@SignLog注解，再将@SignLog放在想定义切面的方法\n    @Pointcut(\"@annotation(com.xjtu.springbootstudy.aop.bymyself.annotation.SignLog)\")\n    // @within用于匹配自定义注解，如下面的@SignLog注解，再将@SignLog放在想定义切面的类上\n    @Pointcut(\"@within(com.xjtu.springbootstudy.aop.bymyself.annotation.SignLog))\")\n    public void log(){ }\n```\n如上对log()添加注解，@Pointcut注解中value定义切面位置，使用execution、within、@annotation、@within等方式设置切面。\n\n- @before在目标方法开始执行时执行；\n- @after在目标方法执行结束前执行；\n- @AfterReturning在目标方法执行正确返回前执行；\n- @AfterThrowing在目标方法执行异常时执行，\n- @Around环绕执行，一般是前4个无法实现期望功能时，才使用这个注解。\n\n我写了一个简单示意切面程序，如下所示，对应执行结果也展示下下方。有个疑问就是@after和@AfterReturning注解的方法谁**先执行**？根据执行结果也可以看出\n**@after**注解的方法**先执行**，@AfterReturning注解的方法后执行。\n\n```\n@Before(value = \"log()\")\npublic void signIn(JoinPoint joinPoint){\n    logger.info(\"***********the people signs in******\");\n}\n\n@After(value = \"log()\")\npublic void leaveWorkPlace(JoinPoint joinPoint){\n    logger.info(\"***********the people leaves workplace******\");\n}\n\n@AfterReturning(value = \"log()\")\npublic void signOut(JoinPoint joinPoint){\n    logger.info(\"***********the people signs out successfully******\");\n}\n\n@AfterThrowing(value = \"log()\",throwing = \"throwable\")\npublic void happenAccidentWhenWorking(JoinPoint joinPoint,Throwable throwable){\n    logger.info(\"***********the people happens accident when working******\");\n    logger.info(\"***********\"+throwable.getMessage()+\"***********\");\n}\n\n@Around(value = \"log()\")\npublic void happenAround(ProceedingJoinPoint joinPoint){\n    try {\n        joinPoint.proceed(joinPoint.getArgs());\n    } catch (Throwable throwable) {\n        throwable.printStackTrace();\n    }\n}\n\n执行结果：\n***********the people signs in******                // @before\nI'm working in workplace!                           // 这是目标方法的执行结果\n***********the people leaves workplace******        // @after\n***********the people signs out successfully******  // @afterReturning\n```\n","source":"_posts/面向切面编程.md","raw":"---\ntitle: 面向切面编程\ndate: 2019-02-21 17:08:56\ntags:\n    - Java\n    - Spring \n    - Spring Boot\n    - AOP\n    - 面向切面编程\ncategories: Spring Boot\n---\n\n## 面向切面编程（Aspect Oriented Programming，AOP）是什么？\n\n1. AOP是一种编程范式，不是编程语言；\n2. AOP解决特定问题，但不能解决所有问题；\n3. OOP的补充，而不是其替代。\n<!-- more --> \n\n## AOP为什么出现？\n1. 提高代码重用性；\n2. 概念分离：分离功能性需求和非功能性需求。将功能性需求从非功能性需求中分离出来。\n\n\n## 应用场景\n\n1. 权限控制\n2. 缓存控制\n3. 事务控制\n4. 审计日志\n5. 性能监控\n6. 分布式追踪\n7. 异常处理\n\n## Spring AOP的通过代理实现\n\n通过DefaultAopProxyFactory.java源码可以看到AOP由jdk和cglib两种方式实现。\n```\npublic AopProxy createAopProxy(AdvisedSupport config) throws AopConfigException {\n    if (config.isOptimize() || config.isProxyTargetClass() || hasNoUserSuppliedProxyInterfaces(config)) {\n        Class<?> targetClass = config.getTargetClass();\n        if (targetClass == null) {\n            throw new AopConfigException(\"TargetSource cannot determine target class: \" +\n                    \"Either an interface or a target is required for proxy creation.\");\n        }\n        if (targetClass.isInterface() || Proxy.isProxyClass(targetClass)) {\n            return new JdkDynamicAopProxy(config);\n        }\n        return new ObjenesisCglibAopProxy(config);\n    }\n    else {\n        return new JdkDynamicAopProxy(config);\n    }\n}\n```\n\n## Spring AOP的使用\n\n在Spring中主要使用注解@Aspect、@Pointcut、@Before、@After、@AfterReturning、@AfterThrowing以及@Around进行面向切面编程。\n\n\n```\n@Retention(RetentionPolicy.RUNTIME)\n@Target(ElementType.TYPE)\npublic @interface Aspect {\n\n    /**\n     * Per clause expression, defaults to singleton aspect\n     * <p/>\n     * Valid values are \"\" (singleton), \"perthis(...)\", etc\n     */\n    public String value() default \"\";\n}\n```\n\n如上代码是@Aspect注解的定义，ElementType.TYPE可以看出该注解作用目标是接口、类、枚举、注解，@Aspect注解，Spring通过@Aspect注解切面并把它应用到目标对象上。\n\n```\n@Retention(RetentionPolicy.RUNTIME)\n@Target(ElementType.METHOD)\npublic @interface Pointcut {\n\n    /**\n     * The pointcut expression\n     * We allow \"\" as default for abstract pointcut\n     */\n    String value() default \"\";\n    \n    /**\n     * When compiling without debug info, or when interpreting pointcuts at runtime,\n     * the names of any arguments used in the pointcut are not available.\n     * Under these circumstances only, it is necessary to provide the arg names in \n     * the annotation - these MUST duplicate the names used in the annotated method.\n     * Format is a simple comma-separated list.\n     */\n    String argNames() default \"\";\n}\n\n```\n如上代码是@Pointcut注解的定义，value()用来定义切面所在的位置，定义方式有以下几种方式：\n```\n    // execution定义切面，匹配符合表达式的所有方法\n    @Pointcut(\"execution(* com.xjtu.springbootstudy.aop.bymyself.service.ProgrammerService.work())\")\n    // within用于匹配类，对应类下的所有方法都执行切面方法；\n    @Pointcut(\"within(com.xjtu.springbootstudy.aop.bymyself.service.*)\")\n    // @annotation用于匹配自定义注解，如下面的@SignLog注解，再将@SignLog放在想定义切面的方法\n    @Pointcut(\"@annotation(com.xjtu.springbootstudy.aop.bymyself.annotation.SignLog)\")\n    // @within用于匹配自定义注解，如下面的@SignLog注解，再将@SignLog放在想定义切面的类上\n    @Pointcut(\"@within(com.xjtu.springbootstudy.aop.bymyself.annotation.SignLog))\")\n    public void log(){ }\n```\n如上对log()添加注解，@Pointcut注解中value定义切面位置，使用execution、within、@annotation、@within等方式设置切面。\n\n- @before在目标方法开始执行时执行；\n- @after在目标方法执行结束前执行；\n- @AfterReturning在目标方法执行正确返回前执行；\n- @AfterThrowing在目标方法执行异常时执行，\n- @Around环绕执行，一般是前4个无法实现期望功能时，才使用这个注解。\n\n我写了一个简单示意切面程序，如下所示，对应执行结果也展示下下方。有个疑问就是@after和@AfterReturning注解的方法谁**先执行**？根据执行结果也可以看出\n**@after**注解的方法**先执行**，@AfterReturning注解的方法后执行。\n\n```\n@Before(value = \"log()\")\npublic void signIn(JoinPoint joinPoint){\n    logger.info(\"***********the people signs in******\");\n}\n\n@After(value = \"log()\")\npublic void leaveWorkPlace(JoinPoint joinPoint){\n    logger.info(\"***********the people leaves workplace******\");\n}\n\n@AfterReturning(value = \"log()\")\npublic void signOut(JoinPoint joinPoint){\n    logger.info(\"***********the people signs out successfully******\");\n}\n\n@AfterThrowing(value = \"log()\",throwing = \"throwable\")\npublic void happenAccidentWhenWorking(JoinPoint joinPoint,Throwable throwable){\n    logger.info(\"***********the people happens accident when working******\");\n    logger.info(\"***********\"+throwable.getMessage()+\"***********\");\n}\n\n@Around(value = \"log()\")\npublic void happenAround(ProceedingJoinPoint joinPoint){\n    try {\n        joinPoint.proceed(joinPoint.getArgs());\n    } catch (Throwable throwable) {\n        throwable.printStackTrace();\n    }\n}\n\n执行结果：\n***********the people signs in******                // @before\nI'm working in workplace!                           // 这是目标方法的执行结果\n***********the people leaves workplace******        // @after\n***********the people signs out successfully******  // @afterReturning\n```\n","slug":"面向切面编程","published":1,"updated":"2019-03-09T14:10:14.755Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck0ozhixr002mgkuwm24m8jri","content":"<h2 id=\"面向切面编程（Aspect-Oriented-Programming，AOP）是什么？\"><a href=\"#面向切面编程（Aspect-Oriented-Programming，AOP）是什么？\" class=\"headerlink\" title=\"面向切面编程（Aspect Oriented Programming，AOP）是什么？\"></a>面向切面编程（Aspect Oriented Programming，AOP）是什么？</h2><ol>\n<li>AOP是一种编程范式，不是编程语言；</li>\n<li>AOP解决特定问题，但不能解决所有问题；</li>\n<li>OOP的补充，而不是其替代。<a id=\"more\"></a> \n</li>\n</ol>\n<h2 id=\"AOP为什么出现？\"><a href=\"#AOP为什么出现？\" class=\"headerlink\" title=\"AOP为什么出现？\"></a>AOP为什么出现？</h2><ol>\n<li>提高代码重用性；</li>\n<li>概念分离：分离功能性需求和非功能性需求。将功能性需求从非功能性需求中分离出来。</li>\n</ol>\n<h2 id=\"应用场景\"><a href=\"#应用场景\" class=\"headerlink\" title=\"应用场景\"></a>应用场景</h2><ol>\n<li>权限控制</li>\n<li>缓存控制</li>\n<li>事务控制</li>\n<li>审计日志</li>\n<li>性能监控</li>\n<li>分布式追踪</li>\n<li>异常处理</li>\n</ol>\n<h2 id=\"Spring-AOP的通过代理实现\"><a href=\"#Spring-AOP的通过代理实现\" class=\"headerlink\" title=\"Spring AOP的通过代理实现\"></a>Spring AOP的通过代理实现</h2><p>通过DefaultAopProxyFactory.java源码可以看到AOP由jdk和cglib两种方式实现。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public AopProxy createAopProxy(AdvisedSupport config) throws AopConfigException &#123;</span><br><span class=\"line\">    if (config.isOptimize() || config.isProxyTargetClass() || hasNoUserSuppliedProxyInterfaces(config)) &#123;</span><br><span class=\"line\">        Class&lt;?&gt; targetClass = config.getTargetClass();</span><br><span class=\"line\">        if (targetClass == null) &#123;</span><br><span class=\"line\">            throw new AopConfigException(&quot;TargetSource cannot determine target class: &quot; +</span><br><span class=\"line\">                    &quot;Either an interface or a target is required for proxy creation.&quot;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        if (targetClass.isInterface() || Proxy.isProxyClass(targetClass)) &#123;</span><br><span class=\"line\">            return new JdkDynamicAopProxy(config);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        return new ObjenesisCglibAopProxy(config);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    else &#123;</span><br><span class=\"line\">        return new JdkDynamicAopProxy(config);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"Spring-AOP的使用\"><a href=\"#Spring-AOP的使用\" class=\"headerlink\" title=\"Spring AOP的使用\"></a>Spring AOP的使用</h2><p>在Spring中主要使用注解@Aspect、@Pointcut、@Before、@After、@AfterReturning、@AfterThrowing以及@Around进行面向切面编程。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@Retention(RetentionPolicy.RUNTIME)</span><br><span class=\"line\">@Target(ElementType.TYPE)</span><br><span class=\"line\">public @interface Aspect &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    /**</span><br><span class=\"line\">     * Per clause expression, defaults to singleton aspect</span><br><span class=\"line\">     * &lt;p/&gt;</span><br><span class=\"line\">     * Valid values are &quot;&quot; (singleton), &quot;perthis(...)&quot;, etc</span><br><span class=\"line\">     */</span><br><span class=\"line\">    public String value() default &quot;&quot;;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>如上代码是@Aspect注解的定义，ElementType.TYPE可以看出该注解作用目标是接口、类、枚举、注解，@Aspect注解，Spring通过@Aspect注解切面并把它应用到目标对象上。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@Retention(RetentionPolicy.RUNTIME)</span><br><span class=\"line\">@Target(ElementType.METHOD)</span><br><span class=\"line\">public @interface Pointcut &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    /**</span><br><span class=\"line\">     * The pointcut expression</span><br><span class=\"line\">     * We allow &quot;&quot; as default for abstract pointcut</span><br><span class=\"line\">     */</span><br><span class=\"line\">    String value() default &quot;&quot;;</span><br><span class=\"line\">    </span><br><span class=\"line\">    /**</span><br><span class=\"line\">     * When compiling without debug info, or when interpreting pointcuts at runtime,</span><br><span class=\"line\">     * the names of any arguments used in the pointcut are not available.</span><br><span class=\"line\">     * Under these circumstances only, it is necessary to provide the arg names in </span><br><span class=\"line\">     * the annotation - these MUST duplicate the names used in the annotated method.</span><br><span class=\"line\">     * Format is a simple comma-separated list.</span><br><span class=\"line\">     */</span><br><span class=\"line\">    String argNames() default &quot;&quot;;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>如上代码是@Pointcut注解的定义，value()用来定义切面所在的位置，定义方式有以下几种方式：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// execution定义切面，匹配符合表达式的所有方法</span><br><span class=\"line\">@Pointcut(&quot;execution(* com.xjtu.springbootstudy.aop.bymyself.service.ProgrammerService.work())&quot;)</span><br><span class=\"line\">// within用于匹配类，对应类下的所有方法都执行切面方法；</span><br><span class=\"line\">@Pointcut(&quot;within(com.xjtu.springbootstudy.aop.bymyself.service.*)&quot;)</span><br><span class=\"line\">// @annotation用于匹配自定义注解，如下面的@SignLog注解，再将@SignLog放在想定义切面的方法</span><br><span class=\"line\">@Pointcut(&quot;@annotation(com.xjtu.springbootstudy.aop.bymyself.annotation.SignLog)&quot;)</span><br><span class=\"line\">// @within用于匹配自定义注解，如下面的@SignLog注解，再将@SignLog放在想定义切面的类上</span><br><span class=\"line\">@Pointcut(&quot;@within(com.xjtu.springbootstudy.aop.bymyself.annotation.SignLog))&quot;)</span><br><span class=\"line\">public void log()&#123; &#125;</span><br></pre></td></tr></table></figure></p>\n<p>如上对log()添加注解，@Pointcut注解中value定义切面位置，使用execution、within、@annotation、@within等方式设置切面。</p>\n<ul>\n<li>@before在目标方法开始执行时执行；</li>\n<li>@after在目标方法执行结束前执行；</li>\n<li>@AfterReturning在目标方法执行正确返回前执行；</li>\n<li>@AfterThrowing在目标方法执行异常时执行，</li>\n<li>@Around环绕执行，一般是前4个无法实现期望功能时，才使用这个注解。</li>\n</ul>\n<p>我写了一个简单示意切面程序，如下所示，对应执行结果也展示下下方。有个疑问就是@after和@AfterReturning注解的方法谁<strong>先执行</strong>？根据执行结果也可以看出<br><strong>@after</strong>注解的方法<strong>先执行</strong>，@AfterReturning注解的方法后执行。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@Before(value = &quot;log()&quot;)</span><br><span class=\"line\">public void signIn(JoinPoint joinPoint)&#123;</span><br><span class=\"line\">    logger.info(&quot;***********the people signs in******&quot;);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">@After(value = &quot;log()&quot;)</span><br><span class=\"line\">public void leaveWorkPlace(JoinPoint joinPoint)&#123;</span><br><span class=\"line\">    logger.info(&quot;***********the people leaves workplace******&quot;);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">@AfterReturning(value = &quot;log()&quot;)</span><br><span class=\"line\">public void signOut(JoinPoint joinPoint)&#123;</span><br><span class=\"line\">    logger.info(&quot;***********the people signs out successfully******&quot;);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">@AfterThrowing(value = &quot;log()&quot;,throwing = &quot;throwable&quot;)</span><br><span class=\"line\">public void happenAccidentWhenWorking(JoinPoint joinPoint,Throwable throwable)&#123;</span><br><span class=\"line\">    logger.info(&quot;***********the people happens accident when working******&quot;);</span><br><span class=\"line\">    logger.info(&quot;***********&quot;+throwable.getMessage()+&quot;***********&quot;);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">@Around(value = &quot;log()&quot;)</span><br><span class=\"line\">public void happenAround(ProceedingJoinPoint joinPoint)&#123;</span><br><span class=\"line\">    try &#123;</span><br><span class=\"line\">        joinPoint.proceed(joinPoint.getArgs());</span><br><span class=\"line\">    &#125; catch (Throwable throwable) &#123;</span><br><span class=\"line\">        throwable.printStackTrace();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">执行结果：</span><br><span class=\"line\">***********the people signs in******                // @before</span><br><span class=\"line\">I&apos;m working in workplace!                           // 这是目标方法的执行结果</span><br><span class=\"line\">***********the people leaves workplace******        // @after</span><br><span class=\"line\">***********the people signs out successfully******  // @afterReturning</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"<h2 id=\"面向切面编程（Aspect-Oriented-Programming，AOP）是什么？\"><a href=\"#面向切面编程（Aspect-Oriented-Programming，AOP）是什么？\" class=\"headerlink\" title=\"面向切面编程（Aspect Oriented Programming，AOP）是什么？\"></a>面向切面编程（Aspect Oriented Programming，AOP）是什么？</h2><ol>\n<li>AOP是一种编程范式，不是编程语言；</li>\n<li>AOP解决特定问题，但不能解决所有问题；</li>\n<li>OOP的补充，而不是其替代。</li></ol>","more":"\n\n<h2 id=\"AOP为什么出现？\"><a href=\"#AOP为什么出现？\" class=\"headerlink\" title=\"AOP为什么出现？\"></a>AOP为什么出现？</h2><ol>\n<li>提高代码重用性；</li>\n<li>概念分离：分离功能性需求和非功能性需求。将功能性需求从非功能性需求中分离出来。</li>\n</ol>\n<h2 id=\"应用场景\"><a href=\"#应用场景\" class=\"headerlink\" title=\"应用场景\"></a>应用场景</h2><ol>\n<li>权限控制</li>\n<li>缓存控制</li>\n<li>事务控制</li>\n<li>审计日志</li>\n<li>性能监控</li>\n<li>分布式追踪</li>\n<li>异常处理</li>\n</ol>\n<h2 id=\"Spring-AOP的通过代理实现\"><a href=\"#Spring-AOP的通过代理实现\" class=\"headerlink\" title=\"Spring AOP的通过代理实现\"></a>Spring AOP的通过代理实现</h2><p>通过DefaultAopProxyFactory.java源码可以看到AOP由jdk和cglib两种方式实现。<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">public AopProxy createAopProxy(AdvisedSupport config) throws AopConfigException &#123;</span><br><span class=\"line\">    if (config.isOptimize() || config.isProxyTargetClass() || hasNoUserSuppliedProxyInterfaces(config)) &#123;</span><br><span class=\"line\">        Class&lt;?&gt; targetClass = config.getTargetClass();</span><br><span class=\"line\">        if (targetClass == null) &#123;</span><br><span class=\"line\">            throw new AopConfigException(&quot;TargetSource cannot determine target class: &quot; +</span><br><span class=\"line\">                    &quot;Either an interface or a target is required for proxy creation.&quot;);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        if (targetClass.isInterface() || Proxy.isProxyClass(targetClass)) &#123;</span><br><span class=\"line\">            return new JdkDynamicAopProxy(config);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        return new ObjenesisCglibAopProxy(config);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    else &#123;</span><br><span class=\"line\">        return new JdkDynamicAopProxy(config);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"Spring-AOP的使用\"><a href=\"#Spring-AOP的使用\" class=\"headerlink\" title=\"Spring AOP的使用\"></a>Spring AOP的使用</h2><p>在Spring中主要使用注解@Aspect、@Pointcut、@Before、@After、@AfterReturning、@AfterThrowing以及@Around进行面向切面编程。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@Retention(RetentionPolicy.RUNTIME)</span><br><span class=\"line\">@Target(ElementType.TYPE)</span><br><span class=\"line\">public @interface Aspect &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    /**</span><br><span class=\"line\">     * Per clause expression, defaults to singleton aspect</span><br><span class=\"line\">     * &lt;p/&gt;</span><br><span class=\"line\">     * Valid values are &quot;&quot; (singleton), &quot;perthis(...)&quot;, etc</span><br><span class=\"line\">     */</span><br><span class=\"line\">    public String value() default &quot;&quot;;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>如上代码是@Aspect注解的定义，ElementType.TYPE可以看出该注解作用目标是接口、类、枚举、注解，@Aspect注解，Spring通过@Aspect注解切面并把它应用到目标对象上。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@Retention(RetentionPolicy.RUNTIME)</span><br><span class=\"line\">@Target(ElementType.METHOD)</span><br><span class=\"line\">public @interface Pointcut &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    /**</span><br><span class=\"line\">     * The pointcut expression</span><br><span class=\"line\">     * We allow &quot;&quot; as default for abstract pointcut</span><br><span class=\"line\">     */</span><br><span class=\"line\">    String value() default &quot;&quot;;</span><br><span class=\"line\">    </span><br><span class=\"line\">    /**</span><br><span class=\"line\">     * When compiling without debug info, or when interpreting pointcuts at runtime,</span><br><span class=\"line\">     * the names of any arguments used in the pointcut are not available.</span><br><span class=\"line\">     * Under these circumstances only, it is necessary to provide the arg names in </span><br><span class=\"line\">     * the annotation - these MUST duplicate the names used in the annotated method.</span><br><span class=\"line\">     * Format is a simple comma-separated list.</span><br><span class=\"line\">     */</span><br><span class=\"line\">    String argNames() default &quot;&quot;;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>如上代码是@Pointcut注解的定义，value()用来定义切面所在的位置，定义方式有以下几种方式：<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">// execution定义切面，匹配符合表达式的所有方法</span><br><span class=\"line\">@Pointcut(&quot;execution(* com.xjtu.springbootstudy.aop.bymyself.service.ProgrammerService.work())&quot;)</span><br><span class=\"line\">// within用于匹配类，对应类下的所有方法都执行切面方法；</span><br><span class=\"line\">@Pointcut(&quot;within(com.xjtu.springbootstudy.aop.bymyself.service.*)&quot;)</span><br><span class=\"line\">// @annotation用于匹配自定义注解，如下面的@SignLog注解，再将@SignLog放在想定义切面的方法</span><br><span class=\"line\">@Pointcut(&quot;@annotation(com.xjtu.springbootstudy.aop.bymyself.annotation.SignLog)&quot;)</span><br><span class=\"line\">// @within用于匹配自定义注解，如下面的@SignLog注解，再将@SignLog放在想定义切面的类上</span><br><span class=\"line\">@Pointcut(&quot;@within(com.xjtu.springbootstudy.aop.bymyself.annotation.SignLog))&quot;)</span><br><span class=\"line\">public void log()&#123; &#125;</span><br></pre></td></tr></table></figure></p>\n<p>如上对log()添加注解，@Pointcut注解中value定义切面位置，使用execution、within、@annotation、@within等方式设置切面。</p>\n<ul>\n<li>@before在目标方法开始执行时执行；</li>\n<li>@after在目标方法执行结束前执行；</li>\n<li>@AfterReturning在目标方法执行正确返回前执行；</li>\n<li>@AfterThrowing在目标方法执行异常时执行，</li>\n<li>@Around环绕执行，一般是前4个无法实现期望功能时，才使用这个注解。</li>\n</ul>\n<p>我写了一个简单示意切面程序，如下所示，对应执行结果也展示下下方。有个疑问就是@after和@AfterReturning注解的方法谁<strong>先执行</strong>？根据执行结果也可以看出<br><strong>@after</strong>注解的方法<strong>先执行</strong>，@AfterReturning注解的方法后执行。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@Before(value = &quot;log()&quot;)</span><br><span class=\"line\">public void signIn(JoinPoint joinPoint)&#123;</span><br><span class=\"line\">    logger.info(&quot;***********the people signs in******&quot;);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">@After(value = &quot;log()&quot;)</span><br><span class=\"line\">public void leaveWorkPlace(JoinPoint joinPoint)&#123;</span><br><span class=\"line\">    logger.info(&quot;***********the people leaves workplace******&quot;);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">@AfterReturning(value = &quot;log()&quot;)</span><br><span class=\"line\">public void signOut(JoinPoint joinPoint)&#123;</span><br><span class=\"line\">    logger.info(&quot;***********the people signs out successfully******&quot;);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">@AfterThrowing(value = &quot;log()&quot;,throwing = &quot;throwable&quot;)</span><br><span class=\"line\">public void happenAccidentWhenWorking(JoinPoint joinPoint,Throwable throwable)&#123;</span><br><span class=\"line\">    logger.info(&quot;***********the people happens accident when working******&quot;);</span><br><span class=\"line\">    logger.info(&quot;***********&quot;+throwable.getMessage()+&quot;***********&quot;);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">@Around(value = &quot;log()&quot;)</span><br><span class=\"line\">public void happenAround(ProceedingJoinPoint joinPoint)&#123;</span><br><span class=\"line\">    try &#123;</span><br><span class=\"line\">        joinPoint.proceed(joinPoint.getArgs());</span><br><span class=\"line\">    &#125; catch (Throwable throwable) &#123;</span><br><span class=\"line\">        throwable.printStackTrace();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">执行结果：</span><br><span class=\"line\">***********the people signs in******                // @before</span><br><span class=\"line\">I&apos;m working in workplace!                           // 这是目标方法的执行结果</span><br><span class=\"line\">***********the people leaves workplace******        // @after</span><br><span class=\"line\">***********the people signs out successfully******  // @afterReturning</span><br></pre></td></tr></table></figure>"},{"title":"垃圾收集器","date":"2019-02-28T02:28:49.000Z","_content":"\n垃圾收集算法是内存回收的方法论，垃圾收集器是垃圾回收的具体实现。在JDK1.7 Update 14之后的HotSpot虚拟机所包含的收集器如下图所示：\n\n![垃圾收集器](垃圾收集器/垃圾收集器1.jpg)\n\n<!-- more --> \n## Serial收集器\n\nSerial收集器是最基本、发展历史最悠久的收集器。这是一个单线程的收集器，但它的“单线程”的意义并不仅仅说明它只会使用一个CPU或者一条收集线程去完成垃圾收集工作，更重要的是在它进行垃圾收集时，必须暂停其他所有的工作线程，直到它收集结束。Serial收集器运行示意图如下：\n\n![垃圾收集器](垃圾收集器/垃圾收集器2.jpg)\n\n也就是说，虚拟机在使用Serial垃圾收集器时会在用户不可见的情况下把所有用户正常工作的线程暂停，这种“Stop The World”操作在很多程序中是难以接受的，带给用户不良体验。  \n举个例子“你妈妈在打扫房间的时候，肯定也会让你老老实实待在椅子上或者房间外待着，如果她一边打扫，你一边丢垃圾，这房间还能打扫完？你妈妈不会崩溃？”，因此看起来“Stop The World”操作情有可原。   \n但是，从JDK1.3开始，HotSpot虚拟机开发团队一直在努力消除或减少工作线程因内存回收而导致的停顿，从Serial收集器到Parallel收集器，再到Concurrent Mark Sweep（CMS）乃至GC收集器最前沿的成果Garbage First（G1）收集器，用户线程的停顿时间在不断缩短，但是仍然没有办法完全消除垃圾回收带来的停顿。   \nSerial收集器虽然很老，可以说很陈旧，但是目前为止它依旧是虚拟机运行在Client模式下的默认新生代收集器。那是因为Serial收集器简单而高效，对于限定单个GPU的情况而言，Serial收集器由于没有线程交互的开销，专心进行垃圾收集自然可以获得最高的单线程收集效率。  \n\n## ParNew收集器\n\nParNew收集器就是Serial收集器的多线程版本，除了使用多线程进行垃圾收集外，其余行为包括Serial收集器的所有可用控制参数、收集算法、Stop The World、对象分配规则、回收策略等都与Serial收集器完全一样。ParNew收集器进行垃圾收集的示意图如下：  \n\n![垃圾收集器](垃圾收集器/垃圾收集器3.jpg)\n\nParNew收集器除了多线程收集外，其他与Serial收集器相比没有太多创新之处，但它却是虚拟机运行在Server模式下的首选新生代收集器，其中一个与性能无关的重要原因是除了Serial收集器外，目前只有它能与CMS收集器配合工作。\n\n## Parallel Scavenge收集器\n\nParallel Scavenge收集器也是新生代收集器，并且使用复制算法收集内存，同时还是并行的多线程收集器。这些特点都和ParNew收集器一样，但是Parallel Scavenge收集器的目标在于达到一个可控制的**吞吐量**（Throughput），所谓吞吐量就是CPU用于运行用户代码的时间与CPU总消耗时间的比值，即吞吐量=运行用户代码/(运行用户代码+垃圾收集时间)。这与CMS等收集器的目标不同，它们目标是尽可能地缩短垃圾收集时间用户线程的停顿时间。  \n停顿时间越短就越适合需要与用户交互的程序，良好的响应速度能提升用户体验，而高吞吐量则可以高效率地利用CPU时间，尽快完成程序的运算任务，主要适合在后台运算而不需要太多的交互任务。  \nParallel Scavenge收集器提供两个参数用于精准控制吞吐量，分别是控制最大垃圾收集时间的-XX:MaxGCPauseMillis参数以及直接设置吞吐量大小的-XX:GCTimeRatio参数。  \n**MaxGCPauseMillis**参数允许的值是一个大于0的毫秒数，收集器将尽可能在规定时间内完成垃圾收集操作。但是不要认为这个参数越小，系统的垃圾收集速度就会越快，GC停顿时间的缩短是以牺牲吞吐量和新生代空间来换取的：系统把新生代调小一点，收集300M新生代肯定比收集500M新生代快，这也将导致垃圾收集更频繁，原来每20s收集一次、一次100ms，现在每10s收集一次、一次70ms。停顿时间的确下降了，但吞吐量也降下来了。  \n**GCTimeRatio**参数的值应当是一个大于0小于100的整数，如果把这个参数设置为19，那么允许最大GC时间就占总时间的5%（即1/(1+19)）。  \nParallel Scavenge收集器还有一个参数-XX:+UseAdaptiveSizePolicy，这个参数打开之后就不需要手动指定新生代的大小（-Xmm）、Eden与Survivor区的比例（-XX:SurvivorRatio）、晋升老年代对象大小（-XX:PretenureSizeThreshold）等参数了，虚拟机会根据当前系统的运行情况收集性能监控信息，动态调整这些参数以提供最适合的停顿时间或者最大吞吐量，这种调节方式称为GC自适应的调节策略（GC Ergonomics）。  \n\n## Serial Old收集器\n\nSerial Old是Serial收集器的老年代版本，它同样是一个单线程收集器，使用“标记-整理”算法，这个收集器的主要意义也是在于给Client模式下的虚拟机使用。  \n在Server模式下，它有两大用途：  \n- 在JDK1.5以及之前的版本中与Parallel Scavenge收集器搭配使用；\n- 作为CMS收集器的后备方案，在并发收集发生Concurrent Mode Failure时使用。  \n\n## Parallel Old收集器\n\nParallel Old收集器是Parallel Scavenge收集器的老年代版本，使用多线程和“标记-整理”算法。在JDK1.6之前Parallel Scavenge只能与Serial Old收集器配合使用，由于老年代使用单线程收集内存无法充分利用服务器多CPU的处理能力，这个组合就导致无法达到高吞吐量。在JDK1.6开始提供了Parallel Old收集器和Parallel Scavenge收集器配合使用，从而可以应用在注重吞吐量以及CPU资源敏感的场合。\n\n## CMS收集器\n\nCMS（Concurrent Mark Sweep）收集器是一种以获取最短回收停顿时间为目标的收集器。从名字（包含“Mark Sweep”）就可以看出来，CMS收集器是基于“标记——清除”算法实现的，它的运作过程相对于前面几种收集器来说更复杂一些，整个过程分为4个步骤，包括：\n- 初始标记（CMS initial mark）\n- 并发标记（CMS concurrent mark）\n- 重新标记（CMS remark）\n- 并发清除（CMS concurrent sweep）\n\n其中，初始标记、重新标记这；两个步骤仍需要“Stop The World”。初始标记是标记一下GC Roots能直接关联到的对象，速度很快，并发标记阶段就是进行GC Roots Tracing的过程，而重新标记阶段是为了修正并发标记阶段因用户程序继续运作而导致标记产生变动的那一部分对象的标记记录，这一阶段的停顿时间一般会比初始标记阶段稍长一些，但远比并发标记阶段的时间短。整个过程中耗时最长的并发标记和并发清除阶段都是与用户线程一起工作，如下图所示：\n\n![垃圾收集器](垃圾收集器/垃圾收集器5.png)\n\nCMS是一款优秀的收集器，它的主要优点是并发收集、低停顿，但是它还有以下三个明显缺点：\n- CMS收集器对CPU资源非常敏感；\n- CMS收集器无法处理浮动垃圾（Floating Garbage），可能出现“Concurrent Mode Failure”失败而导致另一次的Full GC。\n- CMS收集器是基于“标记-清除”算法实现的，在收集结束会产生大量的空间碎片。为了解决这个问题，CMS收集器提供了一个-XX:+USeCMSCompactAtFullCollection开关参数用于在CMS收集器顶不住要进行Full GC时开启内存碎片的合并整理过程。\n\n## G1收集器\n\nG1收集器是当前收集技术最前沿的成果之一，它被视为JDK1.7中HotSpot虚拟机的一个重要进化特征。G1是一款面向服务端应用的垃圾收集器，与其他收集器相比，G1具备如下特点：\n- 并行与并发\n- 分代收集\n- 空间整合\n- 可预测的停顿\n\n在G1之前的其他收集器进行收集的范围是整个新生代或者老年代，而G1不再是这样。使用G1收集器时，Java堆的内存布局就与其他收集器有很大区别，它将整个Java堆划分成多个大小相等的独立区域（Region），虽然还保留有新生代和老年代的概念，但是新生代和老年代不再是物理隔离的了，它们都是一部分Region（不需要连续）的集合。\n","source":"_posts/垃圾收集器.md","raw":"---\ntitle: 垃圾收集器\ndate: 2019-02-28 10:28:49\ntags: \n    - 垃圾收集器\n    - 垃圾收集算法\ncategories: 深入理解Java虚拟机\n---\n\n垃圾收集算法是内存回收的方法论，垃圾收集器是垃圾回收的具体实现。在JDK1.7 Update 14之后的HotSpot虚拟机所包含的收集器如下图所示：\n\n![垃圾收集器](垃圾收集器/垃圾收集器1.jpg)\n\n<!-- more --> \n## Serial收集器\n\nSerial收集器是最基本、发展历史最悠久的收集器。这是一个单线程的收集器，但它的“单线程”的意义并不仅仅说明它只会使用一个CPU或者一条收集线程去完成垃圾收集工作，更重要的是在它进行垃圾收集时，必须暂停其他所有的工作线程，直到它收集结束。Serial收集器运行示意图如下：\n\n![垃圾收集器](垃圾收集器/垃圾收集器2.jpg)\n\n也就是说，虚拟机在使用Serial垃圾收集器时会在用户不可见的情况下把所有用户正常工作的线程暂停，这种“Stop The World”操作在很多程序中是难以接受的，带给用户不良体验。  \n举个例子“你妈妈在打扫房间的时候，肯定也会让你老老实实待在椅子上或者房间外待着，如果她一边打扫，你一边丢垃圾，这房间还能打扫完？你妈妈不会崩溃？”，因此看起来“Stop The World”操作情有可原。   \n但是，从JDK1.3开始，HotSpot虚拟机开发团队一直在努力消除或减少工作线程因内存回收而导致的停顿，从Serial收集器到Parallel收集器，再到Concurrent Mark Sweep（CMS）乃至GC收集器最前沿的成果Garbage First（G1）收集器，用户线程的停顿时间在不断缩短，但是仍然没有办法完全消除垃圾回收带来的停顿。   \nSerial收集器虽然很老，可以说很陈旧，但是目前为止它依旧是虚拟机运行在Client模式下的默认新生代收集器。那是因为Serial收集器简单而高效，对于限定单个GPU的情况而言，Serial收集器由于没有线程交互的开销，专心进行垃圾收集自然可以获得最高的单线程收集效率。  \n\n## ParNew收集器\n\nParNew收集器就是Serial收集器的多线程版本，除了使用多线程进行垃圾收集外，其余行为包括Serial收集器的所有可用控制参数、收集算法、Stop The World、对象分配规则、回收策略等都与Serial收集器完全一样。ParNew收集器进行垃圾收集的示意图如下：  \n\n![垃圾收集器](垃圾收集器/垃圾收集器3.jpg)\n\nParNew收集器除了多线程收集外，其他与Serial收集器相比没有太多创新之处，但它却是虚拟机运行在Server模式下的首选新生代收集器，其中一个与性能无关的重要原因是除了Serial收集器外，目前只有它能与CMS收集器配合工作。\n\n## Parallel Scavenge收集器\n\nParallel Scavenge收集器也是新生代收集器，并且使用复制算法收集内存，同时还是并行的多线程收集器。这些特点都和ParNew收集器一样，但是Parallel Scavenge收集器的目标在于达到一个可控制的**吞吐量**（Throughput），所谓吞吐量就是CPU用于运行用户代码的时间与CPU总消耗时间的比值，即吞吐量=运行用户代码/(运行用户代码+垃圾收集时间)。这与CMS等收集器的目标不同，它们目标是尽可能地缩短垃圾收集时间用户线程的停顿时间。  \n停顿时间越短就越适合需要与用户交互的程序，良好的响应速度能提升用户体验，而高吞吐量则可以高效率地利用CPU时间，尽快完成程序的运算任务，主要适合在后台运算而不需要太多的交互任务。  \nParallel Scavenge收集器提供两个参数用于精准控制吞吐量，分别是控制最大垃圾收集时间的-XX:MaxGCPauseMillis参数以及直接设置吞吐量大小的-XX:GCTimeRatio参数。  \n**MaxGCPauseMillis**参数允许的值是一个大于0的毫秒数，收集器将尽可能在规定时间内完成垃圾收集操作。但是不要认为这个参数越小，系统的垃圾收集速度就会越快，GC停顿时间的缩短是以牺牲吞吐量和新生代空间来换取的：系统把新生代调小一点，收集300M新生代肯定比收集500M新生代快，这也将导致垃圾收集更频繁，原来每20s收集一次、一次100ms，现在每10s收集一次、一次70ms。停顿时间的确下降了，但吞吐量也降下来了。  \n**GCTimeRatio**参数的值应当是一个大于0小于100的整数，如果把这个参数设置为19，那么允许最大GC时间就占总时间的5%（即1/(1+19)）。  \nParallel Scavenge收集器还有一个参数-XX:+UseAdaptiveSizePolicy，这个参数打开之后就不需要手动指定新生代的大小（-Xmm）、Eden与Survivor区的比例（-XX:SurvivorRatio）、晋升老年代对象大小（-XX:PretenureSizeThreshold）等参数了，虚拟机会根据当前系统的运行情况收集性能监控信息，动态调整这些参数以提供最适合的停顿时间或者最大吞吐量，这种调节方式称为GC自适应的调节策略（GC Ergonomics）。  \n\n## Serial Old收集器\n\nSerial Old是Serial收集器的老年代版本，它同样是一个单线程收集器，使用“标记-整理”算法，这个收集器的主要意义也是在于给Client模式下的虚拟机使用。  \n在Server模式下，它有两大用途：  \n- 在JDK1.5以及之前的版本中与Parallel Scavenge收集器搭配使用；\n- 作为CMS收集器的后备方案，在并发收集发生Concurrent Mode Failure时使用。  \n\n## Parallel Old收集器\n\nParallel Old收集器是Parallel Scavenge收集器的老年代版本，使用多线程和“标记-整理”算法。在JDK1.6之前Parallel Scavenge只能与Serial Old收集器配合使用，由于老年代使用单线程收集内存无法充分利用服务器多CPU的处理能力，这个组合就导致无法达到高吞吐量。在JDK1.6开始提供了Parallel Old收集器和Parallel Scavenge收集器配合使用，从而可以应用在注重吞吐量以及CPU资源敏感的场合。\n\n## CMS收集器\n\nCMS（Concurrent Mark Sweep）收集器是一种以获取最短回收停顿时间为目标的收集器。从名字（包含“Mark Sweep”）就可以看出来，CMS收集器是基于“标记——清除”算法实现的，它的运作过程相对于前面几种收集器来说更复杂一些，整个过程分为4个步骤，包括：\n- 初始标记（CMS initial mark）\n- 并发标记（CMS concurrent mark）\n- 重新标记（CMS remark）\n- 并发清除（CMS concurrent sweep）\n\n其中，初始标记、重新标记这；两个步骤仍需要“Stop The World”。初始标记是标记一下GC Roots能直接关联到的对象，速度很快，并发标记阶段就是进行GC Roots Tracing的过程，而重新标记阶段是为了修正并发标记阶段因用户程序继续运作而导致标记产生变动的那一部分对象的标记记录，这一阶段的停顿时间一般会比初始标记阶段稍长一些，但远比并发标记阶段的时间短。整个过程中耗时最长的并发标记和并发清除阶段都是与用户线程一起工作，如下图所示：\n\n![垃圾收集器](垃圾收集器/垃圾收集器5.png)\n\nCMS是一款优秀的收集器，它的主要优点是并发收集、低停顿，但是它还有以下三个明显缺点：\n- CMS收集器对CPU资源非常敏感；\n- CMS收集器无法处理浮动垃圾（Floating Garbage），可能出现“Concurrent Mode Failure”失败而导致另一次的Full GC。\n- CMS收集器是基于“标记-清除”算法实现的，在收集结束会产生大量的空间碎片。为了解决这个问题，CMS收集器提供了一个-XX:+USeCMSCompactAtFullCollection开关参数用于在CMS收集器顶不住要进行Full GC时开启内存碎片的合并整理过程。\n\n## G1收集器\n\nG1收集器是当前收集技术最前沿的成果之一，它被视为JDK1.7中HotSpot虚拟机的一个重要进化特征。G1是一款面向服务端应用的垃圾收集器，与其他收集器相比，G1具备如下特点：\n- 并行与并发\n- 分代收集\n- 空间整合\n- 可预测的停顿\n\n在G1之前的其他收集器进行收集的范围是整个新生代或者老年代，而G1不再是这样。使用G1收集器时，Java堆的内存布局就与其他收集器有很大区别，它将整个Java堆划分成多个大小相等的独立区域（Region），虽然还保留有新生代和老年代的概念，但是新生代和老年代不再是物理隔离的了，它们都是一部分Region（不需要连续）的集合。\n","slug":"垃圾收集器","published":1,"updated":"2019-02-28T10:54:47.229Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck0ozhj2v0075gkuwk48n5ld8","content":"<p>垃圾收集算法是内存回收的方法论，垃圾收集器是垃圾回收的具体实现。在JDK1.7 Update 14之后的HotSpot虚拟机所包含的收集器如下图所示：</p>\n<p><img src=\"/2019/02/28/垃圾收集器/垃圾收集器1.jpg\" alt=\"垃圾收集器\"></p>\n<a id=\"more\"></a> \n<h2 id=\"Serial收集器\"><a href=\"#Serial收集器\" class=\"headerlink\" title=\"Serial收集器\"></a>Serial收集器</h2><p>Serial收集器是最基本、发展历史最悠久的收集器。这是一个单线程的收集器，但它的“单线程”的意义并不仅仅说明它只会使用一个CPU或者一条收集线程去完成垃圾收集工作，更重要的是在它进行垃圾收集时，必须暂停其他所有的工作线程，直到它收集结束。Serial收集器运行示意图如下：</p>\n<p><img src=\"/2019/02/28/垃圾收集器/垃圾收集器2.jpg\" alt=\"垃圾收集器\"></p>\n<p>也就是说，虚拟机在使用Serial垃圾收集器时会在用户不可见的情况下把所有用户正常工作的线程暂停，这种“Stop The World”操作在很多程序中是难以接受的，带给用户不良体验。<br>举个例子“你妈妈在打扫房间的时候，肯定也会让你老老实实待在椅子上或者房间外待着，如果她一边打扫，你一边丢垃圾，这房间还能打扫完？你妈妈不会崩溃？”，因此看起来“Stop The World”操作情有可原。<br>但是，从JDK1.3开始，HotSpot虚拟机开发团队一直在努力消除或减少工作线程因内存回收而导致的停顿，从Serial收集器到Parallel收集器，再到Concurrent Mark Sweep（CMS）乃至GC收集器最前沿的成果Garbage First（G1）收集器，用户线程的停顿时间在不断缩短，但是仍然没有办法完全消除垃圾回收带来的停顿。<br>Serial收集器虽然很老，可以说很陈旧，但是目前为止它依旧是虚拟机运行在Client模式下的默认新生代收集器。那是因为Serial收集器简单而高效，对于限定单个GPU的情况而言，Serial收集器由于没有线程交互的开销，专心进行垃圾收集自然可以获得最高的单线程收集效率。  </p>\n<h2 id=\"ParNew收集器\"><a href=\"#ParNew收集器\" class=\"headerlink\" title=\"ParNew收集器\"></a>ParNew收集器</h2><p>ParNew收集器就是Serial收集器的多线程版本，除了使用多线程进行垃圾收集外，其余行为包括Serial收集器的所有可用控制参数、收集算法、Stop The World、对象分配规则、回收策略等都与Serial收集器完全一样。ParNew收集器进行垃圾收集的示意图如下：  </p>\n<p><img src=\"/2019/02/28/垃圾收集器/垃圾收集器3.jpg\" alt=\"垃圾收集器\"></p>\n<p>ParNew收集器除了多线程收集外，其他与Serial收集器相比没有太多创新之处，但它却是虚拟机运行在Server模式下的首选新生代收集器，其中一个与性能无关的重要原因是除了Serial收集器外，目前只有它能与CMS收集器配合工作。</p>\n<h2 id=\"Parallel-Scavenge收集器\"><a href=\"#Parallel-Scavenge收集器\" class=\"headerlink\" title=\"Parallel Scavenge收集器\"></a>Parallel Scavenge收集器</h2><p>Parallel Scavenge收集器也是新生代收集器，并且使用复制算法收集内存，同时还是并行的多线程收集器。这些特点都和ParNew收集器一样，但是Parallel Scavenge收集器的目标在于达到一个可控制的<strong>吞吐量</strong>（Throughput），所谓吞吐量就是CPU用于运行用户代码的时间与CPU总消耗时间的比值，即吞吐量=运行用户代码/(运行用户代码+垃圾收集时间)。这与CMS等收集器的目标不同，它们目标是尽可能地缩短垃圾收集时间用户线程的停顿时间。<br>停顿时间越短就越适合需要与用户交互的程序，良好的响应速度能提升用户体验，而高吞吐量则可以高效率地利用CPU时间，尽快完成程序的运算任务，主要适合在后台运算而不需要太多的交互任务。<br>Parallel Scavenge收集器提供两个参数用于精准控制吞吐量，分别是控制最大垃圾收集时间的-XX:MaxGCPauseMillis参数以及直接设置吞吐量大小的-XX:GCTimeRatio参数。<br><strong>MaxGCPauseMillis</strong>参数允许的值是一个大于0的毫秒数，收集器将尽可能在规定时间内完成垃圾收集操作。但是不要认为这个参数越小，系统的垃圾收集速度就会越快，GC停顿时间的缩短是以牺牲吞吐量和新生代空间来换取的：系统把新生代调小一点，收集300M新生代肯定比收集500M新生代快，这也将导致垃圾收集更频繁，原来每20s收集一次、一次100ms，现在每10s收集一次、一次70ms。停顿时间的确下降了，但吞吐量也降下来了。<br><strong>GCTimeRatio</strong>参数的值应当是一个大于0小于100的整数，如果把这个参数设置为19，那么允许最大GC时间就占总时间的5%（即1/(1+19)）。<br>Parallel Scavenge收集器还有一个参数-XX:+UseAdaptiveSizePolicy，这个参数打开之后就不需要手动指定新生代的大小（-Xmm）、Eden与Survivor区的比例（-XX:SurvivorRatio）、晋升老年代对象大小（-XX:PretenureSizeThreshold）等参数了，虚拟机会根据当前系统的运行情况收集性能监控信息，动态调整这些参数以提供最适合的停顿时间或者最大吞吐量，这种调节方式称为GC自适应的调节策略（GC Ergonomics）。  </p>\n<h2 id=\"Serial-Old收集器\"><a href=\"#Serial-Old收集器\" class=\"headerlink\" title=\"Serial Old收集器\"></a>Serial Old收集器</h2><p>Serial Old是Serial收集器的老年代版本，它同样是一个单线程收集器，使用“标记-整理”算法，这个收集器的主要意义也是在于给Client模式下的虚拟机使用。<br>在Server模式下，它有两大用途：  </p>\n<ul>\n<li>在JDK1.5以及之前的版本中与Parallel Scavenge收集器搭配使用；</li>\n<li>作为CMS收集器的后备方案，在并发收集发生Concurrent Mode Failure时使用。  </li>\n</ul>\n<h2 id=\"Parallel-Old收集器\"><a href=\"#Parallel-Old收集器\" class=\"headerlink\" title=\"Parallel Old收集器\"></a>Parallel Old收集器</h2><p>Parallel Old收集器是Parallel Scavenge收集器的老年代版本，使用多线程和“标记-整理”算法。在JDK1.6之前Parallel Scavenge只能与Serial Old收集器配合使用，由于老年代使用单线程收集内存无法充分利用服务器多CPU的处理能力，这个组合就导致无法达到高吞吐量。在JDK1.6开始提供了Parallel Old收集器和Parallel Scavenge收集器配合使用，从而可以应用在注重吞吐量以及CPU资源敏感的场合。</p>\n<h2 id=\"CMS收集器\"><a href=\"#CMS收集器\" class=\"headerlink\" title=\"CMS收集器\"></a>CMS收集器</h2><p>CMS（Concurrent Mark Sweep）收集器是一种以获取最短回收停顿时间为目标的收集器。从名字（包含“Mark Sweep”）就可以看出来，CMS收集器是基于“标记——清除”算法实现的，它的运作过程相对于前面几种收集器来说更复杂一些，整个过程分为4个步骤，包括：</p>\n<ul>\n<li>初始标记（CMS initial mark）</li>\n<li>并发标记（CMS concurrent mark）</li>\n<li>重新标记（CMS remark）</li>\n<li>并发清除（CMS concurrent sweep）</li>\n</ul>\n<p>其中，初始标记、重新标记这；两个步骤仍需要“Stop The World”。初始标记是标记一下GC Roots能直接关联到的对象，速度很快，并发标记阶段就是进行GC Roots Tracing的过程，而重新标记阶段是为了修正并发标记阶段因用户程序继续运作而导致标记产生变动的那一部分对象的标记记录，这一阶段的停顿时间一般会比初始标记阶段稍长一些，但远比并发标记阶段的时间短。整个过程中耗时最长的并发标记和并发清除阶段都是与用户线程一起工作，如下图所示：</p>\n<p><img src=\"/2019/02/28/垃圾收集器/垃圾收集器5.png\" alt=\"垃圾收集器\"></p>\n<p>CMS是一款优秀的收集器，它的主要优点是并发收集、低停顿，但是它还有以下三个明显缺点：</p>\n<ul>\n<li>CMS收集器对CPU资源非常敏感；</li>\n<li>CMS收集器无法处理浮动垃圾（Floating Garbage），可能出现“Concurrent Mode Failure”失败而导致另一次的Full GC。</li>\n<li>CMS收集器是基于“标记-清除”算法实现的，在收集结束会产生大量的空间碎片。为了解决这个问题，CMS收集器提供了一个-XX:+USeCMSCompactAtFullCollection开关参数用于在CMS收集器顶不住要进行Full GC时开启内存碎片的合并整理过程。</li>\n</ul>\n<h2 id=\"G1收集器\"><a href=\"#G1收集器\" class=\"headerlink\" title=\"G1收集器\"></a>G1收集器</h2><p>G1收集器是当前收集技术最前沿的成果之一，它被视为JDK1.7中HotSpot虚拟机的一个重要进化特征。G1是一款面向服务端应用的垃圾收集器，与其他收集器相比，G1具备如下特点：</p>\n<ul>\n<li>并行与并发</li>\n<li>分代收集</li>\n<li>空间整合</li>\n<li>可预测的停顿</li>\n</ul>\n<p>在G1之前的其他收集器进行收集的范围是整个新生代或者老年代，而G1不再是这样。使用G1收集器时，Java堆的内存布局就与其他收集器有很大区别，它将整个Java堆划分成多个大小相等的独立区域（Region），虽然还保留有新生代和老年代的概念，但是新生代和老年代不再是物理隔离的了，它们都是一部分Region（不需要连续）的集合。</p>\n","site":{"data":{}},"excerpt":"<p>垃圾收集算法是内存回收的方法论，垃圾收集器是垃圾回收的具体实现。在JDK1.7 Update 14之后的HotSpot虚拟机所包含的收集器如下图所示：</p>\n<p><img src=\"/2019/02/28/垃圾收集器/垃圾收集器1.jpg\" alt=\"垃圾收集器\"></p>","more":"<h2 id=\"Serial收集器\"><a href=\"#Serial收集器\" class=\"headerlink\" title=\"Serial收集器\"></a>Serial收集器</h2><p>Serial收集器是最基本、发展历史最悠久的收集器。这是一个单线程的收集器，但它的“单线程”的意义并不仅仅说明它只会使用一个CPU或者一条收集线程去完成垃圾收集工作，更重要的是在它进行垃圾收集时，必须暂停其他所有的工作线程，直到它收集结束。Serial收集器运行示意图如下：</p>\n<p><img src=\"/2019/02/28/垃圾收集器/垃圾收集器2.jpg\" alt=\"垃圾收集器\"></p>\n<p>也就是说，虚拟机在使用Serial垃圾收集器时会在用户不可见的情况下把所有用户正常工作的线程暂停，这种“Stop The World”操作在很多程序中是难以接受的，带给用户不良体验。<br>举个例子“你妈妈在打扫房间的时候，肯定也会让你老老实实待在椅子上或者房间外待着，如果她一边打扫，你一边丢垃圾，这房间还能打扫完？你妈妈不会崩溃？”，因此看起来“Stop The World”操作情有可原。<br>但是，从JDK1.3开始，HotSpot虚拟机开发团队一直在努力消除或减少工作线程因内存回收而导致的停顿，从Serial收集器到Parallel收集器，再到Concurrent Mark Sweep（CMS）乃至GC收集器最前沿的成果Garbage First（G1）收集器，用户线程的停顿时间在不断缩短，但是仍然没有办法完全消除垃圾回收带来的停顿。<br>Serial收集器虽然很老，可以说很陈旧，但是目前为止它依旧是虚拟机运行在Client模式下的默认新生代收集器。那是因为Serial收集器简单而高效，对于限定单个GPU的情况而言，Serial收集器由于没有线程交互的开销，专心进行垃圾收集自然可以获得最高的单线程收集效率。  </p>\n<h2 id=\"ParNew收集器\"><a href=\"#ParNew收集器\" class=\"headerlink\" title=\"ParNew收集器\"></a>ParNew收集器</h2><p>ParNew收集器就是Serial收集器的多线程版本，除了使用多线程进行垃圾收集外，其余行为包括Serial收集器的所有可用控制参数、收集算法、Stop The World、对象分配规则、回收策略等都与Serial收集器完全一样。ParNew收集器进行垃圾收集的示意图如下：  </p>\n<p><img src=\"/2019/02/28/垃圾收集器/垃圾收集器3.jpg\" alt=\"垃圾收集器\"></p>\n<p>ParNew收集器除了多线程收集外，其他与Serial收集器相比没有太多创新之处，但它却是虚拟机运行在Server模式下的首选新生代收集器，其中一个与性能无关的重要原因是除了Serial收集器外，目前只有它能与CMS收集器配合工作。</p>\n<h2 id=\"Parallel-Scavenge收集器\"><a href=\"#Parallel-Scavenge收集器\" class=\"headerlink\" title=\"Parallel Scavenge收集器\"></a>Parallel Scavenge收集器</h2><p>Parallel Scavenge收集器也是新生代收集器，并且使用复制算法收集内存，同时还是并行的多线程收集器。这些特点都和ParNew收集器一样，但是Parallel Scavenge收集器的目标在于达到一个可控制的<strong>吞吐量</strong>（Throughput），所谓吞吐量就是CPU用于运行用户代码的时间与CPU总消耗时间的比值，即吞吐量=运行用户代码/(运行用户代码+垃圾收集时间)。这与CMS等收集器的目标不同，它们目标是尽可能地缩短垃圾收集时间用户线程的停顿时间。<br>停顿时间越短就越适合需要与用户交互的程序，良好的响应速度能提升用户体验，而高吞吐量则可以高效率地利用CPU时间，尽快完成程序的运算任务，主要适合在后台运算而不需要太多的交互任务。<br>Parallel Scavenge收集器提供两个参数用于精准控制吞吐量，分别是控制最大垃圾收集时间的-XX:MaxGCPauseMillis参数以及直接设置吞吐量大小的-XX:GCTimeRatio参数。<br><strong>MaxGCPauseMillis</strong>参数允许的值是一个大于0的毫秒数，收集器将尽可能在规定时间内完成垃圾收集操作。但是不要认为这个参数越小，系统的垃圾收集速度就会越快，GC停顿时间的缩短是以牺牲吞吐量和新生代空间来换取的：系统把新生代调小一点，收集300M新生代肯定比收集500M新生代快，这也将导致垃圾收集更频繁，原来每20s收集一次、一次100ms，现在每10s收集一次、一次70ms。停顿时间的确下降了，但吞吐量也降下来了。<br><strong>GCTimeRatio</strong>参数的值应当是一个大于0小于100的整数，如果把这个参数设置为19，那么允许最大GC时间就占总时间的5%（即1/(1+19)）。<br>Parallel Scavenge收集器还有一个参数-XX:+UseAdaptiveSizePolicy，这个参数打开之后就不需要手动指定新生代的大小（-Xmm）、Eden与Survivor区的比例（-XX:SurvivorRatio）、晋升老年代对象大小（-XX:PretenureSizeThreshold）等参数了，虚拟机会根据当前系统的运行情况收集性能监控信息，动态调整这些参数以提供最适合的停顿时间或者最大吞吐量，这种调节方式称为GC自适应的调节策略（GC Ergonomics）。  </p>\n<h2 id=\"Serial-Old收集器\"><a href=\"#Serial-Old收集器\" class=\"headerlink\" title=\"Serial Old收集器\"></a>Serial Old收集器</h2><p>Serial Old是Serial收集器的老年代版本，它同样是一个单线程收集器，使用“标记-整理”算法，这个收集器的主要意义也是在于给Client模式下的虚拟机使用。<br>在Server模式下，它有两大用途：  </p>\n<ul>\n<li>在JDK1.5以及之前的版本中与Parallel Scavenge收集器搭配使用；</li>\n<li>作为CMS收集器的后备方案，在并发收集发生Concurrent Mode Failure时使用。  </li>\n</ul>\n<h2 id=\"Parallel-Old收集器\"><a href=\"#Parallel-Old收集器\" class=\"headerlink\" title=\"Parallel Old收集器\"></a>Parallel Old收集器</h2><p>Parallel Old收集器是Parallel Scavenge收集器的老年代版本，使用多线程和“标记-整理”算法。在JDK1.6之前Parallel Scavenge只能与Serial Old收集器配合使用，由于老年代使用单线程收集内存无法充分利用服务器多CPU的处理能力，这个组合就导致无法达到高吞吐量。在JDK1.6开始提供了Parallel Old收集器和Parallel Scavenge收集器配合使用，从而可以应用在注重吞吐量以及CPU资源敏感的场合。</p>\n<h2 id=\"CMS收集器\"><a href=\"#CMS收集器\" class=\"headerlink\" title=\"CMS收集器\"></a>CMS收集器</h2><p>CMS（Concurrent Mark Sweep）收集器是一种以获取最短回收停顿时间为目标的收集器。从名字（包含“Mark Sweep”）就可以看出来，CMS收集器是基于“标记——清除”算法实现的，它的运作过程相对于前面几种收集器来说更复杂一些，整个过程分为4个步骤，包括：</p>\n<ul>\n<li>初始标记（CMS initial mark）</li>\n<li>并发标记（CMS concurrent mark）</li>\n<li>重新标记（CMS remark）</li>\n<li>并发清除（CMS concurrent sweep）</li>\n</ul>\n<p>其中，初始标记、重新标记这；两个步骤仍需要“Stop The World”。初始标记是标记一下GC Roots能直接关联到的对象，速度很快，并发标记阶段就是进行GC Roots Tracing的过程，而重新标记阶段是为了修正并发标记阶段因用户程序继续运作而导致标记产生变动的那一部分对象的标记记录，这一阶段的停顿时间一般会比初始标记阶段稍长一些，但远比并发标记阶段的时间短。整个过程中耗时最长的并发标记和并发清除阶段都是与用户线程一起工作，如下图所示：</p>\n<p><img src=\"/2019/02/28/垃圾收集器/垃圾收集器5.png\" alt=\"垃圾收集器\"></p>\n<p>CMS是一款优秀的收集器，它的主要优点是并发收集、低停顿，但是它还有以下三个明显缺点：</p>\n<ul>\n<li>CMS收集器对CPU资源非常敏感；</li>\n<li>CMS收集器无法处理浮动垃圾（Floating Garbage），可能出现“Concurrent Mode Failure”失败而导致另一次的Full GC。</li>\n<li>CMS收集器是基于“标记-清除”算法实现的，在收集结束会产生大量的空间碎片。为了解决这个问题，CMS收集器提供了一个-XX:+USeCMSCompactAtFullCollection开关参数用于在CMS收集器顶不住要进行Full GC时开启内存碎片的合并整理过程。</li>\n</ul>\n<h2 id=\"G1收集器\"><a href=\"#G1收集器\" class=\"headerlink\" title=\"G1收集器\"></a>G1收集器</h2><p>G1收集器是当前收集技术最前沿的成果之一，它被视为JDK1.7中HotSpot虚拟机的一个重要进化特征。G1是一款面向服务端应用的垃圾收集器，与其他收集器相比，G1具备如下特点：</p>\n<ul>\n<li>并行与并发</li>\n<li>分代收集</li>\n<li>空间整合</li>\n<li>可预测的停顿</li>\n</ul>\n<p>在G1之前的其他收集器进行收集的范围是整个新生代或者老年代，而G1不再是这样。使用G1收集器时，Java堆的内存布局就与其他收集器有很大区别，它将整个Java堆划分成多个大小相等的独立区域（Region），虽然还保留有新生代和老年代的概念，但是新生代和老年代不再是物理隔离的了，它们都是一部分Region（不需要连续）的集合。</p>"},{"title":"垃圾收集（二）","date":"2019-01-14T02:25:44.000Z","_content":"\n# 垃圾收集\n\n## 垃圾收集算法\n### 标记-清除算法\n算法分为标记阶段和清除阶段 ，首先标记出所有需要回收的对象，在标记完成后统一回收所有被标记的对象，它的标记过程就是引用计数法或者可达性算法判断对象是否存活的过程。  \n不足：  \n1. 效率问题，标记和清除两个阶段的效率都不高；\n2. 空间问题，标记清除之后会产生大量不连续的内存碎片，空间碎片太多可能会导致以后程序运行过程中需要分配较大对象时，无法找到足够的内存碎片而不得不提前出发一次垃圾收集动作。  \n标记清除算法的执行过程如下图所示：  \n\n![image](垃圾收集（二）/gc1.png)\n<!-- more --> \n### 复制算法\n为了解决效率问题，一种“复制”的垃圾收集算法出现了，它将可用的内存分成大小相等的两个区域，每次只使用其中的一块区域。当这块区域用完之后，就将还存活着的对象复制到另一块内存区域上，然后再把已使用过的内存空间一次清理掉。这样使得每次都是对整个半区进行垃圾回收，内存分配时也就不用再考虑内存碎片等复杂情况，只要移动堆顶指针，按顺序分配内存即可，实现简单，运行高效。只是这种算法每次只能使用一半的内存，相当于将内存缩小为原来的一半，代价太高。复制算法的执行过程如下图所示：\n\n![image](垃圾收集（二）/gc2.png)\n\n目前的商业虚拟机都是采用复制算法回收新生代，但是并不按照```1:1```划分内存空间，而是将内存分为一块较大的Eden空间和两块较小的```Survivor```空间，每次使用```Eden```和其中一块```Survivor```。当回收时，将Eden和Survivor中还存活的对象一次性复制到另一块```Survivor```空间上，最后清理掉Eden和刚才用过的Survivor空间。```HotSpot```虚拟机默认```Eden：Survivor=8:1```，也就是每次新生代中可用内存空间为整个新生代容量的```90%```，只有```10%```的内存被“浪费”。当然在大多数（```98%```）情况下，只有不超过```10%```的对象存活，而当超过```10%```时，也就意味着```Survivor```空间不够用，这个时候就需要依赖老年代进行分配担保（无法再```Survivor```区存放的对象直接进入老年代）。\n\n### 标记-整理算法\n复制算法在对象存活率较高的情况下就会进行较多的复制操作，效率将会变低，而且还需要额外的内存空间进行分配担保，以应对内存（```Survivor```空间）不够容纳存活对象的极端情况。  \n因此，老年代一般不采用复制算法，而采用“标记-整理”（```Mark-Compact```）算法，标记过程仍然与“标记-清除”算法一样，但后续步骤不是直接对可回收对象进行清理，而是让存活对象都向一端移动，然后直接清理掉端边界以外的内存，标记-整理算法的示意图如下：\n\n![image](垃圾收集（二）/gc3.png)\n\n### 分代收集算法\n\n当前商业虚拟机的垃圾收集都采用“分代收集”（```Generational Collection```）算法，这种算法根据对象存活周期的不同将内存划分为几块。一般是把Java堆划分成新生代和老生代，从而根据各个年代的特点采用最适当的收集算法。在新生代中，每次垃圾收集都会发现大量的对象死去，只有少量对象存活，因此采用复制算法，只需要付出少量存活对象的复制成本就可以完成收集；在老年代中因为对象存活率高、没有额外的空间对它进行分配担保，就必须采用“标记-清理”或者“标记-整理”算法进行回收。\n\n## HotSpot的算法实现\n### 枚举根节点\n从可达性分析中从```GC Roots```节点找到引用链这个操作为例，可作为```GC Roots```的加点主要在全局性的引用（例如常量或类静态变量）与执行上下文（例如栈帧中的本地变量表）中，现在的很多应用仅仅方法区就有数百兆，如果要逐个检查这里面的引用，那么必然会消耗很多时间。  \n另外，可达性分析对执行时间的敏感还体现在```GC```停顿上，因为这项分析工作必须在一个能确保一致性的快照中进行——这里的“一致性”的意思是在真个分析过程中整个执行系统看起来就像被冻结在某个时间点上，不可以出现分析过程中对象引用关系还在不断变化的情况，该点不满足的话分析结果准确性就无法得到保证。这点是导致在```GC```进行时必须停止多有```Java```执行线程的其中一个重要原因。即时在号称（几乎）不会发生停顿的```CMS```收集器中，枚举根节点时也是必须要停顿的。  \n由于目前主流的```Java```虚拟机使用的都是准确式```GC```，所以当执行系统停顿下来后，并不需要一个不漏地检查完所有执行上下文和全局的引用位置，虚拟机应当是有办法直接得知哪些地方存放着对象引用。在```HotSpot```的实现中，是使用一组称为```OopMap```的数据结构来达到这个目的，在类加载完成时，```HotSpot```就把对象内什么偏移量上是什么类型的数据计算出来，在```JIT```编译过程中，也会在特定位置记录下栈和寄存器哪些位置是引用。\n### 安全点\n在```OopMap```的协助下，```HotSpot```可以快速且准确地完成```GC Roots```枚举，但一个很现实的问题随之而来：可能导致引用关系发生变化，或者说```OopMap```内容变化的指令非常多，如果每一条指令都生成对应的```OopMap```，那将会需要大量的额外空间，这样```GC```的空间成本就会变得很高。  \n实际上，```HotSpot```也的确没有为每条指令都生成```OopMap```，前面已经提到只是在“特定的位置”记录这些信息，这些位置称为安全点（```Safepoint```），即程序执行时并非在所有的地方都能停顿下来开始GC，只有到达安全点时才能暂停。```Safepoint```的选定既不能太少以致于GC等待时间过长，也不能过于频繁以致于过分增大运行时的负荷。所以，安全点的选定基本上是以程序“是否具有让程序长时间执行的特征”为标准进行选定的————因为每一条指令执行的时间都非常短暂，程序不太可能因为指令流长度太长这个原因而过长时间运行，“长时间执行”最明显的特征就是指令序列复用，例如方法调用、循环跳转、异常跳转等，所以具有这些功能的指令才回产生```Safepoint```。  \n对于```Safepoint```，另一个需要考虑的问题就是如何在GC发生时让所有的线程都“跑”到最近的安全点上停顿下来。这里有两种方案可以选择:抢先式中断（```Preemptive Suspension```）和主动式中断（```Voluntary Suspension```），其中抢先式中断不需要线程的执行代码主动去配合，在GC发生时，首先把所有的线程全部中断，如果发现线程中断的地方不在安全点上，就恢复线程，让它“跑”到安全点上。现在几乎没有虚拟机实现采用抢先式中断来暂停线程从而相应GC时间。\n而主动式中断的思想是当GC需要中断线程的时候，不直接对线程操作，仅仅简单地设一个标志，各个线程执行时主动去轮询这个标志，发现中断标志为真时就自己中断挂起。\n### 安全区域\n使用```Safepoint```似乎已经完美解决了如何进入```GC```的问题，但实际情况却并不一定。```Safepoint```机制保证了程序执行时，在不太长的时间内就会遇到可进入```GC```的```Safepoint```。但是程序不执行的时候，```CPU```没有分配时间给程序，典型例子就是线程处于```Sleep```或者```Blocked```状态，这时线程无法响应```JVM```的中断请求，“走”到安全的地方去挂起中断，```JVM```也不太可能等待这些线程重新分配```CPU```时间。  \n对于这种情况就需要安全区域（```Safe Region```）来解决。安全区域是指在一段代码片段中，引用关系不会发生变化。在这个区域中的任何地方开始GC都是安全的。  \n在线程执行到```Saferegion```中的代码时，首先标志自己进入了```Saferegion```，那样当在这段时间里```JVM```要发起```GC```时，就不用管标志自己为```Saferegion```状态的线程了。在线程要离开```Saferegion```时，它要检查系统是否已经完成了根节点枚举（或者整个```GC```过程），如果完成了那么线程继续执行，否则它就要等待直到收到可以安全离开```Saferegion```的信号为止。","source":"_posts/垃圾收集（二）.md","raw":"---\ntitle: 垃圾收集（二）\ndate: 2019-01-14 10:25:44\ntags:\n    - 垃圾收集算法\n    - 垃圾收集器\n    - 安全点\n    - 安全区域\ncategories: 深入理解Java虚拟机\n---\n\n# 垃圾收集\n\n## 垃圾收集算法\n### 标记-清除算法\n算法分为标记阶段和清除阶段 ，首先标记出所有需要回收的对象，在标记完成后统一回收所有被标记的对象，它的标记过程就是引用计数法或者可达性算法判断对象是否存活的过程。  \n不足：  \n1. 效率问题，标记和清除两个阶段的效率都不高；\n2. 空间问题，标记清除之后会产生大量不连续的内存碎片，空间碎片太多可能会导致以后程序运行过程中需要分配较大对象时，无法找到足够的内存碎片而不得不提前出发一次垃圾收集动作。  \n标记清除算法的执行过程如下图所示：  \n\n![image](垃圾收集（二）/gc1.png)\n<!-- more --> \n### 复制算法\n为了解决效率问题，一种“复制”的垃圾收集算法出现了，它将可用的内存分成大小相等的两个区域，每次只使用其中的一块区域。当这块区域用完之后，就将还存活着的对象复制到另一块内存区域上，然后再把已使用过的内存空间一次清理掉。这样使得每次都是对整个半区进行垃圾回收，内存分配时也就不用再考虑内存碎片等复杂情况，只要移动堆顶指针，按顺序分配内存即可，实现简单，运行高效。只是这种算法每次只能使用一半的内存，相当于将内存缩小为原来的一半，代价太高。复制算法的执行过程如下图所示：\n\n![image](垃圾收集（二）/gc2.png)\n\n目前的商业虚拟机都是采用复制算法回收新生代，但是并不按照```1:1```划分内存空间，而是将内存分为一块较大的Eden空间和两块较小的```Survivor```空间，每次使用```Eden```和其中一块```Survivor```。当回收时，将Eden和Survivor中还存活的对象一次性复制到另一块```Survivor```空间上，最后清理掉Eden和刚才用过的Survivor空间。```HotSpot```虚拟机默认```Eden：Survivor=8:1```，也就是每次新生代中可用内存空间为整个新生代容量的```90%```，只有```10%```的内存被“浪费”。当然在大多数（```98%```）情况下，只有不超过```10%```的对象存活，而当超过```10%```时，也就意味着```Survivor```空间不够用，这个时候就需要依赖老年代进行分配担保（无法再```Survivor```区存放的对象直接进入老年代）。\n\n### 标记-整理算法\n复制算法在对象存活率较高的情况下就会进行较多的复制操作，效率将会变低，而且还需要额外的内存空间进行分配担保，以应对内存（```Survivor```空间）不够容纳存活对象的极端情况。  \n因此，老年代一般不采用复制算法，而采用“标记-整理”（```Mark-Compact```）算法，标记过程仍然与“标记-清除”算法一样，但后续步骤不是直接对可回收对象进行清理，而是让存活对象都向一端移动，然后直接清理掉端边界以外的内存，标记-整理算法的示意图如下：\n\n![image](垃圾收集（二）/gc3.png)\n\n### 分代收集算法\n\n当前商业虚拟机的垃圾收集都采用“分代收集”（```Generational Collection```）算法，这种算法根据对象存活周期的不同将内存划分为几块。一般是把Java堆划分成新生代和老生代，从而根据各个年代的特点采用最适当的收集算法。在新生代中，每次垃圾收集都会发现大量的对象死去，只有少量对象存活，因此采用复制算法，只需要付出少量存活对象的复制成本就可以完成收集；在老年代中因为对象存活率高、没有额外的空间对它进行分配担保，就必须采用“标记-清理”或者“标记-整理”算法进行回收。\n\n## HotSpot的算法实现\n### 枚举根节点\n从可达性分析中从```GC Roots```节点找到引用链这个操作为例，可作为```GC Roots```的加点主要在全局性的引用（例如常量或类静态变量）与执行上下文（例如栈帧中的本地变量表）中，现在的很多应用仅仅方法区就有数百兆，如果要逐个检查这里面的引用，那么必然会消耗很多时间。  \n另外，可达性分析对执行时间的敏感还体现在```GC```停顿上，因为这项分析工作必须在一个能确保一致性的快照中进行——这里的“一致性”的意思是在真个分析过程中整个执行系统看起来就像被冻结在某个时间点上，不可以出现分析过程中对象引用关系还在不断变化的情况，该点不满足的话分析结果准确性就无法得到保证。这点是导致在```GC```进行时必须停止多有```Java```执行线程的其中一个重要原因。即时在号称（几乎）不会发生停顿的```CMS```收集器中，枚举根节点时也是必须要停顿的。  \n由于目前主流的```Java```虚拟机使用的都是准确式```GC```，所以当执行系统停顿下来后，并不需要一个不漏地检查完所有执行上下文和全局的引用位置，虚拟机应当是有办法直接得知哪些地方存放着对象引用。在```HotSpot```的实现中，是使用一组称为```OopMap```的数据结构来达到这个目的，在类加载完成时，```HotSpot```就把对象内什么偏移量上是什么类型的数据计算出来，在```JIT```编译过程中，也会在特定位置记录下栈和寄存器哪些位置是引用。\n### 安全点\n在```OopMap```的协助下，```HotSpot```可以快速且准确地完成```GC Roots```枚举，但一个很现实的问题随之而来：可能导致引用关系发生变化，或者说```OopMap```内容变化的指令非常多，如果每一条指令都生成对应的```OopMap```，那将会需要大量的额外空间，这样```GC```的空间成本就会变得很高。  \n实际上，```HotSpot```也的确没有为每条指令都生成```OopMap```，前面已经提到只是在“特定的位置”记录这些信息，这些位置称为安全点（```Safepoint```），即程序执行时并非在所有的地方都能停顿下来开始GC，只有到达安全点时才能暂停。```Safepoint```的选定既不能太少以致于GC等待时间过长，也不能过于频繁以致于过分增大运行时的负荷。所以，安全点的选定基本上是以程序“是否具有让程序长时间执行的特征”为标准进行选定的————因为每一条指令执行的时间都非常短暂，程序不太可能因为指令流长度太长这个原因而过长时间运行，“长时间执行”最明显的特征就是指令序列复用，例如方法调用、循环跳转、异常跳转等，所以具有这些功能的指令才回产生```Safepoint```。  \n对于```Safepoint```，另一个需要考虑的问题就是如何在GC发生时让所有的线程都“跑”到最近的安全点上停顿下来。这里有两种方案可以选择:抢先式中断（```Preemptive Suspension```）和主动式中断（```Voluntary Suspension```），其中抢先式中断不需要线程的执行代码主动去配合，在GC发生时，首先把所有的线程全部中断，如果发现线程中断的地方不在安全点上，就恢复线程，让它“跑”到安全点上。现在几乎没有虚拟机实现采用抢先式中断来暂停线程从而相应GC时间。\n而主动式中断的思想是当GC需要中断线程的时候，不直接对线程操作，仅仅简单地设一个标志，各个线程执行时主动去轮询这个标志，发现中断标志为真时就自己中断挂起。\n### 安全区域\n使用```Safepoint```似乎已经完美解决了如何进入```GC```的问题，但实际情况却并不一定。```Safepoint```机制保证了程序执行时，在不太长的时间内就会遇到可进入```GC```的```Safepoint```。但是程序不执行的时候，```CPU```没有分配时间给程序，典型例子就是线程处于```Sleep```或者```Blocked```状态，这时线程无法响应```JVM```的中断请求，“走”到安全的地方去挂起中断，```JVM```也不太可能等待这些线程重新分配```CPU```时间。  \n对于这种情况就需要安全区域（```Safe Region```）来解决。安全区域是指在一段代码片段中，引用关系不会发生变化。在这个区域中的任何地方开始GC都是安全的。  \n在线程执行到```Saferegion```中的代码时，首先标志自己进入了```Saferegion```，那样当在这段时间里```JVM```要发起```GC```时，就不用管标志自己为```Saferegion```状态的线程了。在线程要离开```Saferegion```时，它要检查系统是否已经完成了根节点枚举（或者整个```GC```过程），如果完成了那么线程继续执行，否则它就要等待直到收到可以安全离开```Saferegion```的信号为止。","slug":"垃圾收集（二）","published":1,"updated":"2019-01-18T04:40:40.615Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ck0ozhj2x0077gkuw45wpwnj9","content":"<h1 id=\"垃圾收集\"><a href=\"#垃圾收集\" class=\"headerlink\" title=\"垃圾收集\"></a>垃圾收集</h1><h2 id=\"垃圾收集算法\"><a href=\"#垃圾收集算法\" class=\"headerlink\" title=\"垃圾收集算法\"></a>垃圾收集算法</h2><h3 id=\"标记-清除算法\"><a href=\"#标记-清除算法\" class=\"headerlink\" title=\"标记-清除算法\"></a>标记-清除算法</h3><p>算法分为标记阶段和清除阶段 ，首先标记出所有需要回收的对象，在标记完成后统一回收所有被标记的对象，它的标记过程就是引用计数法或者可达性算法判断对象是否存活的过程。<br>不足：  </p>\n<ol>\n<li>效率问题，标记和清除两个阶段的效率都不高；</li>\n<li>空间问题，标记清除之后会产生大量不连续的内存碎片，空间碎片太多可能会导致以后程序运行过程中需要分配较大对象时，无法找到足够的内存碎片而不得不提前出发一次垃圾收集动作。<br>标记清除算法的执行过程如下图所示：  </li>\n</ol>\n<p><img src=\"/2019/01/14/垃圾收集（二）/gc1.png\" alt=\"image\"><br><a id=\"more\"></a> </p>\n<h3 id=\"复制算法\"><a href=\"#复制算法\" class=\"headerlink\" title=\"复制算法\"></a>复制算法</h3><p>为了解决效率问题，一种“复制”的垃圾收集算法出现了，它将可用的内存分成大小相等的两个区域，每次只使用其中的一块区域。当这块区域用完之后，就将还存活着的对象复制到另一块内存区域上，然后再把已使用过的内存空间一次清理掉。这样使得每次都是对整个半区进行垃圾回收，内存分配时也就不用再考虑内存碎片等复杂情况，只要移动堆顶指针，按顺序分配内存即可，实现简单，运行高效。只是这种算法每次只能使用一半的内存，相当于将内存缩小为原来的一半，代价太高。复制算法的执行过程如下图所示：</p>\n<p><img src=\"/2019/01/14/垃圾收集（二）/gc2.png\" alt=\"image\"></p>\n<p>目前的商业虚拟机都是采用复制算法回收新生代，但是并不按照<code>1:1</code>划分内存空间，而是将内存分为一块较大的Eden空间和两块较小的<code>Survivor</code>空间，每次使用<code>Eden</code>和其中一块<code>Survivor</code>。当回收时，将Eden和Survivor中还存活的对象一次性复制到另一块<code>Survivor</code>空间上，最后清理掉Eden和刚才用过的Survivor空间。<code>HotSpot</code>虚拟机默认<code>Eden：Survivor=8:1</code>，也就是每次新生代中可用内存空间为整个新生代容量的<code>90%</code>，只有<code>10%</code>的内存被“浪费”。当然在大多数（<code>98%</code>）情况下，只有不超过<code>10%</code>的对象存活，而当超过<code>10%</code>时，也就意味着<code>Survivor</code>空间不够用，这个时候就需要依赖老年代进行分配担保（无法再<code>Survivor</code>区存放的对象直接进入老年代）。</p>\n<h3 id=\"标记-整理算法\"><a href=\"#标记-整理算法\" class=\"headerlink\" title=\"标记-整理算法\"></a>标记-整理算法</h3><p>复制算法在对象存活率较高的情况下就会进行较多的复制操作，效率将会变低，而且还需要额外的内存空间进行分配担保，以应对内存（<code>Survivor</code>空间）不够容纳存活对象的极端情况。<br>因此，老年代一般不采用复制算法，而采用“标记-整理”（<code>Mark-Compact</code>）算法，标记过程仍然与“标记-清除”算法一样，但后续步骤不是直接对可回收对象进行清理，而是让存活对象都向一端移动，然后直接清理掉端边界以外的内存，标记-整理算法的示意图如下：</p>\n<p><img src=\"/2019/01/14/垃圾收集（二）/gc3.png\" alt=\"image\"></p>\n<h3 id=\"分代收集算法\"><a href=\"#分代收集算法\" class=\"headerlink\" title=\"分代收集算法\"></a>分代收集算法</h3><p>当前商业虚拟机的垃圾收集都采用“分代收集”（<code>Generational Collection</code>）算法，这种算法根据对象存活周期的不同将内存划分为几块。一般是把Java堆划分成新生代和老生代，从而根据各个年代的特点采用最适当的收集算法。在新生代中，每次垃圾收集都会发现大量的对象死去，只有少量对象存活，因此采用复制算法，只需要付出少量存活对象的复制成本就可以完成收集；在老年代中因为对象存活率高、没有额外的空间对它进行分配担保，就必须采用“标记-清理”或者“标记-整理”算法进行回收。</p>\n<h2 id=\"HotSpot的算法实现\"><a href=\"#HotSpot的算法实现\" class=\"headerlink\" title=\"HotSpot的算法实现\"></a>HotSpot的算法实现</h2><h3 id=\"枚举根节点\"><a href=\"#枚举根节点\" class=\"headerlink\" title=\"枚举根节点\"></a>枚举根节点</h3><p>从可达性分析中从<code>GC Roots</code>节点找到引用链这个操作为例，可作为<code>GC Roots</code>的加点主要在全局性的引用（例如常量或类静态变量）与执行上下文（例如栈帧中的本地变量表）中，现在的很多应用仅仅方法区就有数百兆，如果要逐个检查这里面的引用，那么必然会消耗很多时间。<br>另外，可达性分析对执行时间的敏感还体现在<code>GC</code>停顿上，因为这项分析工作必须在一个能确保一致性的快照中进行——这里的“一致性”的意思是在真个分析过程中整个执行系统看起来就像被冻结在某个时间点上，不可以出现分析过程中对象引用关系还在不断变化的情况，该点不满足的话分析结果准确性就无法得到保证。这点是导致在<code>GC</code>进行时必须停止多有<code>Java</code>执行线程的其中一个重要原因。即时在号称（几乎）不会发生停顿的<code>CMS</code>收集器中，枚举根节点时也是必须要停顿的。<br>由于目前主流的<code>Java</code>虚拟机使用的都是准确式<code>GC</code>，所以当执行系统停顿下来后，并不需要一个不漏地检查完所有执行上下文和全局的引用位置，虚拟机应当是有办法直接得知哪些地方存放着对象引用。在<code>HotSpot</code>的实现中，是使用一组称为<code>OopMap</code>的数据结构来达到这个目的，在类加载完成时，<code>HotSpot</code>就把对象内什么偏移量上是什么类型的数据计算出来，在<code>JIT</code>编译过程中，也会在特定位置记录下栈和寄存器哪些位置是引用。</p>\n<h3 id=\"安全点\"><a href=\"#安全点\" class=\"headerlink\" title=\"安全点\"></a>安全点</h3><p>在<code>OopMap</code>的协助下，<code>HotSpot</code>可以快速且准确地完成<code>GC Roots</code>枚举，但一个很现实的问题随之而来：可能导致引用关系发生变化，或者说<code>OopMap</code>内容变化的指令非常多，如果每一条指令都生成对应的<code>OopMap</code>，那将会需要大量的额外空间，这样<code>GC</code>的空间成本就会变得很高。<br>实际上，<code>HotSpot</code>也的确没有为每条指令都生成<code>OopMap</code>，前面已经提到只是在“特定的位置”记录这些信息，这些位置称为安全点（<code>Safepoint</code>），即程序执行时并非在所有的地方都能停顿下来开始GC，只有到达安全点时才能暂停。<code>Safepoint</code>的选定既不能太少以致于GC等待时间过长，也不能过于频繁以致于过分增大运行时的负荷。所以，安全点的选定基本上是以程序“是否具有让程序长时间执行的特征”为标准进行选定的————因为每一条指令执行的时间都非常短暂，程序不太可能因为指令流长度太长这个原因而过长时间运行，“长时间执行”最明显的特征就是指令序列复用，例如方法调用、循环跳转、异常跳转等，所以具有这些功能的指令才回产生<code>Safepoint</code>。<br>对于<code>Safepoint</code>，另一个需要考虑的问题就是如何在GC发生时让所有的线程都“跑”到最近的安全点上停顿下来。这里有两种方案可以选择:抢先式中断（<code>Preemptive Suspension</code>）和主动式中断（<code>Voluntary Suspension</code>），其中抢先式中断不需要线程的执行代码主动去配合，在GC发生时，首先把所有的线程全部中断，如果发现线程中断的地方不在安全点上，就恢复线程，让它“跑”到安全点上。现在几乎没有虚拟机实现采用抢先式中断来暂停线程从而相应GC时间。<br>而主动式中断的思想是当GC需要中断线程的时候，不直接对线程操作，仅仅简单地设一个标志，各个线程执行时主动去轮询这个标志，发现中断标志为真时就自己中断挂起。</p>\n<h3 id=\"安全区域\"><a href=\"#安全区域\" class=\"headerlink\" title=\"安全区域\"></a>安全区域</h3><p>使用<code>Safepoint</code>似乎已经完美解决了如何进入<code>GC</code>的问题，但实际情况却并不一定。<code>Safepoint</code>机制保证了程序执行时，在不太长的时间内就会遇到可进入<code>GC</code>的<code>Safepoint</code>。但是程序不执行的时候，<code>CPU</code>没有分配时间给程序，典型例子就是线程处于<code>Sleep</code>或者<code>Blocked</code>状态，这时线程无法响应<code>JVM</code>的中断请求，“走”到安全的地方去挂起中断，<code>JVM</code>也不太可能等待这些线程重新分配<code>CPU</code>时间。<br>对于这种情况就需要安全区域（<code>Safe Region</code>）来解决。安全区域是指在一段代码片段中，引用关系不会发生变化。在这个区域中的任何地方开始GC都是安全的。<br>在线程执行到<code>Saferegion</code>中的代码时，首先标志自己进入了<code>Saferegion</code>，那样当在这段时间里<code>JVM</code>要发起<code>GC</code>时，就不用管标志自己为<code>Saferegion</code>状态的线程了。在线程要离开<code>Saferegion</code>时，它要检查系统是否已经完成了根节点枚举（或者整个<code>GC</code>过程），如果完成了那么线程继续执行，否则它就要等待直到收到可以安全离开<code>Saferegion</code>的信号为止。</p>\n","site":{"data":{}},"excerpt":"<h1 id=\"垃圾收集\"><a href=\"#垃圾收集\" class=\"headerlink\" title=\"垃圾收集\"></a>垃圾收集</h1><h2 id=\"垃圾收集算法\"><a href=\"#垃圾收集算法\" class=\"headerlink\" title=\"垃圾收集算法\"></a>垃圾收集算法</h2><h3 id=\"标记-清除算法\"><a href=\"#标记-清除算法\" class=\"headerlink\" title=\"标记-清除算法\"></a>标记-清除算法</h3><p>算法分为标记阶段和清除阶段 ，首先标记出所有需要回收的对象，在标记完成后统一回收所有被标记的对象，它的标记过程就是引用计数法或者可达性算法判断对象是否存活的过程。<br>不足：  </p>\n<ol>\n<li>效率问题，标记和清除两个阶段的效率都不高；</li>\n<li>空间问题，标记清除之后会产生大量不连续的内存碎片，空间碎片太多可能会导致以后程序运行过程中需要分配较大对象时，无法找到足够的内存碎片而不得不提前出发一次垃圾收集动作。<br>标记清除算法的执行过程如下图所示：  </li>\n</ol>\n<p><img src=\"/2019/01/14/垃圾收集（二）/gc1.png\" alt=\"image\"><br></p>","more":"<p></p>\n<h3 id=\"复制算法\"><a href=\"#复制算法\" class=\"headerlink\" title=\"复制算法\"></a>复制算法</h3><p>为了解决效率问题，一种“复制”的垃圾收集算法出现了，它将可用的内存分成大小相等的两个区域，每次只使用其中的一块区域。当这块区域用完之后，就将还存活着的对象复制到另一块内存区域上，然后再把已使用过的内存空间一次清理掉。这样使得每次都是对整个半区进行垃圾回收，内存分配时也就不用再考虑内存碎片等复杂情况，只要移动堆顶指针，按顺序分配内存即可，实现简单，运行高效。只是这种算法每次只能使用一半的内存，相当于将内存缩小为原来的一半，代价太高。复制算法的执行过程如下图所示：</p>\n<p><img src=\"/2019/01/14/垃圾收集（二）/gc2.png\" alt=\"image\"></p>\n<p>目前的商业虚拟机都是采用复制算法回收新生代，但是并不按照<code>1:1</code>划分内存空间，而是将内存分为一块较大的Eden空间和两块较小的<code>Survivor</code>空间，每次使用<code>Eden</code>和其中一块<code>Survivor</code>。当回收时，将Eden和Survivor中还存活的对象一次性复制到另一块<code>Survivor</code>空间上，最后清理掉Eden和刚才用过的Survivor空间。<code>HotSpot</code>虚拟机默认<code>Eden：Survivor=8:1</code>，也就是每次新生代中可用内存空间为整个新生代容量的<code>90%</code>，只有<code>10%</code>的内存被“浪费”。当然在大多数（<code>98%</code>）情况下，只有不超过<code>10%</code>的对象存活，而当超过<code>10%</code>时，也就意味着<code>Survivor</code>空间不够用，这个时候就需要依赖老年代进行分配担保（无法再<code>Survivor</code>区存放的对象直接进入老年代）。</p>\n<h3 id=\"标记-整理算法\"><a href=\"#标记-整理算法\" class=\"headerlink\" title=\"标记-整理算法\"></a>标记-整理算法</h3><p>复制算法在对象存活率较高的情况下就会进行较多的复制操作，效率将会变低，而且还需要额外的内存空间进行分配担保，以应对内存（<code>Survivor</code>空间）不够容纳存活对象的极端情况。<br>因此，老年代一般不采用复制算法，而采用“标记-整理”（<code>Mark-Compact</code>）算法，标记过程仍然与“标记-清除”算法一样，但后续步骤不是直接对可回收对象进行清理，而是让存活对象都向一端移动，然后直接清理掉端边界以外的内存，标记-整理算法的示意图如下：</p>\n<p><img src=\"/2019/01/14/垃圾收集（二）/gc3.png\" alt=\"image\"></p>\n<h3 id=\"分代收集算法\"><a href=\"#分代收集算法\" class=\"headerlink\" title=\"分代收集算法\"></a>分代收集算法</h3><p>当前商业虚拟机的垃圾收集都采用“分代收集”（<code>Generational Collection</code>）算法，这种算法根据对象存活周期的不同将内存划分为几块。一般是把Java堆划分成新生代和老生代，从而根据各个年代的特点采用最适当的收集算法。在新生代中，每次垃圾收集都会发现大量的对象死去，只有少量对象存活，因此采用复制算法，只需要付出少量存活对象的复制成本就可以完成收集；在老年代中因为对象存活率高、没有额外的空间对它进行分配担保，就必须采用“标记-清理”或者“标记-整理”算法进行回收。</p>\n<h2 id=\"HotSpot的算法实现\"><a href=\"#HotSpot的算法实现\" class=\"headerlink\" title=\"HotSpot的算法实现\"></a>HotSpot的算法实现</h2><h3 id=\"枚举根节点\"><a href=\"#枚举根节点\" class=\"headerlink\" title=\"枚举根节点\"></a>枚举根节点</h3><p>从可达性分析中从<code>GC Roots</code>节点找到引用链这个操作为例，可作为<code>GC Roots</code>的加点主要在全局性的引用（例如常量或类静态变量）与执行上下文（例如栈帧中的本地变量表）中，现在的很多应用仅仅方法区就有数百兆，如果要逐个检查这里面的引用，那么必然会消耗很多时间。<br>另外，可达性分析对执行时间的敏感还体现在<code>GC</code>停顿上，因为这项分析工作必须在一个能确保一致性的快照中进行——这里的“一致性”的意思是在真个分析过程中整个执行系统看起来就像被冻结在某个时间点上，不可以出现分析过程中对象引用关系还在不断变化的情况，该点不满足的话分析结果准确性就无法得到保证。这点是导致在<code>GC</code>进行时必须停止多有<code>Java</code>执行线程的其中一个重要原因。即时在号称（几乎）不会发生停顿的<code>CMS</code>收集器中，枚举根节点时也是必须要停顿的。<br>由于目前主流的<code>Java</code>虚拟机使用的都是准确式<code>GC</code>，所以当执行系统停顿下来后，并不需要一个不漏地检查完所有执行上下文和全局的引用位置，虚拟机应当是有办法直接得知哪些地方存放着对象引用。在<code>HotSpot</code>的实现中，是使用一组称为<code>OopMap</code>的数据结构来达到这个目的，在类加载完成时，<code>HotSpot</code>就把对象内什么偏移量上是什么类型的数据计算出来，在<code>JIT</code>编译过程中，也会在特定位置记录下栈和寄存器哪些位置是引用。</p>\n<h3 id=\"安全点\"><a href=\"#安全点\" class=\"headerlink\" title=\"安全点\"></a>安全点</h3><p>在<code>OopMap</code>的协助下，<code>HotSpot</code>可以快速且准确地完成<code>GC Roots</code>枚举，但一个很现实的问题随之而来：可能导致引用关系发生变化，或者说<code>OopMap</code>内容变化的指令非常多，如果每一条指令都生成对应的<code>OopMap</code>，那将会需要大量的额外空间，这样<code>GC</code>的空间成本就会变得很高。<br>实际上，<code>HotSpot</code>也的确没有为每条指令都生成<code>OopMap</code>，前面已经提到只是在“特定的位置”记录这些信息，这些位置称为安全点（<code>Safepoint</code>），即程序执行时并非在所有的地方都能停顿下来开始GC，只有到达安全点时才能暂停。<code>Safepoint</code>的选定既不能太少以致于GC等待时间过长，也不能过于频繁以致于过分增大运行时的负荷。所以，安全点的选定基本上是以程序“是否具有让程序长时间执行的特征”为标准进行选定的————因为每一条指令执行的时间都非常短暂，程序不太可能因为指令流长度太长这个原因而过长时间运行，“长时间执行”最明显的特征就是指令序列复用，例如方法调用、循环跳转、异常跳转等，所以具有这些功能的指令才回产生<code>Safepoint</code>。<br>对于<code>Safepoint</code>，另一个需要考虑的问题就是如何在GC发生时让所有的线程都“跑”到最近的安全点上停顿下来。这里有两种方案可以选择:抢先式中断（<code>Preemptive Suspension</code>）和主动式中断（<code>Voluntary Suspension</code>），其中抢先式中断不需要线程的执行代码主动去配合，在GC发生时，首先把所有的线程全部中断，如果发现线程中断的地方不在安全点上，就恢复线程，让它“跑”到安全点上。现在几乎没有虚拟机实现采用抢先式中断来暂停线程从而相应GC时间。<br>而主动式中断的思想是当GC需要中断线程的时候，不直接对线程操作，仅仅简单地设一个标志，各个线程执行时主动去轮询这个标志，发现中断标志为真时就自己中断挂起。</p>\n<h3 id=\"安全区域\"><a href=\"#安全区域\" class=\"headerlink\" title=\"安全区域\"></a>安全区域</h3><p>使用<code>Safepoint</code>似乎已经完美解决了如何进入<code>GC</code>的问题，但实际情况却并不一定。<code>Safepoint</code>机制保证了程序执行时，在不太长的时间内就会遇到可进入<code>GC</code>的<code>Safepoint</code>。但是程序不执行的时候，<code>CPU</code>没有分配时间给程序，典型例子就是线程处于<code>Sleep</code>或者<code>Blocked</code>状态，这时线程无法响应<code>JVM</code>的中断请求，“走”到安全的地方去挂起中断，<code>JVM</code>也不太可能等待这些线程重新分配<code>CPU</code>时间。<br>对于这种情况就需要安全区域（<code>Safe Region</code>）来解决。安全区域是指在一段代码片段中，引用关系不会发生变化。在这个区域中的任何地方开始GC都是安全的。<br>在线程执行到<code>Saferegion</code>中的代码时，首先标志自己进入了<code>Saferegion</code>，那样当在这段时间里<code>JVM</code>要发起<code>GC</code>时，就不用管标志自己为<code>Saferegion</code>状态的线程了。在线程要离开<code>Saferegion</code>时，它要检查系统是否已经完成了根节点枚举（或者整个<code>GC</code>过程），如果完成了那么线程继续执行，否则它就要等待直到收到可以安全离开<code>Saferegion</code>的信号为止。</p>"}],"PostAsset":[{"_id":"source/_posts/StackGAN-Text-to-Photo-realistic-Image-Synthesis-with-Stacked-Generative-Adversarial-Networks/StackGAN.png","slug":"StackGAN.png","post":"ck0ozhiwt000mgkuwvld6qlzw","modified":1,"renderable":0},{"_id":"source/_posts/Stacked-Cross-Attention-for-Image-Text-Matching/Stacked-Cross-Attention1.png","slug":"Stacked-Cross-Attention1.png","post":"ck0ozhiwv000ngkuw7uctnlsv","modified":1,"renderable":0},{"_id":"source/_posts/Stacked-Cross-Attention-for-Image-Text-Matching/Stacked-Cross-Attention2.png","slug":"Stacked-Cross-Attention2.png","post":"ck0ozhiwv000ngkuw7uctnlsv","modified":1,"renderable":0},{"_id":"source/_posts/Java内存区域/运行时内存.png","post":"ck0ozhiwb0002gkuwxvdybr59","slug":"运行时内存.png","modified":1,"renderable":1},{"_id":"source/_posts/Java内存模型（一）/jmm1.png","post":"ck0ozhiwh0008gkuwczdcld9r","slug":"jmm1.png","modified":1,"renderable":1},{"_id":"source/_posts/StackGAN-Text-to-Photo-realistic-Image-Synthesis-with-Stacked-Generative-Adversarial-Networks/StackGAN0.png","slug":"StackGAN0.png","post":"ck0ozhiwt000mgkuwvld6qlzw","modified":1,"renderable":0},{"_id":"source/_posts/Kafka-分布式流平台/kafka1.png","post":"ck0ozhiwn000dgkuwfqlz8n1v","slug":"kafka1.png","modified":1,"renderable":1},{"_id":"source/_posts/Kafka-分布式流平台/kafka2.png","post":"ck0ozhiwn000dgkuwfqlz8n1v","slug":"kafka2.png","modified":1,"renderable":1},{"_id":"source/_posts/Kafka-分布式流平台/kafka3.png","post":"ck0ozhiwn000dgkuwfqlz8n1v","slug":"kafka3.png","modified":1,"renderable":1},{"_id":"source/_posts/cuda安装/cuda0.png","post":"ck0ozhix10011gkuw6bfqk5n7","slug":"cuda0.png","modified":1,"renderable":1},{"_id":"source/_posts/cuda安装/cuda1.png","post":"ck0ozhix10011gkuw6bfqk5n7","slug":"cuda1.png","modified":1,"renderable":1},{"_id":"source/_posts/cuda安装/cuda3.png","post":"ck0ozhix10011gkuw6bfqk5n7","slug":"cuda3.png","modified":1,"renderable":1},{"_id":"source/_posts/Hierarchical-Object-Detection-with-Deep-Reinforcement-Learning/Hierarchical-Object-Detection-Models.png","post":"ck0ozhiwf0006gkuwyvng23j3","slug":"Hierarchical-Object-Detection-Models.png","modified":1,"renderable":1},{"_id":"source/_posts/Hierarchical-Object-Detection-with-Deep-Reinforcement-Learning/aeroplane20180626.png","slug":"aeroplane20180626.png","post":"ck0ozhiwf0006gkuwyvng23j3","modified":1,"renderable":0},{"_id":"source/_posts/Hierarchical-Object-Detection-with-Deep-Reinforcement-Learning/error1.png","post":"ck0ozhiwf0006gkuwyvng23j3","slug":"error1.png","modified":1,"renderable":1},{"_id":"source/_posts/Hierarchical-Object-Detection-with-Deep-Reinforcement-Learning/error2.png","post":"ck0ozhiwf0006gkuwyvng23j3","slug":"error2.png","modified":1,"renderable":1},{"_id":"source/_posts/Hierarchical-Object-Detection-with-Deep-Reinforcement-Learning/vgg16.png","post":"ck0ozhiwf0006gkuwyvng23j3","slug":"vgg16.png","modified":1,"renderable":1},{"_id":"source/_posts/图片服务器搭建/1.png","post":"ck0ozhix50018gkuwlfy22wjo","slug":"1.png","modified":1,"renderable":1},{"_id":"source/_posts/图片服务器搭建/2.png","post":"ck0ozhix50018gkuwlfy22wjo","slug":"2.png","modified":1,"renderable":1},{"_id":"source/_posts/图片服务器搭建/3.png","post":"ck0ozhix50018gkuwlfy22wjo","slug":"3.png","modified":1,"renderable":1},{"_id":"source/_posts/图片服务器搭建/4.png","post":"ck0ozhix50018gkuwlfy22wjo","slug":"4.png","modified":1,"renderable":1},{"_id":"source/_posts/图片服务器搭建/5.png","post":"ck0ozhix50018gkuwlfy22wjo","slug":"5.png","modified":1,"renderable":1},{"_id":"source/_posts/Ubuntu配置shadowsocks科学上网/科学上网1.png","post":"ck0ozhiwx000rgkuw659w1wqm","slug":"科学上网1.png","modified":1,"renderable":1},{"_id":"source/_posts/Ubuntu配置shadowsocks科学上网/科学上网2.png","post":"ck0ozhiwx000rgkuw659w1wqm","slug":"科学上网2.png","modified":1,"renderable":1},{"_id":"source/_posts/Ubuntu配置shadowsocks科学上网/科学上网3.png","post":"ck0ozhiwx000rgkuw659w1wqm","slug":"科学上网3.png","modified":1,"renderable":1},{"_id":"source/_posts/Ubuntu配置shadowsocks科学上网/科学上网4.png","post":"ck0ozhiwx000rgkuw659w1wqm","slug":"科学上网4.png","modified":1,"renderable":1},{"_id":"source/_posts/Ubuntu配置shadowsocks科学上网/科学上网5.png","post":"ck0ozhiwx000rgkuw659w1wqm","slug":"科学上网5.png","modified":1,"renderable":1},{"_id":"source/_posts/Ubuntu配置shadowsocks科学上网/科学上网6.png","post":"ck0ozhiwx000rgkuw659w1wqm","slug":"科学上网6.png","modified":1,"renderable":1},{"_id":"source/_posts/Ubuntu配置shadowsocks科学上网/科学上网7.png","post":"ck0ozhiwx000rgkuw659w1wqm","slug":"科学上网7.png","modified":1,"renderable":1},{"_id":"source/_posts/垃圾收集（二）/gc1.png","post":"ck0ozhj2x0077gkuw45wpwnj9","slug":"gc1.png","modified":1,"renderable":1},{"_id":"source/_posts/垃圾收集（二）/gc2.png","post":"ck0ozhj2x0077gkuw45wpwnj9","slug":"gc2.png","modified":1,"renderable":1},{"_id":"source/_posts/垃圾收集（二）/gc3.png","post":"ck0ozhj2x0077gkuw45wpwnj9","slug":"gc3.png","modified":1,"renderable":1},{"_id":"source/_posts/垃圾收集器/垃圾收集器1.jpg","post":"ck0ozhj2v0075gkuwk48n5ld8","slug":"垃圾收集器1.jpg","modified":1,"renderable":1},{"_id":"source/_posts/垃圾收集器/垃圾收集器2.jpg","post":"ck0ozhj2v0075gkuwk48n5ld8","slug":"垃圾收集器2.jpg","modified":1,"renderable":1},{"_id":"source/_posts/垃圾收集器/垃圾收集器3.jpg","post":"ck0ozhj2v0075gkuwk48n5ld8","slug":"垃圾收集器3.jpg","modified":1,"renderable":1},{"_id":"source/_posts/垃圾收集器/垃圾收集器4.jpg","post":"ck0ozhj2v0075gkuwk48n5ld8","slug":"垃圾收集器4.jpg","modified":1,"renderable":1},{"_id":"source/_posts/垃圾收集器/垃圾收集器5.png","post":"ck0ozhj2v0075gkuwk48n5ld8","slug":"垃圾收集器5.png","modified":1,"renderable":1}],"PostCategory":[{"post_id":"ck0ozhiw30000gkuwc9m9kqfq","category_id":"ck0ozhiwe0004gkuwq6m48764","_id":"ck0ozhiwo000egkuwhsr3fwem"},{"post_id":"ck0ozhiwb0002gkuwxvdybr59","category_id":"ck0ozhiwj000agkuwoq70anyc","_id":"ck0ozhiws000kgkuw01f1px9a"},{"post_id":"ck0ozhiwf0006gkuwyvng23j3","category_id":"ck0ozhiwe0004gkuwq6m48764","_id":"ck0ozhiww000ogkuwr11xq1vw"},{"post_id":"ck0ozhiwt000mgkuwvld6qlzw","category_id":"ck0ozhiwe0004gkuwq6m48764","_id":"ck0ozhiwy000ugkuwh8ymd405"},{"post_id":"ck0ozhiwh0008gkuwczdcld9r","category_id":"ck0ozhiws000jgkuw6cyofr7a","_id":"ck0ozhix0000ygkuwkid86tly"},{"post_id":"ck0ozhiwv000ngkuw7uctnlsv","category_id":"ck0ozhiwe0004gkuwq6m48764","_id":"ck0ozhix10012gkuwmo5vbig0"},{"post_id":"ck0ozhiwi0009gkuwgyq3nwc8","category_id":"ck0ozhiws000jgkuw6cyofr7a","_id":"ck0ozhix40016gkuwr8bjvu4z"},{"post_id":"ck0ozhiwk000cgkuwmhgvw2za","category_id":"ck0ozhiws000jgkuw6cyofr7a","_id":"ck0ozhix60019gkuwdwwjh4ym"},{"post_id":"ck0ozhix10011gkuw6bfqk5n7","category_id":"ck0ozhiwe0004gkuwq6m48764","_id":"ck0ozhix7001cgkuwh1m8v6wa"},{"post_id":"ck0ozhiwn000dgkuwfqlz8n1v","category_id":"ck0ozhix20013gkuw58cn2crf","_id":"ck0ozhix8001ggkuwcdicwdc7"},{"post_id":"ck0ozhix6001bgkuwhsjmfdur","category_id":"ck0ozhiwe0004gkuwq6m48764","_id":"ck0ozhixa001mgkuwwhbb3nv0"},{"post_id":"ck0ozhix7001egkuw3fy3qdsm","category_id":"ck0ozhiwe0004gkuwq6m48764","_id":"ck0ozhixb001pgkuwba0cgpnh"},{"post_id":"ck0ozhiwq000hgkuwomlzw3gh","category_id":"ck0ozhix6001agkuwzlymfh3n","_id":"ck0ozhixc001tgkuwjld45vxx"},{"post_id":"ck0ozhix8001hgkuwrlk3flpb","category_id":"ck0ozhiwj000agkuwoq70anyc","_id":"ck0ozhixd001vgkuwfzgslo7f"},{"post_id":"ck0ozhix9001lgkuwciojiwmy","category_id":"ck0ozhix6001agkuwzlymfh3n","_id":"ck0ozhixf001zgkuw2if6zwqi"},{"post_id":"ck0ozhiwr000igkuw8f1t3uja","category_id":"ck0ozhix9001igkuwggqecirl","_id":"ck0ozhixf0021gkuwmlt524sm"},{"post_id":"ck0ozhixb001ogkuwrtx4bzek","category_id":"ck0ozhiws000jgkuw6cyofr7a","_id":"ck0ozhixh0025gkuwn0pd32fd"},{"post_id":"ck0ozhixc001sgkuwp49thp7j","category_id":"ck0ozhiws000jgkuw6cyofr7a","_id":"ck0ozhixi0028gkuwn0f4t9jj"},{"post_id":"ck0ozhiwx000rgkuw659w1wqm","category_id":"ck0ozhixb001qgkuwc386conl","_id":"ck0ozhixm002cgkuwqjr0i06l"},{"post_id":"ck0ozhixe001ygkuw52xp0l8q","category_id":"ck0ozhix9001igkuwggqecirl","_id":"ck0ozhixn002ggkuwm42dnnqs"},{"post_id":"ck0ozhiwy000tgkuwfon7xaww","category_id":"ck0ozhixe001wgkuwx4gjkzol","_id":"ck0ozhixp002jgkuwmpz6z9z3"},{"post_id":"ck0ozhixf0020gkuw17ggrx1w","category_id":"ck0ozhix9001igkuwggqecirl","_id":"ck0ozhixr002ngkuwmn30v6pb"},{"post_id":"ck0ozhixg0024gkuwzxmm0e8b","category_id":"ck0ozhiwe0004gkuwq6m48764","_id":"ck0ozhixr002ogkuwp17wcxd4"},{"post_id":"ck0ozhiwz000xgkuw86qw7ofn","category_id":"ck0ozhixb001qgkuwc386conl","_id":"ck0ozhixt002rgkuw1t0x8aok"},{"post_id":"ck0ozhix20015gkuw20epep3p","category_id":"ck0ozhixk002agkuw20gp0lg5","_id":"ck0ozhixt002sgkuws18o9lk4"},{"post_id":"ck0ozhixo002igkuw5meon86a","category_id":"ck0ozhix6001agkuwzlymfh3n","_id":"ck0ozhixu002vgkuw2b9pdtlp"},{"post_id":"ck0ozhix50018gkuwlfy22wjo","category_id":"ck0ozhixb001qgkuwc386conl","_id":"ck0ozhixu002xgkuwdmiuq998"},{"post_id":"ck0ozhixd001ugkuwmtjwsbjf","category_id":"ck0ozhixs002pgkuwplctsblu","_id":"ck0ozhixv0030gkuw4maq7ilm"},{"post_id":"ck0ozhixh0027gkuwybrmnara","category_id":"ck0ozhixs002pgkuwplctsblu","_id":"ck0ozhixv0033gkuwtsotqara"},{"post_id":"ck0ozhixk002bgkuwpg4viguc","category_id":"ck0ozhixu002ygkuwm8srk88w","_id":"ck0ozhixw0038gkuw0uk43bhu"},{"post_id":"ck0ozhixm002fgkuwyy6z887v","category_id":"ck0ozhixs002pgkuwplctsblu","_id":"ck0ozhixx003bgkuwa0cexc8z"},{"post_id":"ck0ozhixr002mgkuwm24m8jri","category_id":"ck0ozhixw0037gkuwg4sq8w8j","_id":"ck0ozhixx003fgkuw6hi2x079"},{"post_id":"ck0ozhj2v0075gkuwk48n5ld8","category_id":"ck0ozhiwj000agkuwoq70anyc","_id":"ck0ozhj31007agkuwwepho947"},{"post_id":"ck0ozhj2x0077gkuw45wpwnj9","category_id":"ck0ozhiwj000agkuwoq70anyc","_id":"ck0ozhj31007bgkuwv44k9muz"}],"PostTag":[{"post_id":"ck0ozhiw30000gkuwc9m9kqfq","tag_id":"ck0ozhiwf0005gkuwisego7hq","_id":"ck0ozhiwy000sgkuw8zatpn6s"},{"post_id":"ck0ozhiw30000gkuwc9m9kqfq","tag_id":"ck0ozhiwk000bgkuwxjqvdwrq","_id":"ck0ozhiwz000wgkuwxhbe4ptd"},{"post_id":"ck0ozhiw30000gkuwc9m9kqfq","tag_id":"ck0ozhiwp000ggkuw5rtyg3r2","_id":"ck0ozhix00010gkuwnvbwdwnk"},{"post_id":"ck0ozhiw30000gkuwc9m9kqfq","tag_id":"ck0ozhiws000lgkuw10rcwqja","_id":"ck0ozhix20014gkuwzvgw8y1z"},{"post_id":"ck0ozhiwb0002gkuwxvdybr59","tag_id":"ck0ozhiwx000qgkuwjfsw3v6p","_id":"ck0ozhix8001fgkuwbsz8h8r2"},{"post_id":"ck0ozhiwb0002gkuwxvdybr59","tag_id":"ck0ozhix0000zgkuwb4mohjhp","_id":"ck0ozhix9001jgkuwlaff0843"},{"post_id":"ck0ozhiwb0002gkuwxvdybr59","tag_id":"ck0ozhix40017gkuwb9rbcs7l","_id":"ck0ozhixa001ngkuwo074eht5"},{"post_id":"ck0ozhiwf0006gkuwyvng23j3","tag_id":"ck0ozhix7001dgkuww8fuehjh","_id":"ck0ozhixh0026gkuwuujlfv5v"},{"post_id":"ck0ozhiwf0006gkuwyvng23j3","tag_id":"ck0ozhiws000lgkuw10rcwqja","_id":"ck0ozhixk0029gkuwlj1q19fp"},{"post_id":"ck0ozhiwf0006gkuwyvng23j3","tag_id":"ck0ozhiwp000ggkuw5rtyg3r2","_id":"ck0ozhixm002egkuwdcaq3k7i"},{"post_id":"ck0ozhiwf0006gkuwyvng23j3","tag_id":"ck0ozhiwf0005gkuwisego7hq","_id":"ck0ozhixn002hgkuw2dxgo959"},{"post_id":"ck0ozhiwh0008gkuwczdcld9r","tag_id":"ck0ozhixg0023gkuww54horym","_id":"ck0ozhixu002wgkuw2irnz1bw"},{"post_id":"ck0ozhiwh0008gkuwczdcld9r","tag_id":"ck0ozhixm002dgkuwq7ez6050","_id":"ck0ozhixu002zgkuwosa0ig3w"},{"post_id":"ck0ozhiwh0008gkuwczdcld9r","tag_id":"ck0ozhixq002lgkuwevap51mp","_id":"ck0ozhixv0032gkuwl3p0108g"},{"post_id":"ck0ozhiwh0008gkuwczdcld9r","tag_id":"ck0ozhixs002qgkuwsiapteme","_id":"ck0ozhixv0035gkuwweevxx6x"},{"post_id":"ck0ozhiwi0009gkuwgyq3nwc8","tag_id":"ck0ozhixu002ugkuwmz8w229c","_id":"ck0ozhixx003agkuw2u58dkql"},{"post_id":"ck0ozhiwi0009gkuwgyq3nwc8","tag_id":"ck0ozhixv0031gkuwshmvr8jn","_id":"ck0ozhixx003cgkuwwkqvj5l7"},{"post_id":"ck0ozhiwi0009gkuwgyq3nwc8","tag_id":"ck0ozhixw0036gkuwxdvcjbbs","_id":"ck0ozhixx003egkuw36ewgp8s"},{"post_id":"ck0ozhiwk000cgkuwmhgvw2za","tag_id":"ck0ozhixw0039gkuwo6c109mh","_id":"ck0ozhixy003kgkuwcsre4vxy"},{"post_id":"ck0ozhiwk000cgkuwmhgvw2za","tag_id":"ck0ozhixx003dgkuweey07y58","_id":"ck0ozhixy003lgkuwdhuoc0z0"},{"post_id":"ck0ozhiwk000cgkuwmhgvw2za","tag_id":"ck0ozhixx003ggkuw6olvk94d","_id":"ck0ozhixz003ngkuwr54noc1j"},{"post_id":"ck0ozhiwk000cgkuwmhgvw2za","tag_id":"ck0ozhixy003hgkuwwjujr1ro","_id":"ck0ozhixz003ogkuw0gz4xjjf"},{"post_id":"ck0ozhiwk000cgkuwmhgvw2za","tag_id":"ck0ozhixy003igkuwxg155knd","_id":"ck0ozhiy0003qgkuwt5rhs0vv"},{"post_id":"ck0ozhiwn000dgkuwfqlz8n1v","tag_id":"ck0ozhixy003jgkuwu9rshxuq","_id":"ck0ozhiy0003rgkuwlgr1btb9"},{"post_id":"ck0ozhiwn000dgkuwfqlz8n1v","tag_id":"ck0ozhixy003mgkuwip88g1ro","_id":"ck0ozhiy0003tgkuwwpffrpgj"},{"post_id":"ck0ozhiwq000hgkuwomlzw3gh","tag_id":"ck0ozhixw0039gkuwo6c109mh","_id":"ck0ozhiy1003vgkuw23p14827"},{"post_id":"ck0ozhiwq000hgkuwomlzw3gh","tag_id":"ck0ozhiy0003sgkuwo2m9byqp","_id":"ck0ozhiy1003wgkuw8topkkpm"},{"post_id":"ck0ozhiwr000igkuw8f1t3uja","tag_id":"ck0ozhiy1003ugkuwxgxkoyfd","_id":"ck0ozhiy20040gkuwq2t2ivtq"},{"post_id":"ck0ozhiwr000igkuw8f1t3uja","tag_id":"ck0ozhiy1003xgkuwbk26tpmk","_id":"ck0ozhiy20041gkuw3fartl2d"},{"post_id":"ck0ozhiwr000igkuw8f1t3uja","tag_id":"ck0ozhiy1003ygkuwsbwl06op","_id":"ck0ozhiy20043gkuwzapav7wm"},{"post_id":"ck0ozhiwt000mgkuwvld6qlzw","tag_id":"ck0ozhiy1003zgkuwh9e0yd8v","_id":"ck0ozhiy30046gkuw6s7hqm1d"},{"post_id":"ck0ozhiwt000mgkuwvld6qlzw","tag_id":"ck0ozhiy20042gkuwvomvu7od","_id":"ck0ozhiy30047gkuw07zoredg"},{"post_id":"ck0ozhiwt000mgkuwvld6qlzw","tag_id":"ck0ozhiy20044gkuwnsfmbtdq","_id":"ck0ozhiy40049gkuwuiwjlzu0"},{"post_id":"ck0ozhiwt000mgkuwvld6qlzw","tag_id":"ck0ozhiws000lgkuw10rcwqja","_id":"ck0ozhiy4004agkuwo4rcoflj"},{"post_id":"ck0ozhiwv000ngkuw7uctnlsv","tag_id":"ck0ozhiy20045gkuwhlczqr4l","_id":"ck0ozhiy5004cgkuw91n278wh"},{"post_id":"ck0ozhiwv000ngkuw7uctnlsv","tag_id":"ck0ozhiws000lgkuw10rcwqja","_id":"ck0ozhiy5004dgkuwj1f1mbkz"},{"post_id":"ck0ozhiwv000ngkuw7uctnlsv","tag_id":"ck0ozhiwp000ggkuw5rtyg3r2","_id":"ck0ozhiy5004fgkuw4d7rewxa"},{"post_id":"ck0ozhiwv000ngkuw7uctnlsv","tag_id":"ck0ozhiwf0005gkuwisego7hq","_id":"ck0ozhiy6004ggkuw5p96suzm"},{"post_id":"ck0ozhiwx000rgkuw659w1wqm","tag_id":"ck0ozhiy40048gkuw19ehyu1o","_id":"ck0ozhiy7004kgkuwy2dnz3q6"},{"post_id":"ck0ozhiwx000rgkuw659w1wqm","tag_id":"ck0ozhiy5004bgkuwbl2wh3ed","_id":"ck0ozhiya004lgkuwe79u1sc6"},{"post_id":"ck0ozhiwx000rgkuw659w1wqm","tag_id":"ck0ozhiy5004egkuwoi0ntd5h","_id":"ck0ozhiya004ngkuw2wbq1okj"},{"post_id":"ck0ozhiwx000rgkuw659w1wqm","tag_id":"ck0ozhiy6004hgkuw05t8s4xy","_id":"ck0ozhiya004ogkuw2lvwr8rk"},{"post_id":"ck0ozhiwx000rgkuw659w1wqm","tag_id":"ck0ozhiy6004igkuwdwqyuthv","_id":"ck0ozhiyb004qgkuwbmjdcg4k"},{"post_id":"ck0ozhiwy000tgkuwfon7xaww","tag_id":"ck0ozhiy6004jgkuwvmq14x7n","_id":"ck0ozhiyb004rgkuwxrp8d2fy"},{"post_id":"ck0ozhiwy000tgkuwfon7xaww","tag_id":"ck0ozhixy003mgkuwip88g1ro","_id":"ck0ozhiyb004tgkuwd48mtry1"},{"post_id":"ck0ozhiwz000xgkuw86qw7ofn","tag_id":"ck0ozhiya004pgkuw9oqnkl42","_id":"ck0ozhiyb004ugkuwk9cih3pe"},{"post_id":"ck0ozhix10011gkuw6bfqk5n7","tag_id":"ck0ozhiyb004sgkuwbngjqhp0","_id":"ck0ozhiyc004xgkuwgi0txpzo"},{"post_id":"ck0ozhix10011gkuw6bfqk5n7","tag_id":"ck0ozhiyb004vgkuw6t4rf2ab","_id":"ck0ozhiyc004ygkuwjwdqblay"},{"post_id":"ck0ozhix20015gkuw20epep3p","tag_id":"ck0ozhiyc004wgkuwyq0kexlh","_id":"ck0ozhiyd0052gkuwclmpl2ly"},{"post_id":"ck0ozhix20015gkuw20epep3p","tag_id":"ck0ozhiyc004zgkuw6m280mpa","_id":"ck0ozhiyd0053gkuwd2gn41zr"},{"post_id":"ck0ozhix20015gkuw20epep3p","tag_id":"ck0ozhixw0039gkuwo6c109mh","_id":"ck0ozhiyd0055gkuwfsm9ei9j"},{"post_id":"ck0ozhix50018gkuwlfy22wjo","tag_id":"ck0ozhiyc0051gkuwdacf5px1","_id":"ck0ozhiyd0056gkuwmr80t03a"},{"post_id":"ck0ozhix6001bgkuwhsjmfdur","tag_id":"ck0ozhiyd0054gkuw9slfkpzr","_id":"ck0ozhiye005agkuwlz3yaaol"},{"post_id":"ck0ozhix6001bgkuwhsjmfdur","tag_id":"ck0ozhiyd0057gkuw0j0t9o6g","_id":"ck0ozhiye005bgkuwxtatf4rc"},{"post_id":"ck0ozhix6001bgkuwhsjmfdur","tag_id":"ck0ozhiye0058gkuwgawlz5pf","_id":"ck0ozhiyf005dgkuwb2q2moah"},{"post_id":"ck0ozhix7001egkuw3fy3qdsm","tag_id":"ck0ozhiy20045gkuwhlczqr4l","_id":"ck0ozhiyg005hgkuwy563mh9z"},{"post_id":"ck0ozhix7001egkuw3fy3qdsm","tag_id":"ck0ozhiye005cgkuw2e3s55o0","_id":"ck0ozhiyg005igkuwuetkrrfc"},{"post_id":"ck0ozhix7001egkuw3fy3qdsm","tag_id":"ck0ozhiyf005egkuwyglo45y0","_id":"ck0ozhiyh005kgkuwnhmde2iw"},{"post_id":"ck0ozhix7001egkuw3fy3qdsm","tag_id":"ck0ozhiyf005fgkuwhuntbehc","_id":"ck0ozhiyh005lgkuwq5xbovja"},{"post_id":"ck0ozhix8001hgkuwrlk3flpb","tag_id":"ck0ozhiyf005ggkuwu7psdv0a","_id":"ck0ozhiyi005ogkuwvvkqggq4"},{"post_id":"ck0ozhix8001hgkuwrlk3flpb","tag_id":"ck0ozhiyg005jgkuwrtuimedg","_id":"ck0ozhiyi005pgkuw2jl6sfun"},{"post_id":"ck0ozhix8001hgkuwrlk3flpb","tag_id":"ck0ozhiyh005mgkuwlc5kpnra","_id":"ck0ozhiyi005rgkuwo8msloyy"},{"post_id":"ck0ozhix9001lgkuwciojiwmy","tag_id":"ck0ozhiyh005ngkuwedvrdu7k","_id":"ck0ozhiyj005ugkuwsf6wjckg"},{"post_id":"ck0ozhix9001lgkuwciojiwmy","tag_id":"ck0ozhiyi005qgkuwj78p4urs","_id":"ck0ozhiyj005vgkuw1g4dwmpn"},{"post_id":"ck0ozhix9001lgkuwciojiwmy","tag_id":"ck0ozhiyi005sgkuwik64qb2t","_id":"ck0ozhiyk005xgkuwxrmeyahj"},{"post_id":"ck0ozhixb001ogkuwrtx4bzek","tag_id":"ck0ozhixy003igkuwxg155knd","_id":"ck0ozhiyk0060gkuw61784l8g"},{"post_id":"ck0ozhixb001ogkuwrtx4bzek","tag_id":"ck0ozhixy003hgkuwwjujr1ro","_id":"ck0ozhiyl0061gkuwsh9ywccv"},{"post_id":"ck0ozhixb001ogkuwrtx4bzek","tag_id":"ck0ozhiyk005ygkuwcz3n7jb9","_id":"ck0ozhiym0063gkuwg4yc3ap6"},{"post_id":"ck0ozhixc001sgkuwp49thp7j","tag_id":"ck0ozhiyk005zgkuwvhjl7oja","_id":"ck0ozhiym0065gkuw8meklepx"},{"post_id":"ck0ozhixc001sgkuwp49thp7j","tag_id":"ck0ozhiyl0062gkuwttsg726q","_id":"ck0ozhiyn0066gkuwt6qbjykt"},{"post_id":"ck0ozhixe001ygkuw52xp0l8q","tag_id":"ck0ozhiy1003xgkuwbk26tpmk","_id":"ck0ozhiyn006agkuw5omaa7w5"},{"post_id":"ck0ozhixe001ygkuw52xp0l8q","tag_id":"ck0ozhiyn0067gkuw984b82ji","_id":"ck0ozhiyo006bgkuwdluwz8fx"},{"post_id":"ck0ozhixe001ygkuw52xp0l8q","tag_id":"ck0ozhiyn0068gkuwsbvdg95n","_id":"ck0ozhiyo006dgkuw0l5kyxe0"},{"post_id":"ck0ozhixf0020gkuw17ggrx1w","tag_id":"ck0ozhiy1003xgkuwbk26tpmk","_id":"ck0ozhiyo006fgkuwdui42g1z"},{"post_id":"ck0ozhixf0020gkuw17ggrx1w","tag_id":"ck0ozhiyo006cgkuwti5xe8mg","_id":"ck0ozhiyp006ggkuwbyqze339"},{"post_id":"ck0ozhixg0024gkuwzxmm0e8b","tag_id":"ck0ozhiws000lgkuw10rcwqja","_id":"ck0ozhiyp006jgkuw0lm4vd6l"},{"post_id":"ck0ozhixg0024gkuwzxmm0e8b","tag_id":"ck0ozhiy20044gkuwnsfmbtdq","_id":"ck0ozhiyp006kgkuw1gzcgl2t"},{"post_id":"ck0ozhixg0024gkuwzxmm0e8b","tag_id":"ck0ozhiy1003ygkuwsbwl06op","_id":"ck0ozhiyq006mgkuwj5jsjzg5"},{"post_id":"ck0ozhixk002bgkuwpg4viguc","tag_id":"ck0ozhiyp006igkuw4k8e1fgd","_id":"ck0ozhiyq006ngkuw47y7xlnl"},{"post_id":"ck0ozhixo002igkuw5meon86a","tag_id":"ck0ozhiyh005ngkuwedvrdu7k","_id":"ck0ozhiyr006sgkuwf4r6sup0"},{"post_id":"ck0ozhixo002igkuw5meon86a","tag_id":"ck0ozhiyq006ogkuwqca25fk8","_id":"ck0ozhiyr006tgkuwjycd87m9"},{"post_id":"ck0ozhixo002igkuw5meon86a","tag_id":"ck0ozhiyi005sgkuwik64qb2t","_id":"ck0ozhiys006vgkuwr0hghyj9"},{"post_id":"ck0ozhixo002igkuw5meon86a","tag_id":"ck0ozhiyr006qgkuwwdt4eaoy","_id":"ck0ozhiys006wgkuwuz4y94qk"},{"post_id":"ck0ozhixr002mgkuwm24m8jri","tag_id":"ck0ozhixw0039gkuwo6c109mh","_id":"ck0ozhiyt0070gkuwrngggcnx"},{"post_id":"ck0ozhixr002mgkuwm24m8jri","tag_id":"ck0ozhiys006ugkuw543osc06","_id":"ck0ozhiyt0071gkuw4ikwhk2n"},{"post_id":"ck0ozhixr002mgkuwm24m8jri","tag_id":"ck0ozhiys006xgkuwgl1ho13r","_id":"ck0ozhiyt0072gkuwqc2unllt"},{"post_id":"ck0ozhixr002mgkuwm24m8jri","tag_id":"ck0ozhiys006ygkuwpmsv2qe3","_id":"ck0ozhiyt0073gkuwiudgpwdx"},{"post_id":"ck0ozhixr002mgkuwm24m8jri","tag_id":"ck0ozhiys006zgkuwvbqd6mdn","_id":"ck0ozhiyt0074gkuwifezz5re"},{"post_id":"ck0ozhj2v0075gkuwk48n5ld8","tag_id":"ck0ozhj300079gkuw8hwcuitu","_id":"ck0ozhj37007egkuwkn8uhoqh"},{"post_id":"ck0ozhj2v0075gkuwk48n5ld8","tag_id":"ck0ozhj34007cgkuwypujvi39","_id":"ck0ozhj37007fgkuwel48f6oy"},{"post_id":"ck0ozhj2x0077gkuw45wpwnj9","tag_id":"ck0ozhj34007cgkuwypujvi39","_id":"ck0ozhj39007jgkuww8nmj3zm"},{"post_id":"ck0ozhj2x0077gkuw45wpwnj9","tag_id":"ck0ozhj300079gkuw8hwcuitu","_id":"ck0ozhj39007kgkuwceg3ft5j"},{"post_id":"ck0ozhj2x0077gkuw45wpwnj9","tag_id":"ck0ozhj38007hgkuwy03vuzzm","_id":"ck0ozhj39007lgkuwonuspbpy"},{"post_id":"ck0ozhj2x0077gkuw45wpwnj9","tag_id":"ck0ozhj38007igkuw4y9kjo8n","_id":"ck0ozhj39007mgkuwdz8ww0ou"}],"Tag":[{"name":"图像识别","_id":"ck0ozhiwf0005gkuwisego7hq"},{"name":"残差网络","_id":"ck0ozhiwk000bgkuwxjqvdwrq"},{"name":"神经网络","_id":"ck0ozhiwp000ggkuw5rtyg3r2"},{"name":"论文阅读","_id":"ck0ozhiws000lgkuw10rcwqja"},{"name":"Java堆","_id":"ck0ozhiwx000qgkuwjfsw3v6p"},{"name":"方法区","_id":"ck0ozhix0000zgkuwb4mohjhp"},{"name":"Java虚拟机栈","_id":"ck0ozhix40017gkuwb9rbcs7l"},{"name":"对象检测","_id":"ck0ozhix7001dgkuww8fuehjh"},{"name":"Java内存模型","_id":"ck0ozhixg0023gkuww54horym"},{"name":"共享内存","_id":"ck0ozhixm002dgkuwq7ez6050"},{"name":"happens-before","_id":"ck0ozhixq002lgkuwevap51mp"},{"name":"指令重排序","_id":"ck0ozhixs002qgkuwsiapteme"},{"name":"重排序","_id":"ck0ozhixu002ugkuwmz8w229c"},{"name":"数据依赖性","_id":"ck0ozhixv0031gkuwshmvr8jn"},{"name":"顺序一致性","_id":"ck0ozhixw0036gkuwxdvcjbbs"},{"name":"Java","_id":"ck0ozhixw0039gkuwo6c109mh"},{"name":"多线程","_id":"ck0ozhixx003dgkuweey07y58"},{"name":"线程","_id":"ck0ozhixx003ggkuw6olvk94d"},{"name":"synchronized","_id":"ck0ozhixy003hgkuwwjujr1ro"},{"name":"volatile","_id":"ck0ozhixy003igkuwxg155knd"},{"name":"kafka","_id":"ck0ozhixy003jgkuwu9rshxuq"},{"name":"开源软件","_id":"ck0ozhixy003mgkuwip88g1ro"},{"name":"面向对象","_id":"ck0ozhiy0003sgkuwo2m9byqp"},{"name":"MyIsam","_id":"ck0ozhiy1003ugkuwxgxkoyfd"},{"name":"数据库","_id":"ck0ozhiy1003xgkuwbk26tpmk"},{"name":"问题","_id":"ck0ozhiy1003ygkuwsbwl06op"},{"name":"text2image","_id":"ck0ozhiy1003zgkuwh9e0yd8v"},{"name":"图像合成","_id":"ck0ozhiy20042gkuwvomvu7od"},{"name":"生成对抗网络","_id":"ck0ozhiy20044gkuwnsfmbtdq"},{"name":"图文匹配","_id":"ck0ozhiy20045gkuwhlczqr4l"},{"name":"Ubuntu","_id":"ck0ozhiy40048gkuw19ehyu1o"},{"name":"shadowsocks","_id":"ck0ozhiy5004bgkuwbl2wh3ed"},{"name":"科学上网","_id":"ck0ozhiy5004egkuwoi0ntd5h"},{"name":"代理","_id":"ck0ozhiy6004hgkuw05t8s4xy"},{"name":"proxy","_id":"ck0ozhiy6004igkuwdwqyuthv"},{"name":"ZooKeeper","_id":"ck0ozhiy6004jgkuwvmq14x7n"},{"name":"yotta系统","_id":"ck0ozhiya004pgkuw9oqnkl42"},{"name":"环境配置","_id":"ck0ozhiyb004sgkuwbngjqhp0"},{"name":"软件安装","_id":"ck0ozhiyb004vgkuw6t4rf2ab"},{"name":"动态代理","_id":"ck0ozhiyc004wgkuwyq0kexlh"},{"name":"静态代理","_id":"ck0ozhiyc004zgkuw6m280mpa"},{"name":"nginx","_id":"ck0ozhiyc0051gkuwdacf5px1"},{"name":"自然语言处理","_id":"ck0ozhiyd0054gkuw9slfkpzr"},{"name":"chunk","_id":"ck0ozhiyd0057gkuw0j0t9o6g"},{"name":"NLTK","_id":"ck0ozhiye0058gkuwgawlz5pf"},{"name":"典型相关分析","_id":"ck0ozhiye005cgkuw2e3s55o0"},{"name":"排序损失","_id":"ck0ozhiyf005egkuwyglo45y0"},{"name":"数据集","_id":"ck0ozhiyf005fgkuwhuntbehc"},{"name":"内存分配策略","_id":"ck0ozhiyf005ggkuwu7psdv0a"},{"name":"引用计数法","_id":"ck0ozhiyg005jgkuwrtuimedg"},{"name":"可达性算法","_id":"ck0ozhiyh005mgkuwlc5kpnra"},{"name":"实习","_id":"ck0ozhiyh005ngkuwedvrdu7k"},{"name":"字节跳动","_id":"ck0ozhiyi005qgkuwj78p4urs"},{"name":"面试","_id":"ck0ozhiyi005sgkuwik64qb2t"},{"name":"原子操作","_id":"ck0ozhiyk005ygkuwcz3n7jb9"},{"name":"上下文切换","_id":"ck0ozhiyk005zgkuwvhjl7oja"},{"name":"死锁","_id":"ck0ozhiyl0062gkuwttsg726q"},{"name":"MySQL","_id":"ck0ozhiyn0067gkuw984b82ji"},{"name":"范式","_id":"ck0ozhiyn0068gkuwsbvdg95n"},{"name":"智慧教育系统","_id":"ck0ozhiyo006cgkuwti5xe8mg"},{"name":"编程","_id":"ck0ozhiyp006igkuw4k8e1fgd"},{"name":"阿里巴巴","_id":"ck0ozhiyq006ogkuwqca25fk8"},{"name":"蚂蚁金服","_id":"ck0ozhiyr006qgkuwwdt4eaoy"},{"name":"Spring","_id":"ck0ozhiys006ugkuw543osc06"},{"name":"Spring Boot","_id":"ck0ozhiys006xgkuwgl1ho13r"},{"name":"AOP","_id":"ck0ozhiys006ygkuwpmsv2qe3"},{"name":"面向切面编程","_id":"ck0ozhiys006zgkuwvbqd6mdn"},{"name":"垃圾收集器","_id":"ck0ozhj300079gkuw8hwcuitu"},{"name":"垃圾收集算法","_id":"ck0ozhj34007cgkuwypujvi39"},{"name":"安全点","_id":"ck0ozhj38007hgkuwy03vuzzm"},{"name":"安全区域","_id":"ck0ozhj38007igkuw4y9kjo8n"}]}}